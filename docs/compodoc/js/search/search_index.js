var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdapterError.html",[0,0.247,1,3.822]],["body/classes/AdapterError.html",[0,0.285,1,5.729,2,1.006,3,0.051,4,0.051,5,0.051,6,5.349,7,3.856,8,2.666,9,0.079,10,0.913,11,1.348,12,4.633,13,1.193,14,3.085,15,2.324,16,0.877,17,7.734,18,2.736,19,4.232,20,1.567,21,4.129,22,3.942,23,1.625,24,6.946,25,3.942,26,1.762,27,2.85,28,2.572,29,4.232,30,4.232,31,4.232,32,4.232,33,4.232,34,4.232,35,0.803,36,0.005,37,0.568,38,0.125,39,0.603,40,0.865,41,2.168,42,2.572,43,0.068,44,1.252,45,0.629,46,0.051,47,1.33,48,1.363,49,1.33,50,3.26,51,1.874,52,3.643,53,4.651,54,2.97,55,3.106,56,4.412,57,5.349,58,5.349,59,3.106,60,3.106,61,0.003,62,0.003]],["title/classes/AdapterErrorFilter.html",[0,0.247,63,4.028]],["body/classes/AdapterErrorFilter.html",[0,0.28,1,6.691,2,0.99,3,0.05,4,0.05,5,0.05,9,0.078,11,0.919,13,1.173,16,0.867,18,1.702,20,1.551,35,1.032,36,0.005,37,0.813,38,0.124,39,0.774,44,1.231,46,0.05,61,0.003,62,0.003,63,5.974,64,5.859,65,1.425,66,1.357,67,3.9,68,3.45,69,3.325,70,7.651,71,1.277,72,4.159,73,1.072,74,3.637,75,3.29,76,3.603,77,5.859,78,3.266,79,3.9,80,4.074,81,4.409,82,5.859,83,3.38,84,0.821,85,0.358,86,2.593,87,2.642,88,5.262,89,1.246,90,3.45,91,2.159,92,5.859,93,1.844,94,1.495,95,2.458,96,2.86,97,2.86,98,2.801,99,3.128,100,2.593,101,5.859,102,3.29,103,2.692,104,2.921,105,0.8,106,3.055,107,2.593,108,3.055,109,2.921,110,3.055]],["title/modules/AdaptersModule.html",[111,2.755,112,3.822]],["body/modules/AdaptersModule.html",[0,0.258,3,0.046,4,0.046,5,0.046,36,0.005,46,0.046,53,4.21,61,0.003,62,0.003,76,3.889,78,3.091,85,0.399,89,1.147,111,4.366,112,7.316,113,3.298,114,3.298,115,3.525,116,3.525,117,3.406,118,4.735,119,5.346,120,4.842,121,4.842,122,6.619,123,4.396,124,5.475,125,6.159,126,4.735,127,3.525,128,3.525,129,5.392,130,5.654,131,1.161,132,6.017,133,5.392,134,2.879,135,6.017,136,5.392,137,6.017,138,5.392,139,4.735,140,6.017,141,5.392,142,6.017,143,2.578,144,6.45,145,6.45]],["title/controllers/AdminController.html",[146,3.062,147,4.287]],["body/controllers/AdminController.html",[0,0.375,3,0.068,4,0.068,5,0.068,36,0.005,46,0.068,61,0.004,62,0.004,85,0.311,89,1.668,146,4.654,147,7.615,148,5.127,149,7.842,150,5.808,151,5.547,152,7.842]],["title/guards/AdminJwt.html",[153,3.156,154,4.287]],["body/guards/AdminJwt.html",[0,0.216,3,0.039,4,0.039,5,0.039,8,1.399,9,0.06,11,1.004,13,1.281,16,0.843,20,1.297,23,1.345,35,1.003,36,0.005,37,0.71,38,0.12,39,0.753,44,1.563,45,0.786,46,0.039,61,0.003,62,0.003,65,0.84,66,1.135,71,0.752,73,0.897,74,1.924,84,0.897,85,0.362,89,0.959,91,1.661,94,1.825,95,1.891,105,0.616,107,1.995,154,5.317,155,2.6,156,8.098,157,4.049,158,2.941,159,2.732,160,1.994,161,2.432,162,4.74,163,5.747,164,5.747,165,2.388,166,5.115,167,2.159,168,4.996,169,3.52,170,5.808,171,3.705,172,4.049,173,4.042,174,4.806,175,4.049,176,1.464,177,4.996,178,4.049,179,4.547,180,2.298,181,4.344,182,3.746,183,1.596,184,2.847,185,4.042,186,3.52,187,2.155,188,4.177,189,2.757,190,3.337,191,1.362,192,1.259,193,6.181,194,2.514,195,3.52,196,3.52,197,3.06,198,3.189,199,2.66,200,1.593,201,3.52,202,2.947,203,2.531,204,2.847,205,3.746,206,3.746,207,2.583,208,4.049,209,3.746,210,3.52,211,1.891,212,1.699,213,4.049,214,3.746,215,2.155,216,1.924,217,3.746,218,1.276,219,2.847,220,1.399,221,3.746,222,1.769,223,1.479,224,2.159,225,4.049,226,1.499,227,2.847,228,4.049,229,4.049]],["title/classes/ApartmentNumber.html",[0,0.247,230,2.518]],["body/classes/ApartmentNumber.html",[0,0.296,2,1.046,3,0.053,4,0.053,5,0.053,9,0.082,11,0.972,13,1.24,16,0.992,35,1.069,36,0.005,37,0.757,38,0.128,39,0.803,40,0.692,41,2.209,46,0.053,47,1.383,51,2.495,61,0.004,62,0.004,65,1.153,71,1.324,73,1.111,84,0.868,85,0.346,93,1.949,230,4.502,231,6.193,232,3.802,233,3.575,234,3.716,235,3.644,236,2.754,237,3.572,238,6.193,239,5.218,240,5.874,241,7.93,242,3.112,243,5.185,244,5.874,245,5.383,246,3.446,247,2.554,248,6.193,249,2.598,250,3.306,251,6.193,252,2.961,253,3.156,254,2.643,255,2.74,256,3.788,257,2.282,258,5.561]],["title/modules/AppModule.html",[111,2.755,259,3.65]],["body/modules/AppModule.html",[0,0.321,3,0.058,4,0.058,5,0.058,36,0.005,46,0.058,61,0.004,62,0.004,85,0.36,89,1.43,111,4.852,113,4.113,114,4.113,115,4.397,116,4.397,117,4.248,118,4.397,119,4.397,126,5.462,127,4.397,128,4.397,223,2.206,259,7.047,260,6.039,261,6.039,262,7.379,263,6.725,264,7.502,265,6.725,266,6.725,267,6.039,268,6.039,269,6.725,270,6.725,271,6.723,272,6.725,273,6.725,274,6.725,275,6.725,276,4.397,277,6.725,278,6.725]],["title/classes/Auth.html",[0,0.247,279,3.65]],["body/classes/Auth.html",[0,0.309,2,1.092,3,0.056,4,0.056,5,0.056,9,0.086,16,1.012,35,1.203,36,0.005,37,0.852,38,0.144,39,0.903,45,0.943,46,0.056,61,0.004,62,0.004,73,1.142,84,1.251,85,0.256,176,2.257,179,3.63,218,2.893,279,5.765,280,6.464,281,3.575,282,8.15,283,8.15,284,5.765,285,8.15,286,6.464,287,8.15,288,6.464,289,8.15,290,6.464,291,2.062]],["title/classes/BcryptAdapter.html",[0,0.247,135,4.287]],["body/classes/BcryptAdapter.html",[0,0.252,2,0.892,3,0.045,4,0.045,5,0.045,7,3.559,9,0.07,10,0.843,16,0.982,35,1.091,36,0.005,37,0.772,38,0.131,39,0.819,40,0.904,45,0.855,46,0.045,61,0.003,62,0.003,73,1,74,2.253,84,1.133,85,0.32,94,1.581,105,1.105,123,4.207,134,2.818,135,5.931,165,2.644,167,2.042,176,2.183,194,2.511,200,0.983,236,1.833,276,3.451,292,5.278,293,8.089,294,5.287,295,6.705,296,5.287,297,2.38,298,5.278,299,5.287,300,6.13,301,8.089,302,5.278,303,5.287,304,5.278,305,2.14,306,5.573,307,6.705,308,5.278,309,5.278,310,4.74,311,6.411,312,5.278,313,5.278,314,4.386,315,5.278,316,2.752,317,5.278,318,5.278,319,5.278,320,5.278,321,4.74,322,5.278,323,5.278,324,5.278,325,5.278,326,4.74]],["title/classes/Block.html",[0,0.247,327,2.518]],["body/classes/Block.html",[0,0.276,2,0.976,3,0.05,4,0.05,5,0.05,9,0.077,11,0.907,13,1.157,16,0.959,23,1.214,35,1.022,36,0.005,37,0.723,38,0.123,39,0.767,40,0.646,44,1.214,45,0.949,46,0.05,47,1.29,48,1.735,51,2.386,61,0.003,62,0.003,65,1.076,71,1.265,73,1.062,84,0.81,85,0.335,93,1.818,105,1.035,199,2.066,200,1.076,232,3.677,233,3.815,234,3.553,235,3.484,236,2.938,237,3.333,239,4.631,242,2.975,244,5.616,246,3.295,247,3.126,249,2.424,250,3.085,252,3.625,253,2.945,254,2.466,255,2.557,256,3.534,257,2.129,327,4.832,328,5.778,329,5.778,330,4.257,331,5.616,332,5.147,333,4.5,334,5.778,335,5.778,336,4.087,337,5.189,338,2.267,339,3.429,340,2.511,341,4.087,342,4.087,343,5.147]],["title/classes/CEP.html",[0,0.247,344,2.058]],["body/classes/CEP.html",[0,0.269,2,0.95,3,0.048,4,0.048,5,0.048,9,0.075,11,0.882,13,1.126,16,0.946,23,1.755,35,1.004,36,0.005,37,0.71,38,0.12,39,0.754,40,0.629,44,1.182,45,0.939,46,0.048,47,1.255,48,1.704,49,1.663,61,0.003,62,0.003,65,1.047,71,1.243,73,1.043,84,0.788,85,0.331,93,1.769,105,1.017,160,1.834,199,2.01,200,1.047,212,1.977,232,3.628,233,3.764,234,3.49,235,3.422,236,2.899,237,3.243,239,4.569,247,3.071,249,2.358,250,3.002,252,3.56,253,2.866,254,2.4,255,2.488,338,2.206,339,3.337,340,2.443,341,3.977,342,3.977,343,5.668,344,4.011,345,5.622,346,5.622,347,5.055,348,6.187,349,6.187,350,3.124,351,2.548,352,5.516,353,5.622,354,5.622,355,3.676,356,2.584,357,5.049,358,4.389,359,4.671,360,5.049]],["title/classes/CNPJ.html",[0,0.247,361,2.242]],["body/classes/CNPJ.html",[0,0.269,2,0.95,3,0.048,4,0.048,5,0.048,9,0.075,11,0.882,13,1.126,16,0.946,23,1.755,35,1.004,36,0.005,37,0.71,38,0.12,39,0.754,40,0.629,44,1.182,45,0.939,46,0.048,47,1.255,48,1.704,49,1.663,61,0.003,62,0.003,65,1.047,71,1.243,73,1.043,84,0.788,85,0.331,93,1.769,105,1.017,160,1.834,199,2.01,200,1.047,212,1.977,232,3.628,233,3.764,234,3.49,235,3.422,236,2.899,237,3.243,239,4.569,247,3.071,249,2.358,250,3.002,252,3.56,253,2.866,254,2.4,255,2.488,338,2.206,339,3.337,340,2.443,341,3.977,342,3.977,343,5.668,347,5.055,348,6.187,349,6.187,350,3.124,351,2.548,352,5.516,355,3.676,356,2.584,358,4.389,359,4.671,361,4.37,362,5.622,363,5.622,364,5.622,365,5.622,366,5.622,367,5.049]],["title/classes/CPF.html",[0,0.247,368,2.326]],["body/classes/CPF.html",[0,0.25,2,0.884,3,0.045,4,0.045,5,0.045,9,0.07,11,0.821,13,1.048,16,0.913,23,1.693,26,1.074,27,1.929,35,0.957,36,0.005,37,0.677,38,0.115,39,0.718,40,0.585,45,0.913,46,0.045,47,1.169,48,1.624,49,1.585,61,0.003,62,0.003,65,0.975,66,0.929,71,1.185,73,0.995,84,0.733,85,0.319,93,1.647,94,1.023,158,2.405,212,1.884,232,3.5,233,3.2,234,3.326,235,3.262,236,2.465,237,3.019,239,4.407,246,2.275,247,2.158,249,2.196,250,2.795,252,2.503,253,2.668,254,2.234,255,2.316,291,1.67,343,3.553,347,4.818,348,5.898,349,5.898,350,2.978,351,2.429,352,5.257,357,4.701,358,4.087,359,5.898,368,4.426,369,5.234,370,5.234,371,5.234,372,5.234,373,2.795,374,5.234,375,5.234,376,5.234,377,4.349,378,5.234,379,5.234,380,5.257,381,5.234,382,4.701,383,5.234,384,5.234,385,5.234,386,7.098,387,2.174,388,5.234,389,3.877,390,7.098,391,5.234,392,2.939,393,5.234,394,3.394,395,5.234,396,3.306,397,2.275,398,5.234,399,5.234,400,7.098,401,5.234,402,5.234,403,5.257,404,5.234]],["title/classes/CepGateway.html",[0,0.247,405,3.156]],["body/classes/CepGateway.html",[0,0.337,2,1.191,3,0.061,4,0.061,5,0.061,9,0.094,16,0.799,35,0.95,36,0.005,37,0.672,38,0.114,39,0.713,40,0.788,43,0.08,45,1.096,46,0.074,61,0.004,62,0.004,73,1.205,84,0.987,176,1.967,281,3.354,344,2.811,405,5.259,406,6.329,407,6.713,408,6.368,409,7.047,410,4.985,411,5.22,412,5.22,413,5.22,414,5.22,415,5.22]],["title/classes/CepGatewaySpy.html",[0,0.247,416,4.634]],["body/classes/CepGatewaySpy.html",[0,0.318,2,1.124,3,0.057,4,0.057,5,0.057,9,0.088,10,0.98,16,0.941,36,0.005,38,0.108,46,0.057,61,0.004,62,0.004,71,1.385,73,1.163,84,0.932,85,0.264,105,0.909,165,2.431,176,1.899,215,3.181,236,2.31,246,3.606,297,3,344,2.654,405,5.531,407,7.757,410,4.706,411,4.928,412,4.928,413,4.928,414,4.928,415,4.928,416,7.452,417,6.653,418,6.139,419,3.641,420,6.653,421,6.653,422,4.706,423,8.298]],["title/guards/CheckOTPGuard.html",[153,3.156,424,4.287]],["body/guards/CheckOTPGuard.html",[0,0.285,3,0.035,4,0.035,5,0.035,9,0.054,11,1.104,13,1.193,16,0.877,35,1.043,36,0.005,37,0.738,38,0.125,39,0.783,44,1.252,46,0.035,61,0.003,62,0.003,71,0.681,73,0.835,84,0.986,85,0.378,89,0.868,90,2.686,91,1.504,94,1.777,95,1.712,105,0.814,123,3.487,131,1.909,134,3.756,155,2.355,165,2.493,166,4.885,167,2.341,171,3.596,173,3.763,174,4.59,176,1.363,180,2.08,183,1.486,187,1.952,188,3.95,189,2.497,190,4.033,192,1.14,194,2.753,199,2.13,200,1.44,202,2.669,203,4.619,204,2.578,212,1.084,218,2.189,219,2.578,220,1.267,222,1.602,223,1.954,226,1.358,284,4.214,295,5.211,305,1.655,394,1.952,397,3.057,424,4.95,425,4.082,426,5.957,427,4.082,428,4.7,429,4.082,430,4.082,431,5.957,432,6.427,433,4.082,434,5.957,435,4.64,436,4.082,437,2.128,438,2.234,439,2.669,440,4.082,441,4.214,442,3.023,443,3.023,444,2.887,445,2.887,446,4.082,447,2.887,448,2.179,449,4.082,450,1.84,451,2.578,452,2.578,453,7.035,454,4.082,455,2.035,456,7.035,457,3.666,458,4.082,459,3.023,460,4.082,461,4.082,462,3.023,463,4.082,464,4.082,465,3.391,466,4.214]],["title/guards/CheckPasswordGuard.html",[153,3.156,467,4.287]],["body/guards/CheckPasswordGuard.html",[0,0.319,3,0.041,4,0.041,5,0.041,9,0.063,11,1.046,13,1.334,16,0.87,20,1.35,35,1.035,36,0.005,37,0.732,38,0.124,39,0.777,44,1.003,45,0.811,46,0.041,61,0.003,62,0.003,65,0.889,66,1.182,71,0.797,73,0.934,84,0.934,85,0.381,89,1.016,90,3.004,91,1.76,94,1.769,95,2.003,105,0.652,123,3.745,131,1.788,134,3.558,155,2.754,158,3.062,165,2.433,166,5.246,167,2.206,171,3.766,173,4.209,174,4.929,176,1.525,183,1.662,187,2.283,188,3.741,189,2.92,190,2.49,192,1.334,194,2.578,199,1.707,200,1.429,203,2.681,204,3.016,218,1.886,219,3.016,220,1.482,222,1.874,223,2.185,284,4.713,295,6.152,305,1.936,350,2.003,397,2.896,437,2.49,441,4.713,442,3.537,443,3.537,444,3.377,445,3.377,457,4.288,459,3.537,462,3.537,466,4.713,467,5.537,468,4.775,469,6.663,470,4.288,471,4.775,472,4.775,473,6.663,474,4.417,475,4.775,476,3.967,477,4.775,478,4.775,479,4.288,480,4.288,481,4.775,482,4.775,483,4.775,484,4.775]],["title/guards/CheckTFACodeGuard.html",[153,3.156,485,4.287]],["body/guards/CheckTFACodeGuard.html",[0,0.29,3,0.036,4,0.036,5,0.036,9,0.056,11,0.952,13,1.215,16,0.809,20,1.229,23,1.645,26,1.605,35,0.962,36,0.005,37,0.681,38,0.115,39,0.722,44,1.275,45,0.827,46,0.036,52,3.71,61,0.003,62,0.003,65,0.779,66,1.076,71,0.698,73,0.85,84,0.85,85,0.38,89,0.89,91,1.542,94,1.852,95,1.755,105,0.828,123,3.528,131,1.306,134,3.81,155,2.414,158,2.787,165,2.329,166,4.943,167,2.097,171,3.513,173,3.831,174,4.644,176,1.388,179,3.406,180,2.133,183,1.513,187,2,188,4.006,189,2.559,190,2.182,192,1.169,194,2.429,199,2.169,200,1.329,202,3.966,203,2.349,204,2.643,215,2,218,2.529,219,2.643,220,1.883,222,1.642,223,1.989,227,2.643,284,4.291,291,1.335,305,1.697,389,4.493,397,2.636,437,2.182,441,4.291,442,3.099,443,3.099,444,2.96,445,2.96,448,2.234,462,3.099,466,4.291,485,5.04,486,4.184,487,6.066,488,6.066,489,4.291,490,6.066,491,4.493,492,4.736,493,3.267,494,4.184,495,4.184,496,6.066,497,7.825,498,4.184,499,3.477,500,4.184,501,4.184,502,3.966,503,2.84,504,3.267,505,4.184,506,2.84,507,0.869,508,4.184,509,3.477,510,4.184,511,3.477,512,6.066,513,4.184,514,4.184,515,4.184,516,4.184,517,3.267,518,4.184,519,3.099,520,4.184,521,5.04,522,4.184]],["title/classes/ClassValidatorErrorFilter.html",[0,0.247,523,3.822]],["body/classes/ClassValidatorErrorFilter.html",[0,0.407,2,0.856,3,0.044,4,0.044,5,0.044,8,2.154,9,0.067,11,0.795,13,1.014,16,0.898,18,1.471,20,1.407,35,1.068,36,0.005,37,0.851,38,0.128,39,0.801,40,0.998,41,1.279,43,0.058,44,1.79,45,0.535,46,0.044,61,0.003,62,0.003,65,1.292,66,1.231,67,3.538,68,3.129,71,1.158,72,3.865,73,0.972,74,3.38,75,2.844,76,3.397,78,2.963,79,3.538,80,3.786,81,4.158,83,2.922,84,0.972,85,0.337,86,2.241,87,2.283,89,1.077,90,3.129,91,1.866,93,1.594,94,1.548,95,2.125,96,2.472,97,2.472,98,2.421,100,2.241,103,2.327,104,2.525,105,1.081,106,2.641,107,3.77,108,2.641,109,2.525,110,2.641,181,5.782,392,4.446,397,2.201,523,5.141,524,4.548,525,6.941,526,5.065,527,5.065,528,6.233,529,5.065,530,7.078,531,4.548,532,3.954,533,3.199,534,4.208,535,4.548,536,4.548,537,4.548,538,4.548,539,4.548,540,4.548,541,5.141,542,6.233,543,4.208,544,4.548,545,3.954,546,3.098,547,4.548]],["title/classes/Code.html",[0,0.247,448,2.755]],["body/classes/Code.html",[0,0.315,2,1.112,3,0.057,4,0.057,5,0.057,9,0.088,11,1.033,13,1.318,16,1.02,35,1.111,36,0.005,37,0.786,38,0.133,39,0.834,40,0.736,45,0.951,46,0.057,61,0.004,62,0.004,71,1.376,73,1.155,84,0.922,85,0.356,93,2.072,232,3.911,233,3.717,234,3.863,235,3.788,236,2.862,237,3.798,239,4.511,247,2.715,249,2.762,250,3.515,252,3.148,253,3.356,254,2.81,255,3.648,336,5.831,448,5.036,548,6.583,549,6.583,550,6.583,551,6.583,552,6.583]],["title/injectables/CollectionsRefService.html",[183,1.287,553,3.502]],["body/injectables/CollectionsRefService.html",[0,0.249,3,0.045,4,0.045,5,0.045,9,0.069,10,0.835,11,0.816,13,1.042,16,0.976,35,0.701,36,0.005,37,0.496,38,0.139,39,0.526,45,0.91,46,0.045,51,2.224,61,0.003,62,0.003,85,0.28,89,1.106,93,1.637,183,1.762,218,2.272,224,2.384,233,4.42,236,2.788,297,3.62,344,2.819,361,3.071,419,4.393,507,1.788,553,4.798,554,2.345,555,5.201,556,3.427,557,3.052,558,5.201,559,5.631,560,5.201,561,7.068,562,7.068,563,4.621,564,6.347,565,6.347,566,4.204,567,8.613,568,9.67,569,7.068,570,7.068,571,7.068,572,5.201,573,7.068,574,7.068,575,7.068,576,5.201,577,5.873,578,7.068,579,7.068,580,6.347,581,7.068,582,6.347,583,7.068,584,5.201,585,3.853]],["title/classes/Condominium.html",[0,0.247,556,2.203]],["body/classes/Condominium.html",[0,0.156,2,0.55,3,0.028,4,0.028,5,0.028,9,0.043,10,0.594,11,0.964,13,0.652,16,1.088,35,1.064,36,0.005,37,0.944,38,0.154,39,0.798,40,0.995,41,1.27,43,0.037,45,0.921,46,0.053,61,0.002,62,0.002,71,0.839,73,0.705,84,1.105,85,0.199,94,0.637,105,1.19,167,1.992,191,2.087,200,1.582,233,3.557,234,2.357,235,2.311,245,2.212,246,1.416,247,2.074,249,2.11,338,2.41,344,3.794,355,2.13,361,4.134,394,1.558,507,1.763,556,3.72,586,2.544,587,3.544,588,3.131,589,3.78,590,5.487,591,3.534,592,3.333,593,4.517,594,5.739,595,5.03,596,1.699,597,2.13,598,3.258,599,5.104,600,3.258,601,3.258,602,2.413,603,3.258,604,2.926,605,3.258,606,2.926,607,3.258,608,4.689,609,3.258,610,3.258,611,3.258,612,3.258,613,3.258,614,3.258,615,3.258,616,3.258,617,3.258,618,3.258,619,3.258,620,3.258,621,2.707,622,3.258,623,2.707,624,3.258,625,1.74,626,1.74,627,3.331,628,4.1,629,3.688,630,2.413,631,2.13,632,2.413,633,2.305,634,2.544,635,2.707,636,1.661,637,2.926,638,2.926,639,2.926,640,2.926,641,2.926,642,2.926,643,2.901,644,2.212,645,2.212,646,2.544,647,2.926,648,2.926,649,2.926,650,2.305,651,2.544,652,2.058,653,1.74,654,2.926,655,2.926,656,2.926,657,2.926,658,2.926,659,3.558,660,1.661,661,3.414,662,1.699,663,3.927,664,4.363,665,2.544,666,2.926,667,2.926,668,2.926,669,4.517,670,2.926,671,4.517,672,2.926]],["title/controllers/CondominiumController.html",[146,3.062,673,4.287]],["body/controllers/CondominiumController.html",[0,0.182,3,0.033,4,0.033,5,0.033,9,0.05,11,1.172,12,1.935,13,0.76,16,0.847,35,1.007,36,0.005,37,0.713,38,0.121,39,0.756,46,0.033,54,1.893,61,0.003,62,0.003,66,0.674,73,0.791,84,1.047,85,0.384,89,0.808,91,1.399,94,1.74,131,1.959,146,2.253,148,2.482,150,2.812,151,4.771,154,3.155,165,2.558,167,1.886,190,4.829,192,1.061,194,2.478,200,1.558,203,4.866,207,2.342,218,2.259,220,1.753,224,2.924,257,1.399,291,1.211,397,4.281,445,4.771,466,3.995,506,2.577,556,2.879,557,2.147,673,4.693,674,3.797,675,2.147,676,5.648,677,5.648,678,3.797,679,6.206,680,4.718,681,4.578,682,3.797,683,3.797,684,6.419,685,7.469,686,3.797,687,3.797,688,3.797,689,6.206,690,5.648,691,3.797,692,3.797,693,3.797,694,3.797,695,3.797,696,1.893,697,3.41,698,3.995,699,3.41,700,3.797,701,2.812,702,2.964,703,1.54,704,5.283,705,3.41,706,3.155,707,3.797,708,5.648,709,3.797,710,3.797,711,4.578,712,3.155,713,3.797,714,3.797,715,3.155,716,2.812,717,3.41,718,3.41,719,3.41,720,3.797,721,3.797,722,3.797,723,3.797,724,5.648,725,3.797,726,3.797,727,3.797,728,5.648,729,3.995,730,3.797,731,3.41,732,3.41,733,3.41,734,3.155,735,3.797,736,5.648,737,6.057,738,3.797,739,3.797,740,5.648,741,3.155,742,3.797,743,3.41,744,3.41,745,2.964,746,3.155,747,3.797,748,3.797,749,3.797]],["title/classes/CondominiumFirestoreMapper.html",[0,0.247,750,4.287]],["body/classes/CondominiumFirestoreMapper.html",[0,0.236,2,0.834,3,0.042,4,0.042,5,0.042,9,0.066,16,0.773,35,0.919,36,0.005,37,0.804,38,0.11,39,0.69,40,1.048,41,1.246,43,0.056,45,0.89,46,0.059,47,1.522,48,1.928,49,1.881,51,2.651,61,0.003,62,0.003,65,1.27,73,0.955,84,0.955,85,0.309,105,0.931,143,2.359,200,0.919,344,2.719,351,2.883,356,2.268,361,2.963,387,3.061,507,1.025,556,3.596,566,4.662,590,3.933,591,3.167,592,3.065,702,3.853,750,5.665,751,4.432,752,3.475,753,5.786,754,5.525,755,4.1,756,6.941,757,4.935,758,4.61,759,3.268,760,4.227,761,5.508,762,2.811,763,4.1,764,4.935,765,3.074,766,5.786,767,4.506,768,2.573,769,3.655,770,3.655,771,3.655,772,3.117,773,5.323,774,4.822,775,2.225]],["title/classes/CondominiumMapper.html",[0,0.247,701,3.822]],["body/classes/CondominiumMapper.html",[0,0.23,2,0.814,3,0.042,4,0.042,5,0.042,9,0.064,16,0.76,20,1.69,23,1.996,35,0.904,36,0.005,37,0.836,38,0.125,39,0.679,40,0.932,41,1.217,43,0.055,45,0.881,46,0.058,47,1.498,48,1.908,49,1.862,61,0.003,62,0.003,65,1.249,66,1.48,73,0.94,84,0.94,85,0.191,105,0.916,160,2.054,200,0.898,211,3.984,344,3.077,351,3.25,356,2.215,361,3.352,387,2.554,507,1.393,556,3.975,590,4.45,591,3.128,592,3.027,627,2.51,660,3.419,662,3.498,701,4.969,752,3.45,759,2.854,762,3.743,765,4.092,766,5.714,769,3.571,770,3.571,771,3.571,772,3.045,775,2.173,776,4.006,777,3.981,778,4.969,779,3.581,780,5.101,781,4.821,782,3.382,783,4.95,784,4.349,785,3.981,786,4.821,787,2.55,788,3.571,789,2.457,790,4.006,791,4.006,792,3.41,793,4.006]],["title/classes/CondominiumPrismaMapper.html",[0,0.247,794,4.287]],["body/classes/CondominiumPrismaMapper.html",[0,0.247,2,1.352,3,0.045,4,0.045,5,0.045,9,0.069,16,0.798,23,1.479,35,0.949,36,0.005,37,0.82,38,0.114,39,0.712,40,0.96,46,0.045,47,1.572,48,1.966,49,1.918,51,2.215,61,0.003,62,0.003,65,1.311,66,1.249,73,0.986,84,0.986,85,0.279,105,0.961,200,0.963,211,2.952,344,2.807,351,2.409,356,2.375,361,3.058,387,3.033,507,1.073,556,4.122,590,4.06,591,2.854,592,2.762,660,3.587,662,3.67,752,3.525,758,4.701,759,3.305,760,3.802,769,3.829,770,3.829,771,3.829,772,3.265,775,2.331,777,4.177,779,3.758,789,2.635,790,4.295,791,4.295,792,3.656,793,4.295,794,5.848,795,5.169,796,5.495,797,9.273,798,5.169,799,5.207,800,5.495,801,5.169,802,5.495,803,5.495,804,5.495,805,4.978,806,3.38]],["title/injectables/CondominiumPrismaRepo.html",[183,1.287,807,4.287]],["body/injectables/CondominiumPrismaRepo.html",[0,0.216,3,0.039,4,0.039,5,0.039,8,1.404,9,0.06,11,0.71,13,0.906,16,0.971,35,1.154,36,0.005,37,0.892,38,0.138,39,0.867,40,0.994,42,1.505,44,0.951,46,0.039,61,0.003,62,0.003,71,0.755,73,0.899,84,1.136,85,0.362,89,0.962,93,1.424,94,1.585,105,0.876,161,1.72,165,2.647,176,2.138,183,1.6,192,1.264,194,1.992,199,1.618,200,0.843,212,1.201,305,1.835,316,3.887,344,2.973,356,2.079,361,3.239,455,2.256,507,0.939,554,2.04,556,3.182,653,3.98,675,2.439,794,3.759,799,3.602,807,5.331,808,4.524,809,4.061,810,3.759,811,5.123,812,4.524,813,2.739,814,5.06,815,4.524,816,3.235,817,6.037,818,4.524,819,6.037,820,4.524,821,4.524,822,3.602,823,3.071,824,3.071,825,3.532,826,4.524,827,3.701,828,2.61,829,6.416,830,4.524,831,3.532,832,4.524,833,5.009,834,6.008,835,7.454,836,4.524,837,3.351,838,2.416,839,1.866,840,3.071,841,4.524]],["title/classes/CondominiumRelUser.html",[0,0.247,224,1.741]],["body/classes/CondominiumRelUser.html",[0,0.142,2,0.5,3,0.025,4,0.025,5,0.025,9,0.039,10,0.551,11,0.907,13,0.593,14,1.862,16,1.085,35,1.109,36,0.005,37,0.785,38,0.152,39,0.832,40,1.043,41,1.656,42,2.736,43,0.053,45,0.894,46,0.056,61,0.002,62,0.002,71,0.779,73,0.654,84,1.152,85,0.185,94,0.579,105,1.156,167,1.914,191,2.789,200,0.869,207,2.856,223,0.971,224,2.855,226,2.736,230,4.598,232,1.287,234,2.188,235,2.145,245,2.01,246,2.029,247,1.925,249,1.958,256,1.811,327,4.554,332,2.01,338,2.268,394,1.416,507,1.574,587,3.334,588,2.945,589,3.589,592,3.227,597,1.936,602,2.193,608,5.147,623,2.46,625,1.581,626,1.581,627,3.078,628,2.771,629,3.085,636,1.509,643,2.693,653,3.085,661,4.845,662,1.544,664,4.789,703,3.742,842,2.312,843,5.121,844,4.668,845,2.961,846,4.512,847,2.961,848,2.961,849,2.961,850,2.961,851,2.961,852,2.961,853,2.961,854,2.659,855,2.961,856,2.961,857,2.961,858,2.659,859,2.961,860,2.961,861,2.961,862,2.961,863,2.961,864,2.961,865,5.258,866,2.961,867,2.961,868,2.961,869,2.961,870,2.961,871,2.961,872,2.961,873,2.961,874,2.312,875,4.28,876,2.193,877,2.46,878,3.645,879,2.46,880,2.46,881,1.958,882,2.46,883,3.169,884,2.095,885,2.312,886,2.46,887,2.46,888,2.46,889,2.46,890,5.45,891,2.46,892,5.93,893,2.46,894,2.46,895,2.46,896,3.879,897,4.088,898,2.193,899,2.46,900,1.936,901,2.46,902,2.46,903,1.811,904,2.46,905,3.879,906,2.46,907,2.46,908,3.458,909,2.46,910,2.46,911,2.46]],["title/classes/CondominiumRelUserFirestoreMapper.html",[0,0.247,912,4.028]],["body/classes/CondominiumRelUserFirestoreMapper.html",[0,0.238,2,0.84,3,0.043,4,0.043,5,0.043,9,0.066,16,0.777,35,0.924,36,0.005,37,0.654,38,0.127,39,0.694,40,1.05,41,1.731,43,0.057,45,0.893,46,0.068,47,1.531,48,1.795,49,1.751,51,2.66,61,0.003,62,0.003,65,0.926,73,0.96,84,0.96,85,0.335,105,0.936,143,2.378,200,0.926,207,1.727,224,2.852,226,1.654,230,2.428,257,1.833,327,2.428,351,2.893,387,3.04,507,1.629,566,4.584,592,3.078,703,2.017,752,3.484,753,5.81,754,5.548,758,4.626,759,3.214,760,4.156,761,5.527,762,2.827,763,4.133,765,3.091,767,3.954,768,2.594,774,4.849,865,3.954,912,5.352,913,4.133,914,4.974,915,6.956,916,4.974,917,4.974,918,4.188,919,5.696,920,4.467,921,2.793,922,4.133]],["title/classes/CondominiumRelUserMapper.html",[0,0.247,923,3.65]],["body/classes/CondominiumRelUserMapper.html",[0,0.228,2,0.805,3,0.041,4,0.041,5,0.041,9,0.063,16,0.754,20,1.682,23,1.951,35,0.897,36,0.005,37,0.635,38,0.124,39,0.674,40,0.976,41,2.095,43,0.054,45,1.001,46,0.066,47,1.486,48,1.754,49,1.712,61,0.003,62,0.003,65,0.887,66,1.472,73,0.932,84,0.932,85,0.189,105,0.909,160,2.044,200,0.887,207,2.662,224,3.245,226,2.55,230,3.742,257,1.756,327,3.742,351,3.177,387,2.348,507,1.813,592,3.009,627,2.49,662,2.485,703,3.109,752,3.438,759,2.624,762,3.729,765,3.936,777,4.551,778,4.929,782,3.365,783,4.925,784,3.998,785,3.949,787,2.529,789,2.429,865,4.787,883,4.517,900,4.351,918,4.094,923,4.707,924,3.96,925,4.766,926,6.896,927,4.766,928,4.766,929,2.915,930,3.01,931,3.721,932,3.96,933,3.721]],["title/classes/CondominiumRelUserPrismaMapper.html",[0,0.247,934,4.028]],["body/classes/CondominiumRelUserPrismaMapper.html",[0,0.245,2,1.346,3,0.044,4,0.044,5,0.044,9,0.068,16,0.793,23,1.471,35,0.944,36,0.005,37,0.668,38,0.113,39,0.708,40,0.957,46,0.044,47,1.563,48,1.959,49,1.912,51,2.202,61,0.003,62,0.003,65,1.303,66,1.242,73,0.981,84,0.981,85,0.277,105,0.956,200,0.955,207,2.43,224,3.335,226,2.328,230,2.502,257,1.889,327,3.416,351,2.395,387,3.028,507,1.064,592,2.746,662,3.649,703,2.838,752,3.516,758,4.685,759,3.298,760,3.789,775,2.312,777,4.154,779,3.737,789,2.613,796,5.464,799,5.194,800,5.464,802,5.464,803,5.464,804,5.464,805,4.951,806,3.352,865,4.037,878,4.003,898,3.797,900,3.352,903,3.136,929,3.136,930,3.238,932,4.26,934,5.464,935,5.127,936,9.25,937,5.127,938,5.127,939,5.127,940,5.127,941,5.127,942,5.127]],["title/classes/CondominiumRepo.html",[0,0.247,822,2.897]],["body/classes/CondominiumRepo.html",[0,0.189,2,0.668,3,0.034,4,0.034,5,0.034,9,0.053,10,0.687,16,0.783,18,2.212,20,1.544,26,1.968,27,2.807,28,2.534,35,0.785,36,0.005,37,0.775,38,0.112,39,0.589,40,0.982,42,1.315,43,0.079,46,0.07,47,1.299,48,1.743,49,1.701,61,0.003,62,0.003,65,1.084,66,1.598,73,0.815,84,0.815,85,0.23,159,3.252,160,2.363,176,1.858,191,2.087,192,1.104,211,3.779,212,2.022,216,3.252,220,1.806,222,3.445,223,1.296,242,2.989,281,3.247,330,4.277,340,3.31,344,3.502,350,3.195,356,1.816,361,3.815,507,1.582,519,2.928,556,2.948,675,2.895,782,3.089,809,3.69,814,2.683,816,2.321,817,4.688,819,4.688,822,3.267,823,2.683,943,3.086,944,3.953,945,3.953,946,3.882,947,2.645,948,3.882,949,2.996,950,3.798,951,3.882,952,4.397,953,3.882,954,3.882,955,3.569,956,3.798,957,3.882,958,3.882,959,3.569,960,3.953,961,2.015,962,2.061,963,3.52]],["title/injectables/CondominiumsFirestore.html",[183,1.287,964,4.287]],["body/injectables/CondominiumsFirestore.html",[0,0.229,3,0.041,4,0.041,5,0.041,8,1.488,9,0.102,11,1.048,13,1.338,16,0.992,35,1.122,36,0.005,37,0.794,38,0.134,39,0.842,40,0.93,46,0.041,61,0.003,62,0.003,71,0.8,73,0.936,84,1.166,85,0.368,89,1.02,94,1.771,165,2.674,167,1.687,176,2.17,183,1.666,194,1.488,199,1.714,200,1.244,356,2.203,507,0.995,553,5.647,554,2.161,556,3.283,559,5.44,566,3.754,585,3.55,675,2.54,701,3.55,702,3.742,809,4.239,813,2.852,814,5.221,816,3.067,817,5.221,819,5.221,822,3.751,823,3.253,824,3.253,831,3.742,964,6.39,965,4.793,966,3.983,967,4.793,968,5.551,969,4.793,970,4.793,971,4.793,972,4.793,973,4.304,974,3.742,975,4.793,976,3.134,977,3.983,978,4.304,979,4.304,980,3.983,981,4.793,982,4.793,983,4.793,984,4.793,985,4.793,986,7.691,987,3.742,988,6.681,989,3.742,990,4.793,991,4.793,992,4.793,993,4.793,994,4.304,995,3.253,996,4.793]],["title/classes/CookieAdapter.html",[0,0.247,122,3.502]],["body/classes/CookieAdapter.html",[0,0.333,2,1.177,3,0.06,4,0.06,5,0.06,9,0.093,16,0.79,35,0.939,36,0.005,37,0.665,38,0.138,39,0.705,43,0.079,45,0.976,46,0.079,61,0.004,62,0.004,73,1.196,84,0.976,122,5.796,139,4.556,176,1.594,220,2.163,271,4.929,281,3.341,305,3.462,997,5.79,998,7.671,999,6.968,1000,7.513,1001,6.968,1002,7.208]],["title/classes/CookieParserAdapter.html",[0,0.247,140,4.287]],["body/classes/CookieParserAdapter.html",[0,0.333,2,1.177,3,0.06,4,0.06,5,0.06,9,0.093,16,0.79,35,0.939,36,0.005,37,0.665,38,0.113,39,0.705,40,0.955,46,0.06,61,0.004,62,0.004,71,1.425,73,1.196,84,0.976,85,0.338,105,0.952,122,6.267,139,5.583,140,7.095,316,3.634,998,7.671,1000,7.513,1002,7.208,1003,8.539,1004,6.968,1005,6.968,1006,6.968,1007,5.79,1008,5.441,1009,6.968]],["title/classes/CreateCondominiumDTO.html",[0,0.247,679,4.287]],["body/classes/CreateCondominiumDTO.html",[0,0.266,2,0.629,3,0.032,4,0.032,5,0.032,9,0.05,10,0.657,16,0.898,20,1.128,23,1.555,26,2.084,36,0.005,37,0.822,38,0.128,41,1.405,42,2.634,44,2.154,45,0.936,46,0.032,49,2.177,61,0.002,62,0.002,65,0.693,66,0.988,85,0.293,131,1.984,158,2.558,160,1.822,211,2.335,240,2.758,291,1.188,333,5.786,344,3.434,350,2.335,355,2.434,356,1.711,360,3.344,361,3.742,367,3.344,373,1.988,392,2.091,396,3.516,532,4.346,533,5.001,563,3.64,590,4.968,628,2.21,629,1.988,679,4.625,680,5.001,949,2.764,1010,3.723,1011,3.64,1012,4.625,1013,5.021,1014,6.844,1015,6.592,1016,3.344,1017,3.344,1018,3.723,1019,4.625,1020,4.625,1021,3.723,1022,2.634,1023,2.634,1024,3.723,1025,3.723,1026,3.344,1027,3.344,1028,3.344,1029,3.723,1030,5.64,1031,2.277,1032,3.779,1033,3.344,1034,3.344,1035,4.837,1036,2.527,1037,2.634,1038,5.021,1039,2.527,1040,3.723,1041,3.723,1042,3.723,1043,5.539,1044,3.723,1045,3.723,1046,3.723,1047,3.723,1048,3.344,1049,3.344,1050,4.999,1051,3.344,1052,3.344,1053,3.344,1054,3.723,1055,3.723,1056,3.723,1057,3.723]],["title/injectables/CreateCondominiumService.html",[183,1.287,698,3.65]],["body/injectables/CreateCondominiumService.html",[0,0.283,3,0.051,4,0.051,5,0.051,9,0.079,11,1.21,13,1.544,15,2.32,16,0.874,35,1.039,36,0.005,37,0.736,38,0.125,39,0.78,40,0.663,43,0.068,46,0.051,61,0.003,62,0.003,65,1.104,71,0.989,73,1.08,84,0.831,85,0.373,89,1.261,160,1.899,165,2.304,167,1.947,183,1.923,194,2.393,211,3.234,356,2.724,405,5.55,422,4.194,554,2.673,556,3.873,698,5.454,822,5.414,824,4.024,831,4.629,881,3.234,947,2.677,1058,5.324,1059,3.93,1060,3.93,1061,4.448,1062,6.02,1063,5.928,1064,7.695,1065,5.928,1066,4.219,1067,5.928,1068,3.613,1069,2.894,1070,5.324,1071,5.324]],["title/injectables/CreateTokenService.html",[183,1.287,1072,3.502]],["body/injectables/CreateTokenService.html",[0,0.2,3,0.036,4,0.036,5,0.036,9,0.056,11,0.658,13,0.839,15,2.002,16,0.888,23,1.646,26,1.607,35,1.056,36,0.005,37,0.874,38,0.14,39,0.793,43,0.069,45,0.642,46,0.036,51,1.911,61,0.003,62,0.003,65,0.78,71,0.699,73,0.851,84,1.001,85,0.343,89,0.891,93,1.319,94,1.694,105,0.975,131,2.009,165,2.509,167,2.189,169,3.272,170,5.667,179,3.41,180,3.64,183,1.514,184,2.647,185,2.647,191,2.512,192,1.171,194,2.431,197,4.122,198,2.965,218,2.591,226,2.376,227,2.647,230,3.486,291,1.337,327,3.486,447,2.965,507,0.87,554,1.89,591,2.463,592,2.383,596,2.185,627,2.273,703,2.896,881,2.996,947,2.109,1059,3.095,1060,3.095,1068,2.846,1069,2.046,1072,4.122,1073,3.482,1074,3.971,1075,3.503,1076,5.046,1077,6.073,1078,6.073,1079,4.191,1080,5.046,1081,6.49,1082,4.191,1083,5.046,1084,4.191,1085,3.272,1086,4.191,1087,2.845,1088,2.845,1089,3.482,1090,3.992,1091,5.316,1092,3.482,1093,3.482,1094,5.046,1095,4.498,1096,3.482,1097,3.482,1098,3.482,1099,3.482,1100,3.482,1101,3.482,1102,3.482,1103,5.046,1104,3.272,1105,3.482,1106,3.482,1107,3.482,1108,3.272,1109,3.482,1110,3.272,1111,4.122,1112,3.482,1113,3.971,1114,3.482]],["title/classes/CreateUserDTO.html",[0,0.247,1115,4.287]],["body/classes/CreateUserDTO.html",[0,0.238,2,0.544,3,0.028,4,0.028,5,0.028,9,0.043,10,0.589,16,0.928,20,1.01,23,1.443,26,2.092,36,0.005,37,0.781,38,0.132,41,1.258,42,2.47,44,2.162,45,0.969,46,0.028,49,2.217,61,0.002,62,0.002,65,0.6,66,0.884,85,0.272,131,1.91,158,2.291,160,1.691,161,1.895,230,3.997,240,2.385,256,1.97,257,1.187,258,2.892,291,1.027,327,3.833,333,5.893,337,2.892,350,2.091,368,3.692,373,1.719,392,1.808,396,3.148,474,3.997,532,3.892,533,5.172,563,3.259,628,1.911,629,1.719,680,5.172,949,2.612,1011,3.259,1012,4.142,1013,5.33,1014,6.887,1015,6.633,1016,2.892,1017,2.892,1019,5.704,1020,5.067,1022,2.278,1023,2.278,1026,2.892,1027,2.892,1028,2.892,1030,5.743,1031,1.97,1032,3.383,1033,2.892,1034,2.892,1035,5.134,1036,2.186,1037,2.278,1038,5.33,1039,2.186,1043,5.704,1049,2.892,1050,4.476,1053,2.892,1090,4.174,1115,4.142,1116,3.22,1117,4.984,1118,3.22,1119,3.22,1120,3.22,1121,3.22,1122,3.22,1123,3.22,1124,3.22,1125,6.098,1126,3.22,1127,2.892,1128,3.22,1129,3.22,1130,2.892,1131,2.676,1132,2.892,1133,2.892,1134,3.22,1135,3.22,1136,3.22,1137,3.22,1138,3.22,1139,2.892,1140,2.892,1141,3.22,1142,3.22,1143,2.892,1144,3.22,1145,3.22]],["title/injectables/CreateUserService.html",[183,1.287,1146,3.259]],["body/injectables/CreateUserService.html",[0,0.268,3,0.048,4,0.048,5,0.048,9,0.074,11,1.307,13,1.487,15,2.268,16,0.842,35,1.001,36,0.005,37,0.708,38,0.12,39,0.751,40,0.626,43,0.064,46,0.048,61,0.003,62,0.003,71,0.934,73,1.04,84,0.784,85,0.389,89,1.191,94,1.451,123,4,131,1.205,134,4.448,165,2.24,167,2.103,171,3.848,183,1.851,187,2.676,192,1.564,194,2.586,200,1.042,218,2.613,224,2.993,257,2.063,291,1.785,428,5.298,437,2.918,439,3.659,465,4.651,474,2.732,493,4.37,554,2.523,881,3.114,1066,4.063,1068,3.479,1069,2.732,1146,4.689,1147,5.026,1148,5.597,1149,5.597,1150,4.37,1151,4.37,1152,4.37,1153,4.37,1154,4.37,1155,5.026,1156,4.37,1157,5.026]],["title/injectables/CreateUserService-1.html",[183,1.076,215,2.063,1146,2.725]],["body/injectables/CreateUserService-1.html",[0,0.247,3,0.044,4,0.044,5,0.044,9,0.069,11,1.103,13,1.407,15,2.194,16,0.797,35,0.948,36,0.005,37,0.671,38,0.114,39,0.711,40,0.577,42,2.338,43,0.059,46,0.044,61,0.003,62,0.003,65,0.961,71,0.861,73,0.985,84,0.723,85,0.382,89,1.097,94,1.562,123,3.87,134,4.268,160,1.731,161,2.671,165,2.149,167,1.774,183,1.753,192,1.441,194,2.182,200,1.309,207,1.791,218,2.541,224,2.896,226,1.716,230,4.19,257,1.901,291,1.646,327,4.19,437,2.69,474,2.518,554,2.326,557,3.039,703,2.092,865,4.054,881,3.353,883,3.502,900,3.373,931,4.028,933,4.028,947,2.44,1059,3.582,1060,3.582,1061,4.054,1062,5.487,1068,3.294,1069,2.518,1085,4.028,1146,4.439,1150,4.028,1151,4.028,1152,4.028,1153,4.028,1154,4.028,1158,4.633,1159,5.159,1160,4.523,1161,5.159,1162,5.159,1163,3.062,1164,2.283,1165,4.633,1166,4.633,1167,4.633,1168,4.633]],["title/classes/CryptAdapter.html",[0,0.247,123,2.326]],["body/classes/CryptAdapter.html",[0,0.299,2,1.057,3,0.054,4,0.054,5,0.054,9,0.083,16,0.996,35,1.185,36,0.005,37,0.839,38,0.142,39,0.89,40,0.892,43,0.091,45,1.051,46,0.076,61,0.004,62,0.004,73,1.118,84,1.232,123,3.598,176,2.238,220,1.941,281,3.556,294,5.911,295,5.911,296,5.911,299,5.911,300,6.549,303,5.911,305,3.564,306,6.231,307,6.858,459,4.633,1169,5.197,1170,6.254,1171,6.254,1172,6.254]],["title/classes/CryptSpy.html",[0,0.247,1173,4.634]],["body/classes/CryptSpy.html",[0,0.271,2,0.958,3,0.049,4,0.049,5,0.049,9,0.075,10,0.885,16,1.011,35,1.01,36,0.005,37,0.715,38,0.136,39,0.758,40,0.634,45,0.886,46,0.049,61,0.003,62,0.003,71,1.25,73,1.05,84,1.175,85,0.225,105,1.145,123,3.781,165,2.682,176,2.18,215,4.01,236,1.97,246,4.14,294,6.607,295,6.607,296,7.056,297,2.558,299,5.549,300,6.31,303,5.549,305,3.037,326,5.095,418,5.693,419,3.104,437,2.958,1173,6.727,1174,5.673,1175,5.673,1176,5.673,1177,5.673,1178,5.673,1179,7.491,1180,5.673,1181,7.491,1182,7.491,1183,5.673]],["title/classes/DatabaseCustomError.html",[0,0.247,827,2.976]],["body/classes/DatabaseCustomError.html",[0,0.237,2,0.837,3,0.043,4,0.043,5,0.043,7,3.409,8,2.62,9,0.066,10,0.807,11,1.228,13,0.992,14,2.726,15,2.157,16,0.775,18,2.659,19,3.741,20,1.71,21,4.506,22,4.301,23,1.924,25,4.301,26,1.731,27,2.519,28,2.274,29,3.741,30,3.741,31,3.741,32,3.741,33,3.741,34,4.618,35,0.668,36,0.005,37,0.473,38,0.11,39,0.501,40,0.875,43,0.057,44,1.041,45,0.524,46,0.059,47,1.106,48,1.564,49,1.526,50,3.741,51,2.151,54,2.47,55,2.583,59,2.583,60,2.583,61,0.003,62,0.003,65,0.923,66,1.213,68,3.082,69,2.971,224,1.671,387,2.584,596,3.565,626,2.645,703,2.009,759,2.34,760,3.025,827,3.943,828,5.281,839,3.48,962,2.583,976,3.239,1184,4.117,1185,6.836,1186,4.64,1187,4.836,1188,4.64,1189,4.836,1190,2.711,1191,4.117,1192,4.117,1193,4.117,1194,4.117,1195,4.117,1196,4.117,1197,5.68,1198,4.117,1199,2.94,1200,4.318,1201,4.117,1202,4.449,1203,4.117,1204,4.117,1205,4.117,1206,3.67,1207,4.64,1208,4.117,1209,5.064,1210,4.117,1211,3.67,1212,4.449,1213,3.239,1214,3.239]],["title/classes/DatabaseCustomErrorFilter.html",[0,0.247,1215,3.822]],["body/classes/DatabaseCustomErrorFilter.html",[0,0.164,2,0.58,3,0.03,4,0.03,5,0.03,8,1.625,9,0.046,10,0.618,11,1.114,12,4.897,13,0.687,16,0.719,18,0.997,20,1.061,23,1.1,26,1.772,35,0.706,36,0.005,37,0.942,38,0.103,39,0.53,41,0.867,43,0.039,44,2.05,45,0.553,46,0.03,61,0.002,62,0.002,65,1.182,66,0.929,67,2.668,68,2.36,71,0.874,72,3.097,73,0.733,74,2.709,75,1.927,76,2.831,78,2.235,79,2.668,80,3.034,81,3.465,83,1.98,84,0.481,85,0.281,86,1.519,87,1.547,89,0.73,90,2.36,91,1.265,93,1.08,94,1.24,95,1.44,96,1.675,97,1.675,98,2.503,99,2.795,100,2.317,102,1.927,103,2.406,104,2.61,105,0.867,106,1.79,107,2.317,108,1.79,109,1.711,110,1.79,161,1.99,167,1.602,211,2.196,212,2.659,216,3.438,236,1.192,297,1.547,455,4.501,759,1.791,827,4.095,828,3.02,838,2.795,839,3.962,840,3.553,949,1.741,1075,5.207,1186,3.553,1215,3.877,1216,3.082,1217,4.701,1218,3.881,1219,3.432,1220,5.272,1221,5.748,1222,4.087,1223,7.233,1224,4.408,1225,5.966,1226,4.522,1227,4.35,1228,3.703,1229,5.455,1230,4.701,1231,6.127,1232,4.701,1233,4.35,1234,3.703,1235,4.701,1236,4.087,1237,4.701,1238,3.432,1239,3.432,1240,3.082,1241,3.082,1242,2.099,1243,2.244,1244,2.244,1245,1.98,1246,3.703,1247,3.02,1248,1.98,1249,1.98]],["title/classes/DateFormats.html",[0,0.247,1250,4.287]],["body/classes/DateFormats.html",[0,0.285,2,1.009,3,0.051,4,0.051,5,0.051,9,0.079,16,0.677,35,0.805,36,0.005,37,0.57,38,0.096,39,0.604,45,0.819,46,0.051,47,1.333,48,1.772,49,1.73,61,0.003,62,0.003,65,1.112,66,1.374,73,1.085,84,0.837,94,1.888,105,0.815,305,3.689,351,2.651,627,3.528,632,6.369,752,3.268,947,2.69,949,3.026,1250,6.436,1251,5.971,1252,7.746,1253,7.746,1254,5.971,1255,7.746,1256,7.746,1257,6.956,1258,6.956,1259,7.746,1260,8.598,1261,5.971,1262,8.598,1263,5.971,1264,8.598,1265,5.971,1266,5.971,1267,5.971,1268,5.971,1269,5.971,1270,5.971,1271,5.971,1272,5.971,1273,5.971]],["title/classes/DeleteUserDTO.html",[0,0.247,689,4.287]],["body/classes/DeleteUserDTO.html",[0,0.367,2,0.995,3,0.051,4,0.051,5,0.051,9,0.078,10,0.906,16,0.667,20,1.555,23,1.902,26,2.011,36,0.005,38,0.095,42,1.958,44,1.972,45,0.811,46,0.051,49,1.907,61,0.003,62,0.003,65,1.096,66,1.362,85,0.338,131,2.183,158,3.527,160,1.89,291,1.878,333,5.068,373,3.143,392,3.305,396,4.848,533,4.848,563,5.018,629,3.143,680,3.718,689,6.377,949,2.553,1011,5.018,1013,3.996,1014,6.371,1015,6.136,1022,4.164,1023,4.164,1030,5.21,1031,3.601,1032,5.21,1035,3.849,1036,3.996,1037,4.164,1038,3.996,1039,3.996,1274,5.887,1275,7.675,1276,5.018,1277,5.887]],["title/injectables/DeleteUserService.html",[183,1.287,711,3.502]],["body/injectables/DeleteUserService.html",[0,0.276,3,0.05,4,0.05,5,0.05,9,0.077,11,0.905,13,1.154,15,2.295,16,0.858,23,1.211,35,1.021,36,0.005,37,0.722,38,0.122,39,0.766,43,0.066,44,1.211,46,0.05,61,0.003,62,0.003,65,1.074,71,0.962,73,1.061,84,0.808,85,0.369,89,1.226,93,1.814,131,1.82,160,1.864,161,2.878,165,2.273,171,3.88,183,1.888,187,2.756,192,1.61,194,1.789,199,2.061,200,1.074,212,1.53,220,1.789,387,1.765,493,4.501,554,2.599,711,5.139,745,6.6,746,7.024,839,2.377,881,3.546,947,2.629,1059,3.859,1060,3.859,1068,3.548,1069,2.814,1085,4.501,1278,5.177,1279,6.6,1280,5.765,1281,5.765,1282,5.139,1283,3.913,1284,4.501,1285,5.177,1286,3.078,1287,4.501,1288,3.913,1289,5.177,1290,3.769,1291,5.177,1292,4.501,1293,5.177]],["title/classes/EchoguardAdapter.html",[0,0.247,1294,4.634]],["body/classes/EchoguardAdapter.html",[0,0.192,2,0.679,3,0.06,4,0.035,5,0.035,8,2.164,9,0.053,16,1.026,35,1.22,36,0.005,37,0.863,38,0.146,39,0.916,40,1.111,46,0.035,61,0.003,62,0.003,65,1.59,71,0.983,73,0.825,76,2.78,78,1.714,84,1.268,85,0.233,94,1.362,103,4.243,165,2.763,176,2.274,703,3.669,1294,5.287,1295,4.016,1296,4.892,1297,5.791,1298,4.892,1299,5.791,1300,4.892,1301,4.892,1302,4.597,1303,7.362,1304,4.016,1305,3.607,1306,6.952,1307,4.016,1308,4.597,1309,4.016,1310,3.607,1311,4.016,1312,3.607,1313,4.016,1314,4.597,1315,4.016,1316,4.597,1317,4.016,1318,4.597,1319,4.016,1320,4.016,1321,3.607,1322,9.05,1323,5.887,1324,4.016,1325,4.016,1326,4.016,1327,6.259,1328,6.259,1329,6.259,1330,7.669,1331,6.97]],["title/classes/Email.html",[0,0.247,131,1.111]],["body/classes/Email.html",[0,0.279,2,0.985,3,0.05,4,0.05,5,0.05,9,0.078,11,0.915,13,1.168,16,0.964,23,1.786,35,1.028,36,0.005,37,0.728,38,0.123,39,0.772,40,0.652,44,1.226,45,0.953,46,0.05,47,1.302,48,1.745,49,1.703,61,0.003,62,0.003,65,1.086,71,1.273,73,1.069,84,0.817,85,0.337,93,1.835,105,1.042,131,2.136,199,2.085,200,1.086,232,3.694,233,3.833,234,3.575,235,3.505,236,2.952,237,3.364,239,4.652,242,2.993,247,3.146,249,2.446,250,3.114,252,3.647,253,2.972,254,2.489,255,2.581,291,1.86,333,4.527,336,4.125,338,2.288,339,3.461,340,2.534,341,4.125,342,4.125,343,5.178,373,3.114,1039,3.959,1332,5.832,1333,5.832,1334,7.628,1335,5.956,1336,5.832,1337,5.832]],["title/classes/EmailAdapter.html",[0,0.247,124,2.897]],["body/classes/EmailAdapter.html",[0,0.35,2,1.236,3,0.063,4,0.063,5,0.063,9,0.097,10,1.039,16,0.829,36,0.005,38,0.118,43,0.083,45,1.034,46,0.076,61,0.004,62,0.004,124,4.938,176,1.674,281,3.397,305,2.966,397,3.179,519,5.418,1338,6.569,1339,7.362,1340,7.315,1341,6.866,1342,4.62]],["title/classes/EmailSpy.html",[0,0.247,1343,4.634]],["body/classes/EmailSpy.html",[0,0.327,2,1.155,3,0.059,4,0.059,5,0.059,9,0.091,10,0.997,16,0.957,36,0.005,38,0.11,46,0.059,61,0.004,62,0.004,71,1.408,73,1.182,84,0.958,85,0.271,124,5.14,165,2.461,176,1.931,215,3.268,236,2.373,246,3.667,297,3.082,418,6.214,419,3.74,1339,7.809,1343,7.578,1344,6.835,1345,6.835,1346,6.835,1347,4.64,1348,8.438]],["title/classes/EntitieError.html",[0,0.247,252,2.467]],["body/classes/EntitieError.html",[0,0.267,2,0.944,3,0.048,4,0.048,5,0.048,7,3.696,8,2.752,9,0.074,10,0.876,11,1.306,13,1.118,14,2.957,15,2.266,16,0.84,18,2.755,19,4.057,20,1.502,21,3.958,22,3.779,23,1.558,25,4.518,26,1.521,27,2.732,28,2.466,29,4.057,30,4.057,31,4.057,32,4.057,33,4.057,34,4.057,35,0.753,36,0.005,37,0.533,38,0.12,39,0.565,40,0.829,43,0.064,44,1.174,45,0.59,46,0.048,47,1.247,48,1.696,49,1.655,50,4.057,51,2.333,54,2.784,55,2.912,59,2.912,60,2.912,61,0.003,62,0.003,65,1.04,66,1.315,85,0.221,236,1.939,243,4.847,252,3.544,254,4.049,255,2.471,338,3.62,339,3.314,419,3.056,1349,5.015,1350,7.413,1351,5.491,1352,5.788,1353,6.658,1354,6.16,1355,6.658,1356,5.788,1357,4.36]],["title/classes/EntitieErrorFilter.html",[0,0.247,1358,4.028]],["body/classes/EntitieErrorFilter.html",[0,0.255,2,0.901,3,0.046,4,0.046,5,0.046,9,0.071,11,0.837,13,1.068,16,0.815,18,1.549,20,1.457,23,1.121,26,1.094,35,0.969,36,0.005,37,0.83,38,0.116,39,0.728,44,1.511,46,0.046,61,0.003,62,0.003,65,1.514,66,1.275,67,3.665,68,3.242,69,3.124,71,1.2,72,3.969,73,1.007,74,3.472,75,2.995,76,3.471,78,3.069,79,3.665,80,3.888,81,4.248,83,3.077,84,0.747,85,0.36,86,2.361,87,2.405,89,1.135,90,3.242,91,1.966,93,1.679,94,1.405,95,2.238,96,2.604,97,2.604,98,3.438,99,3.839,100,3.182,102,4.037,103,3.304,104,3.585,105,0.982,106,2.782,107,3.182,108,2.782,109,2.66,110,2.782,159,2.277,236,2.496,242,2.093,252,4.161,253,2.719,254,2.277,255,2.361,339,3.166,347,3.621,545,4.165,546,3.263,787,2.028,1221,3.166,1358,5.613,1359,5.335,1360,5.974,1361,5.335,1362,5.335,1363,5.335,1364,5.335,1365,7.19,1366,5.335,1367,5.335,1368,5.335,1369,5.335,1370,4.432,1371,5.335,1372,3.951]],["title/classes/Entity.html",[0,0.247,338,2.025]],["body/classes/Entity.html",[0,0.285,2,1.191,3,0.035,4,0.035,5,0.035,9,0.054,13,0.82,16,0.677,20,1.428,22,3.044,23,1.628,25,3.044,26,0.84,28,1.362,35,0.552,36,0.005,37,0.391,38,0.066,39,0.414,40,0.458,42,2.74,44,0.861,46,0.067,61,0.003,62,0.003,65,0.763,66,1.461,73,0.837,84,0.837,85,0.237,94,1.167,105,1.243,109,2.042,159,1.748,160,1.736,199,1.464,200,1.443,212,1.087,218,1.69,232,3.063,234,2.798,236,2.447,242,1.607,247,2.906,249,3.25,252,2.855,253,2.087,254,1.748,281,3.274,294,3.033,338,3.57,339,2.43,340,1.78,347,4.054,350,2.957,419,2.241,435,2.798,489,2.897,556,2.549,557,2.27,589,4.239,625,2.186,752,2.27,865,5.249,881,3.724,884,4.986,949,1.362,952,1.999,955,1.919,1190,3.268,1286,2.186,1351,4.423,1352,3.197,1360,3.403,1373,3.403,1374,5.856,1375,5.856,1376,4.962,1377,4.054,1378,4.095,1379,4.095,1380,4.662,1381,3.678,1382,3.403,1383,3.403,1384,4.962,1385,6.957,1386,6.957,1387,3.678,1388,3.033,1389,7.722,1390,3.678,1391,3.678,1392,6.33,1393,6.33,1394,6.33,1395,3.197,1396,3.678,1397,3.678,1398,3.678,1399,3.678,1400,2.042,1401,3.678,1402,3.678,1403,3.678]],["title/classes/FetchAdapter.html",[0,0.247,137,4.287]],["body/classes/FetchAdapter.html",[0,0.252,1,5.985,2,0.89,3,0.045,4,0.045,5,0.045,9,0.07,12,2.685,16,0.597,18,1.53,23,1.498,26,1.657,35,0.71,36,0.005,37,0.503,38,0.115,39,0.533,40,0.589,41,1.33,42,2.371,44,1.498,46,0.045,52,3.222,53,4.112,61,0.003,62,0.003,71,1.19,73,0.999,84,0.738,85,0.32,88,4.73,89,1.12,94,1.579,105,0.974,107,3.832,125,5.103,137,5.923,160,1.297,165,2.172,176,1.631,194,2.213,199,2.889,200,1.505,212,1.892,321,4.73,397,3.511,541,5.28,546,3.222,653,2.812,787,2.002,947,1.829,995,3.575,1059,3.633,1060,2.685,1224,2.882,1286,2.812,1400,3.554,1404,5.267,1405,6.402,1406,5.565,1407,6.413,1408,5.267,1409,8.08,1410,3.901,1411,5.267,1412,5.267,1413,6.308,1414,5.267,1415,5.267,1416,5.267,1417,3.901,1418,5.28,1419,8.658,1420,7.128,1421,5.267,1422,5.267,1423,5.267,1424,5.267,1425,5.267,1426,5.267,1427,5.267,1428,5.267,1429,5.042,1430,7.128,1431,3.726,1432,5.267,1433,5.267,1434,5.267,1435,5.267,1436,5.267,1437,5.267]],["title/classes/FirebaseLoggerAdapter.html",[0,0.247,142,4.287]],["body/classes/FirebaseLoggerAdapter.html",[0,0.183,2,0.647,3,0.069,4,0.033,5,0.033,8,2.488,9,0.051,16,1.012,35,1.204,36,0.005,37,0.852,38,0.144,39,0.904,40,1.103,46,0.033,61,0.003,62,0.003,65,1.564,71,0.949,73,0.797,76,2.704,78,1.636,84,1.251,85,0.225,94,1.325,103,4.192,142,4.725,143,1.832,165,2.749,176,2.257,703,3.62,772,5.639,1296,5.634,1297,6.234,1298,6.234,1299,6.234,1300,6.234,1301,6.234,1302,4.44,1303,7.308,1305,3.441,1306,6.875,1308,4.44,1310,3.441,1312,3.441,1314,4.44,1316,4.44,1318,4.44,1327,6.09,1328,6.09,1329,6.09,1330,7.541,1438,9.121,1439,3.832,1440,3.832,1441,3.832,1442,3.832,1443,3.832,1444,3.832,1445,3.832,1446,3.832,1447,3.832,1448,3.832,1449,3.832,1450,3.832,1451,3.832,1452,3.832,1453,3.832,1454,3.832,1455,3.832,1456,3.832]],["title/classes/FirestoreGetCondominiumDTO.html",[0,0.247,1457,4.634]],["body/classes/FirestoreGetCondominiumDTO.html",[0,0.286,2,1.011,3,0.052,4,0.052,5,0.052,9,0.08,16,0.678,26,1.591,35,0.807,36,0.005,37,0.74,38,0.097,39,0.606,40,0.962,41,1.511,45,0.633,46,0.052,47,1.336,48,1.775,49,1.732,61,0.003,62,0.003,65,1.115,69,3.371,73,1.087,84,0.839,85,0.361,94,1.17,105,0.817,143,2.862,344,2.387,355,3.913,356,2.75,361,2.601,387,2.376,507,1.243,566,3.787,590,3.453,591,2.427,592,2.349,752,3.272,756,6.376,759,3.117,760,3.433,767,3.453,768,3.121,881,3.254,949,2.58,1048,5.375,1052,5.375,1066,4.245,1457,6.967,1458,5.985,1459,5.985,1460,6.057,1461,5.746,1462,5.488,1463,5.985,1464,6.721,1465,4.433,1466,4.673,1467,4.673,1468,4.673,1469,5.985,1470,5.985,1471,5.985,1472,5.985,1473,6.057,1474,4.673]],["title/classes/FirestoreGetCondominiumRelUserDTO.html",[0,0.247,1475,4.287]],["body/classes/FirestoreGetCondominiumRelUserDTO.html",[0,0.282,2,0.997,3,0.051,4,0.051,5,0.051,9,0.078,16,0.669,26,1.577,35,0.795,36,0.005,37,0.563,38,0.095,39,0.597,40,0.956,41,1.941,46,0.051,47,1.318,48,1.759,49,1.716,61,0.003,62,0.003,65,1.099,69,3.34,73,1.077,84,0.827,85,0.359,94,1.153,105,0.806,143,2.821,207,2.049,226,1.963,230,2.88,256,3.609,257,2.175,327,2.88,387,2.354,507,1.225,566,3.752,592,2.315,703,2.393,752,3.25,759,3.1,760,3.402,767,3.404,768,3.077,881,3.224,915,6.332,949,2.557,1066,4.206,1139,5.299,1140,5.299,1460,6.001,1461,5.693,1462,5.437,1464,6.675,1465,4.37,1466,4.607,1467,4.607,1468,6.675,1473,4.607,1474,4.607,1475,6.387,1476,5.901,1477,5.901,1478,4.607,1479,8.549,1480,5.901,1481,5.299,1482,5.299]],["title/classes/FirestoreGetInviteDTO.html",[0,0.247,1483,4.287]],["body/classes/FirestoreGetInviteDTO.html",[0,0.286,2,1.011,3,0.052,4,0.052,5,0.052,9,0.08,16,0.678,26,1.591,35,0.807,36,0.005,37,0.571,38,0.125,39,0.606,40,0.962,41,1.959,46,0.052,47,1.336,61,0.003,62,0.003,65,1.115,69,3.371,73,1.087,84,0.839,85,0.361,94,1.17,105,0.817,131,1.289,143,2.862,207,2.078,256,3.661,257,2.206,276,3.913,450,2.698,452,4.9,507,1.243,566,3.787,752,3.272,759,2.655,760,3.433,767,3.453,768,3.121,881,3.254,949,2.58,1066,4.245,1460,6.057,1461,5.746,1462,5.488,1464,6.721,1465,4.433,1466,4.673,1467,4.673,1468,6.057,1473,4.673,1474,4.673,1481,5.375,1482,5.375,1483,6.446,1484,5.985,1485,5.985,1486,5.072,1487,6.376,1488,4.973,1489,5.985,1490,4.973,1491,5.985,1492,5.375,1493,3.78]],["title/classes/FirestoreGetUserDTO.html",[0,0.247,1494,4.287]],["body/classes/FirestoreGetUserDTO.html",[0,0.283,2,0.999,3,0.051,4,0.051,5,0.051,9,0.079,16,0.67,26,1.579,35,0.797,36,0.005,37,0.734,38,0.096,39,0.599,40,0.957,45,0.905,46,0.051,47,1.321,48,1.761,49,1.719,61,0.003,62,0.003,65,1.101,69,3.345,73,1.079,84,0.829,85,0.359,94,1.156,105,0.808,131,1.273,143,2.828,291,1.887,368,2.667,373,3.158,387,2.358,474,2.887,507,1.228,566,3.758,591,2.398,592,2.321,752,3.253,759,3.103,760,3.407,767,3.412,768,3.084,881,3.229,949,2.561,1066,4.213,1090,3.015,1460,6.011,1461,5.702,1462,5.446,1464,7.078,1465,4.381,1466,4.618,1467,4.618,1468,4.618,1473,6.011,1474,4.618,1492,5.311,1494,6.397,1495,5.914,1496,5.914,1497,6.34,1498,5.311,1499,5.914,1500,5.914,1501,5.914,1502,5.914,1503,5.914,1504,5.914,1505,5.914]],["title/modules/FirestoreModule.html",[111,2.755,1506,3.822]],["body/modules/FirestoreModule.html",[0,0.272,3,0.049,4,0.049,5,0.049,36,0.005,46,0.049,61,0.003,62,0.003,85,0.395,89,1.209,111,4.483,113,3.478,114,3.478,115,3.718,116,3.718,117,3.591,118,5.49,119,5.49,126,4.905,127,3.718,128,3.718,130,5.857,144,5.939,145,5.939,171,4,187,2.719,553,6.47,559,6.232,585,4.212,822,5.54,824,3.86,964,6.234,974,4.439,1160,4.815,1163,3.375,1506,7.523,1507,5.106,1508,5.106,1509,5.106,1510,5.686,1511,6.234,1512,5.686,1513,5.686,1514,6.234,1515,5.686]],["title/injectables/FirestoreService.html",[183,1.287,559,3.373]],["body/injectables/FirestoreService.html",[0,0.286,3,0.052,4,0.052,5,0.052,9,0.08,10,0.916,11,1.351,13,1.724,16,1.07,36,0.005,38,0.097,46,0.052,61,0.003,62,0.003,71,0.999,73,1.087,84,1.087,85,0.361,89,1.273,105,0.817,143,4.116,151,5.488,165,2.599,167,2.173,183,1.935,194,2.408,223,1.963,235,3.565,554,2.698,559,5.072,566,4.445,768,3.121,1516,5.985,1517,7.73,1518,7.567,1519,8.682,1520,7.73,1521,7.758,1522,5.985,1523,5.985,1524,5.985,1525,5.985,1526,7.758,1527,5.985,1528,5.985,1529,5.985,1530,6.967,1531,5.985,1532,5.985,1533,5.985,1534,7.758]],["title/classes/GatewayErrorFilter.html",[0,0.247,1535,3.822]],["body/classes/GatewayErrorFilter.html",[0,0.202,2,0.715,3,0.036,4,0.036,5,0.036,8,1.899,9,0.056,10,0.723,11,0.664,12,4.254,13,0.848,16,0.814,18,1.23,20,1.24,23,1.286,26,1.255,35,0.825,36,0.005,37,0.893,38,0.116,39,0.619,41,1.069,43,0.048,44,1.885,45,0.647,46,0.036,61,0.003,62,0.003,65,1.338,66,1.085,67,3.118,68,2.758,69,2.658,71,1.021,72,3.506,73,0.857,74,3.066,75,2.377,76,3.138,78,2.612,79,3.118,80,3.434,81,3.841,83,2.442,84,0.593,85,0.312,86,1.874,87,1.909,89,0.901,90,2.758,91,1.56,93,1.332,94,1.404,95,1.776,96,2.066,97,2.066,98,2.925,99,3.266,100,2.707,102,2.377,103,2.811,104,3.05,105,0.981,106,2.208,107,2.707,108,3.746,109,2.111,110,3.746,159,2.612,167,1.814,212,1.624,236,1.47,297,1.909,546,3.742,759,2.693,805,5.566,839,3.442,947,2.124,1035,4,1218,4.394,1221,3.631,1224,3.348,1242,2.589,1243,2.768,1244,2.768,1245,2.442,1247,4.144,1248,2.442,1249,2.442,1286,3.266,1400,3.05,1535,4.531,1536,3.802,1537,4.776,1538,4.234,1539,5.969,1540,5.494,1541,4.776,1542,5.494,1543,5.494,1544,5.494,1545,5.494,1546,5.494,1547,5.494,1548,4.531,1549,5.494,1550,5.494,1551,5.494,1552,5.494,1553,5.494,1554,5.494,1555,5.083,1556,4.234,1557,5.341,1558,4.234,1559,4.153,1560,3.802,1561,3.802,1562,5.494,1563,5.494]],["title/classes/GatewayErrors.html",[0,0.247,1557,3.502]],["body/classes/GatewayErrors.html",[0,0.256,2,0.903,3,0.046,4,0.046,5,0.046,7,3.59,8,2.527,9,0.071,10,0.85,11,1.47,13,1.07,14,2.872,15,2.227,16,0.923,18,2.72,19,3.94,20,1.459,21,3.844,22,3.67,23,1.831,25,4.44,26,1.921,27,2.653,28,2.395,29,3.94,30,3.94,31,3.94,32,3.94,33,3.94,34,4.767,35,0.721,36,0.005,37,0.51,38,0.132,39,0.541,40,0.805,43,0.061,44,1.123,45,0.565,46,0.062,47,1.194,48,1.647,49,1.608,50,3.94,51,2.266,54,2.666,55,2.788,59,2.788,60,2.788,61,0.003,62,0.003,65,0.996,66,1.277,387,2.205,403,3.96,596,4.741,839,3.862,1190,2.925,1213,3.495,1214,3.495,1221,4.273,1537,5.621,1557,4.887,1559,6.357,1564,4.442,1565,7.2,1566,6.466,1567,5.346,1568,4.442,1569,4.442,1570,4.442,1571,4.442,1572,3.96,1573,4.801,1574,4.801]],["title/modules/GatewayModule.html",[111,2.755,1575,3.822]],["body/modules/GatewayModule.html",[0,0.33,3,0.059,4,0.059,5,0.059,36,0.005,46,0.059,61,0.004,62,0.004,85,0.364,89,1.47,111,4.911,113,4.227,114,4.227,115,4.518,116,4.518,117,4.365,118,5.554,119,6.014,126,5.554,127,4.518,128,4.518,144,4.888,145,4.888,405,6.276,422,4.888,1575,7.297,1576,6.206,1577,6.206,1578,6.911,1579,6.633,1580,6.911]],["title/injectables/GenInviteService.html",[183,1.287,704,3.65]],["body/injectables/GenInviteService.html",[0,0.209,3,0.038,4,0.038,5,0.038,9,0.058,11,1.147,13,1.253,15,2.04,16,0.829,23,0.918,26,1.283,28,1.452,35,0.985,36,0.005,37,0.697,38,0.142,39,0.74,40,0.488,43,0.05,45,0.772,46,0.038,61,0.003,62,0.003,65,0.813,66,1.11,71,0.729,73,0.876,84,0.876,85,0.367,89,0.929,94,1.429,105,0.854,123,3.963,124,5.083,131,1.819,158,2.007,160,1.541,165,2.363,167,2.219,176,1.431,180,2.226,183,1.56,191,1.89,192,1.22,194,2.478,200,0.813,207,2.538,211,1.832,212,1.159,220,2.622,246,1.898,305,1.771,316,2.277,397,1.898,437,2.277,450,1.969,451,2.758,452,3.951,502,4.09,503,2.964,507,0.907,554,1.969,557,3.583,703,2.536,704,4.425,729,4.425,838,2.331,881,2.624,930,2.758,947,2.172,1059,3.188,1060,3.188,1061,3.608,1066,3.423,1068,2.931,1069,2.131,1160,4.418,1163,2.591,1164,1.932,1342,2.758,1347,2.964,1400,2.177,1490,3.628,1581,3.921,1582,3.902,1583,6.564,1584,4.367,1585,4.367,1586,4.367,1587,4.367,1588,4.633,1589,4.367,1590,5.618,1591,3.628,1592,3.628,1593,3.921,1594,3.628,1595,3.921,1596,3.608,1597,3.628,1598,3.409,1599,3.409,1600,3.921,1601,3.409,1602,3.921,1603,3.921,1604,3.409,1605,3.089,1606,2.964,1607,2.964,1608,3.089,1609,3.921,1610,3.089,1611,3.409,1612,3.409,1613,3.409,1614,3.921]],["title/injectables/GenOldTFASevice.html",[183,1.287,1615,3.65]],["body/injectables/GenOldTFASevice.html",[0,0.261,3,0.047,4,0.047,5,0.047,9,0.072,11,1.29,13,1.461,15,2.102,16,0.932,23,1.145,28,1.813,35,0.983,36,0.005,37,0.696,38,0.118,39,0.738,40,0.609,41,1.842,43,0.062,45,0.771,46,0.047,52,3.334,61,0.003,62,0.003,71,0.91,73,1.022,84,1.022,85,0.381,89,1.159,123,3.958,124,4.93,131,1.97,134,4.39,165,2.46,167,2.378,180,2.778,183,1.819,192,1.523,212,1.447,226,1.813,246,2.369,397,2.369,428,4.804,435,4.114,437,2.842,438,2.983,439,3.564,450,2.458,554,2.458,838,2.91,881,3.06,1066,2.983,1068,3.418,1069,2.66,1342,3.443,1347,3.7,1400,2.718,1596,3.144,1605,3.856,1606,3.7,1607,3.7,1608,3.856,1610,3.856,1615,5.16,1616,4.895,1617,7.884,1618,4.895,1619,5.451,1620,5.451,1621,5.451,1622,6.551,1623,4.256,1624,3.7]],["title/injectables/GenTFAService.html",[183,1.287,1625,3.65]],["body/injectables/GenTFAService.html",[0,0.214,3,0.039,4,0.039,5,0.039,9,0.06,11,1.164,13,1.276,15,2.065,16,0.841,23,1.864,26,1.522,28,1.491,35,1,36,0.005,37,0.708,38,0.12,39,0.751,40,0.829,43,0.051,45,0.474,46,0.039,52,2.743,61,0.003,62,0.003,65,0.835,66,0.795,71,0.748,73,0.893,84,0.893,85,0.361,89,0.954,94,1.668,105,0.612,123,3.642,124,4.536,131,1.909,134,3.96,158,2.061,165,2.384,167,2.239,171,3.699,180,2.285,183,1.59,187,2.144,191,2.579,192,1.253,194,2.508,212,1.19,218,1.269,219,2.832,220,2.302,222,1.759,223,1.471,226,1.491,227,2.832,305,1.818,389,4.722,397,1.949,437,2.338,448,4.313,451,2.832,452,4.026,491,4.722,492,4.977,502,4.168,503,3.044,504,3.501,506,3.044,507,0.931,509,3.726,511,3.726,517,4.977,554,2.022,838,2.394,881,2.674,947,2.213,1059,3.249,1060,3.249,1066,3.488,1068,2.987,1069,2.189,1091,3.044,1342,2.832,1347,3.044,1400,2.236,1596,2.587,1604,3.501,1605,3.172,1606,3.044,1607,3.044,1608,3.172,1610,3.172,1611,3.501,1612,3.501,1613,3.501,1618,4.027,1623,3.501,1624,3.044,1625,4.509,1626,4.027,1627,5.725,1628,5.297,1629,6.375,1630,4.484,1631,4.484,1632,5.725,1633,4.484,1634,4.027,1635,3.501,1636,3.501,1637,4.027,1638,4.027,1639,4.027,1640,4.027,1641,4.027,1642,4.027]],["title/classes/GenericErrorFilter.html",[0,0.247,1643,3.822]],["body/classes/GenericErrorFilter.html",[0,0.223,2,0.789,3,0.04,4,0.04,5,0.04,8,2.689,9,0.062,10,0.775,11,1.29,12,3.865,13,0.935,16,0.859,18,1.905,20,1.329,26,1.345,35,0.884,36,0.005,37,0.88,38,0.123,39,0.664,41,1.179,43,0.053,44,1.821,45,0.801,46,0.04,61,0.003,62,0.003,65,1.412,66,1.163,67,3.343,68,2.957,71,1.095,72,3.701,73,0.919,74,3.511,75,2.621,76,3.28,78,2.8,79,3.343,80,3.625,81,4.014,83,2.693,84,0.654,85,0.3,86,2.066,87,2.105,89,0.993,90,2.957,91,1.72,93,1.469,94,1.482,95,1.958,96,2.278,97,2.278,98,3.136,99,2.492,100,2.902,103,3.014,104,2.327,105,1.035,106,2.434,107,2.902,108,2.434,109,3.27,110,3.42,167,1.914,220,2.354,236,1.621,297,2.105,338,2.573,455,4.101,949,2.181,1199,3.892,1200,4.142,1221,4.881,1226,4.618,1228,4.639,1229,4.142,1245,2.693,1246,3.302,1247,3.783,1248,2.693,1249,2.693,1643,4.858,1644,4.192,1645,5.89,1646,6.809,1647,4.668,1648,6.3,1649,5.89,1650,4.668,1651,4.668,1652,4.192,1653,4.192,1654,4.192,1655,4.192,1656,4.192,1657,5.89,1658,5.89,1659,4.192]],["title/injectables/GetCondominiumRelUserService.html",[183,1.287,1660,3.65]],["body/injectables/GetCondominiumRelUserService.html",[0,0.279,3,0.05,4,0.05,5,0.05,9,0.078,11,0.917,13,1.17,15,2.307,16,0.866,35,1.03,36,0.005,37,0.729,38,0.123,39,0.773,43,0.067,46,0.05,51,2.404,61,0.003,62,0.003,65,1.089,71,0.976,73,1.07,84,0.819,85,0.357,89,1.243,93,1.839,94,1.143,105,0.798,160,1.882,161,2.904,162,5.659,165,2.288,171,3.895,180,2.979,183,1.905,187,2.795,191,2.309,192,1.633,194,1.814,226,2.831,242,2.998,493,4.564,554,2.635,881,3.57,947,2.653,1059,3.894,1060,3.894,1068,3.58,1069,2.853,1085,4.564,1400,3.809,1548,5.659,1660,5.404,1661,5.249,1662,6.861,1663,6.861,1664,5.965,1665,6.861,1666,5.845,1667,5.845,1668,6.861,1669,5.249,1670,4.857]],["title/classes/GuardErrorFilter.html",[0,0.247,1671,4.028]],["body/classes/GuardErrorFilter.html",[0,0.278,2,0.983,3,0.05,4,0.05,5,0.05,9,0.077,11,0.913,13,1.165,16,0.863,20,1.544,22,2.966,23,1.223,35,1.027,36,0.005,37,0.81,38,0.123,39,0.771,44,1.223,46,0.05,61,0.003,62,0.003,65,1.418,66,1.351,67,3.882,68,3.434,69,3.31,71,1.271,72,4.145,73,1.067,74,3.625,75,3.267,76,3.593,78,3.251,79,3.882,80,4.06,81,4.397,83,3.356,84,0.815,85,0.357,86,2.575,87,2.623,89,1.238,90,3.434,91,2.144,93,1.831,94,1.489,95,2.441,96,2.84,97,2.84,98,2.782,99,3.106,100,2.575,102,3.267,103,2.674,104,2.901,105,0.795,107,2.575,155,4.394,188,5.058,189,3.559,212,1.545,491,4.31,1075,3.356,1229,3.675,1231,3.949,1671,5.946,1672,5.818,1673,5.818,1674,5.818,1675,5.818,1676,5.225,1677,5.818]],["title/classes/GuardErrors.html",[0,0.247,188,2.897]],["body/classes/GuardErrors.html",[0,0.301,2,1.065,3,0.054,4,0.054,5,0.054,7,3.998,8,2.738,13,1.262,14,3.198,15,2.373,16,0.714,18,2.846,19,4.388,20,1.625,21,4.282,22,4.087,23,1.685,25,4.087,26,1.645,27,2.955,28,2.667,29,4.388,30,4.388,31,4.388,32,4.388,33,4.388,34,4.388,35,0.85,36,0.005,37,0.601,38,0.102,39,0.638,40,0.897,43,0.072,44,1.324,45,0.666,46,0.054,47,1.407,48,1.835,49,1.791,50,4.388,54,3.142,55,3.286,59,3.286,60,3.286,61,0.004,62,0.004,65,1.174,153,3.854,155,4.626,188,4.503,1678,5.659,1679,6.302]],["title/guards/HmacInviteGuard.html",[153,3.156,1680,4.028]],["body/guards/HmacInviteGuard.html",[0,0.278,3,0.034,4,0.034,5,0.034,9,0.052,11,0.911,13,1.162,16,0.862,20,1.177,26,0.808,35,1.025,36,0.005,37,0.726,38,0.123,39,0.77,40,0.771,41,1.74,42,2.293,43,0.045,44,1.22,45,0.728,46,0.034,51,1.827,61,0.003,62,0.003,65,0.734,66,1.03,69,2.523,71,0.658,73,0.813,74,1.682,84,0.966,85,0.375,89,0.838,91,1.452,94,1.796,95,1.653,105,1.039,123,3.429,131,1.888,134,3.1,155,2.273,158,2.668,160,0.97,165,2.28,166,4.804,167,2.273,173,3.667,174,4.514,176,1.74,183,1.448,188,3.87,189,2.41,190,2.055,192,1.101,194,2.361,199,2.076,200,1.284,202,2.576,203,2.212,204,2.489,207,1.368,215,1.884,220,2.361,222,1.546,223,1.292,284,4.107,296,2.919,297,1.777,305,1.598,314,3.274,394,1.884,397,2.523,437,2.055,441,4.107,442,2.919,443,2.919,444,2.787,445,2.787,462,2.919,470,3.539,502,3.796,503,2.675,507,0.818,521,4.824,557,3.334,684,2.919,729,2.787,734,3.274,741,3.274,1074,2.576,1160,4.281,1163,2.339,1164,1.744,1372,4.3,1582,3.1,1599,5.382,1601,3.076,1680,4.533,1681,7.282,1682,3.539,1683,5.214,1684,4.824,1685,5.805,1686,3.94,1687,3.94,1688,5.214,1689,3.94,1690,5.214,1691,6.319,1692,3.94,1693,3.539,1694,3.539,1695,5.214,1696,3.539,1697,3.539,1698,2.787,1699,3.539,1700,3.274,1701,5.214,1702,3.539,1703,3.539,1704,2.787,1705,3.539,1706,3.539,1707,3.539,1708,3.539,1709,3.539,1710,3.539,1711,3.539,1712,3.539,1713,3.539]],["title/classes/HttpAdapter.html",[0,0.247,125,3.259]],["body/classes/HttpAdapter.html",[0,0.316,2,1.118,3,0.057,4,0.057,5,0.057,9,0.088,16,0.75,35,0.892,36,0.005,37,0.631,38,0.107,39,0.67,40,0.74,41,1.671,43,0.094,45,0.999,46,0.078,61,0.004,62,0.004,73,1.159,84,0.927,125,5.224,176,1.892,220,2.054,281,3.282,397,3.594,681,4.492,696,3.3,995,4.492,1405,7.428,1406,6.457,1407,7,1410,4.902,1413,7.379,1418,4.902,1429,4.681,1714,5.499,1715,6.618,1716,4.902,1717,4.902,1718,5.499,1719,5.499]],["title/modules/HttpModule.html",[111,2.755,262,3.822]],["body/modules/HttpModule.html",[0,0.211,3,0.038,4,0.038,5,0.038,36,0.005,46,0.038,61,0.003,62,0.003,85,0.408,89,0.939,111,3.925,112,6.534,113,2.699,114,2.699,115,2.885,116,2.885,117,2.787,118,4.807,119,2.885,126,4.121,127,2.885,128,2.885,144,3.121,145,3.121,147,6.109,148,4.121,170,4.121,184,2.787,262,7.75,264,5.66,450,1.99,673,6.109,698,6.24,699,3.963,704,6.24,705,3.963,711,5.988,712,3.667,1072,5.988,1146,5.571,1506,3.268,1575,6.534,1615,6.24,1625,6.24,1660,6.24,1720,3.963,1721,3.963,1722,3.963,1723,6.534,1724,6.534,1725,4.413,1726,6.109,1727,6.109,1728,4.413,1729,4.413,1730,3.963,1731,3.963,1732,4.413,1733,4.413,1734,4.413,1735,4.413,1736,4.413,1737,3.963,1738,6.303,1739,4.413,1740,3.445,1741,6.303,1742,3.445,1743,4.413,1744,3.963,1745,4.413,1746,4.413,1747,3.963,1748,4.413,1749,3.963,1750,4.413,1751,4.413]],["title/interfaces/IAccessTokenBody.html",[43,0.059,185,3.259]],["body/interfaces/IAccessTokenBody.html",[3,0.054,4,0.054,5,0.054,9,0.083,10,0.941,36,0.005,37,0.595,38,0.167,41,2.54,43,0.091,45,1.095,46,0.076,61,0.004,62,0.004,131,1.716,179,4.474,185,5.033,591,2.53,592,2.448,596,4.823,627,2.982,1087,4.235,1088,4.235,1090,3.18,1091,6.488,1095,7.079,1111,4.235,1113,4.079,1190,3.414,1588,5.902,1635,7.462,1752,1.28,1753,5.184,1754,5.184,1755,5.184]],["title/interfaces/IBodyProps.html",[43,0.059,530,4.287]],["body/interfaces/IBodyProps.html",[0,0.392,3,0.047,4,0.047,5,0.047,8,2.837,9,0.072,10,0.859,11,0.852,18,1.576,20,1.1,36,0.005,37,0.694,38,0.133,40,0.98,41,2.071,43,0.062,44,2.019,45,0.867,46,0.047,61,0.003,62,0.003,65,1.011,66,0.963,67,2.766,68,2.447,71,0.906,72,3.55,74,2.317,76,2.901,78,2.317,79,2.766,80,2.595,81,3.55,85,0.347,86,2.402,87,2.447,89,1.154,90,3.279,91,2,93,1.708,94,1.603,95,2.277,96,2.649,97,2.649,98,2.595,100,2.402,103,2.494,104,2.706,105,1.12,106,2.83,107,4.252,108,2.83,109,2.706,110,2.83,181,4.937,392,4.084,397,2.358,523,4.02,524,4.874,528,4.874,530,7.282,531,4.874,532,4.237,533,3.428,534,6.816,535,4.874,536,4.874,537,4.874,538,4.874,539,4.874,540,4.874,541,5.387,542,6.532,543,4.509,544,4.874,545,4.237,546,3.319,547,4.874,1752,1.113]],["title/interfaces/ICheckCep.html",[43,0.059,410,3.65]],["body/interfaces/ICheckCep.html",[0,0.316,3,0.057,4,0.057,5,0.057,9,0.088,10,0.975,36,0.005,38,0.16,43,0.075,45,1.125,46,0.071,61,0.004,62,0.004,176,1.51,281,2.867,344,3.766,405,4.037,406,5.928,408,4.889,410,5.841,411,6.994,412,6.994,413,6.994,414,6.994,415,6.994,1752,1.354]],["title/interfaces/IClass.html",[43,0.059,1380,4.028]],["body/interfaces/IClass.html",[3,0.068,4,0.068,5,0.068,36,0.004,43,0.091,46,0.068,61,0.004,62,0.004,200,1.479,1380,7.208,1384,6.599,1752,1.629,1756,7.941,1757,7.941]],["title/interfaces/IClassToRawObject.html",[43,0.059,1758,4.287]],["body/interfaces/IClassToRawObject.html",[0,0.354,3,0.048,4,0.048,5,0.048,9,0.074,10,0.874,36,0.005,38,0.149,40,0.828,41,2.099,43,0.064,45,1.051,46,0.048,47,1.653,48,1.694,49,1.653,51,2.329,61,0.003,62,0.003,85,0.221,105,1.011,200,1.038,226,3.152,331,4.127,351,2.533,387,2.546,435,4.32,438,3.049,448,5.06,450,4.273,507,1.914,591,3.843,627,3.111,660,3.773,752,2.814,758,4.051,759,2.845,760,3.276,762,2.298,765,2.512,775,2.512,779,2.975,787,2.118,789,2.84,903,3.408,929,3.408,1752,1.143,1758,7.359,1759,5.004,1760,4.35,1761,6.648,1762,4.63,1763,5.25,1764,5.004,1765,4.127,1766,3.952,1767,4.127]],["title/interfaces/ICondominiumRelUserInObject.html",[43,0.059,926,4.287]],["body/interfaces/ICondominiumRelUserInObject.html",[0,0.228,3,0.041,4,0.041,5,0.041,9,0.063,10,0.787,20,1.35,23,1.746,36,0.005,38,0.153,39,0.916,40,0.929,41,2.392,43,0.054,45,1.077,46,0.066,47,1.488,48,1.525,49,1.488,61,0.003,62,0.003,66,1.182,85,0.189,105,0.91,160,1.641,200,0.889,207,3.142,224,2.947,226,3.01,230,4.417,257,1.76,327,4.417,351,2.843,387,2.041,507,1.967,592,3.551,627,3.108,662,2.49,703,3.669,752,2.533,759,2.28,762,3.165,765,3.46,777,2.834,782,2.702,783,3.955,784,3.475,785,2.834,787,1.815,789,2.434,865,5.465,883,4.523,900,4.357,918,3.558,923,3.377,924,3.967,926,6.377,929,2.92,930,3.016,931,3.728,932,3.967,933,3.728,1752,0.979]],["title/interfaces/ICondominiumRelUserProps.html",[43,0.059,846,4.028]],["body/interfaces/ICondominiumRelUserProps.html",[0,0.172,3,0.031,4,0.031,5,0.031,9,0.048,10,0.64,11,0.563,14,1.432,36,0.005,38,0.152,39,0.735,40,0.951,41,1.834,42,2.416,43,0.062,45,0.899,46,0.063,61,0.002,62,0.002,71,0.599,85,0.215,94,0.702,105,1.224,167,1.367,191,2.873,200,1.009,207,3.112,223,1.177,224,2.63,226,2.981,230,4.796,232,1.56,245,2.437,246,2.354,247,1.48,249,1.506,256,2.196,327,4.764,332,2.437,338,2.125,394,1.716,507,1.125,587,2.071,588,1.83,589,1.964,592,3.516,625,1.917,626,1.917,627,3.277,628,3.214,629,3.482,636,1.83,643,3.124,653,3.482,661,5.291,662,1.872,664,5.176,703,3.928,842,2.803,843,4.228,846,5.092,865,5.485,874,2.803,875,4.831,876,2.659,877,2.983,878,4.228,879,2.983,880,2.983,881,2.272,882,2.983,883,3.676,884,2.539,885,2.803,886,2.983,887,2.983,888,2.983,889,2.983,890,6.035,891,2.983,892,6.477,893,2.983,894,2.983,895,2.983,896,4.5,897,4.613,898,2.659,899,2.983,900,2.347,901,2.983,902,2.983,903,2.196,904,2.983,905,4.5,906,2.983,907,2.983,908,4.012,909,2.983,910,2.983,911,2.983,1752,0.736]],["title/interfaces/IConvertToObject.html",[43,0.059,780,3.156]],["body/interfaces/IConvertToObject.html",[0,0.241,3,0.043,4,0.043,5,0.043,9,0.067,10,0.816,20,1.401,23,1.786,36,0.005,37,0.878,38,0.155,39,0.931,40,0.773,41,1.993,43,0.057,45,1.06,46,0.06,47,1.543,48,1.581,49,1.543,61,0.003,62,0.003,66,1.226,85,0.199,105,0.944,160,1.702,200,0.937,211,3.564,344,3.669,351,2.908,356,2.313,361,3.998,387,2.117,507,1.849,556,3.627,590,5.307,591,3.73,592,3.61,627,3.443,660,3.523,662,3.604,701,3.729,752,2.627,759,2.365,762,3.255,765,3.559,766,5.119,769,3.729,770,3.729,771,3.729,772,3.18,775,2.27,776,4.183,779,2.688,780,4.828,782,2.803,783,4.102,784,3.604,785,2.988,787,1.913,788,3.729,789,2.566,790,4.183,791,4.183,792,3.561,793,4.183,1752,1.033]],["title/interfaces/IConvertToObject-1.html",[43,0.049,215,2.063,780,2.639]],["body/interfaces/IConvertToObject-1.html",[0,0.254,3,0.046,4,0.046,5,0.046,9,0.071,10,0.848,20,1.455,23,1.827,36,0.005,38,0.164,39,0.88,40,0.908,41,2.362,43,0.061,45,1.041,46,0.062,47,1.603,48,1.643,49,1.603,61,0.003,62,0.003,66,1.274,85,0.211,105,0.98,131,1.955,160,1.311,200,0.991,207,3.152,351,2.976,387,2.199,450,4.093,507,1.885,557,3.305,627,3.04,752,2.729,759,2.457,762,3.35,765,3.663,775,2.4,779,2.842,780,4.969,782,2.911,783,4.261,784,3.744,785,3.159,787,2.023,788,3.943,789,2.713,930,3.362,1164,2.356,1493,5.734,1582,3.833,1596,3.071,1752,1.092,1766,2.842,1768,4.423,1769,5.318,1770,4.156,1771,3.765,1772,4.423]],["title/interfaces/IConvertToObject-2.html",[43,0.049,394,2.063,780,2.639]],["body/interfaces/IConvertToObject-2.html",[0,0.251,3,0.045,4,0.045,5,0.045,9,0.07,10,0.84,20,1.441,23,1.816,36,0.005,38,0.146,39,0.875,40,0.795,41,2.182,43,0.081,45,1.067,46,0.061,47,1.587,48,1.626,49,1.587,61,0.003,62,0.003,66,1.261,85,0.208,105,0.971,160,1.751,200,0.977,226,3.168,351,2.958,387,2.177,435,4.364,438,2.87,448,5.085,450,4.294,507,1.934,591,3.862,627,3.234,660,3.623,752,2.702,759,2.433,762,3.325,765,3.635,775,2.365,779,2.8,780,4.931,782,2.882,783,4.219,784,3.706,785,3.113,787,1.994,789,2.673,903,3.208,929,3.208,1752,1.076,1765,3.885,1766,3.795,1767,3.885,1773,4.358,1774,5.55,1775,4.095]],["title/interfaces/ICreateOTPInput.html",[43,0.059,1776,3.502]],["body/interfaces/ICreateOTPInput.html",[0,0.319,3,0.057,4,0.057,5,0.057,9,0.089,10,0.982,36,0.005,38,0.134,43,0.103,46,0.082,61,0.004,62,0.004,85,0.329,131,2.251,176,2.072,192,1.864,281,3.291,428,3.651,435,4.776,438,3.651,813,2.848,816,2.661,1752,1.368,1776,6.146,1777,5.209,1778,5.642,1779,5.642,1780,2.899]],["title/interfaces/ICryptCompare.html",[43,0.059,300,3.65]],["body/interfaces/ICryptCompare.html",[0,0.332,3,0.06,4,0.06,5,0.06,9,0.092,10,1.007,36,0.005,38,0.138,43,0.097,45,1.094,46,0.079,61,0.004,62,0.004,123,3.133,176,2.11,220,2.157,281,3.338,299,5.147,300,6.523,303,5.147,305,4.001,306,5.425,307,6.314,459,7.121,1169,5.774,1752,1.425]],["title/interfaces/ICryptHmac.html",[43,0.059,307,3.822]],["body/interfaces/ICryptHmac.html",[0,0.332,3,0.06,4,0.06,5,0.06,9,0.092,10,1.007,36,0.005,38,0.138,43,0.097,45,1.094,46,0.079,61,0.004,62,0.004,123,3.133,176,2.11,220,2.984,281,3.338,299,5.147,300,6.03,303,5.147,305,4.001,306,5.425,307,6.83,459,5.147,1169,5.774,1752,1.425]],["title/interfaces/IDeleteOTPInput.html",[43,0.059,1779,3.502]],["body/interfaces/IDeleteOTPInput.html",[0,0.325,3,0.059,4,0.059,5,0.059,9,0.09,10,0.993,36,0.005,38,0.11,43,0.104,46,0.082,61,0.004,62,0.004,85,0.333,131,2.257,176,2.089,192,1.899,281,3.313,428,3.72,435,4.279,438,3.72,813,2.902,816,2.711,1752,1.395,1776,5.709,1777,5.308,1778,5.709,1779,6.198,1780,2.954]],["title/interfaces/IFindOTPInput.html",[43,0.059,1778,3.502]],["body/interfaces/IFindOTPInput.html",[0,0.325,3,0.059,4,0.059,5,0.059,9,0.09,10,0.993,36,0.005,38,0.11,43,0.104,46,0.082,61,0.004,62,0.004,85,0.333,131,2.257,176,2.089,192,1.899,281,3.313,428,3.72,435,4.279,438,3.72,813,2.902,816,2.711,1752,1.395,1776,5.709,1777,5.308,1778,6.198,1779,5.709,1780,2.954]],["title/interfaces/IFirestoreErrors.html",[43,0.059,1220,4.287]],["body/interfaces/IFirestoreErrors.html",[0,0.205,3,0.037,4,0.037,5,0.037,8,1.918,9,0.057,10,0.73,11,0.969,12,4.917,18,1.246,20,0.87,23,0.902,26,1.624,36,0.005,37,0.938,38,0.128,41,1.828,43,0.049,44,2.067,45,0.924,46,0.037,61,0.003,62,0.003,65,1.151,66,0.761,67,2.187,68,1.935,71,0.716,72,3.016,74,1.832,76,2.464,78,1.832,79,2.187,80,2.052,81,3.016,85,0.314,86,1.899,87,1.935,89,0.913,90,2.785,91,1.582,93,1.35,94,1.415,95,1.8,96,2.095,97,2.095,98,2.954,99,3.299,100,2.734,102,2.41,103,2.839,104,3.08,105,0.989,106,2.238,107,2.734,108,2.238,109,2.14,110,2.238,161,1.631,167,1.084,211,1.8,212,2.561,216,3.09,455,4.184,759,1.469,827,3.564,828,4.568,838,2.291,839,3.978,840,2.913,949,1.427,1075,4.84,1186,2.913,1215,3.179,1216,3.854,1217,3.854,1218,2.625,1220,6.015,1221,5.47,1222,3.351,1223,6.501,1224,3.961,1225,5.362,1226,4.064,1227,3.566,1228,3.036,1229,5.001,1230,3.854,1231,5.696,1232,3.854,1233,3.566,1234,3.036,1235,3.854,1236,3.351,1237,3.854,1240,3.854,1241,3.854,1242,2.625,1243,2.806,1244,2.806,1245,2.476,1246,4.37,1247,3.564,1248,2.476,1249,2.476,1752,0.88]],["title/interfaces/IGatewayError.html",[43,0.059,1539,4.287]],["body/interfaces/IGatewayError.html",[0,0.231,3,0.042,4,0.042,5,0.042,8,2.085,9,0.064,10,0.793,11,0.758,12,4.629,18,1.403,20,0.979,23,1.015,26,0.991,36,0.005,37,0.906,38,0.135,41,1.95,43,0.055,44,1.997,45,0.96,46,0.042,61,0.003,62,0.003,65,1.251,66,0.857,67,2.462,68,2.178,69,2.099,71,0.806,72,3.279,74,2.062,76,2.679,78,2.062,79,2.462,80,2.309,81,3.279,85,0.331,86,2.138,87,2.178,89,1.027,90,3.028,91,1.78,93,1.52,94,1.509,95,2.026,96,2.358,97,2.358,98,3.212,99,3.586,100,2.973,102,2.712,103,3.087,104,3.349,105,1.055,106,2.519,107,2.973,108,3.502,109,2.408,110,3.502,159,2.062,167,1.219,212,1.282,546,2.954,759,2.299,805,4.751,839,3.745,947,1.677,1035,3.158,1218,2.954,1221,2.867,1224,2.643,1242,2.954,1243,3.158,1244,3.158,1245,2.786,1247,4.455,1248,2.786,1249,2.786,1286,2.579,1400,2.408,1535,3.578,1536,4.338,1537,3.771,1539,6.417,1540,4.338,1541,3.771,1542,4.338,1543,4.338,1544,4.338,1545,4.338,1546,4.338,1547,4.338,1548,3.578,1549,4.338,1550,4.338,1551,4.338,1552,4.338,1553,4.338,1554,4.338,1555,4.013,1557,4.559,1559,5.666,1560,4.338,1561,4.338,1562,6.032,1563,6.032,1752,0.991]],["title/interfaces/IGenerateInviteKeyProps.html",[43,0.059,1781,4.287]],["body/interfaces/IGenerateInviteKeyProps.html",[3,0.054,4,0.054,5,0.054,9,0.083,10,0.944,26,1.286,36,0.005,38,0.15,39,0.938,43,0.072,45,0.663,46,0.069,51,1.973,61,0.004,62,0.004,66,1.112,85,0.248,94,1.226,105,0.856,131,2.168,161,2.383,180,4.074,191,3.006,192,1.752,207,3.218,211,2.63,220,2.481,489,4.435,507,1.924,519,4.644,703,3.758,729,6.555,759,2.146,787,2.383,1074,4.099,1400,3.986,1597,5.21,1664,4.895,1752,1.286,1781,7.312,1782,5.631,1783,5.631,1784,5.21,1785,5.21,1786,5.631,1787,6.27,1788,6.27]],["title/interfaces/IHttpClientCall.html",[43,0.059,1407,3.822]],["body/interfaces/IHttpClientCall.html",[0,0.285,3,0.051,4,0.051,5,0.051,9,0.079,10,0.913,36,0.005,38,0.156,39,0.92,41,1.504,43,0.088,45,1.053,46,0.074,61,0.003,62,0.003,125,3.762,176,1.363,220,1.849,281,2.685,397,4.094,681,5.83,696,4.282,995,6.17,1406,4.651,1407,6.361,1410,4.412,1413,7.863,1418,4.412,1429,6.43,1588,5.729,1714,4.949,1716,6.361,1717,6.361,1718,7.136,1719,7.136,1752,1.222]],["title/interfaces/IHttpClientCallReturn.html",[43,0.059,1410,3.822]],["body/interfaces/IHttpClientCallReturn.html",[0,0.316,3,0.057,4,0.057,5,0.057,9,0.088,10,0.975,36,0.005,38,0.146,41,2.275,43,0.094,45,0.998,46,0.078,61,0.004,62,0.004,125,4.169,176,1.51,220,2.049,281,2.867,397,4.224,681,4.481,696,3.291,995,4.481,1406,5.154,1407,6.116,1410,6.116,1413,8.01,1418,6.994,1429,4.669,1714,5.485,1716,4.889,1717,4.889,1718,5.485,1719,5.485,1752,1.354]],["title/interfaces/IInMemoryContainerProps.html",[43,0.059,1789,4.028]],["body/interfaces/IInMemoryContainerProps.html",[0,0.288,3,0.052,4,0.052,5,0.052,9,0.08,10,0.921,36,0.005,38,0.148,43,0.089,46,0.067,61,0.003,62,0.003,85,0.362,218,2.444,224,3.19,257,2.222,291,1.923,356,2.77,556,3.898,557,3.471,588,3.073,596,3.143,636,3.073,1164,2.668,1752,1.237,1789,6.744,1790,5.009,1791,8.048,1792,7.562,1793,8.048,1794,8.048,1795,6.459,1796,4.092,1797,4.092,1798,5.009]],["title/interfaces/IInMemoryUserContainer.html",[43,0.059,1795,3.65]],["body/interfaces/IInMemoryUserContainer.html",[0,0.302,3,0.054,4,0.054,5,0.054,9,0.084,10,0.949,36,0.005,38,0.143,43,0.092,46,0.069,61,0.004,62,0.004,85,0.368,218,2.775,224,2.979,257,2.328,291,2.015,356,2.903,556,3.429,557,3.053,588,3.22,596,3.294,636,3.22,1164,2.796,1588,5.949,1752,1.296,1789,6.271,1790,5.249,1791,7.337,1792,6.895,1793,7.337,1794,7.337,1795,6.246,1796,4.288,1797,4.288,1798,5.249]],["title/interfaces/IIncomingFirestoreCondominiumData.html",[43,0.059,756,3.822]],["body/interfaces/IIncomingFirestoreCondominiumData.html",[0,0.246,3,0.044,4,0.044,5,0.044,9,0.068,10,0.829,36,0.005,37,0.856,38,0.153,40,1.003,41,2.016,43,0.059,45,1.064,46,0.06,47,1.567,48,1.606,49,1.567,51,2.208,61,0.003,62,0.003,85,0.316,105,0.958,143,2.461,200,0.959,344,3.579,351,2.402,356,2.366,361,3.9,387,2.836,507,1.781,556,3.409,566,4.186,590,5.177,591,3.755,592,3.634,702,4.019,750,4.277,751,4.623,752,2.668,753,3.813,754,3.641,756,6.352,758,3.841,759,2.935,760,3.795,761,4.589,762,2.123,765,2.321,766,5.198,767,5.467,768,2.684,769,3.813,770,3.813,771,3.813,772,3.252,773,5.48,774,4.964,775,2.321,1752,1.056]],["title/interfaces/IIncomingFirestoreCondominiumRelUserData.html",[43,0.059,915,3.822]],["body/interfaces/IIncomingFirestoreCondominiumRelUserData.html",[0,0.24,3,0.043,4,0.043,5,0.043,9,0.067,10,0.815,36,0.005,38,0.155,40,1.028,41,2.321,43,0.057,45,1.06,46,0.068,47,1.541,48,1.579,49,1.541,51,2.172,61,0.003,62,0.003,85,0.336,105,0.943,143,2.402,200,0.936,207,2.948,224,2.66,226,2.824,230,4.144,257,1.851,327,4.144,351,2.362,387,2.816,507,1.909,566,4.144,592,3.607,703,3.442,752,2.624,753,3.721,754,3.554,758,3.777,759,2.905,760,3.757,761,4.513,762,2.072,765,2.265,767,4.897,768,2.62,774,4.882,865,5.303,912,3.922,913,4.174,915,6.288,918,3.685,919,5.735,920,4.512,921,2.821,922,4.174,1752,1.031]],["title/interfaces/IIncomingFirestoreInviteData.html",[43,0.059,1487,3.822]],["body/interfaces/IIncomingFirestoreInviteData.html",[0,0.257,3,0.046,4,0.046,5,0.046,9,0.071,10,0.853,36,0.005,38,0.161,40,1.018,41,2.368,43,0.061,45,1.043,46,0.062,47,1.612,48,1.652,49,1.612,51,2.272,61,0.003,62,0.003,85,0.323,105,0.986,131,1.879,143,2.567,200,1,207,3.03,351,2.471,387,2.872,450,4.105,507,1.812,557,3.101,566,4.259,752,2.745,754,3.798,755,4.461,758,3.951,759,2.986,760,3.862,761,4.721,762,2.214,765,2.421,767,5.033,768,2.8,775,2.421,1164,2.376,1487,6.463,1493,5.923,1752,1.101,1766,2.867,1769,5.348,1799,4.822,1800,4.461,1801,4.192,1802,6.485]],["title/interfaces/IIncomingFirestoreUserData.html",[43,0.059,1497,3.822]],["body/interfaces/IIncomingFirestoreUserData.html",[0,0.246,3,0.044,4,0.044,5,0.044,9,0.068,10,0.829,36,0.005,37,0.818,38,0.156,40,1.003,43,0.059,45,1.095,46,0.06,47,1.567,48,1.606,49,1.567,51,2.208,61,0.003,62,0.003,85,0.316,105,0.958,131,1.847,143,2.461,200,0.959,218,2.26,291,1.642,351,2.402,368,3.867,387,2.836,474,4.186,507,1.781,566,4.186,591,3.755,592,3.634,752,2.668,758,3.841,759,2.935,760,3.795,761,4.589,762,2.123,765,2.321,767,5.467,768,2.684,773,5.48,774,4.964,775,2.321,1090,4.371,1497,6.352,1752,1.056,1803,4.623,1804,5.198,1805,4.019,1806,4.019,1807,4.623,1808,4.623]],["title/interfaces/IIndexProps.html",[43,0.059,1809,4.287]],["body/interfaces/IIndexProps.html",[0,0.297,3,0.053,4,0.053,5,0.053,8,1.927,9,0.106,10,0.938,11,0.974,14,2.476,20,1.258,26,1.273,36,0.005,38,0.1,40,0.694,43,0.071,44,1.305,46,0.068,51,1.953,61,0.004,62,0.004,66,1.101,69,2.698,85,0.315,105,1.085,143,2.968,158,2.853,160,1.529,167,1.567,199,2.22,200,1.156,351,2.125,566,3.03,588,3.164,636,3.164,653,3.314,765,2.799,768,3.237,827,4.582,828,3.581,839,2.56,987,7.621,989,4.847,1209,4.598,1211,4.598,1372,4.598,1752,1.273,1809,7.929,1810,5.575,1811,8.766,1812,5.575,1813,5.575,1814,5.575,1815,5.575,1816,5.575,1817,5.575,1818,5.575,1819,5.575,1820,5.575]],["title/interfaces/IInputCondominiumRelUser.html",[43,0.059,843,4.028]],["body/interfaces/IInputCondominiumRelUser.html",[0,0.17,3,0.031,4,0.031,5,0.031,9,0.047,10,0.634,11,0.557,14,1.415,36,0.005,38,0.152,39,0.883,40,0.947,41,2.203,42,2.402,43,0.061,45,1.003,46,0.062,61,0.002,62,0.002,71,0.592,85,0.213,94,0.694,105,1.22,167,1.356,191,2.699,200,1,207,3.102,223,1.164,224,2.617,226,2.971,230,4.718,232,1.542,245,2.409,246,2.333,247,1.464,249,1.489,256,2.171,327,4.677,332,2.409,338,2.107,394,1.697,507,1.115,587,2.047,588,1.809,589,1.942,592,3.505,625,1.895,626,1.895,627,3.266,628,3.187,629,3.458,636,1.809,643,3.097,653,3.458,661,5.265,662,1.851,664,5.154,703,3.847,842,2.771,843,5.057,846,4.192,865,5.576,874,2.771,875,4.797,876,2.629,877,2.949,878,4.192,879,2.949,880,2.949,881,2.252,882,2.949,883,3.645,884,2.51,885,2.771,886,2.949,887,2.949,888,2.949,889,2.949,890,6,891,2.949,892,6.445,893,2.949,894,2.949,895,2.949,896,4.462,897,4.581,898,2.629,899,2.949,900,2.32,901,2.949,902,2.949,903,2.171,904,2.949,905,4.462,906,2.949,907,2.949,908,3.977,909,2.949,910,2.949,911,2.949,1752,0.728]],["title/interfaces/IInputPropsInvite.html",[43,0.059,1821,4.028]],["body/interfaces/IInputPropsInvite.html",[0,0.23,3,0.041,4,0.041,5,0.041,9,0.064,10,0.791,11,1.051,14,1.919,15,1.713,36,0.005,38,0.162,39,0.678,41,2.396,43,0.076,45,0.984,46,0.066,61,0.003,62,0.003,71,0.803,85,0.265,105,1.296,131,2.124,167,1.691,191,2.647,200,1.689,207,3.296,247,1.984,249,2.018,338,2.629,450,4.279,507,1.6,557,3.168,587,2.775,588,2.452,589,2.633,625,2.569,626,2.569,627,3.279,636,2.452,643,3.864,644,3.266,645,3.266,652,3.039,703,3.125,897,3.403,1493,5.995,1752,0.987,1766,4.115,1771,4.739,1821,6.017,1822,3.998,1823,3.564,1824,3.998,1825,3.998,1826,3.998,1827,3.564,1828,4.962,1829,3.998,1830,3.998,1831,5.566,1832,3.998,1833,3.998,1834,3.998,1835,3.998,1836,3.564,1837,3.564,1838,3.998,1839,3.998]],["title/interfaces/ILoggerDefaultProps.html",[43,0.059,1303,3.822]],["body/interfaces/ILoggerDefaultProps.html",[0,0.27,3,0.049,4,0.049,5,0.049,9,0.075,10,0.882,36,0.005,37,0.85,38,0.144,43,0.064,45,1.025,46,0.077,56,5.532,61,0.003,62,0.003,65,1.658,76,2.252,86,3.941,100,4.604,103,2.595,146,4.433,176,2.254,180,3.807,279,5.283,281,3.461,976,4.883,1190,3.09,1206,5.532,1302,4.409,1303,7.297,1306,6.595,1308,4.409,1314,4.409,1316,4.409,1318,4.409,1572,5.532,1752,1.158,1840,4.409,1841,6.206,1842,4.693,1843,4.693,1844,3.692,1845,4.183,1846,5.532,1847,5.532,1848,5.072,1849,5.072,1850,5.072]],["title/interfaces/IOTPInObject.html",[43,0.059,1774,4.028]],["body/interfaces/IOTPInObject.html",[0,0.253,3,0.046,4,0.046,5,0.046,9,0.07,10,0.844,20,1.449,23,1.823,36,0.005,38,0.146,40,0.799,41,2.19,43,0.082,45,1.068,46,0.062,47,1.596,48,1.636,49,1.596,61,0.003,62,0.003,66,1.268,85,0.209,105,0.976,160,1.761,200,0.985,226,3.175,351,2.968,387,2.189,435,4.375,438,2.895,448,5.096,450,4.304,507,1.939,591,3.87,627,3.246,660,3.644,752,2.717,759,2.447,762,3.339,765,3.651,775,2.385,779,2.824,780,4.372,782,2.899,783,4.243,784,3.728,785,3.139,787,2.011,789,2.696,903,3.235,929,3.235,1752,1.085,1765,3.918,1766,3.817,1767,3.918,1773,4.395,1774,6.322,1775,4.13]],["title/interfaces/IOTPProps.html",[43,0.059,1851,4.287]],["body/interfaces/IOTPProps.html",[0,0.242,3,0.044,4,0.044,5,0.044,9,0.067,10,0.819,11,1.088,14,2.016,36,0.005,38,0.144,40,0.565,41,2.251,43,0.058,45,0.836,46,0.06,61,0.003,62,0.003,71,0.844,85,0.275,105,1.288,167,1.75,191,2.85,200,1.585,226,3.195,232,2.196,233,2.279,247,2.084,338,2.72,394,2.417,435,3.988,448,5.395,450,4.331,451,3.192,452,3.192,507,1.439,587,2.916,588,2.576,589,2.766,591,3.895,625,2.699,626,2.699,627,3.447,636,2.576,643,3.998,650,3.575,652,3.192,659,4.903,660,3.533,875,3.744,876,3.744,908,3.744,1752,1.037,1766,3.701,1828,3.744,1837,5.134,1851,6.572,1852,4.2,1853,5.759,1854,4.539,1855,4.539,1856,4.539,1857,4.539,1858,4.539,1859,4.539,1860,4.539,1861,4.539]],["title/interfaces/IPrismaError.html",[43,0.059,1862,4.287]],["body/interfaces/IPrismaError.html",[0,0.225,3,0.04,4,0.04,5,0.04,8,2.047,9,0.063,10,0.779,11,0.738,12,4.81,18,1.915,20,0.953,26,1.352,36,0.005,37,0.927,38,0.133,41,1.922,43,0.054,44,2.042,45,1.014,46,0.04,61,0.003,62,0.003,65,1.228,66,0.834,67,2.397,68,2.12,71,0.785,72,3.218,74,2.814,76,2.63,78,2.008,80,2.249,81,3.218,83,2.713,85,0.327,86,2.081,87,2.12,89,1,90,2.973,91,1.733,93,1.48,94,1.488,95,1.973,96,2.296,97,2.296,98,3.152,99,2.511,100,2.918,102,2.641,103,3.03,104,3.287,105,1.04,106,2.452,107,2.918,108,2.452,109,2.345,110,2.452,167,1.187,212,2.455,216,2.008,448,5.039,455,4.114,799,3.702,806,3.075,1061,2.713,1075,3.803,1218,2.877,1224,2.574,1225,4.883,1226,2.641,1229,4.164,1231,4.475,1242,2.877,1245,2.713,1246,4.664,1247,3.803,1248,2.713,1249,2.713,1279,3.672,1286,2.511,1288,3.192,1431,3.327,1486,5.68,1704,3.327,1752,0.965,1862,6.326,1863,4.224,1864,4.224,1865,3.483,1866,4.224,1867,3.908,1868,4.224,1869,4.224,1870,4.224,1871,4.224,1872,4.224,1873,6.837]],["title/interfaces/IProps.html",[15,1.319,43,0.059]],["body/interfaces/IProps.html",[0,0.208,3,0.037,4,0.037,5,0.037,9,0.058,10,0.737,15,1.865,36,0.005,38,0.07,43,0.05,46,0.037,61,0.003,62,0.003,63,3.397,73,0.61,76,2.489,78,1.858,85,0.409,87,1.962,89,0.926,91,3.332,94,1.558,139,2.845,165,1.961,167,2.217,194,2.619,200,1.162,259,4.414,523,3.223,681,2.954,696,2.17,716,4.622,799,2.443,811,2.748,1007,3.616,1008,3.397,1031,2.661,1215,3.223,1358,3.397,1388,3.223,1535,3.223,1643,3.223,1671,3.397,1716,3.223,1717,3.223,1742,3.397,1752,0.893,1763,2.748,1865,3.223,1874,3.908,1875,7.156,1876,3.908,1877,3.908,1878,5.604,1879,3.616,1880,3.908,1881,3.397,1882,3.908,1883,5.604,1884,3.908,1885,3.223,1886,3.908,1887,3.908,1888,3.908,1889,3.908,1890,3.908,1891,3.908,1892,3.397,1893,3.908,1894,3.397,1895,3.908,1896,5.604,1897,3.908,1898,3.908,1899,3.908,1900,2.954,1901,3.908,1902,3.908,1903,3.223,1904,3.908,1905,3.908,1906,3.397,1907,5.185,1908,3.908,1909,3.908,1910,5.604,1911,3.908,1912,3.908,1913,3.908,1914,3.908,1915,3.908,1916,3.908,1917,3.908,1918,3.908,1919,3.908,1920,3.908,1921,5.185,1922,3.908,1923,5.604,1924,3.908,1925,3.908,1926,3.908,1927,5.604,1928,3.908,1929,3.908,1930,3.908,1931,3.908,1932,3.908,1933,3.908,1934,3.908,1935,3.908,1936,8.778,1937,3.908,1938,3.908,1939,3.908,1940,3.908,1941,3.908,1942,3.908,1943,3.908,1944,3.908,1945,3.908,1946,3.908,1947,3.908,1948,3.908,1949,3.908,1950,3.908,1951,3.908,1952,3.908,1953,3.908,1954,3.908,1955,3.908,1956,3.908,1957,3.908,1958,3.908,1959,3.908]],["title/interfaces/IProps-1.html",[15,1.103,43,0.049,215,2.063]],["body/interfaces/IProps-1.html",[0,0.376,3,0.053,4,0.053,5,0.053,8,1.899,9,0.081,10,0.929,15,2.224,18,1.777,20,1.24,23,1.285,26,1.614,27,2.254,28,2.035,36,0.005,38,0.099,43,0.07,44,1.285,46,0.053,47,1.366,48,1.399,49,1.366,61,0.003,62,0.003,66,1.085,69,2.658,85,0.312,89,1.301,94,1.538,107,2.707,148,3.999,160,1.938,165,1.644,181,5.904,182,5.082,190,3.19,194,1.899,199,2.187,200,1.139,209,5.082,210,4.776,212,1.624,246,2.658,284,4.327,305,2.48,351,2.093,392,4.418,396,3.864,397,3.99,519,4.531,541,4.531,784,3.19,949,2.617,1377,4.152,1462,4.327,1752,1.255,1960,5.493,1961,5.493,1962,5.082,1963,5.493,1964,5.493,1965,5.493,1966,5.082,1967,5.493,1968,5.493,1969,5.082,1970,6.117,1971,7.868,1972,6.117,1973,6.117,1974,6.117,1975,6.117]],["title/interfaces/IProps-10.html",[15,1.103,43,0.049,276,2.821]],["body/interfaces/IProps-10.html",[0,0.247,3,0.044,4,0.044,5,0.044,9,0.069,10,0.83,11,1.103,13,1.033,15,2.044,36,0.005,38,0.139,39,0.869,40,0.577,42,2.338,43,0.059,46,0.044,61,0.003,62,0.003,71,0.861,85,0.382,89,1.097,94,1.562,123,3.169,134,2.754,160,1.27,161,1.961,165,1.387,167,1.774,183,1.753,192,1.441,194,2.182,200,1.309,207,1.791,218,2.801,224,2.896,226,1.716,230,4.777,257,1.901,291,1.646,327,4.777,437,2.69,474,2.518,557,3.669,703,2.092,865,5.346,881,2.164,883,3.502,900,3.373,931,4.028,933,4.028,947,1.791,1059,2.629,1060,2.629,1061,2.976,1062,4.028,1068,3.294,1069,2.518,1146,3.258,1150,4.028,1151,4.028,1152,4.028,1153,4.028,1154,4.028,1158,4.633,1160,3.902,1163,3.062,1164,2.283,1165,4.633,1166,4.633,1167,4.633,1168,4.633,1752,1.058]],["title/interfaces/IProps-11.html",[15,1.103,43,0.049,380,3.196]],["body/interfaces/IProps-11.html",[0,0.288,3,0.052,4,0.052,5,0.052,9,0.08,10,0.921,11,0.946,15,2.208,23,1.267,36,0.005,38,0.126,39,0.789,43,0.069,44,1.267,46,0.052,61,0.003,62,0.003,71,1.006,85,0.375,89,1.282,93,1.897,131,2.122,160,1.485,161,2.291,165,1.621,171,3.502,183,1.944,187,2.882,192,1.684,194,1.871,199,2.156,200,1.123,212,1.6,220,1.871,387,1.846,711,4.092,745,7.562,746,8.048,839,2.486,881,2.529,947,2.093,1059,3.073,1060,3.073,1068,3.653,1069,2.942,1278,5.414,1279,6.085,1282,5.291,1283,4.092,1284,4.707,1285,5.414,1286,3.219,1287,4.707,1288,4.092,1289,5.414,1290,3.941,1291,5.414,1292,4.707,1293,5.414,1752,1.237]],["title/interfaces/IProps-12.html",[15,1.103,43,0.049,1976,4.315]],["body/interfaces/IProps-12.html",[0,0.222,3,0.04,4,0.04,5,0.04,9,0.062,10,0.772,11,1.186,13,0.929,15,1.932,23,0.976,26,1.34,28,1.544,36,0.005,38,0.14,39,0.83,43,0.053,45,0.914,46,0.04,61,0.003,62,0.003,66,1.159,71,0.775,85,0.373,89,0.987,94,1.478,105,0.892,123,3.408,124,4.244,131,2.087,158,2.133,160,1.143,165,1.756,167,2.071,176,1.062,183,1.629,191,2.479,192,1.297,194,2.547,200,0.864,207,3.114,211,1.947,212,1.232,220,2.92,246,2.017,305,1.882,316,2.42,397,2.017,437,2.42,450,2.093,451,2.932,452,4.126,502,4.271,503,3.151,507,0.964,557,3.635,703,3.326,704,3.283,729,6.116,838,2.478,930,2.932,947,1.612,1059,2.366,1060,2.366,1061,2.678,1066,2.54,1068,3.061,1069,2.266,1160,3.69,1163,2.755,1164,2.054,1342,2.932,1347,3.151,1400,2.314,1490,3.857,1581,4.169,1582,3.488,1583,4.169,1590,5.867,1591,3.857,1592,3.857,1593,4.169,1594,3.857,1595,4.169,1596,3.768,1597,3.857,1598,3.624,1599,3.624,1600,4.169,1601,3.624,1602,4.169,1603,4.169,1604,3.624,1605,3.283,1606,3.151,1607,3.151,1608,3.283,1609,4.169,1610,3.283,1611,3.624,1612,3.624,1613,3.624,1614,4.169,1752,0.952]],["title/interfaces/IProps-13.html",[15,1.103,43,0.049,1977,4.315]],["body/interfaces/IProps-13.html",[0,0.238,3,0.043,4,0.043,5,0.043,9,0.066,10,0.81,11,1.231,13,0.996,15,2.005,23,1.776,26,1.406,28,1.654,36,0.005,38,0.111,40,0.556,43,0.057,45,0.526,46,0.043,52,3.042,61,0.003,62,0.003,66,0.882,71,0.83,85,0.372,89,1.058,94,1.733,105,0.679,123,3.091,124,3.849,131,2.116,134,2.656,158,2.286,165,1.843,167,2.134,171,3.18,183,1.709,187,2.378,191,2.679,192,1.389,194,2.624,212,1.32,218,1.408,219,3.142,220,2.435,222,1.952,223,1.631,226,2.812,227,3.142,305,2.017,389,3.684,397,2.162,437,2.594,448,4.513,451,3.142,452,4.33,491,3.684,492,3.883,502,4.482,503,3.376,504,3.883,506,3.376,507,1.033,509,4.133,511,4.133,517,5.352,838,2.656,947,1.727,1059,2.535,1060,2.535,1066,2.722,1068,3.212,1069,2.428,1091,3.376,1342,3.142,1347,3.376,1400,2.48,1596,2.869,1604,3.883,1605,3.518,1606,3.376,1607,3.376,1608,3.518,1610,3.518,1611,3.883,1612,3.883,1613,3.883,1623,3.883,1624,3.376,1625,3.518,1626,4.467,1627,4.467,1628,4.133,1632,4.467,1634,4.467,1635,3.883,1636,3.883,1637,4.467,1638,4.467,1639,4.467,1640,4.467,1641,4.467,1642,4.467,1752,1.02]],["title/interfaces/IProps-14.html",[15,1.103,43,0.049,633,3.052]],["body/interfaces/IProps-14.html",[0,0.276,3,0.05,4,0.05,5,0.05,9,0.077,10,0.895,11,1.328,13,1.157,15,1.938,23,1.214,28,1.922,36,0.005,38,0.137,39,0.767,41,2.268,43,0.066,45,0.949,46,0.05,52,3.534,61,0.003,62,0.003,71,0.964,85,0.386,89,1.229,123,3.418,124,4.257,131,2.156,134,3.085,165,1.553,167,2.268,183,1.891,192,1.614,212,1.534,226,2.988,246,2.511,397,2.511,428,4.149,435,3.553,437,3.013,438,3.162,439,3.778,450,4.051,838,3.085,1068,3.553,1069,2.82,1342,3.649,1347,3.922,1400,2.881,1596,3.333,1605,4.087,1606,3.922,1607,3.922,1608,4.087,1610,4.087,1615,4.087,1616,5.189,1617,5.189,1622,6.809,1623,4.511,1624,3.922,1752,1.185]],["title/interfaces/IProps-15.html",[15,1.103,43,0.049,1978,4.315]],["body/interfaces/IProps-15.html",[0,0.306,3,0.055,4,0.055,5,0.055,9,0.085,10,0.956,11,1.004,15,2.271,36,0.005,38,0.103,43,0.073,46,0.055,51,2.013,61,0.004,62,0.004,71,1.068,85,0.37,89,1.361,93,2.013,94,1.251,105,0.874,160,1.576,161,2.432,162,4.739,165,1.72,171,3.602,183,2.019,187,3.059,191,2.821,192,1.787,194,1.986,226,3.272,242,2.511,881,2.684,947,2.222,1059,3.261,1060,3.261,1068,3.794,1069,3.123,1400,3.19,1548,4.739,1660,4.526,1661,5.746,1662,5.746,1663,5.746,1664,4.995,1665,5.746,1668,7.271,1669,5.746,1670,5.316,1752,1.313]],["title/interfaces/IProps-16.html",[15,1.103,43,0.049,1979,4.315]],["body/interfaces/IProps-16.html",[0,0.283,3,0.051,4,0.051,5,0.051,7,2.949,8,2.39,9,0.079,10,0.909,11,1.208,14,2.359,15,2.188,18,2.486,19,3.237,20,1.199,21,3.158,22,3.015,23,1.618,25,3.924,26,1.756,27,2.18,28,1.967,29,3.237,30,3.237,31,3.237,32,3.237,33,3.237,34,4.213,36,0.005,38,0.138,39,0.779,40,0.661,43,0.067,44,1.905,45,0.905,46,0.066,47,1.321,48,1.353,49,1.321,50,3.237,51,1.861,54,2.949,55,3.084,59,3.084,60,3.084,61,0.003,62,0.003,66,1.049,387,1.811,403,4.381,596,5.025,839,3.974,1190,3.237,1213,3.867,1214,3.867,1221,3.51,1537,4.618,1557,4.015,1559,6.541,1564,4.914,1566,5.311,1568,4.914,1569,4.914,1570,4.914,1571,4.914,1572,4.381,1573,5.311,1574,5.311,1752,1.213]],["title/interfaces/IProps-17.html",[15,1.103,43,0.049,1980,4.315]],["body/interfaces/IProps-17.html",[0,0.231,3,0.042,4,0.042,5,0.042,9,0.064,10,0.793,11,1.054,14,1.926,15,1.974,36,0.005,38,0.162,41,2.293,43,0.077,45,0.816,46,0.066,61,0.003,62,0.003,71,0.806,85,0.266,105,1.297,131,2.16,167,1.696,191,2.815,200,1.691,207,3.299,247,1.992,249,2.026,338,2.636,450,4.283,507,1.603,557,3.173,587,2.786,588,2.462,589,2.643,625,2.579,626,2.579,627,3.283,636,2.462,643,3.875,644,3.279,645,3.279,652,3.051,703,3.557,897,3.417,1493,6.001,1752,0.991,1766,4.123,1771,4.751,1821,5.244,1822,4.013,1823,3.578,1824,4.013,1825,4.013,1826,4.013,1827,3.578,1828,4.975,1829,4.013,1830,4.013,1831,5.581,1832,4.013,1833,4.013,1834,4.013,1835,4.013,1836,3.578,1837,3.578,1838,4.013,1839,4.013]],["title/interfaces/IProps-18.html",[15,1.103,43,0.049,634,3.369]],["body/interfaces/IProps-18.html",[0,0.264,3,0.048,4,0.048,5,0.048,7,2.754,8,2.569,9,0.073,10,0.869,11,0.867,14,2.203,15,2.116,18,2.404,19,3.022,20,1.491,21,3.929,22,3.751,23,1.739,25,3.751,26,1.51,27,2.035,28,1.837,29,3.022,30,3.022,31,3.022,32,3.022,33,3.022,34,4.027,36,0.005,38,0.119,40,0.823,43,0.063,44,1.855,45,0.875,46,0.063,47,1.233,48,1.264,49,1.233,50,3.022,51,1.738,54,2.754,55,2.88,59,2.88,60,2.88,61,0.003,62,0.003,66,0.98,68,2.49,69,2.4,224,1.863,387,2.254,596,3.837,626,2.949,703,2.239,759,1.89,760,2.444,827,3.186,828,5.454,839,3.791,962,2.88,976,3.611,1184,4.589,1186,3.749,1187,3.907,1188,3.749,1189,3.907,1190,3.022,1191,4.589,1192,4.589,1193,4.589,1194,4.589,1195,4.589,1196,4.589,1197,6.114,1198,4.589,1199,3.278,1200,4.648,1201,4.589,1202,4.96,1203,4.589,1204,4.589,1205,4.589,1206,4.091,1207,4.995,1208,4.589,1209,5.451,1210,4.589,1211,4.091,1212,4.96,1213,3.611,1214,3.611,1752,1.133]],["title/interfaces/IProps-19.html",[15,1.103,43,0.049,1981,4.315]],["body/interfaces/IProps-19.html",[0,0.287,3,0.052,4,0.052,5,0.052,7,2.991,8,2.412,9,0.08,10,0.918,11,0.941,14,2.393,15,2.203,18,2.503,19,3.283,20,1.575,21,4.149,22,3.96,23,1.811,25,3.96,26,1.594,27,2.211,28,1.996,29,3.283,30,3.283,31,3.283,32,3.283,33,3.283,34,4.252,36,0.005,38,0.126,40,0.671,43,0.068,44,1.916,45,0.911,46,0.067,47,1.34,48,1.373,49,1.34,50,3.283,51,1.888,54,2.991,55,3.128,59,3.128,60,3.128,61,0.003,62,0.003,66,1.064,68,2.705,69,2.607,387,2.38,759,2.053,760,2.655,839,3.894,1186,4.072,1187,4.244,1188,4.072,1189,4.244,1190,3.283,1199,3.561,1200,3.789,1213,3.923,1214,3.923,1752,1.231,1763,3.789,1846,4.444,1847,4.444,1982,4.985,1983,6.842,1984,4.444,1985,4.244,1986,5.388]],["title/interfaces/IProps-2.html",[15,1.103,43,0.049,394,2.063]],["body/interfaces/IProps-2.html",[0,0.329,3,0.059,4,0.059,5,0.059,7,3.436,8,2.633,9,0.092,10,1.002,11,1.081,14,2.749,15,2.349,36,0.005,38,0.137,43,0.079,44,2.015,45,0.971,46,0.059,54,3.436,55,3.594,59,3.594,60,3.594,61,0.004,62,0.004,85,0.273,254,4.202,255,3.05,338,3.862,1356,6.622,1357,5.381,1752,1.414,1987,6.189,1988,4.678,1989,6.189]],["title/interfaces/IProps-3.html",[15,1.103,43,0.049,1636,3.369]],["body/interfaces/IProps-3.html",[0,0.304,1,4.715,3,0.055,4,0.055,5,0.055,6,5.717,7,3.174,8,2.505,9,0.085,10,0.953,11,0.999,12,4.901,14,2.539,15,2.266,18,2.574,19,3.484,20,1.29,21,3.399,22,3.245,23,1.338,24,5.717,25,3.245,26,1.656,27,2.346,28,2.117,29,3.484,30,3.484,31,3.484,32,3.484,33,3.484,34,3.484,36,0.005,38,0.13,39,0.817,40,0.712,41,2.353,42,2.117,43,0.073,44,1.958,45,0.937,46,0.055,47,1.421,48,1.456,49,1.421,50,3.484,51,2.003,52,3.894,53,4.97,54,3.174,55,3.319,56,4.715,57,5.717,58,5.717,59,3.319,60,3.319,61,0.004,62,0.004,1752,1.306]],["title/interfaces/IProps-4.html",[15,1.103,43,0.049,1990,3.875]],["body/interfaces/IProps-4.html",[0,0.294,3,0.053,4,0.053,5,0.053,7,3.065,8,2.706,9,0.082,10,0.932,11,0.965,14,2.452,15,2.229,18,2.532,19,3.364,20,1.246,21,3.282,22,3.133,23,1.292,25,4.023,26,1.261,27,2.265,28,2.045,29,3.364,30,3.364,31,3.364,32,3.364,33,3.364,34,3.364,36,0.005,38,0.128,40,0.687,43,0.07,44,1.933,45,0.921,46,0.053,47,1.373,48,1.406,49,1.373,50,3.364,51,1.934,54,3.065,55,3.205,59,3.205,60,3.205,61,0.004,62,0.004,66,1.09,85,0.243,236,2.134,243,4.019,252,2.939,254,4.156,255,2.72,338,3.82,339,3.648,419,3.364,1349,5.52,1351,4.553,1352,4.799,1353,5.52,1354,5.107,1355,5.52,1356,6.162,1357,4.799,1752,1.261]],["title/interfaces/IProps-5.html",[15,1.103,43,0.049,1991,4.315]],["body/interfaces/IProps-5.html",[0,0.323,3,0.058,4,0.058,5,0.058,7,3.371,8,2.602,9,0.09,10,0.99,14,2.697,15,2.329,18,2.646,19,3.7,20,1.37,21,3.61,22,3.446,23,1.421,25,3.446,26,1.387,27,2.492,28,2.249,29,3.7,30,3.7,31,3.7,32,3.7,33,3.7,34,3.7,36,0.005,38,0.109,40,0.756,43,0.077,44,2.001,45,0.963,46,0.058,47,1.51,48,1.547,49,1.51,50,3.7,54,3.371,55,3.526,59,3.526,60,3.526,61,0.004,62,0.004,153,4.136,155,3.9,188,3.796,1678,6.072,1752,1.387]],["title/interfaces/IProps-6.html",[15,1.103,43,0.049,332,2.929]],["body/interfaces/IProps-6.html",[0,0.284,3,0.051,4,0.051,5,0.051,7,2.963,8,2.397,9,0.079,10,0.912,11,0.932,14,2.37,15,2.193,18,2.492,19,3.252,20,1.565,21,4.123,22,3.936,23,1.803,25,3.936,26,1.584,27,2.19,28,1.977,29,3.252,30,3.252,31,3.252,32,3.252,33,3.252,34,4.226,36,0.005,38,0.125,40,0.664,43,0.068,44,1.909,45,0.907,46,0.066,47,1.327,48,1.36,49,1.327,50,3.252,51,1.87,54,2.963,55,3.099,59,3.099,60,3.099,61,0.003,62,0.003,66,1.054,68,2.679,69,2.582,351,2.034,387,2.365,760,2.63,784,3.099,839,3.979,1187,4.203,1188,4.034,1189,4.203,1190,3.252,1213,3.885,1214,3.885,1282,4.034,1283,6.549,1752,1.219,1844,3.885,1845,4.402,1984,4.402,1992,4.938,1993,6.416,1994,6.416,1995,4.938]],["title/interfaces/IProps-7.html",[15,1.103,43,0.049,1598,3.369]],["body/interfaces/IProps-7.html",[0,0.308,3,0.056,4,0.056,5,0.056,9,0.086,10,0.961,11,1.277,13,1.291,15,2.279,36,0.005,38,0.104,43,0.074,46,0.056,61,0.004,62,0.004,71,1.076,85,0.382,89,1.372,160,1.588,165,1.733,167,2.054,183,2.029,194,2.526,211,2.705,356,2.963,405,4.977,422,4.561,556,4.362,698,4.561,822,5.005,824,4.377,831,5.034,947,2.239,1058,5.79,1059,3.286,1060,3.286,1061,3.719,1062,5.034,1064,5.79,1066,3.528,1068,3.813,1069,3.147,1070,5.79,1071,5.79,1752,1.323]],["title/interfaces/IProps-8.html",[15,1.103,43,0.049,631,2.821]],["body/interfaces/IProps-8.html",[0,0.231,3,0.042,4,0.042,5,0.042,9,0.064,10,0.793,11,0.758,15,1.974,23,1.412,26,1.378,36,0.005,37,0.796,38,0.125,43,0.077,45,0.71,46,0.042,51,1.52,61,0.003,62,0.003,71,0.806,85,0.36,89,1.027,93,1.52,94,1.775,105,1.055,131,1.955,165,2.076,167,1.696,170,5.049,179,2.712,183,1.675,184,3.051,185,3.051,191,2.334,192,1.349,194,2.591,197,4.559,198,3.417,218,2.765,226,1.607,227,3.051,230,3.769,291,1.541,327,3.769,447,3.417,507,1.003,591,2.724,592,2.636,596,2.519,627,2.514,703,3.131,881,2.026,947,1.677,1059,2.462,1060,2.462,1068,3.148,1069,2.358,1072,3.279,1073,4.013,1074,3.158,1075,2.786,1076,4.013,1080,4.013,1081,6.85,1083,4.013,1087,3.279,1088,3.279,1089,4.013,1090,4.255,1091,5.666,1092,4.013,1093,4.013,1094,5.581,1095,4.975,1096,4.013,1097,4.013,1098,4.013,1099,4.013,1100,4.013,1101,4.013,1102,4.013,1103,5.581,1104,3.771,1105,4.013,1106,4.013,1107,4.013,1108,3.771,1109,4.013,1110,3.771,1111,4.559,1112,4.013,1113,4.392,1114,4.013,1752,0.991]],["title/interfaces/IProps-9.html",[15,1.103,43,0.049,632,3.196]],["body/interfaces/IProps-9.html",[0,0.282,3,0.051,4,0.051,5,0.051,9,0.078,10,0.908,11,1.341,13,1.181,15,2.186,36,0.005,38,0.124,43,0.067,46,0.051,61,0.003,62,0.003,71,0.985,85,0.394,89,1.255,94,1.502,123,3.466,131,1.27,134,3.15,165,1.586,167,2.158,171,3.467,183,1.917,187,2.821,192,1.648,194,2.654,200,1.099,218,2.87,224,3.392,257,2.175,291,1.882,428,4.678,437,3.077,439,3.858,465,4.903,474,2.88,1066,3.229,1068,3.602,1069,2.88,1146,3.727,1147,5.299,1150,4.607,1151,4.607,1152,4.607,1153,4.607,1154,4.607,1155,5.299,1156,4.607,1157,5.299,1752,1.21]],["title/interfaces/IPropsCondominium.html",[43,0.059,599,4.287]],["body/interfaces/IPropsCondominium.html",[0,0.185,3,0.033,4,0.033,5,0.033,9,0.051,10,0.675,11,0.606,36,0.005,37,0.942,38,0.156,40,0.899,41,1.444,43,0.044,45,0.921,46,0.059,61,0.003,62,0.003,71,0.644,85,0.227,94,0.755,105,1.248,167,1.444,191,2.058,200,1.666,233,2.579,245,2.621,246,1.678,247,1.592,249,1.62,338,2.244,344,3.94,355,2.525,361,4.293,394,1.846,507,1.564,556,3.432,586,3.015,587,2.227,588,1.968,589,2.113,590,5.698,591,3.77,592,3.586,593,3.468,594,4.752,599,5.66,625,2.062,626,2.062,627,3.643,628,4.47,629,4.021,630,2.86,631,2.525,632,2.86,633,2.731,634,3.015,635,3.208,636,1.968,637,3.468,638,3.468,639,3.468,640,3.468,641,3.468,642,3.468,643,3.299,644,2.621,645,2.621,646,3.015,647,3.468,648,3.468,649,3.468,650,2.731,651,3.015,652,2.439,653,2.062,654,3.468,655,3.468,656,3.468,657,3.468,658,3.468,659,4.046,660,1.968,661,3.882,662,2.013,663,4.465,664,4.757,665,3.015,666,3.468,667,3.468,668,3.468,669,5.136,670,3.468,671,5.136,672,3.468,1752,0.792]],["title/interfaces/IPropsUser.html",[43,0.059,1996,4.287]],["body/interfaces/IPropsUser.html",[0,0.172,3,0.031,4,0.031,5,0.031,9,0.048,10,0.64,11,0.563,14,1.432,36,0.005,37,0.931,38,0.157,40,0.916,43,0.041,45,0.98,46,0.056,61,0.002,62,0.002,71,0.599,85,0.215,94,0.702,105,1.247,131,2.101,167,1.367,191,1.971,200,1.669,218,2.206,232,1.56,233,2.442,247,1.48,249,1.506,276,2.347,338,2.125,368,4.401,373,1.917,380,2.659,394,1.716,474,4.764,507,1.508,587,2.071,588,1.83,589,1.964,591,3.703,592,3.583,625,1.917,626,1.917,627,3.594,628,4.311,629,4.162,630,2.659,631,2.347,633,2.539,636,1.83,643,3.124,644,2.437,645,2.437,646,2.803,650,3.831,651,4.228,652,2.267,653,1.917,659,2.539,660,2.76,661,2.437,662,2.824,663,4.228,664,4.924,665,2.803,772,2.267,775,1.619,1090,4.975,1335,2.803,1698,2.539,1752,0.736,1823,2.659,1827,2.659,1836,4.012,1996,5.419,1997,2.803,1998,4.5,1999,2.803,2000,2.803,2001,3.224,2002,3.224,2003,3.224,2004,3.224,2005,3.224,2006,3.224,2007,3.224,2008,3.224,2009,3.224,2010,2.983,2011,3.224,2012,2.983,2013,3.224,2014,2.983,2015,3.224,2016,3.224,2017,3.224,2018,4.864,2019,3.224,2020,4.864,2021,3.224,2022,4.864,2023,3.224]],["title/interfaces/IRedisError.html",[43,0.059,2024,4.287]],["body/interfaces/IRedisError.html",[0,0.249,3,0.045,4,0.045,5,0.045,8,2.194,9,0.069,10,0.835,11,0.816,12,4.591,18,1.511,26,1.45,36,0.005,37,0.907,38,0.139,41,2.027,43,0.059,44,1.997,45,0.982,46,0.045,61,0.003,62,0.003,65,1.316,71,0.868,72,3.45,74,2.22,76,2.819,78,2.22,79,2.651,80,2.487,81,3.45,85,0.341,86,2.302,87,2.345,89,1.106,90,3.187,91,1.917,93,1.637,94,1.569,95,2.182,96,2.539,97,2.539,98,3.379,99,3.774,100,3.128,102,2.921,103,3.248,104,3.524,105,1.096,106,2.712,107,3.128,108,2.712,109,2.593,110,2.712,167,1.313,212,1.381,455,3.524,839,3.714,1061,3,1218,3.181,1224,2.846,1226,3.969,1242,3.181,1243,3.401,1244,3.401,1245,3,1247,4.077,1248,3,1249,3,1286,2.777,1288,3.531,1431,3.679,1486,4.621,1752,1.067,1903,3.853,1983,6.093,1985,5,2024,6.671,2025,4.671,2026,4.671,2027,4.671,2028,4.671,2029,4.322,2030,4.061,2031,6.347]],["title/interfaces/IRefreshTokenBody.html",[43,0.059,1087,3.502]],["body/interfaces/IRefreshTokenBody.html",[3,0.054,4,0.054,5,0.054,9,0.083,10,0.944,36,0.005,37,0.598,38,0.166,41,2.542,43,0.091,45,1.105,46,0.076,61,0.004,62,0.004,131,2.061,179,4.488,185,3.96,591,2.542,592,2.46,596,3.269,627,2.991,1087,5.426,1088,4.256,1090,3.196,1091,6.497,1095,7.09,1111,4.256,1113,4.099,1190,3.431,1635,7.473,1752,1.286,1753,5.21,1754,5.21,1755,5.21]],["title/interfaces/ISendMailContent.html",[43,0.059,1341,4.028]],["body/interfaces/ISendMailContent.html",[0,0.337,3,0.061,4,0.061,5,0.061,9,0.094,10,1.015,36,0.005,38,0.156,43,0.08,45,1.113,46,0.074,61,0.004,62,0.004,124,3.957,176,1.612,281,2.985,305,2.857,397,4.198,1338,6.329,1339,5.502,1341,7.244,1342,6.102,1752,1.446]],["title/classes/IService.html",[0,0.247,1068,2.418]],["body/classes/IService.html",[0,0.304,2,1.073,3,0.055,4,0.055,5,0.055,9,0.084,16,0.72,20,1.633,23,1.957,26,1.653,35,0.856,36,0.005,37,0.606,38,0.143,39,0.643,40,0.71,46,0.055,61,0.004,62,0.004,65,1.182,66,1.429,73,1.129,84,0.89,176,1.844,281,3.233,350,3.38,489,5.7,597,4.151,608,6.008,787,3.063,881,3.38,947,2.798,1066,4.409,1068,3.776,1257,7.236,1395,6.291,1400,4.018,1461,5.968,1796,4.31,1844,5.268,2032,5.702,2033,8.058,2034,8.058,2035,8.058,2036,8.058,2037,8.058,2038,8.361,2039,6.35,2040,7.949]],["title/interfaces/IServiceErrors.html",[43,0.059,2041,4.287]],["body/interfaces/IServiceErrors.html",[0,0.231,3,0.042,4,0.042,5,0.042,8,2.085,9,0.064,10,0.793,11,0.758,12,4.749,18,1.403,20,0.979,23,1.015,26,0.991,36,0.005,37,0.921,38,0.135,41,1.95,43,0.055,44,2.028,45,0.96,46,0.042,61,0.003,62,0.003,65,1.251,66,1.192,67,2.462,68,2.178,69,2.099,71,0.806,72,3.279,74,2.062,76,2.679,78,2.062,79,2.462,80,2.309,81,3.279,85,0.331,86,2.138,87,2.178,89,1.027,90,3.028,91,1.78,93,1.52,94,1.509,95,2.026,96,2.358,97,2.358,98,3.212,99,3.586,100,2.973,102,2.712,103,3.087,104,3.349,105,1.055,106,2.519,107,2.973,108,2.519,109,2.408,110,2.519,167,1.219,212,1.783,341,3.417,455,3.349,546,2.954,838,2.579,839,3.842,949,1.607,1075,2.786,1218,2.954,1221,2.867,1226,3.771,1228,3.417,1229,3.051,1231,3.279,1234,3.417,1242,2.954,1243,3.158,1244,3.158,1245,2.786,1247,3.875,1248,2.786,1249,2.786,1282,4.559,1283,5.666,1284,3.771,1286,2.579,1292,3.771,1486,3.158,1752,0.991,1844,3.158,1885,3.578,2030,3.771,2041,6.417,2042,4.338,2043,4.338,2044,4.013,2045,4.338,2046,4.338,2047,4.338,2048,4.338,2049,4.338,2050,4.338,2051,4.013,2052,3.771,2053,4.338,2054,6.032]],["title/interfaces/ISuccess.html",[43,0.059,2055,4.287]],["body/interfaces/ISuccess.html",[0,0.245,3,0.044,4,0.044,5,0.044,9,0.068,10,0.825,11,0.803,18,1.486,36,0.005,38,0.16,43,0.058,44,1.075,45,1.123,46,0.044,61,0.003,62,0.003,71,0.854,85,0.339,89,1.088,93,1.61,94,1.366,105,0.699,125,5.028,165,1.376,176,1.171,183,1.743,190,2.668,194,1.588,199,1.83,200,0.953,223,1.678,305,2.075,344,3.572,397,2.223,405,4.275,408,3.79,410,3.619,411,3.79,412,3.79,413,3.79,414,3.79,415,6.633,422,3.619,839,2.11,995,3.473,1429,3.619,1541,3.995,1557,4.744,1559,3.473,1579,3.995,1752,1.05,1969,4.251,2055,6.614,2056,4.595,2057,7.682,2058,7.682,2059,7.682,2060,7.682,2061,7.682,2062,7.682,2063,7.682,2064,7.682,2065,4.595,2066,4.595,2067,6.276,2068,4.595,2069,4.595,2070,4.595,2071,4.251,2072,4.251,2073,4.595,2074,4.595,2075,4.595,2076,4.595,2077,4.595,2078,4.595]],["title/interfaces/IUntrackableErrors.html",[43,0.059,1648,4.287]],["body/interfaces/IUntrackableErrors.html",[0,0.246,3,0.044,4,0.044,5,0.044,8,2.476,9,0.068,10,0.828,11,1.1,12,4.571,18,2.036,20,1.041,26,1.054,36,0.005,37,0.904,38,0.138,41,2.014,43,0.059,44,1.991,45,1.033,46,0.044,61,0.003,62,0.003,65,1.305,66,0.911,67,2.619,68,2.316,71,0.857,72,3.421,74,2.992,76,2.795,78,2.193,79,2.619,80,2.456,81,3.421,85,0.316,86,2.274,87,2.316,89,1.093,90,3.16,91,1.893,93,1.617,94,1.559,95,2.155,96,2.508,97,2.508,98,3.351,99,2.743,100,3.102,103,3.221,104,2.562,105,1.089,106,2.679,107,3.102,108,2.679,109,3.494,110,3.655,167,1.297,220,2.784,338,2.016,455,3.494,949,1.709,1199,3.049,1200,3.245,1221,4.159,1226,3.935,1228,3.634,1229,3.245,1245,2.964,1246,3.634,1247,4.043,1248,2.964,1249,2.964,1643,3.805,1644,4.614,1645,4.614,1646,4.614,1648,6.628,1649,4.614,1652,4.614,1653,4.614,1654,4.614,1655,4.614,1656,4.614,1657,6.294,1658,6.294,1659,4.614,1752,1.054]],["title/interfaces/IUserDataCore.html",[43,0.059,1081,4.028]],["body/interfaces/IUserDataCore.html",[0,0.208,3,0.038,4,0.038,5,0.038,9,0.058,10,0.738,11,0.684,15,1.597,23,1.313,26,1.282,36,0.005,37,0.899,38,0.156,39,0.807,43,0.071,45,0.66,46,0.038,51,1.372,61,0.003,62,0.003,71,0.727,85,0.348,89,0.927,93,1.372,94,1.717,105,0.997,131,2.084,165,1.963,167,1.577,170,4.774,179,2.447,183,1.558,184,2.753,185,2.753,191,2.551,192,1.218,194,2.476,197,4.241,198,3.083,218,2.389,226,1.45,227,2.753,230,4.517,291,1.39,327,4.517,447,3.083,507,1.656,591,3.423,592,3.313,596,2.273,627,3.288,703,3.753,881,1.829,947,1.514,1059,2.222,1060,2.222,1068,2.928,1069,2.128,1072,2.959,1073,3.622,1074,2.85,1075,2.514,1076,3.622,1080,3.622,1081,6.226,1083,3.622,1087,2.959,1088,2.959,1089,3.622,1090,4.803,1091,5.413,1092,3.622,1093,3.622,1094,5.191,1095,4.627,1096,3.622,1097,3.622,1098,3.622,1099,3.622,1100,3.622,1101,3.622,1102,3.622,1103,5.191,1104,3.403,1105,3.622,1106,3.622,1107,3.622,1108,3.403,1109,3.622,1110,3.403,1111,4.241,1112,3.622,1113,4.085,1114,3.622,1752,0.894]],["title/interfaces/IUserInObject.html",[43,0.059,2079,4.287]],["body/interfaces/IUserInObject.html",[0,0.232,3,0.042,4,0.042,5,0.042,9,0.064,10,0.795,20,1.365,23,1.757,36,0.005,37,0.868,38,0.156,39,0.92,40,0.865,43,0.055,45,1.106,46,0.067,47,1.504,48,1.541,49,1.504,61,0.003,62,0.003,66,1.195,85,0.192,105,0.92,131,1.958,160,1.194,161,2.56,200,0.903,218,2.366,351,2.862,368,4.1,387,2.063,474,4.438,507,1.888,591,3.782,592,3.66,627,3.559,660,3.433,662,3.512,752,2.56,759,2.305,762,3.191,765,3.489,775,2.186,779,2.589,782,2.731,783,3.997,784,3.512,785,2.878,787,1.843,789,2.471,792,3.43,1090,4.635,1596,2.797,1752,0.995,1804,4.989,2079,6.43,2080,4.029,2081,4.354,2082,3.591,2083,4.029,2084,4.029,2085,4.029]],["title/interfaces/IValidate.html",[43,0.059,1691,4.287]],["body/interfaces/IValidate.html",[0,0.301,3,0.038,4,0.038,5,0.038,9,0.059,10,0.743,11,0.988,13,0.882,20,0.893,26,0.904,36,0.005,38,0.119,40,0.492,41,1.112,42,1.465,43,0.05,44,1.323,45,0.896,46,0.038,51,1.386,61,0.003,62,0.003,66,0.781,69,1.914,71,0.735,74,1.88,85,0.384,89,0.937,91,1.623,94,1.846,105,1.094,123,2.838,131,2.109,134,2.352,158,2.024,160,1.085,165,1.692,166,3.976,167,2.023,173,2.782,174,3.736,176,1.44,183,1.57,188,4.124,189,2.694,190,2.297,192,1.231,194,2.487,199,2.251,200,1.368,202,2.88,203,2.473,204,2.782,207,1.529,215,2.106,220,2.487,222,1.728,223,1.445,296,3.263,297,1.986,305,1.786,314,3.66,394,2.106,397,2.735,437,2.297,441,4.453,442,3.263,443,3.263,444,3.116,445,3.116,462,3.263,502,4.116,503,2.99,507,0.915,521,5.23,557,3.724,684,3.263,729,3.116,734,3.66,741,3.66,1074,2.88,1160,3.585,1163,2.614,1164,1.949,1372,3.263,1582,3.361,1599,6.883,1601,3.439,1680,3.439,1681,3.956,1682,3.956,1683,3.956,1684,3.66,1688,3.956,1690,3.956,1691,6.103,1693,3.956,1694,3.956,1695,5.653,1696,3.956,1697,3.956,1698,3.116,1699,3.956,1700,3.66,1701,5.653,1702,3.956,1703,3.956,1704,3.116,1705,3.956,1706,3.956,1707,3.956,1708,3.956,1709,3.956,1710,3.956,1711,3.956,1712,3.956,1713,3.956,1752,0.904]],["title/interfaces/IValidateSignedCookie.html",[43,0.059,1000,4.028]],["body/interfaces/IValidateSignedCookie.html",[0,0.337,3,0.061,4,0.061,5,0.061,9,0.094,10,1.015,36,0.005,38,0.15,43,0.08,45,1.078,46,0.08,61,0.004,62,0.004,122,4.783,139,6.316,176,1.612,220,2.999,271,4.985,281,2.985,305,2.857,997,5.855,998,5.855,1000,7.244,1002,6.713,1752,1.446]],["title/classes/InMemoryCondominium.html",[0,0.247,2086,4.634]],["body/classes/InMemoryCondominium.html",[0,0.205,2,0.725,3,0.037,4,0.037,5,0.037,9,0.057,10,0.73,13,0.859,16,1.021,35,1.131,36,0.005,37,0.859,38,0.146,39,0.849,40,0.977,44,1.298,46,0.037,61,0.003,62,0.003,71,1.031,73,0.866,84,1.109,85,0.346,94,1.208,105,0.844,165,2.621,176,2.109,191,1.867,192,1.199,199,2.209,200,1.151,233,4.395,236,1.49,246,3.441,254,1.832,255,1.899,297,1.935,316,4.129,338,2.424,344,2.464,356,1.972,361,2.685,418,4.914,419,2.349,556,3.582,653,4.228,675,3.01,809,4.141,813,2.637,814,4.914,816,3.158,817,4.914,819,5.932,822,4.064,823,2.913,824,2.913,1199,2.547,1207,2.913,1797,5.696,1988,4.914,2086,5.548,2087,4.292,2088,7.239,2089,5.133,2090,6.178,2091,3.566,2092,4.292,2093,4.292,2094,4.292,2095,4.292,2096,4.292,2097,3.351,2098,4.292,2099,4.292,2100,3.351,2101,6.972,2102,6.178,2103,4.292,2104,6.178,2105,3.351,2106,4.292,2107,3.351,2108,4.292,2109,4.292,2110,4.292,2111,3.854,2112,3.566]],["title/classes/InMemoryContainer.html",[0,0.247,1797,3.502]],["body/classes/InMemoryContainer.html",[0,0.287,2,1.014,3,0.052,4,0.052,5,0.052,9,0.08,10,0.918,16,0.881,36,0.005,38,0.097,43,0.089,46,0.067,61,0.003,62,0.003,73,1.089,84,0.841,85,0.361,218,2.439,224,2.907,236,2.083,257,2.211,291,1.914,297,2.705,356,2.757,556,3.317,557,2.953,588,4.393,596,3.128,608,4.072,636,3.058,1164,2.655,1789,6.728,1790,4.985,1791,7.574,1792,7.117,1793,7.574,1794,7.574,1795,5.496,1796,4.072,1797,5.274,1798,7.574,2113,6,2114,6]],["title/classes/InMemoryError.html",[0,0.247,1988,3.502]],["body/classes/InMemoryError.html",[0,0.321,2,1.136,3,0.058,4,0.058,5,0.058,7,4.165,8,2.821,9,0.089,10,0.987,11,1.426,13,1.347,14,3.332,15,2.43,16,0.947,35,0.907,36,0.005,37,0.642,38,0.135,39,0.681,40,0.752,43,0.077,44,1.413,45,0.711,46,0.058,54,3.353,55,3.507,59,3.507,60,3.507,61,0.004,62,0.004,85,0.266,254,4.057,255,2.976,338,3.73,1356,6.522,1357,5.251,1987,6.039,1988,5.67,1989,6.039,2115,8.354]],["title/classes/InMemoryInvite.html",[0,0.247,2116,4.634]],["body/classes/InMemoryInvite.html",[0,0.182,2,0.644,3,0.033,4,0.033,5,0.033,9,0.051,10,0.669,13,0.764,16,1.051,35,1.17,36,0.005,37,0.828,38,0.15,39,0.878,40,0.997,44,1.421,46,0.033,61,0.003,62,0.003,71,0.946,73,0.794,84,1.175,85,0.317,94,1.564,105,0.521,165,2.667,176,2.152,199,2.418,200,1.259,218,1.079,233,4.107,236,1.324,246,3.875,254,1.628,255,1.688,297,1.72,338,2.654,418,4.59,419,2.087,556,1.628,557,3.041,675,2.845,696,3.733,809,3.959,813,2.419,816,3.19,959,2.656,1160,3.301,1163,2.264,1164,1.688,1199,3.364,1207,2.589,1700,3.169,1780,1.657,1795,4.784,1797,5.43,1988,5.081,2089,4.709,2091,3.169,2097,2.978,2100,2.978,2105,2.978,2107,2.978,2111,3.425,2112,3.169,2116,5.09,2117,3.814,2118,6.763,2119,6.073,2120,4.893,2121,5.667,2122,3.814,2123,3.814,2124,4.271,2125,3.814,2126,3.58,2127,3.814,2128,5.295,2129,3.814,2130,5.295,2131,3.814,2132,3.814,2133,2.978,2134,4.271,2135,3.814,2136,2.409,2137,3.814,2138,3.814,2139,3.425,2140,3.425,2141,7.999,2142,3.814,2143,3.169,2144,6.763,2145,5.667,2146,3.425,2147,3.814,2148,3.814,2149,3.814,2150,3.814,2151,3.814,2152,3.814,2153,3.814,2154,7.486,2155,5.667,2156,3.814,2157,3.169]],["title/classes/InMemoryOTP.html",[0,0.247,2158,4.634]],["body/classes/InMemoryOTP.html",[0,0.223,2,0.787,3,0.04,4,0.04,5,0.04,9,0.062,10,0.774,16,0.981,35,1.021,36,0.005,37,0.723,38,0.14,39,0.767,40,0.847,44,0.979,46,0.04,61,0.003,62,0.003,71,1.093,73,0.918,84,1.061,85,0.325,94,1.48,105,0.636,165,2.573,176,2.054,199,1.666,200,0.868,215,3.622,220,1.446,233,4.555,236,2.63,246,3.902,254,1.989,255,2.062,297,2.953,338,1.828,418,5.142,419,2.55,428,4.145,435,3.069,438,2.55,439,3.046,534,5.442,675,3.123,696,4.097,809,3.571,813,2.796,816,2.612,959,3.55,1199,2.765,1776,5.578,1778,5.578,1779,5.578,1780,2.846,1988,4.446,2097,3.638,2100,5.114,2101,6.294,2105,3.638,2107,5.114,2157,5.442,2158,5.882,2159,4.659,2160,7.575,2161,4.659,2162,4.659,2163,4.659,2164,4.659,2165,4.659,2166,6.55,2167,8.217,2168,7.575,2169,4.659,2170,4.659,2171,4.659,2172,4.659,2173,5.882,2174,4.659]],["title/classes/InMemoryUser.html",[0,0.247,2175,4.634]],["body/classes/InMemoryUser.html",[0,0.157,2,0.553,3,0.028,4,0.028,5,0.028,9,0.044,10,0.596,13,0.656,16,1.01,35,1.147,36,0.005,37,0.812,38,0.144,39,0.861,40,0.997,42,1.089,44,1.061,46,0.028,61,0.002,62,0.002,71,0.843,73,0.708,84,1.154,85,0.337,94,1.61,105,1.125,131,1.327,165,2.663,171,2.499,176,2.157,187,1.566,191,1.862,192,0.915,199,1.806,200,0.94,218,1.96,220,1.017,224,2.337,233,4.293,236,1.137,246,3.874,254,1.398,255,1.449,257,1.207,291,1.045,297,1.477,316,3.902,338,1.982,368,2.277,418,4.184,419,1.792,596,1.708,653,3.995,675,2.633,696,3.454,809,3.793,813,2.156,816,2.984,903,2.003,918,2.696,921,1.839,923,2.317,959,2.366,1156,2.557,1199,1.944,1207,2.223,1780,2.194,1795,4.36,1797,5.079,1988,4.184,2089,4.196,2091,2.721,2097,2.557,2100,2.557,2101,6.569,2105,2.557,2107,2.557,2112,2.721,2119,5.535,2139,2.941,2140,2.941,2146,4.535,2157,2.721,2173,4.535,2175,4.535,2176,3.275,2177,4.441,2178,4.441,2179,5.05,2180,3.275,2181,4.03,2182,3.275,2183,3.77,2184,3.275,2185,4.836,2186,3.275,2187,4.836,2188,3.275,2189,3.275,2190,2.557,2191,3.77,2192,3.275,2193,2.557,2194,3.77,2195,3.275,2196,2.003,2197,3.275,2198,3.275,2199,3.275,2200,5.05,2201,3.275,2202,3.275,2203,3.275,2204,5.05,2205,5.05,2206,3.275,2207,5.05,2208,3.275,2209,3.275,2210,3.275,2211,3.275,2212,3.275,2213,3.275,2214,5.05,2215,3.275,2216,3.275,2217,3.275,2218,2.941,2219,3.275,2220,3.275]],["title/classes/Index.html",[0,0.247,9,0.069]],["body/classes/Index.html",[0,0.265,2,0.935,3,0.048,4,0.048,5,0.048,8,1.718,9,0.11,10,0.87,11,1.3,13,1.108,14,2.939,16,1.001,20,1.494,26,1.512,35,0.746,36,0.005,37,0.528,38,0.119,39,0.56,40,0.824,43,0.063,44,1.163,46,0.063,51,2.319,61,0.003,62,0.003,66,1.307,69,3.203,73,1.033,84,0.776,85,0.292,105,1.006,143,2.646,158,3.387,160,1.815,167,2.092,199,1.979,200,1.031,235,3.387,351,2.522,566,3.597,588,4.223,636,2.821,653,2.955,765,3.323,768,2.886,827,4.251,828,3.193,839,2.282,987,7.182,989,6.897,1209,4.1,1211,4.1,1372,5.459,1809,8.149,1810,4.971,1811,7.933,1812,4.971,1813,6.618,1814,6.618,1815,4.971,1816,4.971,1817,4.971,1818,6.618,1819,6.618,1820,4.971,2221,7.37,2222,4.971,2223,5.535,2224,5.535,2225,5.535]],["title/classes/Invite.html",[0,0.247,557,1.961]],["body/classes/Invite.html",[0,0.206,2,0.726,3,0.037,4,0.037,5,0.037,9,0.057,10,0.731,11,1.372,13,0.861,14,2.467,15,1.852,16,1.094,35,0.834,36,0.005,37,0.59,38,0.156,39,0.626,40,0.692,41,2.001,43,0.071,45,0.887,46,0.062,61,0.003,62,0.003,71,1.032,73,0.867,84,0.867,85,0.245,105,1.259,131,2.052,167,2.208,191,2.642,200,1.628,207,3.128,234,2.899,235,2.843,247,2.551,249,2.595,338,2.843,450,4.062,507,1.871,557,3.505,587,4.18,588,3.693,589,4.337,597,2.811,602,3.184,625,2.295,626,2.295,627,2.712,636,2.191,643,3.568,644,2.918,645,2.918,652,2.715,703,2.938,854,3.861,897,3.041,1493,5.691,1766,3.869,1771,4.375,1821,6.187,1822,3.572,1823,3.184,1824,3.572,1825,3.572,1826,3.572,1827,3.184,1828,4.582,1829,3.572,1830,3.572,1831,5.14,1832,3.572,1833,3.572,1834,3.572,1835,3.572,1836,3.184,1837,3.184,1838,3.572,1839,3.572,2226,6.186,2227,4.299,2228,4.299,2229,4.299,2230,3.861,2231,4.299,2232,3.861,2233,4.299,2234,4.299,2235,4.299,2236,4.299,2237,4.299,2238,4.299,2239,4.299]],["title/injectables/InviteFirestore.html",[183,1.287,1514,4.287]],["body/injectables/InviteFirestore.html",[0,0.142,3,0.026,4,0.026,5,0.026,8,0.925,9,0.077,11,0.736,13,0.939,16,0.902,35,1.072,36,0.005,37,0.759,38,0.129,39,0.805,40,0.921,42,2.189,44,1.383,45,0.496,46,0.026,61,0.002,62,0.002,71,0.497,73,0.657,84,1.065,85,0.356,89,0.634,94,1.843,105,0.899,131,0.641,160,0.734,161,2.205,165,2.577,167,1.184,176,2.059,183,1.17,194,2.558,199,2.353,200,1.333,207,1.629,211,1.25,212,1.245,215,1.424,218,1.327,223,0.977,224,1.957,226,2.381,243,1.948,246,2.038,351,1.019,368,1.343,455,2.339,506,2.022,507,1.366,553,4.467,554,1.343,557,2.501,559,4.302,566,2.832,577,2.475,585,2.206,675,1.783,696,2.893,733,2.675,809,3.457,813,2.002,816,2.855,827,4.129,828,1.718,833,2.326,834,2.206,837,2.206,838,2.504,839,2.714,840,2.022,921,1.673,923,2.107,966,2.475,968,3.897,973,2.675,974,2.326,976,3.067,977,3.897,978,2.675,979,2.675,980,2.475,987,2.326,989,2.326,994,2.675,1160,2.289,1163,1.768,1164,1.318,1200,1.881,1222,2.326,1224,1.63,1226,2.634,1227,2.475,1233,2.475,1483,2.475,1488,2.475,1514,3.897,1582,1.59,1592,3.897,1594,2.475,1770,2.326,1780,2.038,1796,2.022,1800,2.475,1801,2.326,1805,2.326,2082,2.206,2120,3.548,2124,3.664,2126,3.664,2128,4.801,2130,4.801,2133,2.326,2134,3.664,2136,1.881,2143,3.897,2240,2.979,2241,2.979,2242,2.979,2243,2.979,2244,2.979,2245,2.979,2246,2.979,2247,2.979,2248,2.979,2249,2.979,2250,2.675,2251,2.675,2252,2.979,2253,2.675,2254,6.581,2255,5.801,2256,2.979,2257,2.675,2258,4.212,2259,4.212,2260,2.979,2261,4.212,2262,4.69,2263,4.69,2264,5.801,2265,2.979,2266,2.979,2267,2.979,2268,5.801,2269,4.69,2270,2.979,2271,2.979,2272,2.979,2273,2.979,2274,2.979,2275,2.979,2276,2.979,2277,2.675,2278,2.675,2279,2.675,2280,2.675,2281,2.675,2282,2.675,2283,2.979,2284,2.475,2285,2.979,2286,5.801,2287,2.675,2288,2.979,2289,2.979,2290,2.979,2291,2.979,2292,2.979,2293,2.979,2294,5.801,2295,2.979,2296,2.979,2297,2.979,2298,2.979,2299,2.979,2300,2.979,2301,2.979,2302,5.91,2303,2.979,2304,2.979,2305,2.979,2306,2.979,2307,2.979,2308,4.69,2309,2.979]],["title/classes/InviteFirestoreMapper.html",[0,0.247,1801,4.028]],["body/classes/InviteFirestoreMapper.html",[0,0.242,2,0.856,3,0.044,4,0.044,5,0.044,9,0.067,16,0.787,35,0.936,36,0.005,37,0.662,38,0.128,39,0.702,40,1.055,41,1.752,43,0.058,45,0.837,46,0.06,47,1.55,48,1.949,49,1.902,51,2.68,61,0.003,62,0.003,65,1.292,73,0.972,84,0.972,85,0.314,105,0.948,131,1.09,143,2.421,200,0.943,207,1.759,351,2.915,387,3.075,450,3.129,507,1.052,557,3.238,566,4.691,752,3.503,753,5.141,754,5.601,755,5.767,758,4.661,759,3.289,760,4.253,761,5.569,762,2.862,763,4.208,765,3.129,767,4.004,768,2.641,775,2.283,1164,2.241,1487,6.99,1493,5.001,1766,2.704,1769,5.865,1799,4.548,1800,4.208,1801,5.419,1802,6.233,2310,5.065,2311,5.065]],["title/classes/InviteMapper.html",[0,0.247,1770,4.028]],["body/classes/InviteMapper.html",[0,0.24,2,0.849,3,0.043,4,0.043,5,0.043,9,0.067,16,0.782,20,1.72,23,2.016,35,0.931,36,0.005,37,0.659,38,0.144,39,0.699,40,0.995,41,1.743,43,0.057,45,0.833,46,0.059,47,1.541,48,1.942,49,1.896,61,0.003,62,0.003,65,1.285,66,1.506,73,0.967,84,0.967,85,0.199,105,0.943,131,1.486,160,1.7,200,0.936,207,2.397,351,3.283,387,2.6,450,3.112,507,1.433,557,3.579,627,1.88,752,3.495,759,2.905,762,3.791,765,4.145,775,2.265,777,4.096,778,5.112,779,3.685,780,5.192,782,3.442,783,5.038,784,4.427,785,4.096,787,2.624,788,3.721,789,2.561,930,3.173,1164,2.223,1493,4.36,1582,4.532,1596,2.898,1766,2.682,1768,4.174,1769,5.84,1770,5.389,1771,3.554,1772,4.174,2312,5.024,2313,5.024]],["title/classes/InvitePrismaMapper.html",[0,0.247,2314,4.287]],["body/classes/InvitePrismaMapper.html",[0,0.249,2,1.358,3,0.045,4,0.045,5,0.045,9,0.069,16,0.802,23,1.487,35,0.954,36,0.005,37,0.675,38,0.139,39,0.716,40,0.964,46,0.045,47,1.58,48,1.972,49,1.925,51,2.227,61,0.003,62,0.003,65,1.318,66,1.256,73,0.992,84,0.992,85,0.28,105,0.967,131,1.524,200,0.971,207,2.458,351,2.422,387,3.037,450,3.191,507,1.082,557,3.678,752,3.533,758,4.717,759,3.311,760,3.815,775,2.35,777,4.201,779,3.779,789,2.657,796,5.526,799,5.22,800,5.526,802,5.526,803,5.526,804,5.526,805,5.007,806,3.408,898,3.861,930,3.292,1164,2.307,1493,4.471,1582,3.779,1596,3.007,1698,3.687,1766,3.779,1771,5.007,1772,4.331,2314,5.881,2315,5.212,2316,9.296,2317,5.212,2318,5.212,2319,5.212]],["title/injectables/InvitePrismaRepo.html",[183,1.287,2320,4.287]],["body/injectables/InvitePrismaRepo.html",[0,0.191,3,0.034,4,0.034,5,0.034,8,1.241,9,0.053,11,0.627,13,0.8,16,0.999,35,1.188,36,0.005,37,0.841,38,0.142,39,0.892,40,1.01,42,1.329,44,1.233,46,0.034,61,0.003,62,0.003,71,0.667,73,0.822,84,1.195,85,0.358,89,0.85,93,1.258,94,1.666,105,0.801,131,1.263,160,0.984,161,1.519,165,2.7,176,2.2,183,1.463,194,2.532,199,2.098,200,1.093,212,1.557,218,1.66,224,1.979,305,3.105,455,1.993,506,2.713,507,1.218,554,1.802,557,3.1,675,2.23,696,2.925,799,3.294,809,3.829,810,3.321,811,4.837,813,2.504,816,3.253,825,3.121,827,4.009,828,2.306,834,4.345,837,2.961,838,2.134,839,2.419,840,3.982,934,3.121,1061,2.306,1156,3.121,1160,2.864,1163,2.372,1164,1.769,1224,2.187,1286,2.134,1478,3.121,1488,3.321,1582,2.134,1591,3.321,1780,2.549,2120,4.251,2124,4.39,2126,4.39,2128,5.385,2130,5.385,2133,3.121,2134,4.39,2136,2.525,2302,6.242,2314,3.321,2320,4.875,2321,3.997,2322,3.997,2323,3.997,2324,3.997,2325,3.997,2326,3.997,2327,3.997,2328,3.997,2329,3.121,2330,3.589,2331,3.997,2332,3.997,2333,5.867,2334,3.997,2335,3.997,2336,3.997,2337,3.997,2338,5.867,2339,3.997,2340,3.997]],["title/classes/InviteRepo.html",[0,0.247,1160,2.518]],["body/classes/InviteRepo.html",[0,0.167,2,0.589,3,0.03,4,0.03,5,0.03,9,0.046,16,0.872,18,2.078,20,1.642,23,1.113,26,1.859,27,2.637,28,2.38,35,1.037,36,0.005,37,0.734,38,0.124,39,0.779,40,0.994,42,1.159,43,0.088,46,0.073,47,1.182,48,1.854,49,1.597,61,0.002,62,0.002,65,0.986,66,1.657,73,0.742,84,1.078,85,0.283,131,1.657,159,3.054,160,2.3,176,2.074,191,1.6,192,0.974,211,2.221,212,1.899,216,3.054,218,1.812,220,1.988,222,3.179,223,1.143,224,2.161,242,2.807,257,1.284,281,3.372,291,1.112,330,2.973,340,3.109,344,2.112,350,2.221,361,2.301,387,1.622,507,1.1,557,2.435,675,2.435,696,2.64,762,2.184,782,3.285,787,3.08,809,3.521,813,2.261,816,2.554,946,3.647,947,2.484,948,3.647,949,2.886,950,3.567,951,3.647,952,3.955,953,3.647,954,3.647,955,3.353,956,3.567,957,3.647,958,3.647,959,3.353,961,1.776,963,3.922,1160,2.585,1164,1.542,1276,3.462,1290,3.462,1582,4.326,1780,2.301,2120,4.376,2124,4.046,2126,4.046,2128,4.046,2130,4.046,2133,2.721,2134,4.046,2136,2.201,2341,2.465,2342,3.485,2343,3.485,2344,3.485,2345,3.485,2346,3.485,2347,3.746,2348,2.366,2349,1.861]],["title/classes/InviteUserDTO.html",[0,0.247,684,3.822]],["body/classes/InviteUserDTO.html",[0,0.367,2,0.995,3,0.051,4,0.051,5,0.051,9,0.078,10,0.906,16,0.667,20,1.555,23,1.902,26,2.011,36,0.005,38,0.095,42,1.958,44,1.972,45,0.811,46,0.051,49,1.907,61,0.003,62,0.003,65,1.096,66,1.362,85,0.338,131,2.183,158,3.527,160,1.89,291,1.878,333,5.068,373,3.143,392,3.305,396,4.848,533,4.848,563,5.018,629,3.143,680,3.718,684,5.685,949,2.553,1011,5.018,1012,6.377,1013,3.996,1014,6.371,1015,6.136,1022,4.164,1023,4.164,1030,5.21,1031,3.601,1032,5.21,1035,3.849,1036,3.996,1037,4.164,1038,3.996,1039,3.996,1684,6.377,2350,5.887,2351,5.887]],["title/guards/JwtGuard.html",[153,3.156,2352,4.287]],["body/guards/JwtGuard.html",[0,0.229,3,0.041,4,0.041,5,0.041,9,0.064,11,1.048,13,1.338,16,0.872,20,1.354,35,1.037,36,0.005,37,0.734,38,0.124,39,0.778,44,1.404,45,0.813,46,0.041,61,0.003,62,0.003,65,0.893,66,1.185,71,0.8,73,0.936,74,2.046,84,0.936,85,0.368,89,1.02,91,1.766,94,1.771,95,2.011,105,0.912,155,2.765,158,3.07,160,1.645,165,2.436,166,5.255,167,2.209,168,5.216,169,3.742,170,5.924,171,3.77,173,4.22,174,4.938,176,1.529,177,5.216,179,4.671,180,2.443,183,1.666,184,3.027,185,4.858,186,3.742,187,2.292,188,4.318,189,2.932,190,2.499,191,1.448,192,1.339,193,6.39,194,2.387,195,3.742,196,3.742,197,3.253,198,3.39,199,2.389,200,1.432,201,6.005,202,3.134,203,2.691,204,3.027,205,3.983,206,3.983,212,1.272,214,3.983,215,2.292,216,2.046,217,3.983,218,1.891,219,3.027,220,1.488,221,3.983,222,1.881,223,2.191,466,4.726,1607,4.535,2352,5.551,2353,4.793,2354,6.681,2355,6.681,2356,4.793,2357,4.793,2358,4.793]],["title/classes/LaunchOTPDTO.html",[0,0.247,432,4.287]],["body/classes/LaunchOTPDTO.html",[0,0.351,2,0.931,3,0.047,4,0.047,5,0.047,9,0.073,10,0.868,16,0.833,26,2.056,36,0.005,38,0.119,44,2.059,45,0.998,46,0.047,49,1.969,61,0.003,62,0.003,85,0.291,131,2.176,160,1.81,332,5.986,333,5.233,392,3.094,432,6.106,435,4.52,533,5.221,629,2.942,680,4.641,787,3.352,949,3.143,1013,4.988,1014,6.802,1015,6.552,1030,5.611,1031,3.371,1032,4.988,1036,3.741,1038,4.988,2359,5.511,2360,5.511,2361,5.511,2362,7.348,2363,5.511,2364,5.511,2365,5.511,2366,5.511,2367,5.511,2368,5.511]],["title/classes/LaunchTFADTO.html",[0,0.247,499,4.287]],["body/classes/LaunchTFADTO.html",[0,0.361,2,0.972,3,0.05,4,0.05,5,0.05,9,0.076,10,0.893,16,0.652,20,1.532,23,2.01,26,1.999,36,0.005,38,0.093,42,1.913,44,1.958,45,0.799,46,0.05,49,1.885,61,0.003,62,0.003,65,1.071,66,1.341,85,0.334,131,2.174,158,3.474,160,1.862,291,1.835,333,5.011,373,3.071,389,5.599,392,3.229,396,4.774,491,5.599,492,5.902,499,6.281,533,4.774,563,4.942,629,3.071,680,3.633,949,2.514,1011,4.942,1013,3.904,1014,6.323,1015,6.091,1022,4.068,1023,4.068,1030,5.131,1031,3.518,1032,5.131,1035,3.76,1036,3.904,1037,4.068,1038,3.904,1039,3.904,1628,6.281,2369,7.559,2370,5.751,2371,7.559,2372,5.751]],["title/classes/Level.html",[0,0.247,703,2.092]],["body/classes/Level.html",[0,0.288,2,1.016,3,0.052,4,0.052,5,0.052,9,0.08,11,0.944,13,1.204,16,0.978,26,1.596,35,1.049,36,0.005,37,0.742,38,0.126,39,0.788,40,0.672,41,2.178,46,0.052,47,1.343,48,1.781,61,0.003,62,0.003,65,1.12,71,1.299,73,1.09,84,0.843,85,0.342,93,1.892,161,3.468,164,6.989,215,3.721,232,3.749,233,3.509,234,3.647,235,3.576,236,2.702,237,3.469,239,5.171,242,3.054,246,3.382,247,2.48,249,2.523,250,3.211,252,2.875,253,3.065,254,2.567,255,2.661,256,3.678,257,2.216,350,3.265,394,3.721,703,3.699,949,2.588,2373,6.014,2374,6.014,2375,7.782,2376,7.782,2377,6.989,2378,6.014,2379,6.014,2380,6.014]],["title/injectables/LogInterceptor.html",[183,1.287,1881,4.028]],["body/injectables/LogInterceptor.html",[0,0.245,3,0.044,4,0.044,5,0.044,9,0.068,11,0.803,13,1.024,16,0.792,20,1.416,26,1.434,35,0.942,36,0.005,37,0.816,38,0.113,39,0.707,46,0.044,51,2.505,61,0.003,62,0.003,65,1.482,66,1.24,71,0.854,73,0.979,75,2.873,76,3.412,78,2.983,84,0.717,85,0.375,86,2.264,87,2.307,89,1.088,91,1.886,93,1.61,94,1.556,100,3.093,105,0.699,160,1.26,161,1.945,174,5.077,183,1.743,190,2.668,200,0.953,203,2.873,212,1.358,243,3.345,377,4.251,387,2.14,507,1.062,554,2.307,596,2.668,627,2.979,782,2.075,947,1.777,1075,4.032,1250,4.251,1258,6.276,1377,4.744,1606,3.473,1881,5.457,2052,5.457,2381,5.116,2382,6.989,2383,6.276,2384,6.989,2385,5.116,2386,6.989,2387,7.96,2388,8.554,2389,5.116,2390,7.96,2391,6.989,2392,5.116,2393,6.276,2394,5.116,2395,4.595,2396,6.989,2397,5.116,2398,5.116,2399,7.96,2400,6.989,2401,7.96,2402,5.116,2403,5.116,2404,5.116,2405,5.116,2406,5.116,2407,5.116,2408,5.116,2409,5.116,2410,6.989,2411,5.116,2412,5.116,2413,5.116]],["title/classes/LoggerAdapter.html",[0,0.247,76,2.058]],["body/classes/LoggerAdapter.html",[0,0.211,2,0.747,3,0.063,4,0.038,5,0.038,8,1.959,9,0.059,16,1.053,35,1.252,36,0.005,37,0.902,38,0.153,39,0.94,40,1.038,43,0.05,45,0.778,46,0.069,56,4.674,61,0.003,62,0.003,65,0.823,73,0.884,76,2.517,84,1.302,86,2.793,100,4.376,103,2.031,146,3.745,176,2.307,180,3.216,279,4.464,281,3.612,976,4.126,1190,2.419,1206,4.674,1296,5.243,1297,5.243,1298,5.243,1299,5.243,1300,5.243,1301,5.243,1302,4.927,1303,7.506,1306,7.104,1308,4.927,1314,4.927,1316,4.927,1318,4.927,1572,4.674,1840,3.451,1841,5.243,1842,3.673,1843,3.673,1844,2.89,1845,3.274,1846,4.674,1847,4.674,1848,5.667,1849,5.667,1850,5.667,2414,4.421,2415,4.421,2416,4.421,2417,4.421,2418,4.421,2419,4.421,2420,4.421,2421,4.421]],["title/classes/LoginDTO.html",[0,0.247,476,4.287]],["body/classes/LoginDTO.html",[0,0.338,2,0.881,3,0.045,4,0.045,5,0.045,9,0.069,10,0.836,16,0.802,20,1.434,23,1.487,26,2.053,36,0.005,38,0.114,42,2.354,44,2.084,45,0.911,46,0.045,49,2.123,61,0.003,62,0.003,65,0.971,66,1.256,85,0.318,131,2.135,158,3.253,160,1.743,291,1.663,333,5.643,373,2.783,392,2.927,396,4.471,474,4.641,476,5.881,533,5.076,563,4.628,628,3.093,629,2.783,680,4.471,949,2.354,1011,4.628,1013,4.804,1014,6.658,1015,6.413,1019,4.331,1020,4.331,1022,3.687,1023,3.687,1030,5.455,1031,3.188,1032,4.804,1035,4.628,1036,3.538,1037,3.687,1038,4.804,1039,3.538,1043,4.331,1130,4.681,1131,4.331,1132,4.681,1133,4.681,1624,4.804,2422,5.212,2423,5.212,2424,5.212]],["title/classes/Name.html",[0,0.247,37,0.492]],["body/classes/Name.html",[0,0.304,2,1.076,3,0.055,4,0.055,5,0.055,9,0.085,11,0.999,13,1.275,16,1.005,35,1.088,36,0.005,37,0.937,38,0.13,39,0.817,40,0.712,45,0.937,46,0.055,61,0.004,62,0.004,65,1.185,71,1.347,73,1.131,84,0.892,85,0.351,93,2.003,232,3.851,233,3.639,234,3.782,235,3.709,236,2.802,237,3.672,239,4.417,247,2.625,249,2.67,250,3.399,252,3.044,253,3.245,254,2.717,255,2.817,291,2.031,330,4.532,336,5.709,373,3.399,1127,5.717,1351,5.978,1376,6.706,2425,6.366,2426,7.248,2427,6.366,2428,6.366,2429,6.366]],["title/classes/NodemailerAdapter.html",[0,0.247,132,4.287]],["body/classes/NodemailerAdapter.html",[0,0.312,2,1.104,3,0.056,4,0.056,5,0.056,9,0.087,16,0.74,35,0.881,36,0.005,37,0.623,38,0.106,39,0.661,45,0.867,46,0.056,61,0.004,62,0.004,71,1.369,73,1.149,80,3.123,84,0.915,85,0.325,94,1.277,105,0.892,124,5.035,131,1.406,132,6.816,165,2.411,176,1.877,194,2.028,218,1.848,279,4.62,305,2.649,1339,6.405,1341,7.344,1342,4.126,2072,5.427,2430,6.532,2431,8.203,2432,6.532,2433,8.203,2434,5.427,2435,6.532,2436,6.532,2437,6.532,2438,6.532,2439,6.532,2440,6.532,2441,6.532,2442,6.532,2443,6.532,2444,6.532,2445,6.532,2446,6.532,2447,6.532]],["title/classes/NotFoundFilter.html",[0,0.247,1894,4.028]],["body/classes/NotFoundFilter.html",[0,0.274,2,0.967,3,0.049,4,0.049,5,0.049,9,0.076,11,0.898,13,1.146,16,0.854,20,1.527,23,1.584,26,1.546,35,1.016,36,0.005,37,0.854,38,0.122,39,0.763,44,1.203,46,0.049,61,0.003,62,0.003,65,1.403,66,1.337,67,3.841,68,3.398,71,1.258,72,4.112,73,1.056,74,3.596,75,3.215,76,3.57,78,3.217,80,4.028,81,4.37,84,0.802,85,0.334,86,2.534,87,2.581,89,1.218,90,3.398,91,2.11,93,1.801,94,1.473,95,2.402,96,2.794,97,2.794,98,2.737,100,2.534,105,0.782,107,2.534,212,2.376,216,3.217,242,2.957,455,3.758,1207,5.116,1225,4.241,1234,5.331,1287,5.884,1894,5.884,2051,6.262,2284,4.757,2448,5.725,2449,5.725,2450,7.536,2451,8.952,2452,5.725,2453,5.725,2454,5.725,2455,7.536,2456,5.725]],["title/classes/Num.html",[0,0.247,590,2.976]],["body/classes/Num.html",[0,0.29,2,1.023,3,0.052,4,0.052,5,0.052,9,0.081,11,0.951,13,1.213,16,0.981,26,1.877,35,1.054,36,0.005,37,0.746,38,0.126,39,0.791,40,0.677,41,2.186,46,0.052,47,1.353,61,0.003,62,0.003,65,1.128,71,1.305,73,1.096,84,0.849,85,0.343,93,1.906,159,3.338,211,3.28,232,3.762,233,3.525,234,3.664,235,3.593,236,2.715,237,3.494,239,5.183,240,6.776,247,2.498,249,2.541,250,3.234,252,2.896,253,3.088,254,2.586,255,2.681,351,2.676,352,5.791,355,3.961,356,2.784,590,5.277,1051,5.44,1377,5.307,2457,6.058,2458,6.058,2459,7.819,2460,7.819,2461,7.819,2462,6.058,2463,6.058]],["title/classes/OTP.html",[0,0.247,435,2.418]],["body/classes/OTP.html",[0,0.212,2,0.751,3,0.038,4,0.038,5,0.038,9,0.059,10,0.748,11,1.387,13,0.89,14,2.526,16,1.088,35,0.854,36,0.005,37,0.604,38,0.137,39,0.641,40,0.825,41,1.864,43,0.051,45,0.899,46,0.055,61,0.003,62,0.003,71,1.057,73,0.888,84,0.888,85,0.251,105,1.243,167,2.232,191,2.672,200,1.498,226,3.026,232,1.931,233,3.328,234,2.968,235,2.911,247,2.612,249,1.864,338,2.896,394,2.125,435,4.359,448,5.127,450,4.102,451,2.807,452,2.807,507,1.836,587,4.258,588,3.762,589,4.403,591,3.689,597,2.906,602,3.292,621,3.693,625,2.373,626,2.373,627,3.011,636,2.265,643,3.654,650,3.144,652,2.807,659,4.481,660,3.229,858,3.991,875,3.292,876,3.292,908,3.292,1766,3.382,1828,3.292,1837,4.692,1851,6.133,1852,3.693,1853,6.685,1854,3.991,1855,3.991,1856,3.991,1857,3.991,1858,3.991,1859,3.991,1860,3.991,1861,3.991,2232,3.991,2464,6.334,2465,4.444,2466,4.444,2467,4.444,2468,4.444,2469,4.444,2470,4.444,2471,4.444,2472,4.444,2473,4.444]],["title/classes/OTPMapper.html",[0,0.247,1775,4.028]],["body/classes/OTPMapper.html",[0,0.233,2,0.824,3,0.042,4,0.042,5,0.042,9,0.065,16,0.767,20,1.699,23,2.001,35,0.912,36,0.005,37,0.645,38,0.109,39,0.684,40,0.937,41,1.707,43,0.077,45,0.963,46,0.058,47,1.51,48,1.918,49,1.872,61,0.003,62,0.003,65,1.259,66,1.487,73,0.948,84,0.948,85,0.193,105,0.924,160,2.064,200,0.908,226,2.788,351,3.259,387,2.567,435,4.635,438,2.669,448,4.476,450,3.779,507,1.612,591,3.399,627,2.531,660,3.447,752,3.463,759,2.869,762,3.757,765,4.107,775,2.199,777,4.013,778,5.009,779,3.611,780,5.127,782,3.399,783,4.975,784,4.371,785,4.013,787,2.57,789,2.486,903,2.983,929,2.983,1765,3.612,1766,3.611,1767,3.612,1773,4.052,1774,6.061,1775,5.28,2474,4.877,2475,4.877]],["title/classes/OTPRedisMapper.html",[0,0.247,1760,4.028]],["body/classes/OTPRedisMapper.html",[0,0.383,2,0.877,3,0.045,4,0.045,5,0.045,9,0.069,16,0.8,35,0.952,36,0.005,37,0.673,38,0.114,39,0.714,40,0.962,41,1.311,43,0.059,45,0.847,46,0.045,47,1.576,48,1.969,49,1.922,51,2.708,61,0.003,62,0.003,65,1.314,73,0.989,84,0.989,85,0.206,105,0.964,200,0.967,226,2.667,331,5.228,351,2.945,387,2.843,435,4.592,438,2.84,448,4.282,450,3.616,507,1.465,591,3.252,627,1.943,660,3.597,752,3.529,758,4.709,759,3.177,760,3.808,762,2.91,765,3.182,775,2.34,777,4.189,779,3.768,787,2.683,789,2.646,903,3.175,929,3.175,1758,7.715,1759,4.662,1760,5.51,1761,7.728,1762,5.864,1763,5.864,1764,6.338,1765,3.845,1766,3.768,1767,3.845,2476,7.058,2477,5.191,2478,5.191]],["title/injectables/OTPRedisService.html",[183,1.287,2479,4.287]],["body/injectables/OTPRedisService.html",[0,0.23,3,0.042,4,0.042,5,0.042,8,1.496,9,0.064,11,0.756,13,0.965,16,0.945,35,1.124,36,0.005,37,0.796,38,0.135,39,0.844,40,0.862,42,1.603,44,1.013,46,0.042,52,2.949,61,0.003,62,0.003,71,0.805,73,0.94,84,1.081,85,0.369,89,1.025,93,1.517,94,1.82,105,0.658,160,1.187,165,2.593,176,2.077,183,1.673,194,2.818,199,1.724,200,0.898,212,1.28,394,2.305,428,3.671,435,2.259,438,2.638,439,3.152,451,3.045,452,3.045,455,2.404,554,2.173,675,2.55,696,3.345,809,2.915,813,2.864,816,2.675,839,1.988,1061,2.781,1224,2.638,1226,2.707,1286,2.574,1417,5.714,1760,3.764,1763,4.873,1776,5.662,1778,5.662,1779,5.662,1780,2.915,1900,6.161,1983,3.41,1985,4.745,2029,4.006,2479,5.574,2480,4.821,2481,4.821,2482,4.821,2483,4.821,2484,4.821,2485,4.821,2486,4.329,2487,4.821,2488,6.024,2489,7.715,2490,4.821,2491,4.821,2492,4.821,2493,6.708,2494,4.821,2495,4.821,2496,4.821,2497,4.821,2498,4.821,2499,4.821,2500,4.329,2501,4.821,2502,6.708,2503,4.821,2504,4.821]],["title/classes/OTPRepo.html",[0,0.247,428,2.823]],["body/classes/OTPRepo.html",[0,0.288,2,1.019,3,0.052,4,0.052,5,0.052,9,0.08,16,0.979,35,1.165,36,0.005,37,0.824,38,0.14,39,0.874,40,0.966,43,0.099,46,0.079,61,0.003,62,0.003,73,1.092,84,1.21,85,0.309,131,2.122,176,2.216,192,1.684,281,3.535,428,4.265,435,4.048,438,3.299,675,2.963,696,3.886,809,3.387,813,3.327,816,3.109,1776,6.199,1777,4.707,1778,6.199,1779,6.199,1780,3.387,2505,6.028,2506,6.028,2507,6.028]],["title/classes/Password.html",[0,0.247,474,2.518]],["body/classes/Password.html",[0,0.293,2,1.036,3,0.053,4,0.053,5,0.053,9,0.082,11,0.962,13,1.228,16,0.987,35,1.062,36,0.005,37,0.752,38,0.127,39,0.798,40,0.686,45,0.92,46,0.053,47,1.369,48,1.803,51,2.48,61,0.003,62,0.003,65,1.142,71,1.315,73,1.104,84,0.859,85,0.345,93,1.929,161,2.995,232,3.784,233,3.553,234,3.693,235,3.621,236,2.736,237,3.537,239,4.765,242,3.092,244,5.837,247,2.529,249,2.572,250,3.274,252,2.932,253,3.125,254,2.618,255,2.714,291,1.956,331,5.837,333,4.677,336,5.574,373,3.274,474,4.486,479,7.077,631,5.152,1131,5.095,1999,6.152,2508,6.132,2509,6.132,2510,6.132,2511,6.132]],["title/classes/PhoneNumber.html",[0,0.247,1090,2.63]],["body/classes/PhoneNumber.html",[0,0.292,2,1.031,3,0.053,4,0.053,5,0.053,9,0.081,11,0.957,13,1.222,16,0.985,35,1.059,36,0.005,37,0.749,38,0.127,39,0.795,40,0.682,45,0.918,46,0.053,47,1.362,48,1.797,51,2.472,61,0.003,62,0.003,65,1.136,71,1.311,73,1.101,84,0.855,85,0.344,93,1.92,161,2.986,232,3.775,233,3.542,234,3.681,235,3.61,236,2.728,237,3.52,239,4.754,240,5.819,242,3.082,244,5.819,247,2.516,249,2.56,250,3.258,252,2.917,253,3.11,254,2.605,255,2.7,276,5.136,291,1.947,331,5.819,333,4.662,336,5.557,373,3.258,1090,4.676,1143,5.48,2000,6.133,2512,6.102,2513,6.102,2514,7.855,2515,6.102,2516,6.102]],["title/classes/PrismaErrorFilter.html",[0,0.247,1865,3.822]],["body/classes/PrismaErrorFilter.html",[0,0.192,2,0.677,3,0.035,4,0.035,5,0.035,8,1.825,9,0.053,10,0.695,11,0.629,12,4.704,13,0.803,16,0.789,18,2.022,20,1.192,26,1.573,35,0.793,36,0.005,37,0.927,38,0.113,39,0.595,41,1.012,43,0.046,44,1.999,45,0.736,46,0.035,61,0.003,62,0.003,65,1.297,66,1.043,67,2.997,68,2.651,71,0.981,72,3.399,73,0.824,74,3.274,75,2.251,76,3.059,78,2.51,79,2.044,80,3.329,81,3.744,83,3.392,84,0.562,85,0.304,86,1.774,87,1.808,89,0.853,90,2.651,91,1.478,93,1.262,94,1.361,95,1.682,96,1.957,97,1.957,98,2.812,99,2.141,100,2.602,102,2.251,103,2.702,104,2.932,105,0.951,106,2.091,107,2.602,108,2.091,109,1.999,110,2.091,167,1.758,212,2.601,216,2.51,236,1.392,297,1.808,448,4.928,455,4.51,799,3.91,806,2.622,1061,3.392,1075,4.424,1218,4.259,1224,3.218,1225,5.681,1226,3.302,1229,4.844,1231,5.206,1242,2.453,1245,2.313,1246,4.16,1247,3.392,1248,2.313,1249,2.313,1279,4.591,1286,3.14,1288,3.992,1431,4.16,1486,6.134,1704,4.16,1862,5.786,1863,3.601,1864,3.601,1865,4.356,1866,5.281,1867,4.886,1868,5.281,1869,5.281,1870,5.281,1871,6.253,1872,3.601,1873,6.253,2517,4.01,2518,4.01,2519,4.01]],["title/modules/PrismaModule.html",[111,2.755,1723,3.822]],["body/modules/PrismaModule.html",[0,0.28,3,0.05,4,0.05,5,0.05,36,0.005,46,0.05,61,0.003,62,0.003,85,0.393,89,1.246,111,4.549,113,3.584,114,3.584,115,3.831,116,3.831,117,3.701,118,5.571,119,5.571,126,5.003,127,3.831,128,3.831,130,5.974,144,6.027,145,6.027,171,4.026,187,2.801,807,6.358,811,6.071,822,5.575,824,3.977,825,4.574,1160,4.847,1163,3.477,1723,7.437,2320,6.358,2520,5.262,2521,5.859,2522,5.262,2523,5.859,2524,5.859,2525,6.358,2526,5.859,2527,5.859]],["title/injectables/PrismaService.html",[183,1.287,811,3.259]],["body/injectables/PrismaService.html",[0,0.278,3,0.05,4,0.05,5,0.05,7,3.792,9,0.077,10,0.898,16,1.059,36,0.005,46,0.05,61,0.003,62,0.003,71,0.969,73,1.066,84,1.261,85,0.301,89,1.235,165,2.757,167,2.141,183,1.896,194,2.794,223,1.904,236,2.016,271,6.609,297,2.617,554,2.617,806,3.795,811,4.803,1418,6.282,1518,7.478,1519,8.61,2528,5.805,2529,8.482,2530,7.478,2531,9.587,2532,5.805,2533,5.805,2534,5.805,2535,5.805,2536,5.805,2537,9.91,2538,5.805,2539,8.482]],["title/classes/RedisErrorFilter.html",[0,0.247,1903,3.822]],["body/classes/RedisErrorFilter.html",[0,0.227,2,0.802,3,0.041,4,0.041,5,0.041,8,2.06,9,0.063,10,0.784,11,0.745,12,3.9,13,0.951,16,0.867,18,1.379,26,1.7,35,0.895,36,0.005,37,0.885,38,0.124,39,0.672,41,1.199,43,0.054,44,1.832,45,0.701,46,0.041,61,0.003,62,0.003,65,1.236,71,1.108,72,3.735,73,0.93,74,3.266,75,2.666,76,3.304,78,2.833,79,3.383,80,3.658,81,4.044,83,2.739,84,0.665,85,0.328,86,2.101,87,2.14,89,1.01,90,2.992,91,1.75,93,1.494,94,1.496,95,1.992,96,2.317,97,2.317,98,3.173,99,3.544,100,2.937,102,2.666,103,3.05,104,3.309,105,1.045,106,2.476,107,2.937,108,2.476,109,2.367,110,2.476,167,1.932,212,1.762,236,1.648,297,2.14,455,4.131,839,3.155,1061,3.828,1218,4.68,1224,3.632,1226,4.652,1242,2.904,1243,3.104,1244,3.104,1245,2.739,1247,3.828,1248,2.739,1249,2.739,1286,3.544,1288,4.505,1431,4.695,1486,5.417,1903,4.916,1983,4.695,1985,5.861,2024,6.358,2025,7.441,2026,4.264,2027,4.264,2028,4.264,2029,5.515,2030,5.182,2031,5.96,2540,4.748,2541,4.748,2542,4.748]],["title/classes/RedisLogicError.html",[0,0.247,1985,3.65]],["body/classes/RedisLogicError.html",[0,0.254,2,0.899,3,0.046,4,0.046,5,0.046,7,3.58,8,2.522,9,0.071,10,0.848,11,1.275,13,1.066,14,2.863,15,2.223,16,0.814,18,2.717,19,3.929,20,1.762,21,4.643,22,4.432,23,1.966,25,4.432,26,1.784,27,2.646,28,2.388,29,3.929,30,3.929,31,3.929,32,3.929,33,3.929,34,4.758,35,0.718,36,0.005,37,0.508,38,0.116,39,0.539,40,0.803,43,0.061,44,1.119,45,0.563,46,0.062,47,1.189,48,1.643,49,1.603,50,3.929,51,2.259,54,2.654,55,2.776,59,2.776,60,2.776,61,0.003,62,0.003,65,0.991,66,1.274,68,3.237,69,3.12,387,2.663,759,2.457,760,3.177,839,3.586,1186,4.873,1187,5.078,1188,4.873,1189,5.078,1190,2.913,1199,3.159,1200,3.362,1213,3.48,1214,3.48,1763,3.362,1846,3.943,1847,5.318,1982,4.423,1983,6.617,1984,3.943,1985,5.078,1986,4.78,2543,7.179]],["title/modules/RedisModule.html",[111,2.755,1724,3.822]],["body/modules/RedisModule.html",[0,0.316,3,0.057,4,0.057,5,0.057,36,0.005,46,0.057,61,0.004,62,0.004,85,0.374,89,1.404,111,4.811,113,4.037,114,4.037,115,4.316,116,4.316,117,4.169,118,5.892,119,5.892,126,5.399,127,4.316,128,4.316,130,6.447,144,4.669,145,4.669,428,5.566,439,4.316,1724,7.452,1900,6.731,2479,6.861,2486,5.928,2544,5.928,2545,5.928,2546,5.928,2547,6.601,2548,6.601]],["title/injectables/RedisService.html",[183,1.287,1900,3.502]],["body/injectables/RedisService.html",[0,0.29,3,0.052,4,0.052,5,0.052,9,0.081,10,0.925,16,1.038,36,0.005,38,0.098,45,0.642,46,0.052,61,0.003,62,0.003,73,1.097,84,1.214,85,0.31,89,1.292,105,0.829,165,2.717,167,2.188,176,1.792,183,1.953,194,2.691,200,1.131,554,2.738,1517,7.784,1518,7.875,1520,8.223,1530,8.223,1763,5.475,1900,5.316,2530,7.608,2549,6.072,2550,6.072,2551,6.072,2552,6.072,2553,6.072,2554,5.453,2555,6.072,2556,9.157,2557,5.453,2558,6.072,2559,6.072,2560,6.072,2561,6.072,2562,6.072,2563,6.072]],["title/guards/RefreshTokenGuard.html",[153,3.156,2564,4.287]],["body/guards/RefreshTokenGuard.html",[0,0.198,3,0.036,4,0.036,5,0.036,9,0.055,11,1.113,13,1.206,16,0.883,20,1.22,35,1.05,36,0.005,37,0.743,38,0.126,39,0.788,44,1.637,45,0.912,46,0.036,61,0.003,62,0.003,65,0.771,66,1.068,71,0.691,73,0.844,74,1.768,84,0.994,85,0.362,89,0.881,91,1.527,94,1.784,95,1.738,105,0.969,122,5.86,131,0.892,139,5.41,155,2.39,158,2.767,165,2.502,166,4.92,167,2.35,168,4.702,170,5.825,171,3.613,173,3.804,174,4.623,176,1.378,177,4.702,179,5.125,180,3.069,183,1.502,184,2.616,186,3.234,187,1.981,188,4.646,189,2.534,190,2.16,192,1.157,194,2.569,195,3.234,196,3.234,197,2.812,199,2.785,200,1.541,202,3.937,203,2.326,204,2.616,216,2.571,218,1.704,219,2.616,220,1.869,222,1.625,223,1.975,305,3.158,387,1.844,466,4.26,1087,4.088,1088,2.812,1108,5.539,1110,3.234,1113,3.937,1224,3.295,1486,2.708,1966,6.472,2564,5.004,2565,4.142,2566,5.408,2567,6.022,2568,4.142,2569,4.142,2570,4.142,2571,6.022,2572,4.142,2573,4.142,2574,4.142,2575,4.142,2576,4.142,2577,4.142,2578,4.142,2579,4.142,2580,5.408,2581,4.142,2582,4.142,2583,4.142,2584,4.142,2585,4.142,2586,4.142,2587,4.142]],["title/classes/RegistryAPIBootstrap.html",[0,0.247,1906,4.028]],["body/classes/RegistryAPIBootstrap.html",[0,0.18,2,0.638,3,0.032,4,0.032,5,0.032,9,0.05,10,0.664,15,1.904,16,1.008,35,0.758,36,0.005,37,0.536,38,0.12,39,0.569,40,0.422,43,0.043,46,0.032,61,0.002,62,0.002,63,2.946,73,0.942,76,2.68,78,2.869,84,1.17,85,0.403,87,1.702,89,0.803,91,2.935,94,1.456,139,2.467,165,2.442,167,2.515,194,2.472,200,1.047,259,3.977,523,2.795,608,4.562,681,2.562,696,1.882,716,4.165,799,2.119,811,2.384,1007,3.136,1008,2.946,1031,2.308,1215,2.795,1358,2.946,1388,4.978,1535,2.795,1643,2.795,1671,2.946,1716,2.795,1717,2.795,1742,2.946,1763,2.384,1865,2.795,1874,3.389,1875,5.05,1876,3.389,1877,3.389,1878,6.035,1879,3.136,1880,3.389,1881,2.946,1882,3.389,1883,5.05,1884,3.389,1885,2.795,1886,3.389,1887,3.389,1888,3.389,1889,3.389,1890,3.389,1891,3.389,1892,2.946,1893,3.389,1894,2.946,1895,3.389,1896,5.05,1897,3.389,1898,3.389,1899,3.389,1900,2.562,1901,3.389,1902,3.389,1903,2.795,1904,3.389,1905,3.389,1906,4.39,1907,6.188,1908,5.05,1909,6.035,1910,5.05,1911,3.389,1912,3.389,1913,3.389,1914,3.389,1915,3.389,1916,3.389,1917,3.389,1918,3.389,1919,3.389,1920,3.389,1921,4.672,1922,3.389,1923,5.05,1924,3.389,1925,3.389,1926,3.389,1927,5.05,1928,3.389,1929,3.389,1930,6.688,1931,3.389,1932,3.389,1933,6.688,1934,3.389,1935,6.688,1936,8.534,1937,3.389,1938,3.389,1939,3.389,1940,3.389,1941,3.389,1942,3.389,1943,3.389,1944,3.389,1945,3.389,1946,3.389,1947,3.389,1948,3.389,1949,6.688,1950,3.389,1951,3.389,1952,3.389,1953,3.389,1954,5.05,1955,3.389,1956,3.389,1957,3.389,1958,3.389,1959,3.389,2588,5.623,2589,3.774,2590,3.774,2591,3.774,2592,3.774,2593,3.774,2594,3.774,2595,3.774,2596,3.774]],["title/classes/ServiceErrorFilter.html",[0,0.247,1885,3.822]],["body/classes/ServiceErrorFilter.html",[0,0.2,2,0.707,3,0.036,4,0.036,5,0.036,8,1.883,9,0.056,10,0.716,11,0.657,12,4.555,13,0.838,16,0.809,18,1.215,20,1.229,23,1.275,26,1.244,35,0.818,36,0.005,37,0.916,38,0.115,39,0.614,41,1.056,43,0.048,44,1.961,45,0.641,46,0.036,61,0.003,62,0.003,65,1.329,66,1.388,67,3.092,68,2.735,69,2.636,71,1.012,72,3.483,73,0.85,74,3.046,75,2.349,76,3.121,78,2.589,79,3.092,80,3.412,81,3.82,83,2.414,84,0.586,85,0.31,86,1.852,87,1.886,89,0.89,90,2.735,91,1.542,93,1.317,94,1.395,95,1.755,96,2.042,97,2.042,98,2.9,99,3.239,100,2.684,102,2.349,103,2.787,104,3.024,105,0.974,106,2.182,107,2.684,108,2.182,109,2.086,110,2.182,167,1.802,212,2.077,236,1.453,297,1.886,341,4.291,455,3.902,546,3.71,838,3.239,839,3.685,949,2.018,1075,3.499,1218,4.364,1221,3.6,1226,4.394,1228,4.291,1229,3.831,1231,4.117,1234,4.291,1242,2.559,1243,2.736,1244,2.736,1245,2.414,1247,3.499,1248,2.414,1249,2.414,1282,5.312,1283,4.117,1284,3.267,1286,3.239,1292,4.736,1486,3.966,1844,3.966,1885,4.493,2030,4.736,2041,5.929,2042,3.757,2043,3.757,2044,5.04,2045,5.447,2046,5.447,2047,5.447,2048,5.447,2049,5.447,2050,5.447,2051,5.04,2052,4.736,2053,5.447,2054,5.447,2597,4.184,2598,4.184,2599,4.184]],["title/classes/ServiceErrors.html",[0,0.247,1282,3.502]],["body/classes/ServiceErrors.html",[0,0.252,2,0.89,3,0.045,4,0.045,5,0.045,7,3.554,8,2.508,9,0.07,10,0.842,11,1.268,13,1.055,14,2.843,15,2.213,16,0.808,18,2.708,19,3.901,20,1.755,21,4.623,22,4.413,23,1.96,25,4.413,26,1.776,27,2.627,28,2.371,29,3.901,30,3.901,31,3.901,32,3.901,33,3.901,34,4.738,35,0.71,36,0.005,37,0.503,38,0.115,39,0.533,40,0.797,43,0.06,44,1.107,45,0.557,46,0.061,47,1.176,48,1.631,49,1.592,50,3.901,51,2.243,54,2.626,55,2.747,59,2.747,60,2.747,61,0.003,62,0.003,65,0.981,66,1.265,68,3.214,69,3.098,351,2.44,387,2.652,760,3.155,784,3.717,839,3.845,1187,5.042,1188,4.839,1189,5.042,1190,2.882,1213,3.444,1214,3.444,1282,4.839,1283,6.33,1844,4.661,1845,3.901,1984,3.901,1992,4.376,1993,5.923,1994,5.923,1995,4.376,2600,7.128]],["title/controllers/SuperAdminController.html",[146,3.062,1727,4.287]],["body/controllers/SuperAdminController.html",[0,0.371,3,0.067,4,0.067,5,0.067,36,0.005,46,0.067,54,3.874,61,0.004,62,0.004,85,0.308,89,1.653,146,4.611,148,5.079,150,5.754,151,6.447,1727,7.573,2601,7.769,2602,7.769,2603,7.769]],["title/guards/SuperAdminJwt.html",[153,3.156,706,4.287]],["body/guards/SuperAdminJwt.html",[0,0.214,3,0.038,4,0.038,5,0.038,8,1.387,9,0.059,11,0.998,13,1.273,16,0.839,20,1.289,23,1.336,35,0.998,36,0.005,37,0.706,38,0.12,39,0.749,44,1.556,45,0.782,46,0.038,61,0.003,62,0.003,65,0.832,66,1.128,71,0.746,73,0.891,74,1.907,84,0.891,85,0.361,89,0.95,91,1.647,94,1.821,95,1.874,105,0.61,107,1.977,151,5.705,155,2.577,157,4.012,158,2.922,159,2.714,160,1.986,161,2.417,162,4.71,163,5.71,165,2.381,166,5.094,167,2.152,168,4.964,169,3.488,170,5.791,171,3.695,172,4.012,173,4.016,174,4.787,175,4.012,176,1.455,177,4.964,178,4.012,179,4.528,180,2.277,181,4.316,182,3.712,183,1.586,184,2.822,185,4.676,186,3.488,187,2.136,188,4.157,189,2.733,190,3.316,191,1.35,192,1.248,193,6.151,194,2.503,195,3.488,196,3.488,197,3.033,198,3.16,199,2.647,200,1.587,201,3.488,202,2.921,203,2.509,204,2.822,205,3.712,206,3.712,207,2.57,208,4.012,209,3.712,210,3.488,211,1.874,212,1.688,213,4.012,214,3.712,215,2.136,216,1.907,217,3.712,218,1.264,219,2.822,220,1.387,221,3.712,222,1.753,223,1.465,224,2.145,225,4.012,226,1.486,227,2.822,228,4.012,229,4.012,706,5.283,2377,5.71,2604,8.065]],["title/classes/ThrottlerErrorFilter.html",[0,0.247,1892,4.028]],["body/classes/ThrottlerErrorFilter.html",[0,0.276,2,0.976,3,0.05,4,0.05,5,0.05,9,0.077,11,0.907,13,1.157,16,0.859,20,1.537,35,1.022,36,0.005,37,0.857,38,0.123,39,0.767,44,1.214,46,0.05,61,0.003,62,0.003,65,1.412,66,1.345,67,3.864,68,3.418,69,3.295,71,1.265,72,4.131,73,1.062,74,3.612,75,3.244,76,3.583,78,3.237,79,3.864,80,4.046,81,4.385,83,3.333,84,0.81,85,0.356,86,2.557,87,2.605,89,1.229,90,3.418,91,2.129,93,1.818,94,1.482,95,2.424,96,2.82,97,2.82,98,2.763,100,2.557,103,2.655,104,2.881,105,0.789,107,2.557,545,4.511,546,3.534,1011,5.874,1676,5.189,1740,4.511,1892,5.919,2605,5.778,2606,7.582,2607,5.778,2608,8.984,2609,5.778,2610,5.778,2611,8.068,2612,7.582]],["title/classes/UUID.html",[0,0.247,191,1.559]],["body/classes/UUID.html",[0,0.235,2,0.829,3,0.042,4,0.042,5,0.042,9,0.065,10,0.802,11,1.222,13,0.982,14,2.708,16,1.035,35,1.05,36,0.005,37,0.743,38,0.136,39,0.788,40,0.939,44,1.031,45,1.023,46,0.042,61,0.003,62,0.003,71,1.133,73,0.951,84,1.091,85,0.308,94,1.522,105,1.205,167,1.966,191,2.882,199,1.754,200,1.264,212,1.302,215,3.246,223,1.609,232,3.384,234,3.182,235,3.12,236,2.704,239,4.261,246,3.966,247,2.8,249,3.525,250,2.619,252,3.246,253,2.5,254,2.094,255,2.171,271,3.47,310,4.406,338,1.925,339,2.912,342,3.47,343,5.286,407,5.301,408,5.029,752,3.469,1234,3.47,2393,6.098,2613,4.906,2614,8.404,2615,6.79,2616,4.906,2617,4.906,2618,4.906,2619,4.906,2620,6.79,2621,9.801,2622,6.79,2623,6.79,2624,6.79,2625,8.404,2626,6.79,2627,6.79,2628,6.79,2629,4.906,2630,4.906,2631,4.906]],["title/classes/UUIDGroup.html",[0,0.247,2632,4.634]],["body/classes/UUIDGroup.html",[0,0.195,2,0.688,3,0.035,4,0.035,5,0.035,9,0.079,10,0.703,13,0.816,14,2.373,16,0.973,23,1.948,25,3.033,28,1.979,35,1.042,36,0.005,37,0.737,38,0.133,39,0.782,40,0.864,44,0.856,45,0.817,46,0.035,47,0.91,51,1.872,61,0.003,62,0.003,66,1.056,71,0.993,73,0.834,84,0.985,85,0.278,94,1.374,105,1.211,158,2.734,160,1.465,167,2.34,191,2.336,199,1.457,200,1.108,223,2.305,232,3.054,234,2.788,235,2.734,236,3.078,239,4.229,242,2.335,243,3.89,247,2.454,249,3.601,250,2.176,252,2.845,253,2.077,254,1.74,255,1.803,271,4.972,305,2.413,338,1.599,339,2.418,340,1.771,342,4.209,343,4.039,347,2.766,351,1.395,403,4.407,480,3.66,507,1.235,664,6.028,762,2.454,784,2.125,809,2.586,816,2.373,955,2.788,959,2.788,1370,5.84,1395,4.646,1400,2.967,1704,4.209,1867,4.944,2580,5.344,2632,7.961,2633,4.075,2634,7.029,2635,7.729,2636,5.95,2637,5.95,2638,5.95,2639,5.95,2640,5.95,2641,5.95,2642,5.95,2643,5.344,2644,5.95,2645,4.075,2646,7.029,2647,4.075,2648,5.95,2649,4.075,2650,4.075,2651,4.075,2652,4.075,2653,4.075,2654,4.075,2655,4.075,2656,4.075,2657,4.075,2658,7.029,2659,4.075,2660,4.075,2661,4.075,2662,5.95,2663,4.075,2664,5.95,2665,4.075,2666,4.075,2667,4.075,2668,4.075,2669,4.075]],["title/classes/User.html",[0,0.247,218,1.46]],["body/classes/User.html",[0,0.144,2,0.51,3,0.026,4,0.026,5,0.026,9,0.04,10,0.56,11,0.918,13,0.604,14,1.89,16,1.089,35,1.078,36,0.005,37,0.939,38,0.154,39,0.809,40,1.024,43,0.034,45,0.968,46,0.05,61,0.002,62,0.002,71,0.791,73,0.664,84,1.12,85,0.188,94,0.59,105,1.19,131,2.017,167,1.93,191,2.003,200,1.586,218,2.409,232,1.312,233,3.447,234,2.221,235,2.178,247,1.954,249,1.988,276,1.973,338,2.296,368,4.223,373,1.612,380,2.236,394,1.443,474,4.572,507,1.719,587,3.375,588,2.982,589,3.627,591,3.452,592,3.341,597,1.973,602,2.236,604,2.711,606,2.711,608,4.889,621,2.508,623,2.508,625,1.612,626,1.612,627,3.261,628,3.934,629,3.846,630,2.236,631,1.973,633,2.135,636,1.538,643,2.734,644,2.049,645,2.049,646,2.357,650,3.352,651,3.7,652,1.906,653,1.612,659,2.135,660,2.415,661,2.049,662,2.471,663,3.7,664,4.549,665,2.357,772,1.906,775,1.361,1090,4.774,1335,2.357,1698,2.135,1823,2.236,1827,2.236,1836,3.51,1996,4.862,1997,2.357,1998,5.508,1999,2.357,2000,2.357,2001,2.711,2002,2.711,2003,2.711,2004,2.711,2005,2.711,2006,2.711,2007,2.711,2008,2.711,2009,2.711,2010,2.508,2011,2.711,2012,2.508,2013,2.711,2014,2.508,2015,2.711,2016,2.711,2017,2.711,2018,4.256,2019,2.711,2020,4.256,2021,2.711,2022,4.256,2023,2.711,2230,2.711,2670,4.739,2671,3.018,2672,3.018,2673,3.018,2674,3.018,2675,3.018,2676,3.018,2677,3.018,2678,3.018,2679,3.018,2680,3.018,2681,3.018,2682,3.018,2683,3.018,2684,3.018,2685,3.018,2686,3.018,2687,3.018,2688,3.018,2689,3.018,2690,3.018,2691,3.018,2692,3.018,2693,3.018]],["title/controllers/UserController.html",[146,3.062,1726,4.287]],["body/controllers/UserController.html",[0,0.113,3,0.02,4,0.02,5,0.02,8,0.731,9,0.031,11,1.134,12,1.201,13,0.472,16,0.887,23,0.495,35,1.055,36,0.005,37,0.769,38,0.126,39,0.792,44,0.495,45,0.249,46,0.02,51,1.222,61,0.002,62,0.002,65,0.439,66,0.689,73,0.544,76,1.548,78,1.006,84,1.096,85,0.374,86,1.043,87,1.062,89,0.501,90,4.041,91,0.868,94,1.706,98,1.127,100,1.043,105,0.933,107,1.043,131,0.836,146,1.398,148,1.541,150,1.745,165,2.608,167,2.035,179,1.323,180,3.483,181,2.635,190,5.036,192,0.658,194,2.502,199,0.843,200,0.723,203,5.367,210,1.84,212,1.031,218,2.788,223,2.37,226,1.647,227,2.452,230,3.336,232,1.024,246,1.687,255,1.043,291,0.752,297,1.062,327,3.1,351,1.329,397,2.97,424,1.958,447,1.667,450,1.062,451,1.488,467,1.958,474,1.15,485,1.958,506,3.361,517,1.84,543,1.958,546,1.441,557,2.183,627,0.882,680,4.77,681,1.599,696,1.936,697,2.116,711,3.361,712,1.958,715,1.958,716,1.745,717,2.116,718,2.116,719,2.116,737,4.447,743,6.489,744,2.116,745,1.84,881,0.988,884,1.667,885,1.84,949,1.291,1072,2.635,1104,1.84,1111,2.635,1113,4.152,1115,4.771,1146,2.452,1164,1.043,1236,1.84,1276,2.538,1417,6.466,1615,2.746,1624,3.361,1625,2.746,1636,1.84,1660,3.503,1670,3.226,1680,1.84,1726,3.226,1730,2.116,1731,2.116,1737,2.116,1740,1.84,1744,2.116,1747,2.116,1749,2.116,1805,1.84,2082,1.745,2277,2.116,2278,2.116,2279,2.116,2280,2.116,2281,2.116,2282,2.116,2284,1.958,2352,1.958,2564,1.958,2566,2.116,2694,2.356,2695,4.952,2696,3.883,2697,3.883,2698,3.883,2699,3.883,2700,3.883,2701,3.883,2702,2.356,2703,2.356,2704,2.356,2705,2.356,2706,2.356,2707,2.356,2708,2.356,2709,2.356,2710,2.356,2711,2.356,2712,2.356,2713,3.883,2714,2.356,2715,2.356,2716,2.356,2717,2.356,2718,2.356,2719,2.356,2720,2.356,2721,2.356,2722,2.356,2723,2.356,2724,3.883,2725,2.356,2726,2.356,2727,2.356,2728,2.356,2729,2.356,2730,2.356,2731,2.356,2732,2.356,2733,2.356,2734,2.356,2735,3.883,2736,2.356,2737,2.356,2738,2.356,2739,2.356,2740,2.356,2741,2.356,2742,2.356,2743,2.356,2744,2.356,2745,3.883,2746,3.883,2747,2.356,2748,2.356,2749,2.356,2750,2.356,2751,2.356,2752,2.356,2753,2.356,2754,2.356,2755,2.356,2756,2.356,2757,2.356,2758,2.356,2759,2.356,2760,5.743,2761,2.356,2762,2.116,2763,2.356,2764,2.356,2765,3.883,2766,2.356,2767,2.356,2768,2.356,2769,3.487,2770,3.883,2771,3.883,2772,3.883,2773,2.356,2774,2.356,2775,2.356,2776,2.356,2777,5.743,2778,3.883,2779,2.356,2780,3.883,2781,2.356,2782,2.356,2783,3.883,2784,2.356,2785,5.743,2786,2.356,2787,2.356,2788,3.883,2789,2.356,2790,2.356,2791,2.356,2792,2.356,2793,2.356,2794,2.356,2795,2.356,2796,2.356,2797,2.356,2798,2.356,2799,2.356]],["title/classes/UserFirestoreMapper.html",[0,0.247,1806,4.028]],["body/classes/UserFirestoreMapper.html",[0,0.239,2,0.845,3,0.043,4,0.043,5,0.043,9,0.067,16,0.78,35,0.928,36,0.005,37,0.751,38,0.111,39,0.697,40,1.052,43,0.057,45,0.97,46,0.059,47,1.537,48,1.939,49,1.892,51,2.667,61,0.003,62,0.003,65,1.282,73,0.964,84,0.964,85,0.312,105,0.94,131,1.077,143,2.392,200,0.932,218,2.398,291,1.596,351,2.9,368,2.256,387,3.068,474,2.442,507,1.039,566,4.677,591,3.19,592,3.087,752,3.49,758,4.638,759,3.279,760,4.241,761,5.541,762,2.838,765,3.103,767,4.539,768,2.609,773,5.374,774,4.869,775,2.256,1090,2.55,1497,6.968,1803,4.494,1804,5.828,1805,3.907,1806,5.374,1807,6.182,1808,7.066,2800,6.883,2801,5.004,2802,5.004,2803,5.004]],["title/classes/UserMapper.html",[0,0.247,2082,3.822]],["body/classes/UserMapper.html",[0,0.227,2,0.801,3,0.041,4,0.041,5,0.041,9,0.063,16,0.751,20,1.678,23,1.987,35,0.894,36,0.005,37,0.831,38,0.124,39,0.671,40,0.974,43,0.054,45,1.049,46,0.066,47,1.48,48,1.894,49,1.848,61,0.003,62,0.003,65,1.234,66,1.469,73,0.929,84,0.929,85,0.188,105,0.905,131,1.646,160,1.632,161,3.147,200,0.882,218,2.622,351,3.236,368,3.446,387,2.535,474,3.731,507,1.587,591,3.357,592,3.248,627,3.098,660,3.378,662,3.456,752,3.431,759,2.833,762,3.723,765,4.07,775,2.136,777,3.934,778,4.909,779,3.539,782,3.357,783,4.913,784,4.317,785,3.934,787,2.519,789,2.415,792,3.352,1090,3.896,1596,2.733,1804,5.662,2079,6.879,2080,3.937,2081,4.256,2082,4.909,2083,3.937,2084,3.937,2085,3.937,2804,4.739,2805,4.739]],["title/classes/UserPrismaMapper.html",[0,0.247,2329,4.028]],["body/classes/UserPrismaMapper.html",[0,0.245,2,1.346,3,0.044,4,0.044,5,0.044,9,0.068,16,0.793,23,1.471,35,0.944,36,0.005,37,0.817,38,0.113,39,0.708,40,0.957,46,0.044,47,1.563,48,1.959,49,1.912,51,2.202,61,0.003,62,0.003,65,1.303,66,1.242,73,0.981,84,0.981,85,0.277,105,0.956,131,1.507,161,2.66,200,0.955,218,2.727,291,1.635,351,2.395,368,3.155,387,3.028,474,3.416,507,1.064,591,2.838,592,2.746,660,3.567,662,3.649,752,3.516,758,4.685,759,3.298,760,3.789,772,3.238,775,2.312,777,4.154,779,3.737,789,2.613,792,3.627,796,5.464,799,5.194,800,5.464,802,5.464,803,5.464,804,5.464,805,4.951,806,3.352,1090,3.567,1596,2.957,1698,3.627,2010,4.26,2012,4.26,2014,4.26,2083,4.26,2084,4.26,2085,4.26,2329,5.464,2806,5.127,2807,9.25,2808,5.127,2809,5.127]],["title/injectables/UserPrismaRepo.html",[183,1.287,2525,4.287]],["body/injectables/UserPrismaRepo.html",[0,0.173,3,0.031,4,0.031,5,0.031,8,1.121,9,0.048,11,0.567,13,0.723,16,0.994,35,1.149,36,0.005,37,0.813,38,0.138,39,0.863,40,1.003,42,1.809,44,0.759,46,0.031,61,0.002,62,0.002,71,0.603,73,0.762,84,1.194,85,0.362,89,0.768,93,1.136,94,1.754,105,1.122,131,1.568,161,1.372,165,2.7,171,2.206,176,2.2,183,1.356,187,1.726,191,1.644,192,1.009,194,2.426,199,1.291,200,0.672,207,1.254,212,0.958,218,2.061,220,1.121,222,1.417,223,1.184,224,2.208,226,1.809,257,1.331,291,1.152,316,3.798,368,1.628,447,2.554,455,1.8,507,1.129,554,1.628,653,3.494,675,2.769,696,2.712,799,3.054,809,3.704,810,3,811,4.601,816,3.117,825,2.819,827,3.138,828,2.083,833,5.687,834,5.396,837,2.674,838,1.928,839,1.489,840,2.451,918,1.928,921,2.027,923,2.554,929,3.327,930,2.281,934,2.819,1478,2.819,1780,2.364,2177,3.884,2178,3.884,2183,4.003,2185,5.023,2187,5.023,2190,2.819,2191,4.003,2193,2.819,2194,4.003,2196,2.208,2218,3.242,2329,2.819,2330,3.242,2525,4.52,2810,3.611,2811,3.611,2812,3.611,2813,3.611,2814,3.611,2815,3.611,2816,3.611,2817,3.611,2818,3.611,2819,5.877,2820,3.611,2821,3.611,2822,6.545,2823,3.611,2824,3.611,2825,3.611,2826,3.611,2827,5.44,2828,3.611,2829,3.611,2830,3.611,2831,3.611,2832,3.611]],["title/classes/UserRepo.html",[0,0.247,171,2.092]],["body/classes/UserRepo.html",[0,0.17,2,0.6,3,0.031,4,0.031,5,0.031,9,0.047,16,0.925,18,1.881,20,1.464,26,1.832,27,2.387,28,2.154,35,1.1,36,0.005,37,0.778,38,0.132,39,0.826,40,0.999,42,1.18,43,0.093,46,0.075,47,1.199,48,1.482,49,1.446,61,0.002,62,0.002,65,0.661,66,1.503,73,0.752,84,1.143,85,0.286,131,1.961,159,2.765,160,2.243,161,3.221,171,2.177,176,2.146,191,2.561,192,0.991,207,1.232,212,1.719,216,2.765,218,1.833,220,2.01,222,3.202,223,1.164,224,2.185,226,1.786,242,2.541,257,1.308,281,3.446,291,1.132,316,1.851,340,2.815,350,2.717,368,2.92,507,1.345,675,2.462,696,2.677,782,2.928,787,1.349,809,3.138,813,2.292,816,2.88,918,1.895,921,1.993,946,3.681,947,2.507,948,3.301,949,2.714,950,3.229,951,3.301,952,3.983,953,3.301,954,3.301,955,3.035,956,3.229,957,3.301,958,3.301,959,3.035,961,1.809,962,1.851,963,4.159,1780,2.333,2177,4.286,2178,4.286,2181,4.235,2183,3.962,2185,3.962,2187,3.962,2190,2.771,2191,3.962,2193,2.771,2194,3.962,2196,2.171,2349,1.895,2833,2.409,2834,3.549,2835,3.549,2836,3.549,2837,3.549,2838,3.549,2839,3.549]],["title/injectables/UsersFirestore.html",[183,1.287,1511,4.287]],["body/injectables/UsersFirestore.html",[0,0.117,3,0.021,4,0.021,5,0.021,8,0.759,9,0.032,11,0.628,13,0.801,16,0.925,35,1.069,36,0.005,37,0.757,38,0.128,39,0.803,40,0.97,41,1.282,42,2.313,44,1.067,45,0.838,46,0.021,61,0.002,62,0.002,71,0.408,73,0.561,84,1.111,85,0.349,89,0.52,94,1.858,105,1.083,131,1.394,143,1.168,161,1.521,165,2.671,167,1.934,171,1.622,176,2.016,180,2.039,183,0.998,187,1.168,191,1.535,192,0.683,194,2.773,199,1.816,200,0.946,207,1.389,212,1.348,218,0.691,223,1.925,224,1.35,226,1.331,243,1.598,257,0.901,291,0.78,305,2.82,316,3.377,368,2.29,455,1.995,507,1.219,553,3.985,554,1.102,559,3.838,566,2.479,577,2.03,580,2.195,582,2.195,585,1.81,653,3.458,675,2.231,696,1.995,768,1.274,809,3.19,816,2.583,827,3.386,828,1.41,833,3.123,834,3.762,837,1.81,838,1.305,839,2.094,840,2.716,881,2.717,912,1.908,918,2.136,921,1.372,929,2.447,966,2.03,968,3.324,974,1.908,976,1.598,977,2.03,980,2.03,1200,3.708,1222,1.908,1224,1.337,1417,2.963,1475,2.03,1478,1.908,1494,2.03,1498,2.195,1511,3.324,1780,1.738,1792,3.123,1796,3.985,1806,1.908,2071,4.22,2143,4.22,2177,3.014,2178,3.014,2183,3.107,2185,4.253,2187,4.253,2190,1.908,2191,3.107,2193,1.908,2194,3.107,2196,1.495,2250,2.195,2251,2.195,2253,4.561,2257,2.195,2258,3.593,2259,4.561,2261,4.561,2287,2.195,2819,6.245,2840,2.444,2841,5.079,2842,4,2843,2.444,2844,2.444,2845,2.444,2846,2.444,2847,2.444,2848,2.444,2849,2.444,2850,2.444,2851,2.444,2852,5.87,2853,2.444,2854,4,2855,4,2856,2.444,2857,2.444,2858,2.444,2859,2.444,2860,2.444,2861,2.444,2862,2.444,2863,2.444,2864,4,2865,2.444,2866,2.444,2867,2.444,2868,2.444,2869,5.87,2870,4,2871,6.476,2872,5.079,2873,4,2874,4,2875,4,2876,4,2877,4,2878,4,2879,2.444,2880,4,2881,4,2882,2.444,2883,2.444,2884,4,2885,4,2886,2.444,2887,5.87,2888,4,2889,5.079,2890,2.444,2891,2.444,2892,2.444,2893,2.444,2894,2.444,2895,2.444,2896,2.444,2897,2.444,2898,2.444,2899,2.444,2900,2.444,2901,2.444,2902,2.444,2903,2.444,2904,2.444,2905,2.444,2906,2.444,2907,2.444,2908,2.444,2909,2.444,2910,2.444,2911,2.444]],["title/classes/ValueObject.html",[0,0.247,232,2.242]],["body/classes/ValueObject.html",[0,0.261,2,0.923,3,0.031,4,0.031,5,0.031,9,0.048,13,1.094,16,0.828,20,1.331,22,1.851,23,1.38,25,2.785,26,0.745,28,1.208,35,0.985,36,0.005,37,0.627,38,0.118,39,0.665,40,0.406,42,2.606,44,0.763,46,0.063,61,0.002,62,0.002,65,0.676,66,1.39,73,0.765,84,0.92,85,0.216,94,1.068,105,1.2,109,1.811,159,1.55,160,1.617,199,1.299,200,1.361,212,0.964,218,1.546,232,3.819,234,2.56,235,2.511,236,2.858,242,1.425,247,2.708,249,3.286,250,1.939,252,2.612,253,1.851,254,1.55,281,3.051,294,4.864,338,2.867,339,2.155,340,1.578,347,3.708,350,2.755,419,1.987,435,2.56,489,3.864,556,2.332,557,2.077,589,1.987,597,4.294,625,1.939,752,3.129,865,5.552,881,3.842,884,5.168,949,1.208,952,1.773,955,1.702,1190,2.99,1286,1.939,1351,2.69,1352,2.835,1360,4.539,1373,3.017,1374,5.457,1375,5.457,1376,3.017,1377,2.465,1380,5.704,1381,3.261,1382,3.017,1383,3.017,1384,6.839,1385,7.035,1386,7.392,1387,3.261,1388,4.864,1389,7.892,1390,5.898,1391,3.261,1392,6.561,1393,6.561,1394,5.898,1395,2.835,1396,3.261,1397,3.261,1398,3.261,1399,3.261,1400,1.811,1401,3.261,1402,3.261,1403,3.261,2912,3.632,2913,3.632,2914,3.632,2915,3.632,2916,3.632,2917,3.632]],["title/injectables/ViacepGateway.html",[183,1.287,1579,4.028]],["body/injectables/ViacepGateway.html",[0,0.266,3,0.048,4,0.048,5,0.048,9,0.074,11,0.874,13,1.116,16,0.839,18,1.618,35,0.998,36,0.005,37,0.706,38,0.12,39,0.749,40,0.623,43,0.064,44,1.171,45,1.083,46,0.048,61,0.003,62,0.003,71,0.93,73,1.037,84,0.781,85,0.351,89,1.185,93,1.753,94,1.447,105,0.761,125,5.986,165,2.235,176,1.694,183,1.846,190,2.905,194,1.73,199,1.993,200,1.038,223,1.827,305,2.259,344,2.952,397,2.421,405,4.528,407,5.779,408,5.483,410,3.941,411,4.127,412,4.127,413,4.127,414,4.127,415,5.483,422,3.941,554,2.512,839,2.298,995,3.782,1429,3.941,1541,4.35,1557,5.025,1559,3.782,1579,5.779,1969,4.63,2055,6.151,2056,5.004,2057,5.004,2058,5.004,2059,5.004,2060,5.004,2061,5.004,2062,5.004,2063,5.004,2064,5.004,2065,5.004,2066,5.004,2067,6.648,2068,5.004,2069,5.004,2070,5.004,2071,4.63,2072,4.63,2073,5.004,2074,5.004,2075,5.004,2076,5.004,2077,5.004,2078,5.004,2918,5.572,2919,5.572,2920,5.572]],["title/interfaces/create.html",[43,0.059,675,1.961]],["body/interfaces/create.html",[0,0.238,3,0.043,4,0.043,5,0.043,9,0.066,10,0.81,18,1.991,20,1.389,26,1.88,27,2.526,28,2.28,36,0.005,37,0.748,38,0.08,40,0.991,42,1.654,43,0.089,46,0.076,47,1.531,48,1.568,49,1.531,61,0.003,62,0.003,66,1.5,85,0.271,159,2.926,160,2.257,176,1.795,191,2.37,192,1.389,211,3.546,212,1.82,216,2.926,220,2.128,222,3.479,223,1.631,242,2.69,281,2.935,330,3.849,340,2.979,344,3.536,350,2.876,356,2.286,361,3.853,507,1.423,556,4.085,675,2.981,782,2.78,809,2.979,814,3.376,817,3.376,819,3.376,822,2.793,823,3.376,943,3.883,946,3.494,947,2.38,948,3.494,949,2.812,950,3.418,951,3.494,952,4.126,953,3.494,954,3.494,955,3.212,956,3.418,957,3.494,958,3.494,959,3.212,961,2.535,962,2.594,963,3.998,1752,1.02]],["title/interfaces/create-1.html",[43,0.049,215,2.063,675,1.64]],["body/interfaces/create-1.html",[0,0.223,3,0.04,4,0.04,5,0.04,9,0.062,10,0.774,18,1.902,20,1.535,23,0.979,26,1.776,27,2.414,28,2.179,36,0.005,38,0.075,40,0.919,42,1.55,43,0.099,46,0.079,47,1.463,48,1.733,49,1.463,61,0.003,62,0.003,66,1.593,85,0.325,131,1.769,159,2.796,160,2.211,176,1.981,191,1.979,192,1.302,211,1.954,212,1.739,216,2.796,218,2.143,220,2.351,222,3.224,223,1.528,224,2.555,242,2.57,257,1.717,281,3.118,291,1.486,330,2.616,340,2.846,344,1.858,350,1.954,361,2.025,387,1.427,507,0.967,557,3.579,675,2.49,762,1.921,782,3.071,787,2.879,809,2.846,813,1.989,816,1.858,946,3.338,947,2.274,948,3.338,949,2.733,950,3.266,951,3.338,952,3.697,953,3.338,954,3.338,955,3.069,956,3.266,957,3.338,958,3.338,959,3.069,961,2.375,963,4.413,1160,2.274,1164,2.062,1276,3.046,1290,3.046,1582,4.044,1752,0.956,1780,2.025,2120,4.006,2124,2.943,2126,2.943,2128,2.943,2130,2.943,2134,2.943,2136,2.943,2341,3.296,2347,3.296,2348,3.163,2349,2.488]],["title/interfaces/create-2.html",[43,0.049,394,2.063,675,1.64]],["body/interfaces/create-2.html",[0,0.214,3,0.038,4,0.038,5,0.038,9,0.059,10,0.751,18,1.847,20,1.289,26,1.817,27,2.343,28,2.115,36,0.005,38,0.103,40,0.828,42,1.486,43,0.101,46,0.08,47,1.42,48,1.455,49,1.42,61,0.003,62,0.003,66,1.431,85,0.319,131,2.006,159,2.714,160,2.181,161,3.066,171,1.812,176,2.027,191,2.754,192,1.248,207,1.551,212,1.688,216,2.714,218,2.636,220,2.298,222,3.344,223,1.465,224,3.143,226,2.115,242,2.495,257,1.647,281,3.164,291,1.425,316,2.33,340,2.763,350,2.667,368,3.338,507,1.32,675,2.417,782,2.578,787,1.698,813,1.907,816,2.536,918,2.385,921,2.509,946,3.241,947,2.208,948,3.241,949,2.683,950,3.17,951,3.241,952,3.937,953,3.241,954,3.241,955,2.98,956,3.17,957,3.241,958,3.241,959,2.98,961,2.277,962,2.33,963,4.515,1752,0.917,1780,1.942,2177,3.774,2178,3.774,2181,2.921,2183,2.733,2185,2.733,2187,2.733,2191,2.733,2194,2.733,2196,2.733,2349,2.385,2833,3.033]],["title/dependencies.html",[114,3.793,2921,3.585]],["body/dependencies.html",[0,0.38,36,0.005,61,0.004,62,0.004,89,1.324,91,2.932,114,3.806,139,4.069,143,3.804,151,4.402,184,3.931,201,4.859,267,5.589,268,5.589,311,5.589,392,3.494,444,4.402,504,4.859,799,3.494,806,4.069,1008,4.859,1031,3.806,1321,5.589,1465,4.61,1740,4.859,1742,4.859,1879,5.171,2395,5.589,2434,5.171,2554,5.589,2922,6.223,2923,6.223,2924,6.223,2925,6.223,2926,5.589,2927,6.223,2928,8.769,2929,6.223,2930,6.223,2931,6.223,2932,6.223,2933,6.223,2934,6.223,2935,7.955,2936,6.223,2937,6.223,2938,6.223,2939,6.223,2940,6.223,2941,6.223,2942,7.955,2943,6.223,2944,6.223,2945,6.223,2946,6.223,2947,6.223,2948,6.223,2949,6.223,2950,4.859,2951,6.223,2952,6.223,2953,6.223,2954,6.223,2955,6.223,2956,6.223,2957,6.223,2958,6.223,2959,6.223]],["title/miscellaneous/enumerations.html",[2960,2.821,2961,5.57]],["body/miscellaneous/enumerations.html",[8,1.488,9,0.064,36,0.005,40,0.536,56,4.949,61,0.003,62,0.003,86,2.957,100,4.402,146,3.965,179,3.751,180,3.405,218,1.891,224,1.617,236,3.698,254,2.852,279,4.726,403,3.55,419,2.623,435,4.246,556,2.852,557,2.54,596,4.01,625,2.559,626,2.559,703,1.943,828,3.854,962,2.499,976,4.368,1088,4.535,1111,3.253,1113,3.134,1184,3.983,1191,3.983,1192,3.983,1193,3.983,1194,3.983,1195,3.983,1196,3.983,1197,5.551,1198,3.983,1199,3.965,1200,4.858,1201,3.983,1203,3.983,1204,3.983,1205,3.983,1206,5.697,1207,4.535,1208,3.983,1209,4.949,1210,3.983,1211,3.55,1283,4.535,1373,3.983,1382,5.551,1383,3.983,1559,4.535,1564,3.983,1568,3.983,1569,3.983,1570,3.983,1571,3.983,1572,4.949,1753,3.983,1754,3.983,1755,3.983,1840,3.742,1841,5.551,1842,3.983,1843,3.983,1844,3.134,1845,3.55,1846,5.697,1847,4.949,1982,3.983,1983,4.726,1984,4.949,1992,3.983,1993,5.551,1994,5.551,1995,3.983,2488,6,2960,3.134,2961,4.304,2962,6.39,2963,6.681,2964,6.681,2965,4.793,2966,4.304,2967,4.793,2968,4.793,2969,4.793,2970,4.793,2971,4.793,2972,4.793]],["title/interfaces/find.html",[43,0.059,809,2.242]],["body/interfaces/find.html",[0,0.22,3,0.04,4,0.04,5,0.04,9,0.061,10,0.767,18,1.885,20,1.524,23,0.967,26,1.767,27,2.392,28,2.159,36,0.005,38,0.105,40,0.913,42,2.502,43,0.098,46,0.079,47,1.449,48,1.721,49,1.449,61,0.003,62,0.003,66,1.586,85,0.324,131,1.925,159,2.771,160,2.202,176,1.971,191,1.961,192,1.285,211,1.929,212,1.723,216,2.771,218,2.128,220,2.776,222,3.606,223,1.508,224,2.537,242,2.547,257,1.695,281,3.105,291,1.467,330,2.582,340,2.821,344,1.834,350,1.929,361,1.999,387,1.409,507,0.955,557,2.859,675,1.748,762,1.897,782,3.05,787,2.859,809,3.269,813,1.963,816,1.834,946,3.308,947,2.254,948,3.308,949,2.718,950,3.236,951,3.308,952,3.671,953,3.308,954,3.308,955,3.042,956,3.236,957,3.308,958,3.308,959,3.042,961,2.344,963,4.392,1160,2.245,1164,2.035,1276,3.007,1290,3.007,1582,4.016,1752,0.943,1780,1.999,2120,3.97,2124,2.905,2126,2.905,2128,2.905,2130,2.905,2134,2.905,2136,2.905,2341,3.253,2347,3.253,2348,3.122,2349,2.456]],["title/miscellaneous/functions.html",[2950,4.842,2960,2.821]],["body/miscellaneous/functions.html",[0,0.213,9,0.059,15,1.623,18,1.295,20,0.904,23,0.937,26,1.517,27,1.644,28,1.483,35,1.311,36,0.005,37,0.928,38,0.157,39,0.984,40,1.074,45,1.027,48,1.02,49,0.996,51,1.403,61,0.003,62,0.003,65,0.831,66,1.127,69,1.938,84,1.129,148,2.916,160,1.564,161,1.695,181,3.027,211,1.871,212,1.184,236,3.29,297,4.272,305,1.808,351,1.526,392,2.504,396,2.817,441,4.492,489,3.155,502,4.152,507,1.995,541,3.303,597,5.568,756,3.303,759,1.526,784,2.326,787,1.695,915,3.303,949,2.112,1074,2.916,1377,3.027,1400,3.166,1462,3.155,1487,3.303,1497,3.303,1664,3.482,1781,5.277,1782,4.005,1783,4.005,1784,3.706,1785,3.706,1786,4.005,1960,4.005,1961,4.005,1962,3.706,1963,4.005,1964,4.005,1965,4.005,1966,3.706,1967,4.005,1968,4.005,2950,3.482,2960,2.916,2973,4.46,2974,6.351,2975,5.703,2976,6.351,2977,5.703,2978,6.351,2979,6.351,2980,6.351,2981,5.703,2982,6.351,2983,5.703,2984,4.46,2985,6.351,2986,6.351,2987,4.005,2988,6.351,2989,4.005,2990,4.46,2991,9.151,2992,4.005,2993,4.46,2994,4.005,2995,4.46,2996,4.005,2997,4.46,2998,4.005,2999,4.46,3000,4.005,3001,4.46,3002,4.005,3003,4.46,3004,4.005,3005,4.46,3006,4.005,3007,4.46]],["title/interfaces/getAllCondominiumRelation.html",[43,0.059,2177,3.062]],["body/interfaces/getAllCondominiumRelation.html",[0,0.216,3,0.039,4,0.039,5,0.039,9,0.06,10,0.758,18,1.863,20,1.3,26,1.824,27,2.364,28,2.134,36,0.005,38,0.073,40,0.833,42,1.505,43,0.101,46,0.08,47,1.433,48,1.468,49,1.433,61,0.003,62,0.003,66,1.439,85,0.321,131,2.012,159,2.739,160,2.19,161,3.083,171,1.835,176,2.035,191,2.873,192,1.264,207,1.571,212,1.703,216,2.739,218,2.109,220,2.314,222,3.36,223,1.484,224,2.515,226,2.848,242,2.517,257,1.667,281,3.176,291,1.443,316,2.359,340,2.788,350,2.691,368,3.361,507,1.332,675,1.72,782,2.601,787,1.72,813,1.931,816,2.559,918,2.416,921,2.54,946,3.27,947,2.228,948,3.27,949,2.698,950,3.199,951,3.27,952,3.959,953,3.27,954,3.27,955,3.006,956,3.199,957,3.27,958,3.27,959,3.006,961,2.306,962,2.359,963,4.533,1752,0.928,1780,1.966,2177,4.424,2178,3.808,2181,2.958,2183,2.767,2185,2.767,2187,2.767,2191,2.767,2194,2.767,2196,2.767,2349,2.416,2833,3.071]],["title/interfaces/getCondominiumRelation.html",[43,0.059,2178,3.062]],["body/interfaces/getCondominiumRelation.html",[0,0.214,3,0.038,4,0.038,5,0.038,9,0.059,10,0.751,18,1.847,20,1.289,26,1.817,27,2.343,28,2.115,36,0.005,38,0.103,40,0.828,42,1.486,43,0.101,46,0.08,47,1.42,48,1.455,49,1.42,61,0.003,62,0.003,66,1.431,85,0.319,131,2.006,159,2.714,160,2.181,161,3.066,171,1.812,176,2.027,191,2.939,192,1.248,207,2.8,212,1.688,216,2.714,218,2.095,220,2.298,222,3.344,223,1.465,224,2.497,226,2.835,242,2.495,257,1.647,281,3.164,291,1.425,316,2.33,340,2.763,350,2.667,368,3.338,507,1.32,675,1.698,782,2.578,787,1.698,813,1.907,816,2.536,918,2.385,921,2.509,946,3.241,947,2.208,948,3.241,949,2.683,950,3.17,951,3.241,952,3.937,953,3.241,954,3.241,955,2.98,956,3.17,957,3.241,958,3.241,959,2.98,961,2.277,962,2.33,963,4.515,1752,0.917,1780,1.942,2177,3.774,2178,4.393,2181,2.921,2183,2.733,2185,2.733,2187,2.733,2191,2.733,2194,2.733,2196,2.733,2349,2.385,2833,3.033]],["title/index.html",[9,0.057,3008,4.315,3009,4.315]],["body/index.html",[21,4.017,23,2.082,26,1.987,27,0.86,36,0.004,48,0.881,51,2.74,52,1.428,61,0.002,62,0.002,66,1.635,69,1.674,131,0.503,143,2.73,159,2.697,160,1.212,161,0.887,162,1.729,211,0.979,212,1.023,242,3.06,243,3.216,244,3.644,297,1.052,330,1.311,340,1.674,351,3.3,352,1.729,358,1.822,377,3.201,382,3.46,387,2.304,394,1.116,563,2.519,564,2.096,565,2.096,664,1.474,715,1.94,716,3.644,731,2.096,732,4.418,759,1.684,787,2.402,799,2.163,881,1.616,947,2.362,949,1.636,950,1.164,955,1.094,956,1.921,1011,1.526,1015,1.526,1059,2.507,1060,1.19,1074,1.526,1075,2.222,1186,1.584,1188,1.584,1226,3.82,1236,1.822,1287,6.691,1288,3.339,1354,3.201,1370,1.94,1374,1.94,1375,1.94,1377,4.618,1388,1.729,1400,3.392,1431,1.651,1548,2.854,1555,4.744,1624,2.615,1704,2.725,1762,1.94,1763,2.433,1784,1.94,1785,4.744,1907,4.744,1962,1.94,2044,4.087,2052,3.008,2222,7.397,2383,6.109,2426,2.096,2434,1.94,2500,2.096,2530,1.94,2557,5.128,2611,2.096,2643,2.096,2762,2.096,2769,2.096,2921,1.94,2926,2.096,2950,1.822,3010,3.853,3011,2.334,3012,2.334,3013,3.853,3014,2.334,3015,2.334,3016,5.71,3017,3.853,3018,5.71,3019,2.334,3020,2.334,3021,2.334,3022,2.334,3023,2.334,3024,2.334,3025,2.334,3026,4.919,3027,2.334,3028,2.334,3029,3.853,3030,3.853,3031,5.71,3032,2.334,3033,3.853,3034,4.919,3035,2.334,3036,2.334,3037,2.334,3038,4.919,3039,4.919,3040,5.71,3041,6.319,3042,2.334,3043,2.334,3044,2.334,3045,6.319,3046,4.919,3047,6.803,3048,2.334,3049,3.853,3050,2.334,3051,2.334,3052,2.334,3053,2.334,3054,2.334,3055,2.334,3056,2.334,3057,2.334,3058,2.334,3059,3.853,3060,2.334,3061,2.334,3062,8.413,3063,2.334,3064,2.334,3065,2.334,3066,2.096,3067,2.334,3068,3.853,3069,2.334,3070,2.334,3071,5.71,3072,2.334,3073,2.334,3074,5.71,3075,2.334,3076,2.334,3077,2.334,3078,2.334,3079,2.334,3080,5.71,3081,2.334,3082,2.334,3083,2.334,3084,2.334,3085,2.334,3086,7.196,3087,8.236,3088,2.334,3089,4.919,3090,2.334,3091,2.334,3092,2.334,3093,2.334,3094,2.334,3095,3.853,3096,2.334,3097,3.853,3098,2.334,3099,2.334,3100,3.853,3101,2.334,3102,2.334,3103,4.919,3104,6.319,3105,4.919,3106,2.334,3107,2.334,3108,2.334,3109,2.334,3110,2.334,3111,2.334,3112,3.853,3113,2.334,3114,2.334,3115,2.334,3116,2.334,3117,2.334,3118,2.334,3119,2.334,3120,2.334,3121,6.803,3122,2.334,3123,2.334,3124,2.334,3125,2.334,3126,2.334,3127,2.334,3128,2.334,3129,2.334,3130,2.334,3131,2.334,3132,2.334,3133,2.334,3134,2.334,3135,2.334,3136,2.334,3137,2.334,3138,3.853,3139,2.334,3140,2.334,3141,2.334,3142,2.334,3143,2.334,3144,2.334,3145,3.853,3146,2.334,3147,2.334,3148,2.334,3149,2.334,3150,3.853,3151,2.334,3152,2.334,3153,3.853,3154,3.853,3155,3.853,3156,2.334,3157,2.334,3158,2.334,3159,2.334,3160,2.334,3161,2.334,3162,2.334,3163,2.334,3164,2.334,3165,3.853,3166,2.334,3167,2.334,3168,2.334,3169,2.334,3170,2.334,3171,2.334,3172,3.853,3173,2.334,3174,5.71,3175,5.71,3176,6.319,3177,2.334,3178,2.334,3179,3.853,3180,3.853,3181,2.334,3182,2.334,3183,2.334,3184,2.334,3185,2.334,3186,3.853,3187,3.853,3188,2.334,3189,3.853,3190,2.334,3191,2.334,3192,2.334,3193,2.334,3194,2.334,3195,2.334,3196,5.71,3197,2.334,3198,2.334,3199,2.334,3200,2.334,3201,2.334,3202,2.334,3203,2.334,3204,2.334,3205,2.334,3206,2.334,3207,2.334,3208,2.334,3209,2.334,3210,2.334,3211,2.334,3212,2.334,3213,2.334,3214,2.334,3215,2.334,3216,2.334,3217,2.334,3218,2.334,3219,2.334,3220,2.334,3221,2.334,3222,2.334,3223,2.334,3224,2.334,3225,6.803,3226,2.334,3227,2.334,3228,2.334,3229,2.334,3230,2.334,3231,2.334,3232,2.334,3233,2.334,3234,2.334,3235,2.334,3236,2.334,3237,2.334,3238,2.334,3239,2.334,3240,2.334,3241,2.334,3242,2.334,3243,2.334,3244,2.334,3245,2.334,3246,2.334,3247,2.334,3248,2.334,3249,2.334,3250,4.919,3251,2.334,3252,2.334,3253,2.334,3254,2.334,3255,2.334,3256,2.334,3257,3.853,3258,2.334,3259,2.334,3260,2.334,3261,3.853,3262,2.334,3263,3.853,3264,2.334,3265,2.334,3266,2.334,3267,2.334,3268,2.334,3269,2.334,3270,2.334,3271,2.334,3272,2.334,3273,2.334,3274,2.334,3275,2.334,3276,2.334,3277,2.334,3278,2.334,3279,2.334,3280,2.334,3281,2.334,3282,2.334,3283,2.334,3284,2.334,3285,2.334,3286,2.334,3287,2.334,3288,2.334,3289,2.334,3290,2.334,3291,2.334,3292,2.334,3293,2.334,3294,2.334,3295,2.334,3296,2.334,3297,2.334,3298,2.334]],["title/modules.html",[113,4.299]],["body/modules.html",[36,0.004,61,0.004,62,0.004,112,5.498,113,4.54,259,5.251,262,5.498,1506,5.498,1575,5.498,1723,5.498,1724,5.498,3299,10.309,3300,10.309,3301,10.309,3302,10.309]],["title/overview.html",[3303,6.312]],["body/overview.html",[2,0.813,36,0.005,61,0.003,62,0.003,76,3.324,111,2.569,112,7.03,113,2.943,114,2.943,115,3.146,116,3.146,117,3.039,118,3.146,119,3.146,120,4.321,121,4.321,122,5.657,123,3.757,124,4.679,125,5.264,126,4.38,127,3.146,128,3.146,148,3.146,155,2.775,171,3.678,259,5.895,260,4.321,261,4.321,262,7.792,405,5.097,428,4.56,553,5.231,554,2.169,559,5.039,631,3.146,698,5.451,704,5.451,711,5.231,811,4.868,822,5.093,1072,5.231,1146,4.868,1160,4.428,1506,7.141,1507,4.321,1508,4.321,1509,4.321,1575,6.173,1576,4.321,1577,4.321,1598,3.757,1615,5.451,1625,5.451,1660,5.451,1720,4.321,1721,4.321,1722,4.321,1723,7.03,1724,6.719,1752,0.987,1900,5.231,1990,4.321,2520,4.321,2522,4.321,2544,4.321,2545,4.321,2546,4.321,3303,4.321,3304,4.811,3305,4.811,3306,4.811]],["title/properties.html",[10,0.733,2921,3.585]],["body/properties.html",[10,0.959,36,0.004,61,0.004,62,0.004,3307,8.122,3308,8.122,3309,8.122,3310,8.122]],["title/interfaces/remove.html",[43,0.059,2349,2.755]],["body/interfaces/remove.html",[0,0.223,3,0.04,4,0.04,5,0.04,9,0.062,10,0.774,18,1.902,20,1.535,23,0.979,26,1.776,27,2.414,28,2.179,36,0.005,38,0.075,40,0.919,42,1.55,43,0.099,46,0.079,47,1.463,48,1.733,49,1.463,61,0.003,62,0.003,66,1.593,85,0.325,131,1.769,159,2.796,160,2.211,176,1.981,191,2.483,192,1.302,211,1.954,212,1.739,216,2.796,218,2.143,220,2.787,222,3.224,223,1.528,224,2.555,242,2.57,257,1.717,281,3.118,291,1.486,330,2.616,340,2.846,344,1.858,350,1.954,361,2.025,387,1.427,507,0.967,557,2.879,675,1.771,762,1.921,782,3.071,787,2.879,809,2.846,813,1.989,816,1.858,946,3.338,947,2.274,948,3.338,949,2.733,950,3.266,951,3.338,952,3.697,953,3.338,954,3.338,955,3.069,956,3.266,957,3.338,958,3.338,959,3.069,961,2.375,963,4.413,1160,2.274,1164,2.062,1276,3.046,1290,3.046,1582,4.044,1752,0.956,1780,2.025,2120,4.006,2124,2.943,2126,2.943,2128,2.943,2130,2.943,2134,2.943,2136,2.943,2341,3.296,2347,3.296,2348,3.163,2349,3.497]],["title/interfaces/remove-1.html",[43,0.049,215,2.063,2349,2.304]],["body/interfaces/remove-1.html",[0,0.215,3,0.039,4,0.039,5,0.039,9,0.06,10,0.754,18,1.854,20,1.294,26,1.82,27,2.352,28,2.123,36,0.005,38,0.073,40,0.83,42,1.494,43,0.101,46,0.08,47,1.425,48,1.46,49,1.425,61,0.003,62,0.003,66,1.434,85,0.32,131,2.072,159,2.725,160,2.185,161,3.073,171,1.821,176,2.03,191,2.868,192,1.255,207,1.56,212,1.694,216,2.725,218,2.101,220,2.754,222,3.351,223,1.473,224,2.505,226,2.123,242,2.505,257,1.655,281,3.169,291,1.433,316,2.342,340,2.774,350,2.678,368,3.348,507,1.325,675,1.707,782,2.588,787,1.707,813,1.918,816,2.546,918,2.398,921,2.522,946,3.253,947,2.216,948,3.253,949,2.689,950,3.183,951,3.253,952,3.946,953,3.253,954,3.253,955,2.991,956,3.183,957,3.253,958,3.253,959,2.991,961,2.29,962,2.342,963,4.523,1752,0.921,1780,1.952,2177,3.788,2178,3.788,2181,2.937,2183,2.747,2185,2.747,2187,2.747,2191,2.747,2194,2.747,2196,2.747,2349,3.408,2833,3.049]],["title/interfaces/safeSearch.html",[43,0.059,222,2.025]],["body/interfaces/safeSearch.html",[0,0.23,3,0.041,4,0.041,5,0.041,9,0.064,10,0.791,18,1.946,20,1.358,26,1.861,27,2.469,28,2.228,36,0.005,37,0.836,38,0.078,39,0.678,40,0.979,42,1.6,43,0.088,46,0.075,47,1.496,48,1.533,49,1.496,61,0.003,62,0.003,66,1.478,85,0.265,159,2.86,160,2.234,176,1.763,191,2.647,192,1.344,211,3.496,212,1.778,216,2.86,220,2.72,222,3.783,223,1.578,242,2.629,281,2.894,330,3.761,340,2.911,344,3.712,350,2.81,356,2.211,361,4.044,507,1.391,556,3.29,675,2.546,782,2.716,809,2.911,814,3.266,817,3.266,819,3.266,822,2.702,823,3.266,943,3.757,946,3.414,947,2.326,948,3.414,949,2.772,950,3.34,951,3.414,952,4.068,953,3.414,954,3.414,955,3.139,956,3.34,957,3.414,958,3.414,959,3.139,961,2.452,962,2.509,963,3.928,1752,0.987]],["title/interfaces/safeSearch-1.html",[43,0.049,215,2.063,222,1.693]],["body/interfaces/safeSearch-1.html",[0,0.211,3,0.038,4,0.038,5,0.038,9,0.059,10,0.745,18,1.833,20,1.279,26,1.811,27,2.326,28,2.099,36,0.005,38,0.071,39,0.639,40,0.823,42,1.47,43,0.101,46,0.08,47,1.409,48,1.444,49,1.409,61,0.003,62,0.003,66,1.424,85,0.318,131,2.065,159,2.694,160,2.174,161,3.051,171,1.792,176,2.019,191,2.857,192,1.235,207,1.535,212,1.675,216,2.694,218,2.083,220,2.74,222,3.71,223,1.45,224,2.483,226,2.099,242,2.476,257,1.629,281,3.154,291,1.41,316,2.305,340,2.742,350,2.647,368,3.827,507,1.31,675,1.68,782,2.559,787,1.68,813,1.887,816,2.517,918,2.36,921,2.482,946,3.216,947,2.191,948,3.216,949,2.67,950,3.146,951,3.216,952,3.918,953,3.216,954,3.216,955,2.957,956,3.146,957,3.216,958,3.216,959,2.957,961,2.253,962,2.305,963,4.499,1752,0.907,1780,1.921,2177,3.745,2178,3.745,2181,2.89,2183,2.704,2185,2.704,2187,2.704,2191,2.704,2194,2.704,2196,2.704,2349,2.36,2833,3.001]],["title/interfaces/safelyFind.html",[43,0.059,2348,3.502]],["body/interfaces/safelyFind.html",[0,0.221,3,0.04,4,0.04,5,0.04,9,0.061,10,0.769,18,1.89,20,1.527,23,0.97,26,1.77,27,2.398,28,2.164,36,0.005,38,0.075,39,0.659,40,0.915,42,1.535,43,0.098,46,0.079,47,1.453,48,1.724,49,1.453,61,0.003,62,0.003,66,1.588,85,0.324,131,1.927,159,2.778,160,2.205,176,1.974,191,1.966,192,1.29,211,1.936,212,1.727,216,2.778,218,2.133,220,2.779,222,3.61,223,1.514,224,2.543,242,2.553,257,1.701,281,3.108,291,1.473,330,2.592,340,2.828,344,1.841,350,1.936,361,2.006,387,1.414,507,0.958,557,2.865,675,1.755,762,1.904,782,3.056,787,2.865,809,2.828,813,1.971,816,1.841,946,3.317,947,2.26,948,3.317,949,2.722,950,3.245,951,3.317,952,3.679,953,3.317,954,3.317,955,3.049,956,3.245,957,3.317,958,3.317,959,3.049,961,2.353,963,4.398,1160,2.253,1164,2.043,1276,3.018,1290,3.018,1582,4.024,1752,0.947,1780,2.006,2120,3.98,2124,2.916,2126,2.916,2128,2.916,2130,2.916,2134,2.916,2136,2.916,2341,3.265,2347,3.265,2348,4.417,2349,2.465]],["title/interfaces/search.html",[43,0.059,962,2.69]],["body/interfaces/search.html",[0,0.229,3,0.041,4,0.041,5,0.041,9,0.064,10,0.789,18,1.94,20,1.354,26,1.859,27,2.462,28,2.222,36,0.005,37,0.835,38,0.108,40,0.978,42,2.558,43,0.088,46,0.075,47,1.492,48,1.529,49,1.492,61,0.003,62,0.003,66,1.476,85,0.265,159,2.852,160,2.231,176,1.76,191,2.644,192,1.339,211,3.49,212,1.774,216,2.852,220,2.716,222,3.721,223,1.572,242,2.622,281,2.889,330,3.751,340,2.903,344,3.708,350,2.803,356,2.203,361,4.04,507,1.387,556,3.283,675,2.54,782,2.709,809,2.903,814,3.253,817,3.253,819,3.253,822,2.691,823,3.253,943,3.742,946,3.405,947,2.32,948,3.405,949,2.767,950,3.331,951,3.405,952,4.061,953,3.405,954,3.405,955,3.131,956,3.331,957,3.405,958,3.405,959,3.131,961,2.443,962,3.484,963,3.92,1752,0.983]],["title/interfaces/search-1.html",[43,0.049,215,2.063,962,2.25]],["body/interfaces/search-1.html",[0,0.21,3,0.038,4,0.038,5,0.038,9,0.058,10,0.742,18,1.824,20,1.273,26,1.806,27,2.314,28,2.088,36,0.005,38,0.101,39,0.635,40,0.82,42,2.438,43,0.1,46,0.08,47,1.402,48,1.437,49,1.402,61,0.003,62,0.003,66,1.419,85,0.317,131,2.062,159,2.68,160,2.169,161,3.041,171,1.78,176,2.015,191,2.852,192,1.226,207,1.524,212,1.667,216,2.68,218,2.074,220,2.733,222,3.638,223,1.44,224,2.473,226,2.088,242,2.464,257,1.618,281,3.148,291,1.4,316,2.289,340,2.729,350,2.634,368,3.816,507,1.304,675,1.668,782,2.546,787,1.668,813,1.874,816,2.504,918,2.344,921,2.465,946,3.2,947,2.18,948,3.2,949,2.661,950,3.131,951,3.2,952,3.905,953,3.2,954,3.2,955,2.942,956,3.131,957,3.2,958,3.2,959,2.942,961,2.237,962,3.274,963,4.488,1752,0.9,1780,1.908,2177,3.726,2178,3.726,2181,2.87,2183,2.685,2185,2.685,2187,2.685,2191,2.685,2194,2.685,2196,2.685,2349,2.344,2833,2.98]],["title/interfaces/transferToUserResources.html",[43,0.059,2120,3.156]],["body/interfaces/transferToUserResources.html",[0,0.22,3,0.04,4,0.04,5,0.04,9,0.061,10,0.767,18,1.885,20,1.524,23,0.967,26,1.767,27,2.392,28,2.159,36,0.005,38,0.105,40,0.913,42,1.53,43,0.098,46,0.079,47,1.449,48,1.721,49,1.449,61,0.003,62,0.003,66,1.586,85,0.324,131,1.759,159,2.771,160,2.202,176,1.971,191,1.961,192,1.285,211,1.929,212,1.723,216,2.771,218,2.656,220,2.335,222,3.206,223,1.508,224,3.166,242,2.547,257,1.695,281,3.105,291,1.467,330,2.582,340,2.821,344,1.834,350,1.929,361,1.999,387,1.409,507,0.955,557,2.859,675,1.748,762,1.897,782,3.05,787,2.859,809,2.821,813,1.963,816,1.834,946,3.308,947,2.254,948,3.308,949,2.718,950,3.236,951,3.308,952,3.671,953,3.308,954,3.308,955,3.042,956,3.236,957,3.308,958,3.308,959,3.042,961,2.344,963,4.392,1160,2.245,1164,2.035,1276,3.007,1290,3.007,1582,4.016,1752,0.943,1780,1.999,2120,4.6,2124,2.905,2126,2.905,2128,2.905,2130,2.905,2134,2.905,2136,2.905,2341,3.253,2347,3.253,2348,3.122,2349,2.456]],["title/miscellaneous/typealiases.html",[2960,2.821,3311,6.202]],["body/miscellaneous/typealiases.html",[9,0.078,36,0.004,38,0.156,45,0.624,61,0.003,62,0.003,176,1.956,586,4.607,594,6.387,608,4.005,766,5.693,776,4.903,788,5.693,913,4.903,918,4.104,919,7.104,922,6.387,924,4.903,997,4.903,1002,6.001,1306,5.693,1588,6.957,1768,4.903,1769,5.693,1796,4.005,1804,5.693,1840,4.607,1852,4.903,1853,6.387,1997,4.607,1998,6.387,2032,5.299,2038,6.903,2040,6.903,2080,4.903,2960,3.858,2962,7.104,2966,5.299,2975,7.678,2977,8.134,2981,7.678,2983,7.678,2987,5.299,2989,5.299,2991,9.444,2992,5.299,2994,5.299,2996,5.299,2998,5.299,3000,5.299,3002,5.299,3004,5.299,3006,5.299,3312,5.901,3313,5.901,3314,7.687,3315,5.901,3316,10.054,3317,5.901]],["title/miscellaneous/variables.html",[2960,2.821,3318,5.57]],["body/miscellaneous/variables.html",[9,0.053,36,0.005,37,0.56,38,0.166,41,1.755,45,1.004,61,0.003,62,0.003,90,1.802,91,1.473,94,0.781,105,0.546,117,3.706,131,0.861,150,4.345,165,1.075,174,3.482,190,3.624,194,1.241,200,0.744,203,2.244,207,1.388,223,2.28,226,1.329,230,1.951,236,3.202,245,3.982,246,3.02,256,3.588,276,2.613,297,4.158,327,1.951,332,2.713,344,1.594,355,3.836,361,1.737,368,1.802,373,3.132,380,2.961,394,3.323,419,3.803,474,1.951,586,3.121,590,2.306,591,2.379,592,2.302,627,3.052,628,5.564,629,5.134,630,4.345,631,3.836,632,2.961,633,4.15,634,3.121,635,3.321,703,1.621,842,3.121,874,3.121,1090,2.037,1335,3.121,1417,4.345,1906,3.121,1921,7.084,1997,3.121,1999,3.121,2000,3.121,2960,2.613,2962,7.084,3066,5.269,3318,3.589,3319,5.867,3320,5.867,3321,5.867,3322,3.997,3323,5.867,3324,5.867,3325,3.997,3326,3.997,3327,3.997,3328,5.867,3329,5.867,3330,5.867,3331,8.525,3332,5.867,3333,5.867,3334,5.867,3335,5.867,3336,5.867,3337,5.867,3338,5.867,3339,5.867,3340,5.867,3341,5.867,3342,5.867,3343,5.867,3344,5.867,3345,3.997,3346,5.867,3347,3.997,3348,5.867,3349,3.997,3350,3.997,3351,3.997]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":246,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CPF.html":{},"classes/CepGatewaySpy.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CryptSpy.html":{},"classes/EmailSpy.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"classes/Level.html":{},"classes/UUID.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["0${rawhours",{"_index":1271,"title":{},"body":{"classes/DateFormats.html":{}}}],["0${rawminutes",{"_index":1269,"title":{},"body":{"classes/DateFormats.html":{}}}],["0${rawseconds",{"_index":1267,"title":{},"body":{"classes/DateFormats.html":{}}}],["0.0.7",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["0.1.14",{"_index":2957,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":215,"title":{"injectables/CreateUserService-1.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IProps-1.html":{},"interfaces/create-1.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}},"body":{"guards/AdminJwt.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CryptSpy.html":{},"classes/EmailSpy.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InMemoryOTP.html":{},"injectables/InviteFirestore.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{}}}],["1.1.23",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":276,"title":{"interfaces/IProps-10.html":{}},"body":{"modules/AppModule.html":{},"classes/BcryptAdapter.html":{},"classes/FirestoreGetInviteDTO.html":{},"interfaces/IPropsUser.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["10.0.3",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["10.2.10",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":552,"title":{},"body":{"classes/Code.html":{}}}],["1000",{"_index":451,"title":{},"body":{"guards/CheckOTPGuard.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"classes/OTP.html":{},"injectables/OTPRedisService.html":{},"controllers/UserController.html":{}}}],["11",{"_index":380,"title":{"interfaces/IProps-11.html":{}},"body":{"classes/CPF.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["11.11.1",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1976,"title":{"interfaces/IProps-12.html":{}},"body":{}}],["120",{"_index":630,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":1977,"title":{"interfaces/IProps-13.html":{}},"body":{}}],["14",{"_index":633,"title":{"interfaces/IProps-14.html":{}},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":1978,"title":{"interfaces/IProps-15.html":{}},"body":{}}],["16",{"_index":1979,"title":{"interfaces/IProps-16.html":{}},"body":{}}],["16.3.1",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1980,"title":{"interfaces/IProps-17.html":{}},"body":{}}],["18",{"_index":634,"title":{"interfaces/IProps-18.html":{}},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/variables.html":{}}}],["19",{"_index":1981,"title":{"interfaces/IProps-19.html":{}},"body":{}}],["2",{"_index":394,"title":{"interfaces/IConvertToObject-2.html":{},"interfaces/IProps-2.html":{},"interfaces/create-2.html":{}},"body":{"classes/CPF.html":{},"guards/CheckOTPGuard.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IValidate.html":{},"classes/Level.html":{},"classes/OTP.html":{},"injectables/OTPRedisService.html":{},"classes/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0.3",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["2147483647",{"_index":245,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/variables.html":{}}}],["22",{"_index":3304,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1490,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["2525",{"_index":3200,"title":{},"body":{"index.html":{}}}],["255",{"_index":2362,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["3",{"_index":1636,"title":{"interfaces/IProps-3.html":{}},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"controllers/UserController.html":{}}}],["3.0.1",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["3.22.4",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2000,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["30000",{"_index":1751,"title":{},"body":{"modules/HttpModule.html":{}}}],["320",{"_index":1335,"title":{},"body":{"classes/Email.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":1990,"title":{"interfaces/IProps-4.html":{}},"body":{"overview.html":{}}}],["4.0.1",{"_index":2955,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":546,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IGatewayError.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["401",{"_index":1229,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["404",{"_index":1225,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{}}}],["409",{"_index":2030,"title":{},"body":{"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["45",{"_index":1750,"title":{},"body":{"modules/HttpModule.html":{}}}],["5",{"_index":1991,"title":{"interfaces/IProps-5.html":{}},"body":{}}],["5.1.0",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["5.3.2",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":108,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["5][0",{"_index":2624,"title":{},"body":{"classes/UUID.html":{}}}],["6",{"_index":332,"title":{"interfaces/IProps-6.html":{}},"body":{"classes/Block.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"classes/LaunchOTPDTO.html":{},"miscellaneous/variables.html":{}}}],["6.9.7",{"_index":2953,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":452,"title":{},"body":{"guards/CheckOTPGuard.html":{},"classes/FirestoreGetInviteDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"classes/OTP.html":{},"injectables/OTPRedisService.html":{}}}],["60000",{"_index":2739,"title":{},"body":{"controllers/UserController.html":{}}}],["64",{"_index":1999,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/Password.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":1598,"title":{"interfaces/IProps-7.html":{}},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{},"overview.html":{}}}],["7.1.17",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["79",{"_index":3306,"title":{},"body":{"overview.html":{}}}],["8",{"_index":631,"title":{"interfaces/IProps-8.html":{}},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Password.html":{},"classes/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["8.2.2",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["89ab][0",{"_index":2626,"title":{},"body":{"classes/UUID.html":{}}}],["9",{"_index":632,"title":{"interfaces/IProps-9.html":{}},"body":{"classes/Condominium.html":{},"classes/DateFormats.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/variables.html":{}}}],["95",{"_index":3305,"title":{},"body":{"overview.html":{}}}],["9a",{"_index":2621,"title":{},"body":{"classes/UUID.html":{}}}],["_",{"_index":2284,"title":{},"body":{"injectables/InviteFirestore.html":{},"classes/NotFoundFilter.html":{},"controllers/UserController.html":{}}}],["__",{"_index":2283,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["_id",{"_index":587,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["_instance",{"_index":1517,"title":{},"body":{"injectables/FirestoreService.html":{},"injectables/RedisService.html":{}}}],["_iservice",{"_index":1069,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserDataCore.html":{}}}],["_value",{"_index":239,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{}}}],["_value.length",{"_index":336,"title":{},"body":{"classes/Block.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/Name.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{}}}],["_value.replace",{"_index":357,"title":{},"body":{"classes/CEP.html":{},"classes/CPF.html":{}}}],["_value.replaceall",{"_index":366,"title":{},"body":{"classes/CNPJ.html":{}}}],["abaixo",{"_index":382,"title":{},"body":{"classes/CPF.html":{},"index.html":{}}}],["abra",{"_index":3244,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":281,"title":{},"body":{"classes/Auth.html":{},"classes/CepGateway.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"classes/CryptAdapter.html":{},"classes/EmailAdapter.html":{},"classes/Entity.html":{},"classes/HttpAdapter.html":{},"interfaces/ICheckCep.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InviteRepo.html":{},"classes/LoggerAdapter.html":{},"classes/OTPRepo.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["access",{"_index":1754,"title":{},"body":{"interfaces/IAccessTokenBody.html":{},"interfaces/IRefreshTokenBody.html":{},"miscellaneous/enumerations.html":{}}}],["accessjwtbody",{"_index":1093,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["accessors",{"_index":235,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"injectables/FirestoreService.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["accesstoken",{"_index":1111,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-8.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["acessado",{"_index":2402,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["acessando",{"_index":2404,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["acesse",{"_index":715,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["acesso",{"_index":1075,"title":{},"body":{"injectables/CreateTokenService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-8.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUserDataCore.html":{},"injectables/LogInterceptor.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"index.html":{}}}],["acima",{"_index":3158,"title":{},"body":{"index.html":{}}}],["actualuser",{"_index":746,"title":{},"body":{"controllers/CondominiumController.html":{},"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{}}}],["adapta",{"_index":803,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["adaptador",{"_index":1432,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["adaptadores",{"_index":24,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/IProps-3.html":{}}}],["adapter",{"_index":56,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-3.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["adaptererror",{"_index":1,"title":{"classes/AdapterError.html":{}},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"classes/FetchAdapter.html":{},"interfaces/IProps-3.html":{}}}],["adaptererrorfilter",{"_index":63,"title":{"classes/AdapterErrorFilter.html":{}},"body":{"classes/AdapterErrorFilter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["adaptererrorfilter(this.logger",{"_index":1945,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["adapters",{"_index":70,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["adaptersmodule",{"_index":112,"title":{"modules/AdaptersModule.html":{}},"body":{"modules/AdaptersModule.html":{},"modules/HttpModule.html":{},"modules.html":{},"overview.html":{}}}],["add",{"_index":3270,"title":{},"body":{"index.html":{}}}],["addtag('moradaapp",{"_index":1926,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["adentre",{"_index":3221,"title":{},"body":{"index.html":{}}}],["adiante",{"_index":3028,"title":{},"body":{"index.html":{}}}],["admin",{"_index":151,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"injectables/FirestoreService.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"dependencies.html":{}}}],["admin')@useguards(superadminjwt)@httpcode(204",{"_index":686,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["admin.controller",{"_index":1735,"title":{},"body":{"modules/HttpModule.html":{}}}],["admin.controller.ts",{"_index":2602,"title":{},"body":{"controllers/SuperAdminController.html":{}}}],["admin.firestore",{"_index":1531,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["admin/app",{"_index":1527,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["admin/firestore",{"_index":768,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{},"injectables/UsersFirestore.html":{}}}],["admincontroller",{"_index":147,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/HttpModule.html":{}}}],["administrador",{"_index":2377,"title":{},"body":{"classes/Level.html":{},"guards/SuperAdminJwt.html":{}}}],["administradores",{"_index":1291,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{}}}],["adminjwt",{"_index":154,"title":{"guards/AdminJwt.html":{}},"body":{"guards/AdminJwt.html":{},"controllers/CondominiumController.html":{}}}],["agora",{"_index":3263,"title":{},"body":{"index.html":{}}}],["ainda",{"_index":2860,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["alert",{"_index":1296,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["alert(input",{"_index":1302,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["algoritmo",{"_index":378,"title":{},"body":{"classes/CPF.html":{}}}],["algum",{"_index":31,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["aliases",{"_index":3312,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allownullish",{"_index":884,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"controllers/UserController.html":{},"classes/ValueObject.html":{}}}],["alpha",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":1199,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/RedisLogicError.html":{},"miscellaneous/enumerations.html":{}}}],["already_exists",{"_index":1649,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["alreadyexist",{"_index":1984,"title":{},"body":{"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["alterações",{"_index":3268,"title":{},"body":{"index.html":{}}}],["alternativevalue",{"_index":1392,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["alternativos",{"_index":1397,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["além",{"_index":953,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["ambiente",{"_index":3040,"title":{},"body":{"index.html":{}}}],["ambientes",{"_index":3094,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":2399,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["antes",{"_index":3151,"title":{},"body":{"index.html":{}}}],["análise",{"_index":3133,"title":{},"body":{"index.html":{}}}],["ao",{"_index":1704,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IPrismaError.html":{},"interfaces/IValidate.html":{},"classes/PrismaErrorFilter.html":{},"classes/UUIDGroup.html":{},"index.html":{}}}],["apartamento",{"_index":241,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["apartment_number",{"_index":940,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["apartmentnumber",{"_index":230,"title":{"classes/ApartmentNumber.html":{}},"body":{"classes/ApartmentNumber.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService-1.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["apartmentnumber(input",{"_index":910,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["apenas",{"_index":2643,"title":{},"body":{"classes/UUIDGroup.html":{},"index.html":{}}}],["apesar",{"_index":3167,"title":{},"body":{"index.html":{}}}],["api",{"_index":716,"title":{},"body":{"controllers/CondominiumController.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"controllers/UserController.html":{},"index.html":{}}}],["apiproperty",{"_index":1030,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["apiproperty()@isnumber",{"_index":1026,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["apiproperty()@isstring({message",{"_index":1013,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["apis/viacep.gateway",{"_index":1580,"title":{},"body":{"modules/GatewayModule.html":{}}}],["aplicar",{"_index":1961,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["aplicativos",{"_index":3093,"title":{},"body":{"index.html":{}}}],["aplicação",{"_index":2383,"title":{},"body":{"injectables/LogInterceptor.html":{},"index.html":{}}}],["app",{"_index":1907,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"index.html":{}}}],["app.module",{"_index":1880,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["app_guard",{"_index":1741,"title":{},"body":{"modules/HttpModule.html":{}}}],["appmodule",{"_index":259,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"modules.html":{},"overview.html":{}}}],["apto",{"_index":1762,"title":{},"body":{"interfaces/IClassToRawObject.html":{},"classes/OTPRedisMapper.html":{},"index.html":{}}}],["aqui",{"_index":3180,"title":{},"body":{"index.html":{}}}],["args",{"_index":1757,"title":{},"body":{"interfaces/IClass.html":{}}}],["argumentshost",{"_index":81,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["armazenado",{"_index":2578,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["armazenamento",{"_index":3282,"title":{},"body":{"index.html":{}}}],["armazenando",{"_index":3050,"title":{},"body":{"index.html":{}}}],["arquivo",{"_index":3188,"title":{},"body":{"index.html":{}}}],["array",{"_index":534,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{},"classes/InMemoryOTP.html":{}}}],["assim",{"_index":3018,"title":{},"body":{"index.html":{}}}],["async",{"_index":165,"title":{},"body":{"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptSpy.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/EmailSpy.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/ISuccess.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/NodemailerAdapter.html":{},"injectables/OTPRedisService.html":{},"injectables/PrismaService.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["atender",{"_index":3015,"title":{},"body":{"index.html":{}}}],["atingir",{"_index":1542,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["ativas",{"_index":3280,"title":{},"body":{"index.html":{}}}],["ativo",{"_index":3220,"title":{},"body":{"index.html":{}}}],["autenticação",{"_index":491,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IProps-13.html":{},"classes/LaunchTFADTO.html":{}}}],["auth",{"_index":279,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"classes/NodemailerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["auth.pass",{"_index":3206,"title":{},"body":{"index.html":{}}}],["auth.user",{"_index":3204,"title":{},"body":{"index.html":{}}}],["author",{"_index":3309,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":2354,"title":{},"body":{"guards/JwtGuard.html":{}}}],["automatizar",{"_index":3253,"title":{},"body":{"index.html":{}}}],["autorizado",{"_index":1231,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["aviso",{"_index":731,"title":{},"body":{"controllers/CondominiumController.html":{},"index.html":{}}}],["await",{"_index":194,"title":{},"body":{"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"classes/FetchAdapter.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/ISuccess.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/NodemailerAdapter.html":{},"injectables/OTPRedisService.html":{},"injectables/PrismaService.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["ação",{"_index":2053,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["back",{"_index":3031,"title":{},"body":{"index.html":{}}}],["bad",{"_index":210,"title":{},"body":{"guards/AdminJwt.html":{},"interfaces/IProps-1.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{}}}],["badrequestexception",{"_index":181,"title":{},"body":{"guards/AdminJwt.html":{},"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IProps-1.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["bairro",{"_index":2057,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["banco",{"_index":1186,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"classes/RedisLogicError.html":{},"index.html":{}}}],["base",{"_index":1784,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bash",{"_index":3222,"title":{},"body":{"index.html":{}}}],["bashdentro",{"_index":3227,"title":{},"body":{"index.html":{}}}],["basta",{"_index":3103,"title":{},"body":{"index.html":{}}}],["batch",{"_index":978,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{}}}],["batch.commit",{"_index":994,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{}}}],["batch.create(entityref",{"_index":993,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["batch.create(refs.cepindex",{"_index":991,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["batch.create(refs.cnpjindex",{"_index":990,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["batch.create(refs.condominiumreluser",{"_index":2299,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["batch.create(refs.core",{"_index":2298,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["batch.create(refs.cpf",{"_index":2296,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["batch.create(refs.email",{"_index":2297,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["batch.delete(refs.invite",{"_index":2293,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["bcrypt",{"_index":311,"title":{},"body":{"classes/BcryptAdapter.html":{},"dependencies.html":{}}}],["bcrypt.compare(input.data",{"_index":325,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["bcrypt.hash(data",{"_index":324,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["bcrypt/bcryptadapter",{"_index":136,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["bcryptadapter",{"_index":135,"title":{"classes/BcryptAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/BcryptAdapter.html":{}}}],["bem",{"_index":1606,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"injectables/LogInterceptor.html":{}}}],["bibliotecas",{"_index":3078,"title":{},"body":{"index.html":{}}}],["block",{"_index":327,"title":{"classes/Block.html":{}},"body":{"classes/Block.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService-1.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["block(input",{"_index":909,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["block).allownullish().exec",{"_index":2776,"title":{},"body":{"controllers/UserController.html":{}}}],["boa",{"_index":1371,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["body",{"_index":397,"title":{},"body":{"classes/CPF.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"controllers/CondominiumController.html":{},"classes/EmailAdapter.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/ISendMailContent.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"controllers/UserController.html":{},"injectables/ViacepGateway.html":{}}}],["body.apartmentnumber",{"_index":2764,"title":{},"body":{"controllers/UserController.html":{}}}],["body.bairro",{"_index":2075,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.block",{"_index":2766,"title":{},"body":{"controllers/UserController.html":{}}}],["body.cep",{"_index":2074,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.complemento",{"_index":2076,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.localidade",{"_index":2077,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.logradouro",{"_index":2078,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.message",{"_index":547,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["body.otp",{"_index":449,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["body.uf",{"_index":2073,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["bodyinit",{"_index":1719,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["bom",{"_index":3240,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":249,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["bootstrap",{"_index":117,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.runstoragelayer",{"_index":3326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":2876,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["browse",{"_index":3302,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3299,"title":{},"body":{"modules.html":{}}}],["btoa(metadata)}.${btoa(code",{"_index":1637,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["btoa(metadata)}.${btoa(invitesignature",{"_index":1639,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["build",{"_index":1388,"title":{},"body":{"classes/Entity.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ValueObject.html":{},"index.html":{}}}],["build(constructor",{"_index":2912,"title":{},"body":{"classes/ValueObject.html":{}}}],["build(requestlistener",{"_index":1908,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["build:watch:custompara",{"_index":3275,"title":{},"body":{"index.html":{}}}],["buildaccesstoken",{"_index":1077,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["buildaccesstoken(user",{"_index":1080,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["buildbônus",{"_index":3278,"title":{},"body":{"index.html":{}}}],["buildrefreshtoken",{"_index":1078,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["buildrefreshtoken(email",{"_index":1083,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["buscamos",{"_index":3019,"title":{},"body":{"index.html":{}}}],["c1",{"_index":1385,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["c1.equalto(c2",{"_index":1387,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["c2",{"_index":1386,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["cache",{"_index":1847,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-19.html":{},"classes/LoggerAdapter.html":{},"classes/RedisLogicError.html":{},"miscellaneous/enumerations.html":{}}}],["cada",{"_index":3074,"title":{},"body":{"index.html":{}}}],["call",{"_index":1405,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{}}}],["call(input",{"_index":1406,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["callhandler",{"_index":2388,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["calls",{"_index":418,"title":{},"body":{"classes/CepGatewaySpy.html":{},"classes/CryptSpy.html":{},"classes/EmailSpy.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["camada",{"_index":22,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/ValueObject.html":{}}}],["campo",{"_index":1014,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["campos",{"_index":2768,"title":{},"body":{"controllers/UserController.html":{}}}],["canactivate",{"_index":166,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["canactivate(context",{"_index":173,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["capacidade",{"_index":2640,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["capaz",{"_index":3071,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":333,"title":{},"body":{"classes/Block.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{}}}],["case",{"_index":1695,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["caso",{"_index":27,"title":{},"body":{"classes/AdapterError.html":{},"classes/CPF.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/InviteRepo.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["catch",{"_index":74,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["catch((err",{"_index":1426,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["catch(_",{"_index":2450,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["catch(adaptererror",{"_index":92,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["catch(badrequestexception",{"_index":535,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["catch(databasecustomerror",{"_index":1241,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["catch(entitieerror",{"_index":1363,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["catch(exception",{"_index":79,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["catch(gatewayerrors",{"_index":1561,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["catch(guarderrors",{"_index":1675,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["catch(notfoundexception",{"_index":2453,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["catch(prisma.prismaclientknownrequesterror",{"_index":1864,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["catch(redislogicerror",{"_index":2028,"title":{},"body":{"interfaces/IRedisError.html":{},"classes/RedisErrorFilter.html":{}}}],["catch(serviceerrors",{"_index":2043,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["catch(throttlerexception",{"_index":2610,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["causa",{"_index":1657,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["cep",{"_index":344,"title":{"classes/CEP.html":{}},"body":{"classes/CEP.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/ICheckCep.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/ISuccess.html":{},"classes/InMemoryCondominium.html":{},"classes/InviteRepo.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/variables.html":{}}}],["cep(content.cep",{"_index":638,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["cep(input",{"_index":667,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["cepgate",{"_index":1064,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"interfaces/IProps-7.html":{}}}],["cepgateway",{"_index":405,"title":{"classes/CepGateway.html":{}},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"injectables/CreateCondominiumService.html":{},"modules/GatewayModule.html":{},"interfaces/ICheckCep.html":{},"interfaces/IProps-7.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{},"overview.html":{}}}],["cepgatewayspy",{"_index":416,"title":{"classes/CepGatewaySpy.html":{}},"body":{"classes/CepGatewaySpy.html":{}}}],["cepindex",{"_index":984,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["certifique",{"_index":1369,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["chave",{"_index":948,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["check",{"_index":407,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"classes/UUID.html":{},"injectables/ViacepGateway.html":{}}}],["check(input",{"_index":408,"title":{},"body":{"classes/CepGateway.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"classes/UUID.html":{},"injectables/ViacepGateway.html":{}}}],["checkclassvalidatorerrors",{"_index":441,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"miscellaneous/functions.html":{}}}],["checkclassvalidatorerrors(data",{"_index":1968,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["checkcookie",{"_index":2567,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["checkcookie(cookie",{"_index":2571,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["checkotpguard",{"_index":424,"title":{"guards/CheckOTPGuard.html":{}},"body":{"guards/CheckOTPGuard.html":{},"controllers/UserController.html":{}}}],["checkpasswordguard",{"_index":467,"title":{"guards/CheckPasswordGuard.html":{}},"body":{"guards/CheckPasswordGuard.html":{},"controllers/UserController.html":{}}}],["checktfacodeguard",{"_index":485,"title":{"guards/CheckTFACodeGuard.html":{}},"body":{"guards/CheckTFACodeGuard.html":{},"controllers/UserController.html":{}}}],["checktoken",{"_index":168,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["checktoken(token",{"_index":177,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["citadas",{"_index":3157,"title":{},"body":{"index.html":{}}}],["city",{"_index":414,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["class",{"_index":0,"title":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{}},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"dependencies.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["classe",{"_index":762,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/UUIDGroup.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"overview.html":{}}}],["classvalidatorerrorfilter",{"_index":523,"title":{"classes/ClassValidatorErrorFilter.html":{}},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["classvalidatorerrorfilter(this.logger",{"_index":1946,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["clearmocks",{"_index":3336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clever",{"_index":3053,"title":{},"body":{"index.html":{}}}],["cli",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":1518,"title":{},"body":{"injectables/FirestoreService.html":{},"injectables/PrismaService.html":{},"injectables/RedisService.html":{}}}],["cloud",{"_index":3054,"title":{},"body":{"index.html":{}}}],["cluster_adaptersmodule",{"_index":120,"title":{},"body":{"modules/AdaptersModule.html":{},"overview.html":{}}}],["cluster_adaptersmodule_exports",{"_index":121,"title":{},"body":{"modules/AdaptersModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_firestoremodule",{"_index":1507,"title":{},"body":{"modules/FirestoreModule.html":{},"overview.html":{}}}],["cluster_firestoremodule_exports",{"_index":1509,"title":{},"body":{"modules/FirestoreModule.html":{},"overview.html":{}}}],["cluster_firestoremodule_providers",{"_index":1508,"title":{},"body":{"modules/FirestoreModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":1576,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_exports",{"_index":1577,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_httpmodule",{"_index":1720,"title":{},"body":{"modules/HttpModule.html":{},"overview.html":{}}}],["cluster_httpmodule_imports",{"_index":1721,"title":{},"body":{"modules/HttpModule.html":{},"overview.html":{}}}],["cluster_httpmodule_providers",{"_index":1722,"title":{},"body":{"modules/HttpModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":2520,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":2521,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_prismamodule_providers",{"_index":2522,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_redismodule",{"_index":2544,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_exports",{"_index":2546,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cluster_redismodule_providers",{"_index":2545,"title":{},"body":{"modules/RedisModule.html":{},"overview.html":{}}}],["cnpj",{"_index":361,"title":{"classes/CNPJ.html":{}},"body":{"classes/CNPJ.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IPropsCondominium.html":{},"classes/InMemoryCondominium.html":{},"classes/InviteRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/variables.html":{}}}],["cnpj(content.cnpj",{"_index":640,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["cnpj(input",{"_index":672,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["cnpjindex",{"_index":981,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["code",{"_index":448,"title":{"classes/Code.html":{}},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/Code.html":{},"injectables/GenTFAService.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-13.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/PrismaErrorFilter.html":{}}}],["code(input.code",{"_index":1854,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["codeforvalidation",{"_index":512,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["codeusedoninput",{"_index":497,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["codeusedoninput.split('.')[0",{"_index":505,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["cole",{"_index":3187,"title":{},"body":{"index.html":{}}}],["coleção",{"_index":2655,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["coleções",{"_index":564,"title":{},"body":{"injectables/CollectionsRefService.html":{},"index.html":{}}}],["collectcoveragefrom",{"_index":3337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":2854,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["collection.where(field",{"_index":2862,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["collectionreference",{"_index":2852,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["collectionsrefs",{"_index":968,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["collectionsrefs.service",{"_index":974,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["collectionsrefservice",{"_index":553,"title":{"injectables/CollectionsRefService.html":{}},"body":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{},"overview.html":{}}}],["colocar",{"_index":3212,"title":{},"body":{"index.html":{}}}],["coloque",{"_index":3201,"title":{},"body":{"index.html":{}}}],["com",{"_index":1400,"title":{},"body":{"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"classes/IService.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["comando",{"_index":3246,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":3105,"title":{},"body":{"index.html":{}}}],["começar",{"_index":3152,"title":{},"body":{"index.html":{}}}],["commit",{"_index":3261,"title":{},"body":{"index.html":{}}}],["como",{"_index":956,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["comparator",{"_index":2634,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["comparator(tobeiterated",{"_index":2645,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["compare",{"_index":294,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["compare(c1",{"_index":2914,"title":{},"body":{"classes/ValueObject.html":{}}}],["compare(input",{"_index":299,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["compartilhe",{"_index":1608,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{}}}],["complement",{"_index":412,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["complemento",{"_index":2058,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["compodoc/compodoc",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":3121,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":3215,"title":{},"body":{"index.html":{}}}],["computador",{"_index":3118,"title":{},"body":{"index.html":{}}}],["comum",{"_index":2376,"title":{},"body":{"classes/Level.html":{}}}],["comuns",{"_index":2771,"title":{},"body":{"controllers/UserController.html":{}}}],["concurrently",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["condominios",{"_index":1665,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-15.html":{}}}],["condominium",{"_index":556,"title":{"classes/Condominium.html":{}},"body":{"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"classes/Entity.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsCondominium.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"miscellaneous/enumerations.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominium.cnpj",{"_index":983,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["condominium.id",{"_index":735,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["condominiumarr",{"_index":1791,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["condominiumcontroller",{"_index":673,"title":{"controllers/CondominiumController.html":{}},"body":{"controllers/CondominiumController.html":{},"modules/HttpModule.html":{}}}],["condominiumdata",{"_index":724,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["condominiumdtorules",{"_index":355,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Condominium.html":{},"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IPropsCondominium.html":{},"classes/Num.html":{},"miscellaneous/variables.html":{}}}],["condominiumdtorules.cep.maxlength",{"_index":1047,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.cep.minlength",{"_index":360,"title":{},"body":{"classes/CEP.html":{},"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.cnpj.maxlength",{"_index":1056,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.cnpj.minlength",{"_index":367,"title":{},"body":{"classes/CNPJ.html":{},"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.name.maxlength",{"_index":1041,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.name.minlength",{"_index":1044,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.num.maxlength",{"_index":1051,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/Num.html":{}}}],["condominiumdtorules.num.minlength",{"_index":1054,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumfactory",{"_index":2974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condominiumfactory(input",{"_index":2990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condominiumfirestoremapper",{"_index":750,"title":{"classes/CondominiumFirestoreMapper.html":{}},"body":{"classes/CondominiumFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["condominiumid",{"_index":207,"title":{},"body":{"guards/AdminJwt.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateUserService-1.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-17.html":{},"interfaces/IValidate.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{},"miscellaneous/variables.html":{}}}],["condominiumid(${input.condominiumid?.value",{"_index":1788,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{}}}],["condominiumid(input",{"_index":906,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["condominiumindexref",{"_index":986,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["condominiuminprisma",{"_index":829,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["condominiuminterfaces",{"_index":823,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiuminterfaces.create",{"_index":814,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiuminterfaces.safesearch",{"_index":817,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiuminterfaces.search",{"_index":819,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiumlinkedwiththisuser",{"_index":2264,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["condominiummapper",{"_index":701,"title":{"classes/CondominiumMapper.html":{}},"body":{"controllers/CondominiumController.html":{},"classes/CondominiumMapper.html":{},"injectables/CondominiumsFirestore.html":{},"interfaces/IConvertToObject.html":{}}}],["condominiummapper.toclass",{"_index":725,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["condominiummapper.toobject",{"_index":975,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["condominiumprisma",{"_index":797,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{}}}],["condominiumprismamapper",{"_index":794,"title":{"classes/CondominiumPrismaMapper.html":{}},"body":{"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{}}}],["condominiumprismamapper.toclass(unparsedcondominium",{"_index":841,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["condominiumprismamapper.toprisma",{"_index":830,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["condominiumprismarepo",{"_index":807,"title":{"injectables/CondominiumPrismaRepo.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"modules/PrismaModule.html":{}}}],["condominiumrelgroup",{"_index":2827,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["condominiumrels",{"_index":1670,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-15.html":{},"controllers/UserController.html":{}}}],["condominiumreluser",{"_index":224,"title":{"classes/CondominiumRelUser.html":{}},"body":{"guards/AdminJwt.html":{},"injectables/CollectionsRefService.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomError.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-9.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["condominiumreluser(input.userid.value",{"_index":2881,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumreluser(parseduser.id",{"_index":2906,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumreluser(userid",{"_index":2262,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["condominiumreluser.condominiumid",{"_index":740,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["condominiumreluser.level.value",{"_index":229,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["condominiumreluser.push",{"_index":2217,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["condominiumreluserarr",{"_index":1792,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{},"injectables/UsersFirestore.html":{}}}],["condominiumreluserarr.push(parseddata",{"_index":2894,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumrelusercollection",{"_index":2897,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumreluserdtorules",{"_index":256,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CondominiumRelUser.html":{},"classes/CreateUserDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"classes/Level.html":{},"miscellaneous/variables.html":{}}}],["condominiumreluserdtorules.apartmentnumber.maxlength",{"_index":258,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/CreateUserDTO.html":{}}}],["condominiumreluserdtorules.apartmentnumber.minlength",{"_index":1141,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["condominiumreluserdtorules.block.maxlength",{"_index":337,"title":{},"body":{"classes/Block.html":{},"classes/CreateUserDTO.html":{}}}],["condominiumreluserdtorules.level.maxlength",{"_index":2380,"title":{},"body":{"classes/Level.html":{}}}],["condominiumreluserfactory",{"_index":2976,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condominiumreluserfactory(input",{"_index":2993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condominiumreluserfirestoremapper",{"_index":912,"title":{"classes/CondominiumRelUserFirestoreMapper.html":{}},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"injectables/UsersFirestore.html":{}}}],["condominiumreluserfirestoremapper.fromfirestoretoclass",{"_index":2890,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumreluserfirestoremapper.fromfirestoretoobject",{"_index":2893,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumrelusergroup",{"_index":1668,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-15.html":{}}}],["condominiumrelusermapper",{"_index":923,"title":{"classes/CondominiumRelUserMapper.html":{}},"body":{"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/UserPrismaRepo.html":{}}}],["condominiumrelusermapper.toobject",{"_index":2218,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{}}}],["condominiumrelusermapper.toobject(input.condominiumreluser",{"_index":2285,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["condominiumreluserprisma",{"_index":936,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["condominiumreluserprismamapper",{"_index":934,"title":{"classes/CondominiumRelUserPrismaMapper.html":{}},"body":{"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{}}}],["condominiumreluserprismamapper.toclass",{"_index":2824,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["condominiumreluserprismamapper.toclass(item",{"_index":2829,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["condominiumreluserprismamapper.toprisma",{"_index":2336,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["condominiumreluserquery",{"_index":2260,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["condominiumrepo",{"_index":822,"title":{"classes/CondominiumRepo.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"modules/FirestoreModule.html":{},"interfaces/IProps-7.html":{},"classes/InMemoryCondominium.html":{},"modules/PrismaModule.html":{},"interfaces/create.html":{},"overview.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiums",{"_index":2088,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["condominiumsfirestore",{"_index":964,"title":{"injectables/CondominiumsFirestore.html":{}},"body":{"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{}}}],["condomínio",{"_index":211,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/GenInviteService.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-7.html":{},"injectables/InviteFirestore.html":{},"classes/InviteRepo.html":{},"classes/Num.html":{},"guards/SuperAdminJwt.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{}}}],["conectar",{"_index":3162,"title":{},"body":{"index.html":{}}}],["conexão",{"_index":1428,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["config",{"_index":1921,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"miscellaneous/variables.html":{}}}],["configurado",{"_index":3161,"title":{},"body":{"index.html":{}}}],["configurando",{"_index":3119,"title":{},"body":{"index.html":{}}}],["configurar",{"_index":3126,"title":{},"body":{"index.html":{}}}],["configuração",{"_index":3210,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":1995,"title":{},"body":{"interfaces/IProps-6.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["conjunto",{"_index":3124,"title":{},"body":{"index.html":{}}}],["connect",{"_index":2559,"title":{},"body":{"injectables/RedisService.html":{}}}],["connecting",{"_index":2560,"title":{},"body":{"injectables/RedisService.html":{}}}],["conseguirmos",{"_index":3136,"title":{},"body":{"index.html":{}}}],["consequência",{"_index":3076,"title":{},"body":{"index.html":{}}}],["consiga",{"_index":3252,"title":{},"body":{"index.html":{}}}],["const",{"_index":94,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/CPF.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":1973,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-9.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Name.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"injectables/OTPRedisService.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["constructor(_value",{"_index":237,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{}}}],["constructor(collectionsrefs",{"_index":966,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["constructor(condominiumrepo",{"_index":1063,"title":{},"body":{"injectables/CreateCondominiumService.html":{}}}],["constructor(container",{"_index":2089,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["constructor(content",{"_index":593,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["constructor(cookieadapter",{"_index":2568,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["constructor(crypt",{"_index":470,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/HmacInviteGuard.html":{}}}],["constructor(cryptadapter",{"_index":1584,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["constructor(email",{"_index":1618,"title":{},"body":{"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{}}}],["constructor(firestore",{"_index":558,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["constructor(httpadapter",{"_index":2918,"title":{},"body":{"injectables/ViacepGateway.html":{}}}],["constructor(input",{"_index":14,"title":{},"body":{"classes/AdapterError.html":{},"classes/CondominiumRelUser.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryError.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{}}}],["constructor(internalvalue",{"_index":1394,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["constructor(inviterepo",{"_index":1159,"title":{},"body":{"injectables/CreateUserService-1.html":{}}}],["constructor(jwtservice",{"_index":169,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["constructor(logger",{"_index":75,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["constructor(otprepo",{"_index":427,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["constructor(prisma",{"_index":810,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{}}}],["constructor(private",{"_index":93,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CreateTokenService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-8.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Name.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"injectables/OTPRedisService.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"injectables/UserPrismaRepo.html":{},"injectables/ViacepGateway.html":{}}}],["constructor(redisservice",{"_index":2481,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["constructor(userrepo",{"_index":493,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"injectables/GetCondominiumRelUserService.html":{}}}],["constructorparameters",{"_index":1390,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["consultando",{"_index":3290,"title":{},"body":{"index.html":{}}}],["consultar",{"_index":3281,"title":{},"body":{"index.html":{}}}],["consumido",{"_index":3085,"title":{},"body":{"index.html":{}}}],["conta",{"_index":3179,"title":{},"body":{"index.html":{}}}],["container",{"_index":2091,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["container.props.condominiumarr",{"_index":2099,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["container.props.invitearr",{"_index":2138,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["container.props.userarr",{"_index":2140,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["contar",{"_index":3032,"title":{},"body":{"index.html":{}}}],["contato",{"_index":3058,"title":{},"body":{"index.html":{}}}],["content",{"_index":596,"title":{},"body":{"classes/Condominium.html":{},"injectables/CreateTokenService.html":{},"classes/DatabaseCustomError.html":{},"classes/GatewayErrors.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-8.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryUser.html":{},"injectables/LogInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["content.createdat",{"_index":641,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["content.switchtohttp().getrequest",{"_index":2398,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["content.updatedat",{"_index":642,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["contentalreadyexists",{"_index":1198,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["contentdoesntexists",{"_index":1201,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["contentofindexthatpointstouser",{"_index":2294,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["conter",{"_index":49,"title":{},"body":{"classes/AdapterError.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["context",{"_index":95,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"guards/JwtGuard.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["context.getresponse",{"_index":97,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["context.switchtohttp().getrequest",{"_index":204,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["contexto",{"_index":3234,"title":{},"body":{"index.html":{}}}],["conteúdo",{"_index":1221,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-16.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["continue",{"_index":2874,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["controller",{"_index":146,"title":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"controllers/SuperAdminController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"controllers/SuperAdminController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["controller('/condominium",{"_index":714,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["controller('admin",{"_index":152,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('super",{"_index":2603,"title":{},"body":{"controllers/SuperAdminController.html":{}}}],["controller('user",{"_index":2740,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":148,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"modules/HttpModule.html":{},"interfaces/IProps-1.html":{},"controllers/SuperAdminController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["controllers/admin.controller",{"_index":1733,"title":{},"body":{"modules/HttpModule.html":{}}}],["controllers/condominium.controller",{"_index":1728,"title":{},"body":{"modules/HttpModule.html":{}}}],["controllers/super",{"_index":1734,"title":{},"body":{"modules/HttpModule.html":{}}}],["controllers/user.controller",{"_index":1732,"title":{},"body":{"modules/HttpModule.html":{}}}],["contêiner",{"_index":3225,"title":{},"body":{"index.html":{}}}],["contêineres",{"_index":3089,"title":{},"body":{"index.html":{}}}],["converte",{"_index":1818,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["converter",{"_index":783,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/OTPMapper.html":{},"classes/UserMapper.html":{}}}],["convidado",{"_index":733,"title":{},"body":{"controllers/CondominiumController.html":{},"injectables/InviteFirestore.html":{}}}],["convite",{"_index":1582,"title":{},"body":{"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IProps-12.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["convite]/${inviteashash",{"_index":1614,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["convites",{"_index":1684,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InviteUserDTO.html":{}}}],["cookie",{"_index":139,"title":{},"body":{"modules/AdaptersModule.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IProps.html":{},"interfaces/IValidateSignedCookie.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["cookie.split('refresh",{"_index":2581,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["cookieadapter",{"_index":122,"title":{"classes/CookieAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IValidateSignedCookie.html":{},"guards/RefreshTokenGuard.html":{},"overview.html":{}}}],["cookieparser",{"_index":1007,"title":{},"body":{"classes/CookieParserAdapter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["cookieparser.signedcookie(input.cookie",{"_index":1009,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["cookieparseradapter",{"_index":140,"title":{"classes/CookieParserAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/CookieParserAdapter.html":{}}}],["copie",{"_index":3186,"title":{},"body":{"index.html":{}}}],["core",{"_index":577,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["coreinfo",{"_index":2772,"title":{},"body":{"controllers/UserController.html":{}}}],["corpo",{"_index":396,"title":{},"body":{"classes/CPF.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/IProps-1.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"miscellaneous/functions.html":{}}}],["corretamente",{"_index":2630,"title":{},"body":{"classes/UUID.html":{}}}],["count",{"_index":2263,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["coverage",{"_index":3339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragedirectory",{"_index":3338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cpf",{"_index":368,"title":{"classes/CPF.html":{}},"body":{"classes/CPF.html":{},"classes/CreateUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{},"miscellaneous/variables.html":{}}}],["cpf(input",{"_index":2021,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["cpf(input.cpf",{"_index":2003,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["cpfindex",{"_index":582,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/UsersFirestore.html":{}}}],["cpfs",{"_index":376,"title":{},"body":{"classes/CPF.html":{}}}],["create",{"_index":675,"title":{"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{}},"body":{"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["create(@body",{"_index":722,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["create(body",{"_index":678,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["create(input",{"_index":813,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/UserRepo.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["createadmin",{"_index":676,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["createadmin(@req",{"_index":738,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["createadmin(req",{"_index":683,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["createcondominium",{"_index":720,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["createcondominiumdto",{"_index":679,"title":{"classes/CreateCondominiumDTO.html":{}},"body":{"controllers/CondominiumController.html":{},"classes/CreateCondominiumDTO.html":{}}}],["createcondominiumservice",{"_index":698,"title":{"injectables/CreateCondominiumService.html":{}},"body":{"controllers/CondominiumController.html":{},"injectables/CreateCondominiumService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-7.html":{},"overview.html":{}}}],["createdat",{"_index":591,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/variables.html":{}}}],["createhmac",{"_index":309,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["createhmac('sha256",{"_index":315,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["createmockexecutioncontext",{"_index":3321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsimpleuser",{"_index":2695,"title":{},"body":{"controllers/UserController.html":{}}}],["createsimpleuser(req",{"_index":2702,"title":{},"body":{"controllers/UserController.html":{}}}],["createtoken",{"_index":2742,"title":{},"body":{"controllers/UserController.html":{}}}],["createtokenservice",{"_index":1072,"title":{"injectables/CreateTokenService.html":{}},"body":{"injectables/CreateTokenService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["createtransport",{"_index":2433,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["createuser",{"_index":2741,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":1115,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"controllers/UserController.html":{}}}],["createuserservice",{"_index":1146,"title":{"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{}},"body":{"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"modules/HttpModule.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-9.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["credenciais",{"_index":2044,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{},"index.html":{}}}],["criada",{"_index":375,"title":{},"body":{"classes/CPF.html":{}}}],["criado",{"_index":1228,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["criar",{"_index":1061,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateUserService-1.html":{},"injectables/GenInviteService.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-7.html":{},"interfaces/IRedisError.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{}}}],["criação",{"_index":1012,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{}}}],["crie",{"_index":3178,"title":{},"body":{"index.html":{}}}],["critical",{"_index":1297,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["critical(input",{"_index":1849,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["critical(undefined",{"_index":1305,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["crypt",{"_index":134,"title":{},"body":{"modules/AdaptersModule.html":{},"classes/BcryptAdapter.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-9.html":{},"interfaces/IValidate.html":{}}}],["cryptadapter",{"_index":123,"title":{"classes/CryptAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/BcryptAdapter.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-9.html":{},"interfaces/IValidate.html":{},"overview.html":{}}}],["cryptadapter:19",{"_index":308,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["cryptadapter:24",{"_index":304,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["cryptadapter:28",{"_index":302,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["crypto",{"_index":2394,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["cryptspy",{"_index":1173,"title":{"classes/CryptSpy.html":{}},"body":{"classes/CryptSpy.html":{}}}],["current",{"_index":402,"title":{},"body":{"classes/CPF.html":{}}}],["custom",{"_index":1212,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{}}}],["customizado",{"_index":19,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["customizados",{"_index":1217,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["código",{"_index":52,"title":{},"body":{"classes/AdapterError.html":{},"guards/CheckTFACodeGuard.html":{},"classes/FetchAdapter.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-3.html":{},"injectables/OTPRedisService.html":{},"index.html":{}}}],["código]/${code",{"_index":1642,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["códigos",{"_index":487,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["d",{"_index":3286,"title":{},"body":{"index.html":{}}}],["da",{"_index":1377,"title":{},"body":{"classes/Entity.html":{},"interfaces/IProps-1.html":{},"injectables/LogInterceptor.html":{},"classes/Num.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dada",{"_index":1550,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["dado",{"_index":1486,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{}}}],["dados",{"_index":759,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/RedisLogicError.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["das",{"_index":563,"title":{},"body":{"injectables/CollectionsRefService.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"index.html":{}}}],["data",{"_index":305,"title":{},"body":{"classes/BcryptAdapter.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CookieAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DateFormats.html":{},"classes/EmailAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/ISendMailContent.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"injectables/InvitePrismaRepo.html":{},"classes/NodemailerAdapter.html":{},"guards/RefreshTokenGuard.html":{},"classes/UUIDGroup.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{}}}],["data.body",{"_index":2072,"title":{},"body":{"interfaces/ISuccess.html":{},"classes/NodemailerAdapter.html":{},"injectables/ViacepGateway.html":{}}}],["data.body?.erro",{"_index":2068,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["data.done",{"_index":2663,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["data.from",{"_index":2444,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["data.subject",{"_index":2446,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["data.to",{"_index":2445,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["data.value",{"_index":2664,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["database",{"_index":976,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"classes/DatabaseCustomError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-18.html":{},"injectables/InviteFirestore.html":{},"classes/LoggerAdapter.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["database.batch",{"_index":979,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{}}}],["database.runtransaction(async",{"_index":2250,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["databasecustomerror",{"_index":827,"title":{"classes/DatabaseCustomError.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-18.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["databasecustomerrorfilter",{"_index":1215,"title":{"classes/DatabaseCustomErrorFilter.html":{}},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["databasecustomerrorfilter(this.logger",{"_index":1940,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["databasecustomerrorstags",{"_index":828,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-18.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["databasecustomerrorstags.contentalreadyexists",{"_index":1227,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"injectables/InviteFirestore.html":{}}}],["databasecustomerrorstags.contentdoesntexists",{"_index":840,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["databasecustomerrorstags.malformedref",{"_index":1816,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["databasecustomerrorstags.maximumcondominiumreluser",{"_index":1233,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"injectables/InviteFirestore.html":{}}}],["databasecustomerrorstags.reflost",{"_index":1230,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["databasecustomerrorstags.safesearchenabled",{"_index":1222,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["databasecustomerrorstags.toomanyentities",{"_index":1232,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["databasecustomerrorstags.wronginputlevel",{"_index":1237,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["date",{"_index":627,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserMapper.html":{},"injectables/CreateTokenService.html":{},"classes/DateFormats.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/Invite.html":{},"classes/InviteMapper.html":{},"injectables/LogInterceptor.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserMapper.html":{},"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":1826,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["date.getutchours",{"_index":1265,"title":{},"body":{"classes/DateFormats.html":{}}}],["date.getutcminutes",{"_index":1263,"title":{},"body":{"classes/DateFormats.html":{}}}],["date.getutcseconds",{"_index":1261,"title":{},"body":{"classes/DateFormats.html":{}}}],["date.now",{"_index":517,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"controllers/UserController.html":{}}}],["dateformats",{"_index":1250,"title":{"classes/DateFormats.html":{}},"body":{"classes/DateFormats.html":{},"injectables/LogInterceptor.html":{}}}],["dateformats.prettify",{"_index":2407,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["db",{"_index":3283,"title":{},"body":{"index.html":{}}}],["ddd",{"_index":2059,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["de",{"_index":23,"title":{},"body":{"classes/AdapterError.html":{},"guards/AdminJwt.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-8.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"classes/OTPMapper.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/ValueObject.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["debug",{"_index":1298,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["debug(`debug",{"_index":1451,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["debug(input",{"_index":1308,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["declarations",{"_index":116,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"overview.html":{}}}],["decodeuricomponent(cookie",{"_index":2576,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["decorator",{"_index":1963,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["decorators",{"_index":680,"title":{},"body":{"controllers/CondominiumController.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"controllers/UserController.html":{}}}],["default",{"_index":297,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CepGatewaySpy.html":{},"injectables/CollectionsRefService.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EmailSpy.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["definido",{"_index":3216,"title":{},"body":{"index.html":{}}}],["definir",{"_index":3248,"title":{},"body":{"index.html":{}}}],["deletar",{"_index":1279,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-11.html":{},"classes/PrismaErrorFilter.html":{}}}],["delete",{"_index":696,"title":{},"body":{"controllers/CondominiumController.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/RegistryAPIBootstrap.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{}}}],["delete('dev/:condominiumid/delete",{"_index":690,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["delete(input",{"_index":1780,"title":{},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["deleteaccount",{"_index":2696,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteaccount(@req",{"_index":2784,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteaccount(req",{"_index":2705,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":677,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["deleteuser(@req",{"_index":742,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["deleteuser(req",{"_index":688,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["deleteuserdto",{"_index":689,"title":{"classes/DeleteUserDTO.html":{}},"body":{"controllers/CondominiumController.html":{},"classes/DeleteUserDTO.html":{}}}],["deleteuserservice",{"_index":711,"title":{"injectables/DeleteUserService.html":{}},"body":{"controllers/CondominiumController.html":{},"injectables/DeleteUserService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-11.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["deleção",{"_index":1275,"title":{},"body":{"classes/DeleteUserDTO.html":{}}}],["delimiter",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["dentro",{"_index":3045,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependência",{"_index":3075,"title":{},"body":{"index.html":{}}}],["dependências",{"_index":3034,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":3099,"title":{},"body":{"index.html":{}}}],["depois",{"_index":3208,"title":{},"body":{"index.html":{}}}],["dereference",{"_index":589,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["desconhecida",{"_index":1658,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["description",{"_index":65,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["desenvolvedores",{"_index":3023,"title":{},"body":{"index.html":{}}}],["desenvolvida",{"_index":2861,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["desenvolvimento",{"_index":3041,"title":{},"body":{"index.html":{}}}],["detectados",{"_index":1368,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["detected",{"_index":1197,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["dev",{"_index":3271,"title":{},"body":{"index.html":{}}}],["deve",{"_index":48,"title":{},"body":{"classes/AdapterError.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DateFormats.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["devem",{"_index":2769,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["devpor",{"_index":3230,"title":{},"body":{"index.html":{}}}],["digitos",{"_index":390,"title":{},"body":{"classes/CPF.html":{}}}],["direito",{"_index":3191,"title":{},"body":{"index.html":{}}}],["diretamente",{"_index":1399,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["disable",{"_index":2278,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["disparado",{"_index":1967,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["disparar",{"_index":30,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["disparou",{"_index":1435,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["disponíveis",{"_index":719,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["disso",{"_index":954,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["doc(condominiumid",{"_index":2292,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["doc(input.condominiumid.value",{"_index":2882,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["doc(item.id",{"_index":2907,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["doc.data",{"_index":2305,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["doc.id",{"_index":2304,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["docker",{"_index":3087,"title":{},"body":{"index.html":{}}}],["document",{"_index":1927,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["documentbuilder",{"_index":1896,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["documentdata",{"_index":1812,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["documentos",{"_index":565,"title":{},"body":{"injectables/CollectionsRefService.html":{},"index.html":{}}}],["documentreference",{"_index":1811,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["doesn't",{"_index":2970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["doesn\\'t",{"_index":1202,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{}}}],["dois",{"_index":389,"title":{},"body":{"classes/CPF.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"classes/LaunchTFADTO.html":{}}}],["domínio",{"_index":2763,"title":{},"body":{"controllers/UserController.html":{}}}],["domínio]/[página",{"_index":1612,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{}}}],["dos",{"_index":69,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieErrorFilter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/ThrottlerErrorFilter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dotenv",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":1206,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-18.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["dto/createcondominium.dto",{"_index":700,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["dto/createuser.dto",{"_index":2730,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/deleteadminuser.dto",{"_index":710,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["dto/getcondominiumrel",{"_index":2858,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["dto/getinvite",{"_index":2248,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["dto/getuser",{"_index":2857,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["dto/inviteuser.dto",{"_index":709,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["dtofailure",{"_index":1205,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["e",{"_index":51,"title":{},"body":{"classes/AdapterError.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"injectables/CollectionsRefService.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/LogInterceptor.html":{},"classes/OTPRedisMapper.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["e187f1f266a145c2f8649b2324d0bb54a7cf62e3c9abfce5a7f2ff8bbbd59d44b",{"_index":1180,"title":{},"body":{"classes/CryptSpy.html":{}}}],["e2e",{"_index":3345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["echo",{"_index":1320,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.create",{"_index":1322,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.alert",{"_index":1326,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.debug",{"_index":1324,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.error",{"_index":1331,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.info",{"_index":1323,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.warn",{"_index":1325,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echoguard",{"_index":1321,"title":{},"body":{"classes/EchoguardAdapter.html":{},"dependencies.html":{}}}],["echoguardadapter",{"_index":1294,"title":{"classes/EchoguardAdapter.html":{}},"body":{"classes/EchoguardAdapter.html":{}}}],["ele",{"_index":2500,"title":{},"body":{"injectables/OTPRedisService.html":{},"index.html":{}}}],["em",{"_index":351,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DateFormats.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-6.html":{},"interfaces/IUserInObject.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/Num.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["email",{"_index":131,"title":{"classes/Email.html":{}},"body":{"modules/AdaptersModule.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryUser.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/NodemailerAdapter.html":{},"classes/OTPRepo.html":{},"guards/RefreshTokenGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/variables.html":{}}}],["email(body.email",{"_index":445,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["email(data.email",{"_index":2586,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["email(input",{"_index":2017,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["email(input.email",{"_index":1823,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["email(rawemail",{"_index":727,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["email.value",{"_index":1107,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["email_sender",{"_index":3205,"title":{},"body":{"index.html":{}}}],["emailadapter",{"_index":124,"title":{"classes/EmailAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/ISendMailContent.html":{},"classes/NodemailerAdapter.html":{},"overview.html":{}}}],["emailindex",{"_index":580,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/UsersFirestore.html":{}}}],["emails",{"_index":3044,"title":{},"body":{"index.html":{}}}],["emailspy",{"_index":1343,"title":{"classes/EmailSpy.html":{}},"body":{"classes/EmailSpy.html":{}}}],["emergencial",{"_index":1299,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["emergencial(input",{"_index":1850,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["emergencial(undefined",{"_index":1310,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["emitter",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["empacotar",{"_index":3092,"title":{},"body":{"index.html":{}}}],["emuladores",{"_index":3238,"title":{},"body":{"index.html":{}}}],["emulatorsse",{"_index":3241,"title":{},"body":{"index.html":{}}}],["encontra",{"_index":2461,"title":{},"body":{"classes/Num.html":{}}}],["encontrado",{"_index":216,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["end",{"_index":2557,"title":{},"body":{"injectables/RedisService.html":{},"index.html":{}}}],["entidade",{"_index":1352,"title":{},"body":{"classes/EntitieError.html":{},"classes/Entity.html":{},"interfaces/IProps-4.html":{},"classes/ValueObject.html":{}}}],["entidades",{"_index":1351,"title":{},"body":{"classes/EntitieError.html":{},"classes/Entity.html":{},"interfaces/IProps-4.html":{},"classes/Name.html":{},"classes/ValueObject.html":{}}}],["entitie",{"_index":1846,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-19.html":{},"classes/LoggerAdapter.html":{},"classes/RedisLogicError.html":{},"miscellaneous/enumerations.html":{}}}],["entitieerror",{"_index":252,"title":{"classes/EntitieError.html":{}},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"interfaces/IProps-4.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["entitieerrorfilter",{"_index":1358,"title":{"classes/EntitieErrorFilter.html":{}},"body":{"classes/EntitieErrorFilter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["entitieerrorfilter(this.logger",{"_index":1942,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["entities",{"_index":626,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/DatabaseCustomError.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["entities/condominiumsdocuments/condominiums",{"_index":569,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["entities/indexes",{"_index":973,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{}}}],["entities/user",{"_index":2081,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{}}}],["entities/usersdocuments/core",{"_index":578,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["entities/usersdocuments/core/${id}/condominiumreluser",{"_index":579,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["entities/usersdocuments/invites",{"_index":573,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["entitiesenum",{"_index":254,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-4.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["entitiesenum.condominium",{"_index":2104,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["entitiesenum.invite",{"_index":2144,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["entitiesenum.otp",{"_index":2169,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["entitiesenum.user",{"_index":2200,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["entitiesenum.vo",{"_index":339,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"interfaces/IProps-4.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["entity",{"_index":338,"title":{"classes/Entity.html":{}},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/GenericErrorFilter.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-4.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["entityref",{"_index":992,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["entrada",{"_index":805,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["entrar",{"_index":3223,"title":{},"body":{"index.html":{}}}],["entre",{"_index":244,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"index.html":{}}}],["então",{"_index":3231,"title":{},"body":{"index.html":{}}}],["enum",{"_index":1190,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/Entity.html":{},"classes/GatewayErrors.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"interfaces/IRefreshTokenBody.html":{},"classes/LoggerAdapter.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/ValueObject.html":{}}}],["enumerations",{"_index":2961,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1189,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["env",{"_index":3189,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":3145,"title":{},"body":{"index.html":{}}}],["envenenado",{"_index":1551,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["envio",{"_index":3043,"title":{},"body":{"index.html":{}}}],["envolvida",{"_index":1353,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-4.html":{}}}],["equalto",{"_index":234,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/Entity.html":{},"classes/Invite.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["equalto(input",{"_index":247,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["equipe",{"_index":3057,"title":{},"body":{"index.html":{}}}],["erase",{"_index":1798,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["err",{"_index":321,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/FetchAdapter.html":{}}}],["erro",{"_index":18,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrors.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InviteRepo.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/UserRepo.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["error",{"_index":8,"title":{},"body":{"classes/AdapterError.html":{},"guards/AdminJwt.html":{},"classes/ClassValidatorErrorFilter.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieError.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrors.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InMemoryError.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/LoggerAdapter.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["error(`critical",{"_index":1455,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["error(`emergencial",{"_index":1456,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["error(`error",{"_index":1454,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["error(input",{"_index":1848,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["error(undefined",{"_index":1312,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["error.httpcode",{"_index":1249,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["error.message",{"_index":1247,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["error.name",{"_index":1245,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["errormessages",{"_index":1971,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["errormessages.length",{"_index":1975,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["errors",{"_index":1969,"title":{},"body":{"interfaces/IProps-1.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["errors.flatmap",{"_index":1972,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["erros",{"_index":68,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["escutar",{"_index":3272,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":2277,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["eslint/no",{"_index":2280,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["espaço",{"_index":3084,"title":{},"body":{"index.html":{}}}],["especificado",{"_index":213,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["esperado",{"_index":1544,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["esquerda",{"_index":3183,"title":{},"body":{"index.html":{}}}],["essenciais",{"_index":3132,"title":{},"body":{"index.html":{}}}],["est",{"_index":1234,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IServiceErrors.html":{},"classes/NotFoundFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/UUID.html":{}}}],["esta",{"_index":243,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/EntitieError.html":{},"interfaces/IProps-4.html":{},"injectables/InviteFirestore.html":{},"injectables/LogInterceptor.html":{},"classes/UUIDGroup.html":{},"injectables/UsersFirestore.html":{},"index.html":{}}}],["estabelecer",{"_index":1427,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["estamos",{"_index":3049,"title":{},"body":{"index.html":{}}}],["estar",{"_index":331,"title":{},"body":{"classes/Block.html":{},"interfaces/IClassToRawObject.html":{},"classes/OTPRedisMapper.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{}}}],["este",{"_index":838,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IServiceErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/ServiceErrorFilter.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["esteja",{"_index":3036,"title":{},"body":{"index.html":{}}}],["estes",{"_index":3143,"title":{},"body":{"index.html":{}}}],["eventemittermodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":2222,"title":{},"body":{"classes/Index.html":{},"index.html":{}}}],["exception",{"_index":83,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["exception.code",{"_index":1873,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["exception.content",{"_index":1563,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["exception.entity",{"_index":1364,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["exception.getresponse",{"_index":539,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["exception.message",{"_index":102,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["exception.name",{"_index":99,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["exception.stack",{"_index":104,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["exception.tag",{"_index":1244,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["exception?.message",{"_index":1656,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["exception?.message?.includes(item.key",{"_index":1653,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["exception?.name",{"_index":1654,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["exception?.stack",{"_index":1659,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["exceptionfilter",{"_index":72,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["exec",{"_index":881,"title":{},"body":{"classes/CondominiumRelUser.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"classes/Entity.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-8.html":{},"classes/IService.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"index.html":{}}}],["exec(input",{"_index":1066,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateUserService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-9.html":{},"classes/IService.html":{}}}],["exec(undefined",{"_index":1085,"title":{},"body":{"injectables/CreateTokenService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"injectables/GetCondominiumRelUserService.html":{}}}],["executar",{"_index":3104,"title":{},"body":{"index.html":{}}}],["execute",{"_index":3176,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":174,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"miscellaneous/variables.html":{}}}],["execução",{"_index":3095,"title":{},"body":{"index.html":{}}}],["exemplo",{"_index":1257,"title":{},"body":{"classes/DateFormats.html":{},"classes/IService.html":{}}}],["exist",{"_index":2105,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["existe",{"_index":455,"title":{},"body":{"guards/CheckOTPGuard.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/NotFoundFilter.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["existem",{"_index":3079,"title":{},"body":{"index.html":{}}}],["existentdata",{"_index":2101,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["existentdata.user.condominiumreluser[input.condominiumid.value",{"_index":2212,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["existentdata?.user.content",{"_index":2208,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["existentdata?.value",{"_index":2172,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["existentdataindex",{"_index":2173,"title":{},"body":{"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["existentnumberofinvites",{"_index":2267,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["existentnumberofinvites.data().count",{"_index":2270,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["existentuser",{"_index":2214,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["existentuser.user.condominiumreluser",{"_index":2216,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["existentuser.user.condominiumreluser[key",{"_index":2219,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["exists",{"_index":1200,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/InviteFirestore.html":{},"classes/RedisLogicError.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["existência",{"_index":2035,"title":{},"body":{"classes/IService.html":{}}}],["exp",{"_index":1091,"title":{},"body":{"injectables/CreateTokenService.html":{},"injectables/GenTFAService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-8.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{}}}],["expires",{"_index":2746,"title":{},"body":{"controllers/UserController.html":{}}}],["expiresat",{"_index":1493,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{}}}],["expiresin",{"_index":1103,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["explicações",{"_index":3147,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["exports",{"_index":119,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"overview.html":{}}}],["express",{"_index":91,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"controllers/CondominiumController.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["express.express",{"_index":1909,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["expressadapter",{"_index":1877,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["expressadapter(requestlistener",{"_index":1912,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["expressapp",{"_index":3323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expressapp(req",{"_index":3327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AdapterError.html":{},"classes/BcryptAdapter.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/InMemoryError.html":{},"injectables/PrismaService.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["extras",{"_index":3296,"title":{},"body":{"index.html":{}}}],["extremamente",{"_index":3168,"title":{},"body":{"index.html":{}}}],["f]{12}$/i",{"_index":2627,"title":{},"body":{"classes/UUID.html":{}}}],["f]{3",{"_index":2625,"title":{},"body":{"classes/UUID.html":{}}}],["f]{4",{"_index":2623,"title":{},"body":{"classes/UUID.html":{}}}],["f]{8",{"_index":2622,"title":{},"body":{"classes/UUID.html":{}}}],["facilitando",{"_index":3096,"title":{},"body":{"index.html":{}}}],["facilitar",{"_index":3020,"title":{},"body":{"index.html":{}}}],["falha",{"_index":1703,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["falhou",{"_index":1437,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["false",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"classes/CookieAdapter.html":{},"interfaces/IValidateSignedCookie.html":{},"injectables/PrismaService.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{}}}],["fatores",{"_index":492,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"classes/LaunchTFADTO.html":{}}}],["favor",{"_index":1546,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["fazer",{"_index":1354,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-4.html":{},"index.html":{}}}],["faça",{"_index":3055,"title":{},"body":{"index.html":{}}}],["feita",{"_index":3012,"title":{},"body":{"index.html":{}}}],["feito",{"_index":1783,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{}}}],["ferramentas",{"_index":3035,"title":{},"body":{"index.html":{}}}],["fetch(input.url",{"_index":1411,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["fetch/fetchadapter",{"_index":138,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["fetchadapter",{"_index":137,"title":{"classes/FetchAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/FetchAdapter.html":{}}}],["fez",{"_index":3274,"title":{},"body":{"index.html":{}}}],["field",{"_index":2071,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["filters",{"_index":34,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["filtrar",{"_index":67,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["finalizado",{"_index":2412,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["find",{"_index":809,"title":{"interfaces/find.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/UUIDGroup.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{}}}],["find(input",{"_index":816,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/UUIDGroup.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["finish",{"_index":2069,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["firebase",{"_index":143,"title":{},"body":{"modules/AdaptersModule.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{},"injectables/UsersFirestore.html":{},"dependencies.html":{},"index.html":{}}}],["firebase/rules",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["firebaseenums",{"_index":2964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["firebaseloggeradapter",{"_index":142,"title":{"classes/FirebaseLoggerAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["firestore",{"_index":566,"title":{},"body":{"injectables/CollectionsRefService.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"injectables/CondominiumsFirestore.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{},"injectables/UsersFirestore.html":{}}}],["firestore.service",{"_index":585,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["firestorecondominiumfactory",{"_index":2978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestorecondominiumfactory(input",{"_index":2995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestorecondominiumreluserfactory",{"_index":2979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestorecondominiumreluserfactory(input",{"_index":2997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestoregetcondominiumdto",{"_index":1457,"title":{"classes/FirestoreGetCondominiumDTO.html":{}},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["firestoregetcondominiumreluserdto",{"_index":1475,"title":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{},"injectables/UsersFirestore.html":{}}}],["firestoregetcondominiumreluserdto.exec(unparseddata",{"_index":2888,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["firestoregetinvitedto",{"_index":1483,"title":{"classes/FirestoreGetInviteDTO.html":{}},"body":{"classes/FirestoreGetInviteDTO.html":{},"injectables/InviteFirestore.html":{}}}],["firestoregetinvitedto.exec(unparsedinvite",{"_index":2307,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["firestoregetuserdto",{"_index":1494,"title":{"classes/FirestoreGetUserDTO.html":{}},"body":{"classes/FirestoreGetUserDTO.html":{},"injectables/UsersFirestore.html":{}}}],["firestoregetuserdto.exec(unparseduser",{"_index":2878,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["firestoreinvitefactory",{"_index":2980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestoreinvitefactory(input",{"_index":2999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestoremodule",{"_index":1506,"title":{"modules/FirestoreModule.html":{}},"body":{"modules/FirestoreModule.html":{},"modules/HttpModule.html":{},"modules.html":{},"overview.html":{}}}],["firestoreservice",{"_index":559,"title":{"injectables/FirestoreService.html":{}},"body":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{},"overview.html":{}}}],["firestoreuserfactory",{"_index":2982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestoreuserfactory(input",{"_index":3001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flat",{"_index":989,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{}}}],["fluxos",{"_index":490,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["focado",{"_index":3061,"title":{},"body":{"index.html":{}}}],["foi",{"_index":1224,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"injectables/UsersFirestore.html":{}}}],["fora",{"_index":1962,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["foram",{"_index":1367,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["forma",{"_index":784,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-6.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/OTPMapper.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"classes/UserMapper.html":{},"miscellaneous/functions.html":{}}}],["formado",{"_index":1554,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["formata",{"_index":1255,"title":{},"body":{"classes/DateFormats.html":{}}}],["formatada",{"_index":1259,"title":{},"body":{"classes/DateFormats.html":{}}}],["formatado",{"_index":2629,"title":{},"body":{"classes/UUID.html":{}}}],["formatados",{"_index":349,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{}}}],["formatação",{"_index":3256,"title":{},"body":{"index.html":{}}}],["formdata",{"_index":1718,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["fornecida",{"_index":1545,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["força",{"_index":958,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["found",{"_index":1207,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{},"classes/NotFoundFilter.html":{},"miscellaneous/enumerations.html":{}}}],["frente",{"_index":3117,"title":{},"body":{"index.html":{}}}],["fromfirebasetoclass",{"_index":2800,"title":{},"body":{"classes/UserFirestoreMapper.html":{}}}],["fromfirebasetoclass(input",{"_index":1807,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["fromfirebasetoobject",{"_index":1808,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["fromfirebasetoobject(input",{"_index":2802,"title":{},"body":{"classes/UserFirestoreMapper.html":{}}}],["fromfirestoretoclass",{"_index":753,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["fromfirestoretoclass(input",{"_index":755,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["fromfirestoretoclass(undefined",{"_index":914,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{}}}],["fromfirestoretoobject",{"_index":754,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["fromfirestoretoobject(input",{"_index":763,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/InviteFirestoreMapper.html":{}}}],["front",{"_index":1613,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{}}}],["funcionalidade",{"_index":2859,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["funcionalidades",{"_index":3131,"title":{},"body":{"index.html":{}}}],["funcionamento",{"_index":3038,"title":{},"body":{"index.html":{}}}],["funcionando",{"_index":3123,"title":{},"body":{"index.html":{}}}],["funcionário",{"_index":164,"title":{},"body":{"guards/AdminJwt.html":{},"classes/Level.html":{}}}],["function",{"_index":519,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"classes/CondominiumRepo.html":{},"classes/EmailAdapter.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-1.html":{}}}],["functions",{"_index":2950,"title":{"miscellaneous/functions.html":{}},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["functions/logger",{"_index":1448,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["função",{"_index":374,"title":{},"body":{"classes/CPF.html":{}}}],["funções",{"_index":2036,"title":{},"body":{"classes/IService.html":{}}}],["futuro",{"_index":1918,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["g",{"_index":358,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"index.html":{}}}],["garantir",{"_index":1395,"title":{},"body":{"classes/Entity.html":{},"classes/IService.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["gateway",{"_index":1572,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-16.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["gatewayerrorfilter",{"_index":1535,"title":{"classes/GatewayErrorFilter.html":{}},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["gatewayerrorfilter(this.logger",{"_index":1943,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["gatewayerrors",{"_index":1557,"title":{"classes/GatewayErrors.html":{}},"body":{"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-16.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["gatewaymodule",{"_index":1575,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules.html":{},"overview.html":{}}}],["gateways",{"_index":1537,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-16.html":{}}}],["gateways/gateway.module",{"_index":1736,"title":{},"body":{"modules/HttpModule.html":{}}}],["gatewayserrorstags",{"_index":1559,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-16.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/enumerations.html":{}}}],["gatewayserrorstags.invalidresult",{"_index":1541,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["gatewayserrorstags.poisonedcontent",{"_index":1552,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["gencode",{"_index":1629,"title":{},"body":{"injectables/GenTFAService.html":{}}}],["gencode(input",{"_index":1632,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["generateinvite",{"_index":1583,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["generateinvite(undefined",{"_index":1587,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["generaterandomnumbers",{"_index":1617,"title":{},"body":{"injectables/GenOldTFASevice.html":{},"interfaces/IProps-14.html":{}}}],["generatestringcodecontent",{"_index":502,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IValidate.html":{},"miscellaneous/functions.html":{}}}],["generatestringcodecontent(input",{"_index":1786,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{}}}],["genericerrorfilter",{"_index":1643,"title":{"classes/GenericErrorFilter.html":{}},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IProps.html":{},"interfaces/IUntrackableErrors.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["genericerrorfilter(this.logger",{"_index":1937,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["genhmacdata",{"_index":293,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["geninvite",{"_index":721,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["geninviteservice",{"_index":704,"title":{"injectables/GenInviteService.html":{}},"body":{"controllers/CondominiumController.html":{},"injectables/GenInviteService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-12.html":{},"overview.html":{}}}],["genoldtfasevice",{"_index":1615,"title":{"injectables/GenOldTFASevice.html":{}},"body":{"injectables/GenOldTFASevice.html":{},"modules/HttpModule.html":{},"interfaces/IProps-14.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["gentfa",{"_index":2743,"title":{},"body":{"controllers/UserController.html":{}}}],["gentfaservice",{"_index":1625,"title":{"injectables/GenTFAService.html":{}},"body":{"injectables/GenTFAService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-13.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["gentoken",{"_index":282,"title":{},"body":{"classes/Auth.html":{}}}],["gentoken(user",{"_index":285,"title":{},"body":{"classes/Auth.html":{}}}],["genv4",{"_index":2614,"title":{},"body":{"classes/UUID.html":{}}}],["genéricos",{"_index":1645,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["gerados",{"_index":488,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["gerar",{"_index":1074,"title":{},"body":{"injectables/CreateTokenService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["gerenciar",{"_index":3063,"title":{},"body":{"index.html":{}}}],["get('content",{"_index":1421,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["get('get",{"_index":2799,"title":{},"body":{"controllers/UserController.html":{}}}],["getaccount",{"_index":2697,"title":{},"body":{"controllers/UserController.html":{}}}],["getaccount(@req",{"_index":2786,"title":{},"body":{"controllers/UserController.html":{}}}],["getaccount(req",{"_index":2708,"title":{},"body":{"controllers/UserController.html":{}}}],["getallcondominiumrelation",{"_index":2177,"title":{"interfaces/getAllCondominiumRelation.html":{}},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["getallcondominiumrelation(input",{"_index":2190,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{}}}],["getapartmentnumber",{"_index":867,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["getblock",{"_index":862,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["getcep",{"_index":609,"title":{},"body":{"classes/Condominium.html":{}}}],["getcnpj",{"_index":617,"title":{},"body":{"classes/Condominium.html":{}}}],["getcode",{"_index":2471,"title":{},"body":{"classes/OTP.html":{}}}],["getcondominiumid",{"_index":854,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/Invite.html":{}}}],["getcondominiumrelation",{"_index":2178,"title":{"interfaces/getCondominiumRelation.html":{}},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["getcondominiumrelation(input",{"_index":2193,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{}}}],["getcondominiumreluserservice",{"_index":1660,"title":{"injectables/GetCondominiumRelUserService.html":{}},"body":{"injectables/GetCondominiumRelUserService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-15.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["getcontent",{"_index":426,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["getcontent(body",{"_index":431,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["getcpf",{"_index":2684,"title":{},"body":{"classes/User.html":{}}}],["getcreatedat",{"_index":621,"title":{},"body":{"classes/Condominium.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["getemail",{"_index":2230,"title":{},"body":{"classes/Invite.html":{},"classes/User.html":{}}}],["getexpiresat",{"_index":2234,"title":{},"body":{"classes/Invite.html":{}}}],["getid",{"_index":602,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["getinstance",{"_index":1524,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["getinvitedoc",{"_index":574,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["getinvitedoc(input.key.value",{"_index":2275,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["getlevel",{"_index":850,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["getname",{"_index":604,"title":{},"body":{"classes/Condominium.html":{},"classes/User.html":{}}}],["getnum",{"_index":613,"title":{},"body":{"classes/Condominium.html":{}}}],["getpassword",{"_index":2680,"title":{},"body":{"classes/User.html":{}}}],["getphonenumber",{"_index":2688,"title":{},"body":{"classes/User.html":{}}}],["getref",{"_index":2224,"title":{},"body":{"classes/Index.html":{}}}],["getrequest",{"_index":3349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":3008,"title":{"index.html":{}},"body":{}}],["getttl",{"_index":2232,"title":{},"body":{"classes/Invite.html":{},"classes/OTP.html":{}}}],["gettype",{"_index":2236,"title":{},"body":{"classes/Invite.html":{}}}],["getupdatedat",{"_index":623,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/User.html":{}}}],["getuserid",{"_index":858,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/OTP.html":{}}}],["getuserquery",{"_index":2252,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["getvalue",{"_index":250,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["gia",{"_index":2060,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["git",{"_index":3250,"title":{},"body":{"index.html":{}}}],["global",{"_index":130,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/FirestoreModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{}}}],["guard",{"_index":153,"title":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}},"body":{"classes/GuardErrors.html":{},"interfaces/IProps-5.html":{}}}],["guarderrorfilter",{"_index":1671,"title":{"classes/GuardErrorFilter.html":{}},"body":{"classes/GuardErrorFilter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["guarderrorfilter(this.logger",{"_index":1944,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["guarderrors",{"_index":188,"title":{"classes/GuardErrors.html":{}},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-5.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["guards",{"_index":155,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-5.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"overview.html":{}}}],["hash",{"_index":295,"title":{},"body":{"classes/BcryptAdapter.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{}}}],["hash(data",{"_index":303,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["hash.code.value",{"_index":460,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["hasheddata",{"_index":459,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"classes/CryptAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["hashedinvite",{"_index":1701,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["hashedotp",{"_index":456,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["hashpass",{"_index":1150,"title":{},"body":{"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-9.html":{}}}],["hashwithhmac",{"_index":296,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["hashwithhmac(input",{"_index":306,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["header",{"_index":2355,"title":{},"body":{"guards/JwtGuard.html":{}}}],["headers",{"_index":1413,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["hmac",{"_index":314,"title":{},"body":{"classes/BcryptAdapter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["hmac.digest('hex",{"_index":319,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["hmac.update(input.data",{"_index":317,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["hmacinviteguard",{"_index":1680,"title":{"guards/HmacInviteGuard.html":{}},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"controllers/UserController.html":{}}}],["hooks",{"_index":3249,"title":{},"body":{"index.html":{}}}],["hookspronto",{"_index":3262,"title":{},"body":{"index.html":{}}}],["hora",{"_index":3048,"title":{},"body":{"index.html":{}}}],["horas",{"_index":3116,"title":{},"body":{"index.html":{}}}],["host",{"_index":80,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["host.switchtohttp",{"_index":96,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["host_port_sender",{"_index":3199,"title":{},"body":{"index.html":{}}}],["host_sender",{"_index":3197,"title":{},"body":{"index.html":{}}}],["hours",{"_index":1270,"title":{},"body":{"classes/DateFormats.html":{}}}],["hours}:${minutes}:${seconds",{"_index":1272,"title":{},"body":{"classes/DateFormats.html":{}}}],["html",{"_index":2447,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["http",{"_index":53,"title":{},"body":{"classes/AdapterError.html":{},"modules/AdaptersModule.html":{},"classes/FetchAdapter.html":{},"interfaces/IProps-3.html":{}}}],["httpadapter",{"_index":125,"title":{"classes/HttpAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{},"overview.html":{}}}],["httpargumenthost",{"_index":3348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpargumentshost",{"_index":3350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":12,"title":{},"body":{"classes/AdapterError.html":{},"controllers/CondominiumController.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-3.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"controllers/UserController.html":{}}}],["httpcode(200",{"_index":2785,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204",{"_index":737,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["httpexception",{"_index":1409,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["httpmodule",{"_index":262,"title":{"modules/HttpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HttpModule.html":{},"modules.html":{},"overview.html":{}}}],["httponly",{"_index":2751,"title":{},"body":{"controllers/UserController.html":{}}}],["https://[exemplo",{"_index":1611,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{}}}],["https://viacep.com.br/ws/${input}/json",{"_index":2067,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["https://www.youtube.com/watch?v=15bw0duulmq&themerefresh=1",{"_index":385,"title":{},"body":{"classes/CPF.html":{}}}],["httpstatus",{"_index":182,"title":{},"body":{"guards/AdminJwt.html":{},"interfaces/IProps-1.html":{},"guards/SuperAdminJwt.html":{}}}],["httpstatus.bad_request",{"_index":209,"title":{},"body":{"guards/AdminJwt.html":{},"interfaces/IProps-1.html":{},"guards/SuperAdminJwt.html":{}}}],["iaccesstokenbody",{"_index":185,"title":{"interfaces/IAccessTokenBody.html":{}},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-8.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["iat",{"_index":1635,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-13.html":{},"interfaces/IRefreshTokenBody.html":{}}}],["ibge",{"_index":2061,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["ibodyprops",{"_index":530,"title":{"interfaces/IBodyProps.html":{}},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["icheckcep",{"_index":410,"title":{"interfaces/ICheckCep.html":{}},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["iclass",{"_index":1380,"title":{"interfaces/IClass.html":{}},"body":{"classes/Entity.html":{},"interfaces/IClass.html":{},"classes/ValueObject.html":{}}}],["iclasstorawobject",{"_index":1758,"title":{"interfaces/IClassToRawObject.html":{}},"body":{"interfaces/IClassToRawObject.html":{},"classes/OTPRedisMapper.html":{}}}],["icondominiumreluserinobject",{"_index":926,"title":{"interfaces/ICondominiumRelUserInObject.html":{}},"body":{"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{}}}],["icondominiumreluserprops",{"_index":846,"title":{"interfaces/ICondominiumRelUserProps.html":{}},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["iconverttoobject",{"_index":780,"title":{"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{}},"body":{"classes/CondominiumMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/InviteMapper.html":{},"classes/OTPMapper.html":{}}}],["icreateotpinput",{"_index":1776,"title":{"interfaces/ICreateOTPInput.html":{}},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryOTP.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{}}}],["icryptcompare",{"_index":300,"title":{"interfaces/ICryptCompare.html":{}},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["icrypthmac",{"_index":307,"title":{"interfaces/ICryptHmac.html":{}},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["id",{"_index":507,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateTokenService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"injectables/LogInterceptor.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["id(${input.id.value})].[email(${input.email.value})].[level",{"_index":1787,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{}}}],["id).or(uuid.genv4()).exec",{"_index":876,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["ideleteotpinput",{"_index":1779,"title":{"interfaces/IDeleteOTPInput.html":{}},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryOTP.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{}}}],["identificado",{"_index":2403,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["identificador",{"_index":1187,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["if(!res",{"_index":2498,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["if(!this._instance",{"_index":2562,"title":{},"body":{"injectables/RedisService.html":{}}}],["ifindotpinput",{"_index":1778,"title":{"interfaces/IFindOTPInput.html":{}},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryOTP.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{}}}],["ifirestoreerrors",{"_index":1220,"title":{"interfaces/IFirestoreErrors.html":{}},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["igatewayerror",{"_index":1539,"title":{"interfaces/IGatewayError.html":{}},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["igenerateinvitekeyprops",{"_index":1781,"title":{"interfaces/IGenerateInviteKeyProps.html":{}},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{}}}],["ignoreerrors",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["ignoreundefinedproperties",{"_index":1533,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["igual",{"_index":1050,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["ihttpclientcall",{"_index":1407,"title":{"interfaces/IHttpClientCall.html":{}},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["ihttpclientcallreturn",{"_index":1410,"title":{"interfaces/IHttpClientCallReturn.html":{}},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["iincomingfirestorecondominiumdata",{"_index":756,"title":{"interfaces/IIncomingFirestoreCondominiumData.html":{}},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"miscellaneous/functions.html":{}}}],["iincomingfirestorecondominiumreluserdata",{"_index":915,"title":{"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{}},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"miscellaneous/functions.html":{}}}],["iincomingfirestoreinvitedata",{"_index":1487,"title":{"interfaces/IIncomingFirestoreInviteData.html":{}},"body":{"classes/FirestoreGetInviteDTO.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{},"miscellaneous/functions.html":{}}}],["iincomingfirestoreuserdata",{"_index":1497,"title":{"interfaces/IIncomingFirestoreUserData.html":{}},"body":{"classes/FirestoreGetUserDTO.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{},"miscellaneous/functions.html":{}}}],["iindexprops",{"_index":1809,"title":{"interfaces/IIndexProps.html":{}},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["iinmemorycontainerprops",{"_index":1789,"title":{"interfaces/IInMemoryContainerProps.html":{}},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["iinmemoryusercontainer",{"_index":1795,"title":{"interfaces/IInMemoryUserContainer.html":{}},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["iinputcondominiumreluser",{"_index":843,"title":{"interfaces/IInputCondominiumRelUser.html":{}},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["iinputpropsinvite",{"_index":1821,"title":{"interfaces/IInputPropsInvite.html":{}},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["iloggerdefaultprops",{"_index":1303,"title":{"interfaces/ILoggerDefaultProps.html":{}},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["implemented",{"_index":996,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["implements",{"_index":71,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"injectables/OTPRedisService.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["import",{"_index":85,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"modules/HttpModule.html":{},"interfaces/IBodyProps.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["imports",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpModule.html":{}}}],["inboxes",{"_index":3184,"title":{},"body":{"index.html":{}}}],["includes('application/json",{"_index":1422,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["incorreto",{"_index":341,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Email.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["incorretos",{"_index":480,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"classes/UUIDGroup.html":{}}}],["index",{"_index":9,"title":{"classes/Index.html":{},"index.html":{}},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicação",{"_index":1355,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-4.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["info(`info",{"_index":1450,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["info(input",{"_index":1314,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["infra/http/http.module",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["infraestruturas",{"_index":3139,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":301,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["inicialização",{"_index":2371,"title":{},"body":{"classes/LaunchTFADTO.html":{}}}],["iniciar",{"_index":1627,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["init",{"_index":2530,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/RedisService.html":{},"index.html":{}}}],["initializeapp",{"_index":1526,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["injectable",{"_index":183,"title":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/LogInterceptor.html":{},"injectables/OTPRedisService.html":{},"injectables/PrismaService.html":{},"injectables/RedisService.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CollectionsRefService.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/ISuccess.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"injectables/OTPRedisService.html":{},"injectables/PrismaService.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["injectables",{"_index":554,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/LogInterceptor.html":{},"injectables/OTPRedisService.html":{},"injectables/PrismaService.html":{},"injectables/RedisService.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"overview.html":{}}}],["inmemorycondominium",{"_index":2086,"title":{"classes/InMemoryCondominium.html":{}},"body":{"classes/InMemoryCondominium.html":{}}}],["inmemorycontainer",{"_index":1797,"title":{"classes/InMemoryContainer.html":{}},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["inmemoryerror",{"_index":1988,"title":{"classes/InMemoryError.html":{}},"body":{"interfaces/IProps-2.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["inmemoryinvite",{"_index":2116,"title":{"classes/InMemoryInvite.html":{}},"body":{"classes/InMemoryInvite.html":{}}}],["inmemoryotp",{"_index":2158,"title":{"classes/InMemoryOTP.html":{}},"body":{"classes/InMemoryOTP.html":{}}}],["inmemoryuser",{"_index":2175,"title":{"classes/InMemoryUser.html":{}},"body":{"classes/InMemoryUser.html":{}}}],["input",{"_index":40,"title":{},"body":{"classes/AdapterError.html":{},"classes/ApartmentNumber.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/IService.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/RedisLogicError.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrors.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["input).limit(1).get",{"_index":2863,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["input.apartment_number",{"_index":942,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["input.apartmentnumber",{"_index":883,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserMapper.html":{},"injectables/CreateUserService-1.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-10.html":{}}}],["input.apartmentnumber.value",{"_index":933,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"injectables/CreateUserService-1.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IProps-10.html":{}}}],["input.apartmentnumber?.value",{"_index":941,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["input.block",{"_index":900,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateUserService-1.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-10.html":{}}}],["input.block).allownullish().exec",{"_index":886,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["input.block.value",{"_index":931,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"injectables/CreateUserService-1.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IProps-10.html":{}}}],["input.block?.value",{"_index":939,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["input.body",{"_index":1415,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["input.cep",{"_index":769,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["input.cep.value",{"_index":791,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{}}}],["input.cnpj",{"_index":770,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["input.cnpj.value",{"_index":793,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{}}}],["input.code",{"_index":1767,"title":{},"body":{"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{}}}],["input.code.value",{"_index":1765,"title":{},"body":{"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{}}}],["input.condominium",{"_index":831,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"interfaces/IProps-7.html":{}}}],["input.condominium.equalto(item",{"_index":2103,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["input.condominiumid",{"_index":898,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"classes/InvitePrismaMapper.html":{}}}],["input.condominiumid).exec",{"_index":887,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["input.condominiumid.equalto(this.condominiumid",{"_index":1835,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["input.condominiumid.value",{"_index":930,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/GenInviteService.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IProps-12.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/UserPrismaRepo.html":{}}}],["input.condominiumreluser",{"_index":1156,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-9.html":{},"classes/InMemoryUser.html":{},"injectables/InvitePrismaRepo.html":{}}}],["input.condominiumreluser.condominiumid.value",{"_index":2203,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.content",{"_index":1574,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{}}}],["input.cpf",{"_index":2012,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.cpf.value",{"_index":2084,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.createdat",{"_index":660,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/User.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.createdat.todate",{"_index":773,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["input.data",{"_index":1183,"title":{},"body":{"classes/CryptSpy.html":{}}}],["input.description",{"_index":1330,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["input.email",{"_index":1698,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IPropsUser.html":{},"interfaces/IValidate.html":{},"classes/InvitePrismaMapper.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.email.equalto(this.email",{"_index":1834,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["input.email.value",{"_index":1596,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.entity",{"_index":1356,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-4.html":{},"classes/InMemoryError.html":{}}}],["input.expiresat",{"_index":1771,"title":{},"body":{"interfaces/IConvertToObject-1.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{}}}],["input.expiresat.todate",{"_index":1802,"title":{},"body":{"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["input.foreach((item",{"_index":2659,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["input.hasheddata",{"_index":326,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptSpy.html":{}}}],["input.headers",{"_index":1414,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["input.httpcode",{"_index":58,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/IProps-3.html":{}}}],["input.id",{"_index":775,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.id.equalto(this.id",{"_index":1832,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["input.id.value",{"_index":789,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.invite.condominiumid",{"_index":1697,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["input.invite.condominiumid.value",{"_index":1166,"title":{},"body":{"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{}}}],["input.invite.id",{"_index":1700,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InMemoryInvite.html":{}}}],["input.invite.type",{"_index":1699,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["input.invite.type.value",{"_index":1165,"title":{},"body":{"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{}}}],["input.inviteashash",{"_index":1706,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["input.key",{"_index":316,"title":{},"body":{"classes/BcryptAdapter.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CookieParserAdapter.html":{},"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["input.key.value",{"_index":834,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["input.level",{"_index":878,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["input.level.value",{"_index":932,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{}}}],["input.match(regexp",{"_index":2628,"title":{},"body":{"classes/UUID.html":{}}}],["input.message",{"_index":60,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/InMemoryError.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["input.method",{"_index":1412,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["input.name",{"_index":772,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.name.value",{"_index":792,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.num",{"_index":771,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["input.num.value",{"_index":790,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{}}}],["input.otp",{"_index":2171,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["input.otp.ttl",{"_index":2496,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["input.password",{"_index":2014,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.password.value",{"_index":2083,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.phonenumber",{"_index":2010,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.phonenumber.value",{"_index":2085,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.ref",{"_index":1815,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["input.requiredlevel?.value",{"_index":1597,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-12.html":{}}}],["input.safesearch",{"_index":2112,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["input.tag",{"_index":1214,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["input.ttl",{"_index":1766,"title":{},"body":{"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{}}}],["input.type",{"_index":2319,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["input.type.equalto(this.type",{"_index":1833,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["input.type.value",{"_index":1772,"title":{},"body":{"interfaces/IConvertToObject-1.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{}}}],["input.updatedat",{"_index":662,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/User.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.updatedat.todate",{"_index":774,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["input.url",{"_index":1430,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["input.user",{"_index":2202,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.user.cpf.equalto(item.user.content.cpf",{"_index":2199,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.user.dereference",{"_index":1152,"title":{},"body":{"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-9.html":{}}}],["input.user.email",{"_index":1157,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-9.html":{}}}],["input.user.email.equalto(item.user.content.email",{"_index":2198,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.user.id.equalto(item.user.content.id",{"_index":2197,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.user.id.value",{"_index":1167,"title":{},"body":{"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{}}}],["input.userid",{"_index":903,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPInObject.html":{},"classes/InMemoryUser.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{}}}],["input.userid).exec",{"_index":888,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["input.userid.value",{"_index":929,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["input.value",{"_index":342,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Email.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{}}}],["input.value.size",{"_index":2668,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["input?.safesearch",{"_index":837,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["inputdata",{"_index":1590,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["inseridas",{"_index":3269,"title":{},"body":{"index.html":{}}}],["inseridos",{"_index":802,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["insira",{"_index":3196,"title":{},"body":{"index.html":{}}}],["instal",{"_index":3232,"title":{},"body":{"index.html":{}}}],["instalado",{"_index":3155,"title":{},"body":{"index.html":{}}}],["instalação",{"_index":3172,"title":{},"body":{"index.html":{}}}],["instale",{"_index":3237,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1520,"title":{},"body":{"injectables/FirestoreService.html":{},"injectables/RedisService.html":{}}}],["instanceof",{"_index":653,"title":{},"body":{"classes/Condominium.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/FetchAdapter.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/User.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["instancetype",{"_index":1393,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["instruções",{"_index":3171,"title":{},"body":{"index.html":{}}}],["instância",{"_index":3224,"title":{},"body":{"index.html":{}}}],["instâncias",{"_index":3165,"title":{},"body":{"index.html":{}}}],["integrar",{"_index":3025,"title":{},"body":{"index.html":{}}}],["integrations",{"_index":3193,"title":{},"body":{"index.html":{}}}],["integridade",{"_index":1372,"title":{},"body":{"classes/EntitieErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IIndexProps.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{}}}],["inteiras",{"_index":2642,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["intercept",{"_index":2384,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["intercept(content",{"_index":2386,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["interceptar",{"_index":2382,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["interceptor",{"_index":1843,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["interceptors",{"_index":1842,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["interesse",{"_index":384,"title":{},"body":{"classes/CPF.html":{}}}],["interface",{"_index":43,"title":{"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}},"body":{"classes/AdapterError.html":{},"classes/CepGateway.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/EmailAdapter.html":{},"classes/EntitieError.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"classes/LoggerAdapter.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/OTPRepo.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["interfaces",{"_index":1752,"title":{},"body":{"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"overview.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["internalvalue",{"_index":1389,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["internas",{"_index":3128,"title":{},"body":{"index.html":{}}}],["interno",{"_index":109,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ValueObject.html":{}}}],["invalid",{"_index":1569,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["invalidresult",{"_index":1568,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["invite",{"_index":557,"title":{"classes/Invite.html":{}},"body":{"injectables/CollectionsRefService.html":{},"controllers/CondominiumController.html":{},"injectables/CreateUserService-1.html":{},"classes/Entity.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-17.html":{},"interfaces/IValidate.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"controllers/UserController.html":{},"classes/ValueObject.html":{},"interfaces/create-1.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["invite(@req",{"_index":748,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["invite(req",{"_index":693,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["invite.condominiumid",{"_index":1594,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{},"injectables/InviteFirestore.html":{}}}],["invite.email",{"_index":1592,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{},"injectables/InviteFirestore.html":{}}}],["invite.expiresat.gettime",{"_index":1713,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["invite.guard",{"_index":2732,"title":{},"body":{"controllers/UserController.html":{}}}],["invite.guard.ts",{"_index":1682,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["invite.guard.ts:21",{"_index":1686,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["invite.guard.ts:27",{"_index":1689,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["invite.guard.ts:38",{"_index":1692,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["invite.guard.ts:58",{"_index":1687,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["invite.id",{"_index":1591,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{},"injectables/InvitePrismaRepo.html":{}}}],["invite.type",{"_index":1593,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["invite.type.value",{"_index":2765,"title":{},"body":{"controllers/UserController.html":{}}}],["invitearr",{"_index":1793,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["inviteashash",{"_index":1599,"title":{},"body":{"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-12.html":{},"interfaces/IValidate.html":{}}}],["invitefactory",{"_index":2985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["invitefactory(input",{"_index":3003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["invitefirestore",{"_index":1514,"title":{"injectables/InviteFirestore.html":{}},"body":{"modules/FirestoreModule.html":{},"injectables/InviteFirestore.html":{}}}],["invitefirestoremapper",{"_index":1801,"title":{"classes/InviteFirestoreMapper.html":{}},"body":{"interfaces/IIncomingFirestoreInviteData.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{}}}],["invitefirestoremapper.fromfirestoretoclass(semiparsedinvite",{"_index":2309,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["inviteid",{"_index":2286,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["invitemapper",{"_index":1770,"title":{"classes/InviteMapper.html":{}},"body":{"interfaces/IConvertToObject-1.html":{},"injectables/InviteFirestore.html":{},"classes/InviteMapper.html":{}}}],["invitemapper.toobject(input.invite",{"_index":2249,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["inviteprisma",{"_index":2316,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["inviteprismamapper",{"_index":2314,"title":{"classes/InvitePrismaMapper.html":{}},"body":{"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{}}}],["inviteprismamapper.toclass(unparsedinvite",{"_index":2334,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["inviteprismamapper.toprisma(input.invite",{"_index":2331,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["inviteprismarepo",{"_index":2320,"title":{"injectables/InvitePrismaRepo.html":{}},"body":{"injectables/InvitePrismaRepo.html":{},"modules/PrismaModule.html":{}}}],["inviteref",{"_index":2271,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["inviterepo",{"_index":1160,"title":{"classes/InviteRepo.html":{}},"body":{"injectables/CreateUserService-1.html":{},"modules/FirestoreModule.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IValidate.html":{},"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"modules/PrismaModule.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"overview.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces",{"_index":2136,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.create",{"_index":2124,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.find",{"_index":2130,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.remove",{"_index":2126,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.safelyfind",{"_index":2128,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.transfertouserresources",{"_index":2134,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["invites",{"_index":2118,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["invitesignature",{"_index":1638,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["inviteuserdto",{"_index":684,"title":{"classes/InviteUserDTO.html":{}},"body":{"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InviteUserDTO.html":{}}}],["inválida",{"_index":1540,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["inválidas",{"_index":2045,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["inválido",{"_index":202,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["invés",{"_index":2637,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["inúmeras",{"_index":3100,"title":{},"body":{"index.html":{}}}],["ioredis",{"_index":2554,"title":{},"body":{"injectables/RedisService.html":{},"dependencies.html":{}}}],["iotpinobject",{"_index":1774,"title":{"interfaces/IOTPInObject.html":{}},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["iotpprops",{"_index":1851,"title":{"interfaces/IOTPProps.html":{}},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["iprismaerror",{"_index":1862,"title":{"interfaces/IPrismaError.html":{}},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["iprops",{"_index":15,"title":{"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{}},"body":{"classes/AdapterError.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomError.html":{},"injectables/DeleteUserService.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrors.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserDataCore.html":{},"classes/InMemoryError.html":{},"classes/Invite.html":{},"classes/RedisLogicError.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrors.html":{},"miscellaneous/functions.html":{}}}],["ipropscondominium",{"_index":599,"title":{"interfaces/IPropsCondominium.html":{}},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["ipropsuser",{"_index":1996,"title":{"interfaces/IPropsUser.html":{}},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["irediserror",{"_index":2024,"title":{"interfaces/IRedisError.html":{}},"body":{"interfaces/IRedisError.html":{},"classes/RedisErrorFilter.html":{}}}],["irefreshtokenbody",{"_index":1087,"title":{"interfaces/IRefreshTokenBody.html":{}},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-8.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{}}}],["isarray",{"_index":531,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["isarray(input['message",{"_index":536,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["isemail",{"_index":1032,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["isendmailcontent",{"_index":1341,"title":{"interfaces/ISendMailContent.html":{}},"body":{"classes/EmailAdapter.html":{},"interfaces/ISendMailContent.html":{},"classes/NodemailerAdapter.html":{}}}],["iservice",{"_index":1068,"title":{"classes/IService.html":{}},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"classes/IService.html":{},"interfaces/IUserDataCore.html":{}}}],["iserviceerrors",{"_index":2041,"title":{"interfaces/IServiceErrors.html":{}},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["isnumber",{"_index":532,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"interfaces/IBodyProps.html":{}}}],["isnumber(input['statuscode",{"_index":538,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["isolar",{"_index":3091,"title":{},"body":{"index.html":{}}}],["isoptional",{"_index":1125,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring",{"_index":533,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/IBodyProps.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["isstring(input['error",{"_index":537,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["isuccess",{"_index":2055,"title":{"interfaces/ISuccess.html":{}},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["item",{"_index":959,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["item.cep.equalto(input.key",{"_index":2109,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["item.cnpj.equalto(input.key",{"_index":2108,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["item.code",{"_index":1872,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["item.data",{"_index":2864,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["item.email.equalto(input.key",{"_index":2152,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["item.email.equalto(input.user.email",{"_index":2156,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["item.exists",{"_index":2259,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["item.id",{"_index":2143,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["item.id.equalto(input.key",{"_index":2111,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{}}}],["item.key",{"_index":2168,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["item.name.equalto(input.key",{"_index":2110,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["item.tag",{"_index":1243,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["item.user.condominiumreluser[input.condominiumid.value",{"_index":2211,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.condominiumreluser[input.invite.condominiumid.value",{"_index":2147,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["item.user.content.cpf.equalto(input.key",{"_index":2206,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.content.email.equalto(input.key",{"_index":2205,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.content.id",{"_index":2210,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.content.id.equalto(input.key",{"_index":2207,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.content.id.equalto(input.userid",{"_index":2215,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["iterable",{"_index":2635,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["iterable.next",{"_index":2662,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["iteratorresult",{"_index":2661,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["iterável",{"_index":2652,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["itself",{"_index":567,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["iuntrackableerrors",{"_index":1648,"title":{"interfaces/IUntrackableErrors.html":{}},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["iuserdatacore",{"_index":1081,"title":{"interfaces/IUserDataCore.html":{}},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["iuserinobject",{"_index":2079,"title":{"interfaces/IUserInObject.html":{}},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{}}}],["ivalidate",{"_index":1691,"title":{"interfaces/IValidate.html":{}},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["ivalidatesignedcookie",{"_index":1000,"title":{"interfaces/IValidateSignedCookie.html":{}},"body":{"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IValidateSignedCookie.html":{}}}],["j",{"_index":1226,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"index.html":{}}}],["jest",{"_index":3335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest.config.ts",{"_index":3319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest.e2e.config.ts",{"_index":3320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest/env.ts",{"_index":3342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":3329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":3330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(atob(metadata",{"_index":515,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["json.stringify",{"_index":1634,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["json.stringify(body.message",{"_index":544,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["json.stringify(otpobjt",{"_index":2494,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["juntamente",{"_index":3146,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":201,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{},"dependencies.html":{}}}],["jwt.guard",{"_index":708,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["jwt.guard.ts",{"_index":157,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["jwt.guard.ts:17",{"_index":172,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["jwt.guard.ts:23",{"_index":178,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["jwt.guard.ts:35",{"_index":175,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["jwtguard",{"_index":2352,"title":{"guards/JwtGuard.html":{}},"body":{"guards/JwtGuard.html":{},"controllers/UserController.html":{}}}],["jwtservice",{"_index":170,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["key",{"_index":220,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"classes/CryptAdapter.html":{},"injectables/DeleteUserService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["lado",{"_index":3190,"title":{},"body":{"index.html":{}}}],["lateral",{"_index":3182,"title":{},"body":{"index.html":{}}}],["launchotpdto",{"_index":432,"title":{"classes/LaunchOTPDTO.html":{}},"body":{"guards/CheckOTPGuard.html":{},"classes/LaunchOTPDTO.html":{}}}],["launchtfa",{"_index":2698,"title":{},"body":{"controllers/UserController.html":{}}}],["launchtfa(@req",{"_index":2781,"title":{},"body":{"controllers/UserController.html":{}}}],["launchtfa(req",{"_index":2711,"title":{},"body":{"controllers/UserController.html":{}}}],["launchtfadto",{"_index":499,"title":{"classes/LaunchTFADTO.html":{}},"body":{"guards/CheckTFACodeGuard.html":{},"classes/LaunchTFADTO.html":{}}}],["launchtfaold",{"_index":2699,"title":{},"body":{"controllers/UserController.html":{}}}],["launchtfaold(@req",{"_index":2791,"title":{},"body":{"controllers/UserController.html":{}}}],["launchtfaold(req",{"_index":2715,"title":{},"body":{"controllers/UserController.html":{}}}],["layer",{"_index":100,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["layersenum",{"_index":86,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["layersenum.adapter",{"_index":101,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["layersenum.auth",{"_index":1676,"title":{},"body":{"classes/GuardErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["layersenum.cache",{"_index":2031,"title":{},"body":{"interfaces/IRedisError.html":{},"classes/RedisErrorFilter.html":{}}}],["layersenum.controller",{"_index":2454,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["layersenum.database",{"_index":1246,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{}}}],["layersenum.dto",{"_index":543,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{},"controllers/UserController.html":{}}}],["layersenum.entitie",{"_index":1365,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["layersenum.gateway",{"_index":1562,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["layersenum.interceptors",{"_index":2410,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["layersenum.services",{"_index":2054,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["layersenum.unknown",{"_index":1655,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["legend",{"_index":115,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"overview.html":{}}}],["lembre",{"_index":3141,"title":{},"body":{"index.html":{}}}],["length",{"_index":2366,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["length(6",{"_index":2368,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["ler",{"_index":1662,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-15.html":{}}}],["levantar",{"_index":3153,"title":{},"body":{"index.html":{}}}],["level",{"_index":703,"title":{"classes/Level.html":{}},"body":{"controllers/CondominiumController.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomError.html":{},"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"injectables/GenInviteService.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"classes/Invite.html":{},"classes/Level.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["level(0",{"_index":880,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["level(1",{"_index":739,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["level(2",{"_index":730,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["level(input",{"_index":904,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["level(input.type",{"_index":1824,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["license",{"_index":3307,"title":{},"body":{"properties.html":{}}}],["lidar",{"_index":1398,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["limit",{"_index":1749,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["limit(1",{"_index":2255,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["link",{"_index":1609,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["linked",{"_index":2148,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["links",{"_index":3072,"title":{},"body":{"index.html":{}}}],["lint",{"_index":3255,"title":{},"body":{"index.html":{}}}],["linux",{"_index":3174,"title":{},"body":{"index.html":{}}}],["listas",{"_index":2641,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["literal",{"_index":1588,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IInMemoryUserContainer.html":{},"miscellaneous/typealiases.html":{}}}],["lo",{"_index":3233,"title":{},"body":{"index.html":{}}}],["locais",{"_index":3258,"title":{},"body":{"index.html":{}}}],["localhostlogo",{"_index":3235,"title":{},"body":{"index.html":{}}}],["localidade",{"_index":2062,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["log",{"_index":1300,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["log(`log",{"_index":1449,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["log(input",{"_index":1316,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["logger",{"_index":78,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["logger/index.ts",{"_index":1439,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:16",{"_index":1442,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:23",{"_index":1447,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:30",{"_index":1440,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:37",{"_index":1444,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:5",{"_index":1446,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:50",{"_index":1441,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:63",{"_index":1443,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:9",{"_index":1445,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["loggeradapter",{"_index":76,"title":{"classes/LoggerAdapter.html":{}},"body":{"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["logic",{"_index":1986,"title":{},"body":{"interfaces/IProps-19.html":{},"classes/RedisLogicError.html":{}}}],["login",{"_index":1624,"title":{},"body":{"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"classes/LoginDTO.html":{},"controllers/UserController.html":{},"index.html":{}}}],["login(res",{"_index":2718,"title":{},"body":{"controllers/UserController.html":{}}}],["login.filter",{"_index":1905,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["login.filter.ts",{"_index":2026,"title":{},"body":{"interfaces/IRedisError.html":{},"classes/RedisErrorFilter.html":{}}}],["login.filter.ts:14",{"_index":2540,"title":{},"body":{"classes/RedisErrorFilter.html":{}}}],["login.filter.ts:17",{"_index":2541,"title":{},"body":{"classes/RedisErrorFilter.html":{}}}],["login.filter.ts:26",{"_index":2542,"title":{},"body":{"classes/RedisErrorFilter.html":{}}}],["logindto",{"_index":476,"title":{"classes/LoginDTO.html":{}},"body":{"guards/CheckPasswordGuard.html":{},"classes/LoginDTO.html":{}}}],["loginterceptor",{"_index":1881,"title":{"injectables/LogInterceptor.html":{}},"body":{"interfaces/IProps.html":{},"injectables/LogInterceptor.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["loginterceptor(this.logger",{"_index":1932,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["logo",{"_index":3108,"title":{},"body":{"index.html":{}}}],["logradouro",{"_index":2063,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["logs",{"_index":1258,"title":{},"body":{"classes/DateFormats.html":{},"injectables/LogInterceptor.html":{}}}],["loop",{"_index":400,"title":{},"body":{"classes/CPF.html":{}}}],["ltimos",{"_index":388,"title":{},"body":{"classes/CPF.html":{}}}],["mailtrap",{"_index":3039,"title":{},"body":{"index.html":{}}}],["maior",{"_index":1053,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["mais",{"_index":3109,"title":{},"body":{"index.html":{}}}],["mal",{"_index":1424,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["malformados",{"_index":1366,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["malformed",{"_index":1211,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-18.html":{},"classes/Index.html":{},"miscellaneous/enumerations.html":{}}}],["malformedref",{"_index":1210,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["manager",{"_index":3067,"title":{},"body":{"index.html":{}}}],["maneira",{"_index":3082,"title":{},"body":{"index.html":{}}}],["manipular",{"_index":1813,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["manter",{"_index":1374,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"index.html":{}}}],["manualmente",{"_index":3163,"title":{},"body":{"index.html":{}}}],["many",{"_index":1192,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["mapear",{"_index":1188,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"index.html":{}}}],["mapeia",{"_index":758,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["mapkeybasedonlevel",{"_index":1685,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["mapkeybasedonlevel(input",{"_index":1688,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["mapper/condominium",{"_index":826,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["mapper/condominiumreluser",{"_index":1478,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["mapper/condominiums",{"_index":1463,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["mapper/invite",{"_index":1488,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{}}}],["mapper/otp",{"_index":2487,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["mapper/user",{"_index":2330,"title":{},"body":{"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{}}}],["mapper/users",{"_index":1498,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{},"injectables/UsersFirestore.html":{}}}],["matando",{"_index":3114,"title":{},"body":{"index.html":{}}}],["matching",{"_index":62,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":381,"title":{},"body":{"classes/CPF.html":{}}}],["mau",{"_index":1553,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["max",{"_index":1033,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["max(1000",{"_index":1489,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{}}}],["max(condominiumdtorules.name.maxlength",{"_index":1470,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["max(condominiumdtorules.num.maxlength",{"_index":1048,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{}}}],["max(condominiumreluserdtorules.apartmentnumber.maxlength",{"_index":1139,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["max(condominiumreluserdtorules.level.maxlength",{"_index":1482,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{}}}],["max(userdtorules.name.maxlength",{"_index":1500,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["max(userdtorules.password.maxlength",{"_index":1502,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["max(userdtorules.phonenumber.maxlength",{"_index":1505,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["maxage",{"_index":2749,"title":{},"body":{"controllers/UserController.html":{}}}],["maximum",{"_index":1194,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["maximumcondominiumreluser",{"_index":1193,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["maxlength",{"_index":629,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["maxlength(320",{"_index":2367,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["maxlength(condominiumdtorules.cep.maxlength",{"_index":1046,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["maxlength(condominiumdtorules.cnpj.maxlength",{"_index":1055,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["maxlength(condominiumdtorules.name.maxlength",{"_index":1040,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["maxlength(condominiumreluserdtorules.block.maxlength",{"_index":1138,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlength(userdtorules.cpf.maxlength",{"_index":1136,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlength(userdtorules.email.maxlength",{"_index":1037,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["maxlength(userdtorules.name.maxlength",{"_index":1126,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlength(userdtorules.password.maxlength",{"_index":1130,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["maxlength(userdtorules.phonenumber.maxlength",{"_index":1142,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlisteners",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["memory",{"_index":1989,"title":{},"body":{"interfaces/IProps-2.html":{},"classes/InMemoryError.html":{}}}],["menor",{"_index":1049,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["menos",{"_index":1334,"title":{},"body":{"classes/Email.html":{}}}],["mensagem",{"_index":50,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["menu",{"_index":3181,"title":{},"body":{"index.html":{}}}],["mesmo",{"_index":1288,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-11.html":{},"interfaces/IRedisError.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"index.html":{}}}],["message",{"_index":44,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["metadata",{"_index":504,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"dependencies.html":{}}}],["metadata}.${btoa(code",{"_index":510,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["metadata}.${btoa(signature",{"_index":513,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["method",{"_index":995,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["methods",{"_index":73,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IProps.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["metódo",{"_index":2644,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["migrate",{"_index":3229,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":3228,"title":{},"body":{"index.html":{}}}],["min",{"_index":1034,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["min(0",{"_index":1491,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{}}}],["min(condominiumdtorules.name.minlength",{"_index":1469,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["min(condominiumdtorules.num.minlength",{"_index":1052,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{}}}],["min(condominiumreluserdtorules.apartmentnumber.minlength",{"_index":1140,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["min(condominiumreluserdtorules.level.minlength",{"_index":1481,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{}}}],["min(userdtorules.name.minlength",{"_index":1499,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["min(userdtorules.password.minlength",{"_index":1501,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["min(userdtorules.phonenumber.minlength",{"_index":1504,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["minimamente",{"_index":3160,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":628,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/LoginDTO.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["minlength(condominiumdtorules.cep.minlength",{"_index":1045,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["minlength(condominiumdtorules.cnpj.minlength",{"_index":1057,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["minlength(condominiumdtorules.name.minlength",{"_index":1042,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["minlength(userdtorules.cpf.minlength",{"_index":1134,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength(userdtorules.name.minlength",{"_index":1128,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength(userdtorules.password.minlength",{"_index":1132,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["minlength(userdtorules.phonenumber.minlength",{"_index":1144,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minutes",{"_index":1268,"title":{},"body":{"classes/DateFormats.html":{}}}],["miscellaneous",{"_index":2960,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3308,"title":{},"body":{"properties.html":{}}}],["mockotp:${input.email.value",{"_index":2167,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["modificações",{"_index":3273,"title":{},"body":{"index.html":{}}}],["module",{"_index":111,"title":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{}},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"overview.html":{}}}],["modulefileextensions",{"_index":3328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["morada",{"_index":3010,"title":{},"body":{"index.html":{}}}],["moradaapp",{"_index":3310,"title":{},"body":{"properties.html":{}}}],["moradores",{"_index":3022,"title":{},"body":{"index.html":{}}}],["mostrado",{"_index":1256,"title":{},"body":{"classes/DateFormats.html":{}}}],["mudar",{"_index":1917,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["muita",{"_index":3209,"title":{},"body":{"index.html":{}}}],["muitas",{"_index":2611,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{},"index.html":{}}}],["mydbdocumentação",{"_index":3287,"title":{},"body":{"index.html":{}}}],["máquina",{"_index":3080,"title":{},"body":{"index.html":{}}}],["máximo",{"_index":1038,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["método",{"_index":782,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRepo.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"injectables/LogInterceptor.html":{},"classes/OTPMapper.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["mínimo",{"_index":1043,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["módulo",{"_index":379,"title":{},"body":{"classes/CPF.html":{}}}],["n[stack",{"_index":1329,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["na",{"_index":21,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"index.html":{}}}],["name",{"_index":37,"title":{"classes/Name.html":{}},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"miscellaneous/functions.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{},"miscellaneous/variables.html":{}}}],["name(content.name",{"_index":637,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["name(input",{"_index":665,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["name(input.name",{"_index":2001,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["name_sender",{"_index":3203,"title":{},"body":{"index.html":{}}}],["namespace",{"_index":961,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["nas",{"_index":1376,"title":{},"body":{"classes/Entity.html":{},"classes/Name.html":{},"classes/ValueObject.html":{}}}],["ndice",{"_index":1819,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["ndices",{"_index":1814,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["necessidade",{"_index":3115,"title":{},"body":{"index.html":{}}}],["necessário",{"_index":29,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["necessários",{"_index":3251,"title":{},"body":{"index.html":{}}}],["neighborhood",{"_index":413,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["nenhum",{"_index":2580,"title":{},"body":{"guards/RefreshTokenGuard.html":{},"classes/UUIDGroup.html":{}}}],["nestas",{"_index":3164,"title":{},"body":{"index.html":{}}}],["nestexpressapplication",{"_index":1878,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["nestfactory",{"_index":1876,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["nestfactory.create",{"_index":1911,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["nestinterceptor",{"_index":2391,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["nestjs",{"_index":3013,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":89,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"modules/AppModule.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"injectables/CollectionsRefService.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"modules/HttpModule.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1742,"title":{},"body":{"modules/HttpModule.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":184,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1879,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":1031,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/IProps.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":1740,"title":{},"body":{"modules/HttpModule.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":200,"title":{},"body":{"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/ISuccess.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["newlistener",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["next",{"_index":2387,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["next.handle().pipe",{"_index":2411,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["ninguém",{"_index":1610,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{}}}],["node",{"_index":3066,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["node:crypto",{"_index":310,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/UUID.html":{}}}],["nodejs",{"_index":3226,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":2434,"title":{},"body":{"classes/NodemailerAdapter.html":{},"dependencies.html":{},"index.html":{}}}],["nodemailer/nodemaileradapter",{"_index":133,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["nodemaileradapter",{"_index":132,"title":{"classes/NodemailerAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/NodemailerAdapter.html":{}}}],["nome",{"_index":330,"title":{},"body":{"classes/Block.html":{},"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/Name.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{}}}],["nos",{"_index":489,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"classes/Entity.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"classes/IService.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["nossa",{"_index":3291,"title":{},"body":{"index.html":{}}}],["nossas",{"_index":3064,"title":{},"body":{"index.html":{}}}],["nosso",{"_index":3026,"title":{},"body":{"index.html":{}}}],["nossos",{"_index":3029,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":2451,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["notfoundfilter",{"_index":1894,"title":{"classes/NotFoundFilter.html":{}},"body":{"interfaces/IProps.html":{},"classes/NotFoundFilter.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["notfoundfilter(this.logger",{"_index":1948,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["novo",{"_index":1062,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-7.html":{}}}],["npm",{"_index":3177,"title":{},"body":{"index.html":{}}}],["null",{"_index":865,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateUserService-1.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-10.html":{},"classes/ValueObject.html":{}}}],["nullish",{"_index":1401,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["nullorundefined",{"_index":1383,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["nulos",{"_index":1396,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["num",{"_index":590,"title":{"classes/Num.html":{}},"body":{"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IPropsCondominium.html":{},"classes/Num.html":{},"miscellaneous/variables.html":{}}}],["num(content.num",{"_index":639,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["num(input",{"_index":670,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AdapterError.html":{},"classes/ApartmentNumber.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenOldTFASevice.html":{},"classes/GenericErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-3.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/Level.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/variables.html":{}}}],["number(process.env.refresh_token_exp",{"_index":2747,"title":{},"body":{"controllers/UserController.html":{}}}],["nuvem",{"_index":3102,"title":{},"body":{"index.html":{}}}],["nx",{"_index":2497,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["não",{"_index":212,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckOTPGuard.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["nível",{"_index":2375,"title":{},"body":{"classes/Level.html":{}}}],["número",{"_index":240,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Num.html":{},"classes/PhoneNumber.html":{}}}],["número'})@max(undefined.maxlength",{"_index":1027,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["números",{"_index":395,"title":{},"body":{"classes/CPF.html":{}}}],["o",{"_index":26,"title":{},"body":{"classes/AdapterError.html":{},"classes/CPF.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIndexProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-8.html":{},"interfaces/IRedisError.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["object",{"_index":419,"title":{},"body":{"classes/CepGatewaySpy.html":{},"injectables/CollectionsRefService.html":{},"classes/CryptSpy.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"interfaces/IProps-4.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["object.values(constraints",{"_index":1974,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["objects",{"_index":1360,"title":{},"body":{"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["objeto",{"_index":765,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/Index.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{}}}],["objetos",{"_index":2037,"title":{},"body":{"classes/IService.html":{}}}],["obrigando",{"_index":2034,"title":{},"body":{"classes/IService.html":{}}}],["observable",{"_index":2390,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["obtenção",{"_index":3060,"title":{},"body":{"index.html":{}}}],["ocorreu",{"_index":3242,"title":{},"body":{"index.html":{}}}],["oldlogin",{"_index":2700,"title":{},"body":{"controllers/UserController.html":{}}}],["oldlogin(@res",{"_index":2795,"title":{},"body":{"controllers/UserController.html":{}}}],["oldlogin(res",{"_index":2721,"title":{},"body":{"controllers/UserController.html":{}}}],["oldtfa",{"_index":2744,"title":{},"body":{"controllers/UserController.html":{}}}],["omissão",{"_index":2767,"title":{},"body":{"controllers/UserController.html":{}}}],["omit",{"_index":1094,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["omitidos",{"_index":2770,"title":{},"body":{"controllers/UserController.html":{}}}],["onapplicationshutdown",{"_index":1519,"title":{},"body":{"injectables/FirestoreService.html":{},"injectables/PrismaService.html":{}}}],["onde",{"_index":2460,"title":{},"body":{"classes/Num.html":{}}}],["one",{"_index":2149,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["onmoduledestroy",{"_index":2531,"title":{},"body":{"injectables/PrismaService.html":{}}}],["opcional",{"_index":957,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["operacional",{"_index":3173,"title":{},"body":{"index.html":{}}}],["option",{"_index":874,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":39,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-3.html":{},"classes/IService.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{}}}],["opção",{"_index":3192,"title":{},"body":{"index.html":{}}}],["or(new",{"_index":879,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["origin",{"_index":1916,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["orquestrador",{"_index":3122,"title":{},"body":{"index.html":{}}}],["orstatement",{"_index":1391,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["orstatement(alternativevalue",{"_index":1403,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["os",{"_index":387,"title":{},"body":{"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DatabaseCustomError.html":{},"injectables/DeleteUserService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"injectables/LogInterceptor.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrors.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["otp",{"_index":435,"title":{"classes/OTP.html":{}},"body":{"guards/CheckOTPGuard.html":{},"classes/Entity.html":{},"injectables/GenOldTFASevice.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"classes/InMemoryOTP.html":{},"classes/LaunchOTPDTO.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["otp.code.value",{"_index":458,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["otpfactory",{"_index":2986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otpfactory(input",{"_index":3005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otpmapper",{"_index":1775,"title":{"classes/OTPMapper.html":{}},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["otpobjt",{"_index":2490,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["otpredismapper",{"_index":1760,"title":{"classes/OTPRedisMapper.html":{}},"body":{"interfaces/IClassToRawObject.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{}}}],["otpredismapper.toclass(json.parse(rawres",{"_index":2504,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["otpredismapper.toredis(input.otp",{"_index":2491,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["otpredisservice",{"_index":2479,"title":{"injectables/OTPRedisService.html":{}},"body":{"injectables/OTPRedisService.html":{},"modules/RedisModule.html":{}}}],["otprepo",{"_index":428,"title":{"classes/OTPRepo.html":{}},"body":{"guards/CheckOTPGuard.html":{},"injectables/CreateUserService.html":{},"injectables/GenOldTFASevice.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-9.html":{},"classes/InMemoryOTP.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"modules/RedisModule.html":{},"overview.html":{}}}],["otps",{"_index":2160,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["ou",{"_index":350,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Entity.html":{},"classes/IService.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["out",{"_index":128,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"overview.html":{}}}],["outras",{"_index":3130,"title":{},"body":{"index.html":{}}}],["outro",{"_index":1236,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"controllers/UserController.html":{},"index.html":{}}}],["overview",{"_index":3303,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p1003",{"_index":1870,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["p1009",{"_index":1869,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["p2002",{"_index":1868,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["p2025",{"_index":1866,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["package",{"_index":2921,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padronização",{"_index":2033,"title":{},"body":{"classes/IService.html":{}}}],["padrão",{"_index":1375,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"index.html":{}}}],["para",{"_index":66,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIndexProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-6.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"classes/OTPMapper.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["param",{"_index":47,"title":{},"body":{"classes/AdapterError.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DateFormats.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/Num.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{}}}],["parseddata",{"_index":2889,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parsedinvite",{"_index":2308,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["parsedmetadata",{"_index":514,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["parsedmetadata?.exp",{"_index":516,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["parsedtoken",{"_index":2583,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["parseduser",{"_index":2877,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parseduser.cpf",{"_index":2904,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parseduser.email",{"_index":2902,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parseduser.id",{"_index":2899,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parseint(process.env.access_token_exp",{"_index":1092,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["parseint(process.env.host_port_sender",{"_index":2439,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["parseint(process.env.refresh_token_exp",{"_index":1104,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{}}}],["parser",{"_index":1008,"title":{},"body":{"classes/CookieParserAdapter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["parser/cookieparseradapter",{"_index":141,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["parser/cookieparseradapter.ts",{"_index":1004,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["parser/cookieparseradapter.ts:9",{"_index":1006,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["parte",{"_index":3056,"title":{},"body":{"index.html":{}}}],["partial",{"_index":3316,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pass",{"_index":2441,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["pass_sender",{"_index":3207,"title":{},"body":{"index.html":{}}}],["passados",{"_index":3107,"title":{},"body":{"index.html":{}}}],["passar",{"_index":2762,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["passport",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["passthrough",{"_index":2760,"title":{},"body":{"controllers/UserController.html":{}}}],["password",{"_index":474,"title":{"classes/Password.html":{}},"body":{"guards/CheckPasswordGuard.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/LoginDTO.html":{},"classes/Password.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/variables.html":{}}}],["password(body.password",{"_index":482,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["password(hashpass",{"_index":1154,"title":{},"body":{"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-9.html":{}}}],["password(input",{"_index":2019,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["password(input.password",{"_index":2002,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["password.value",{"_index":478,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["pasta",{"_index":3217,"title":{},"body":{"index.html":{}}}],["patch",{"_index":1716,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["path",{"_index":2750,"title":{},"body":{"controllers/UserController.html":{}}}],["pathstomodulenamemapper(compileroptions.paths",{"_index":3344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pegando",{"_index":386,"title":{},"body":{"classes/CPF.html":{}}}],["pela",{"_index":3051,"title":{},"body":{"index.html":{}}}],["pelo",{"_index":1555,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"index.html":{}}}],["pelos",{"_index":33,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["perfeito",{"_index":3037,"title":{},"body":{"index.html":{}}}],["performant",{"_index":3065,"title":{},"body":{"index.html":{}}}],["permissões",{"_index":163,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["permite",{"_index":3090,"title":{},"body":{"index.html":{}}}],["pesquisa",{"_index":951,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["pesquisar",{"_index":946,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["phonenumber",{"_index":1090,"title":{"classes/PhoneNumber.html":{}},"body":{"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/variables.html":{}}}],["phonenumber(input",{"_index":2023,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["phonenumber(input.phonenumber",{"_index":2004,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["plaintoclass",{"_index":443,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["plaintoclass(inviteuserdto",{"_index":1707,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["plaintoclass(launchotpdto",{"_index":461,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["plaintoclass(launchtfadto",{"_index":520,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["plaintoclass(logindto",{"_index":481,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["planos",{"_index":3297,"title":{},"body":{"index.html":{}}}],["plataforma",{"_index":3046,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":3062,"title":{},"body":{"index.html":{}}}],["pode",{"_index":952,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/Entity.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["podendo",{"_index":3125,"title":{},"body":{"index.html":{}}}],["pois",{"_index":1431,"title":{},"body":{"classes/FetchAdapter.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"index.html":{}}}],["poisoned",{"_index":1571,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["poisonedcontent",{"_index":1570,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["por",{"_index":947,"title":{},"body":{"classes/CondominiumRepo.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService-1.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"classes/IService.html":{},"interfaces/IUserDataCore.html":{},"classes/InviteRepo.html":{},"injectables/LogInterceptor.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["porque",{"_index":2499,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["port",{"_index":2438,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["portas",{"_index":3129,"title":{},"body":{"index.html":{}}}],["possibleerrors",{"_index":1218,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["possui",{"_index":1370,"title":{},"body":{"classes/EntitieErrorFilter.html":{},"classes/UUIDGroup.html":{},"index.html":{}}}],["possuir",{"_index":3110,"title":{},"body":{"index.html":{}}}],["possível",{"_index":1286,"title":{},"body":{"injectables/DeleteUserService.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-11.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ValueObject.html":{}}}],["post",{"_index":681,"title":{},"body":{"controllers/CondominiumController.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"controllers/UserController.html":{}}}],["post('/old/launch",{"_index":2790,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/old/login",{"_index":2794,"title":{},"body":{"controllers/UserController.html":{}}}],["post(':condominiumid/invite",{"_index":685,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["post('accept",{"_index":2759,"title":{},"body":{"controllers/UserController.html":{}}}],["post('launch",{"_index":2779,"title":{},"body":{"controllers/UserController.html":{}}}],["post('login",{"_index":2797,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres",{"_index":3047,"title":{},"body":{"index.html":{}}}],["postman",{"_index":3295,"title":{},"body":{"index.html":{}}}],["precisa",{"_index":1015,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"index.html":{}}}],["predefinidas",{"_index":3144,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":150,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"controllers/SuperAdminController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["preparação",{"_index":3097,"title":{},"body":{"index.html":{}}}],["prettify",{"_index":1252,"title":{},"body":{"classes/DateFormats.html":{}}}],["prettify(date",{"_index":1253,"title":{},"body":{"classes/DateFormats.html":{}}}],["prev",{"_index":401,"title":{},"body":{"classes/CPF.html":{}}}],["previamente",{"_index":3137,"title":{},"body":{"index.html":{}}}],["primeiramente",{"_index":3150,"title":{},"body":{"index.html":{}}}],["prioritária",{"_index":3169,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":799,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/PrismaErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.init",{"_index":1952,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":1871,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["prisma.service",{"_index":825,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InvitePrismaRepo.html":{},"modules/PrismaModule.html":{},"injectables/UserPrismaRepo.html":{}}}],["prisma/client",{"_index":806,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IPrismaError.html":{},"classes/InvitePrismaMapper.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/UserPrismaMapper.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":2529,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaerrorfilter",{"_index":1865,"title":{"classes/PrismaErrorFilter.html":{}},"body":{"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"classes/PrismaErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["prismaerrorfilter(this.logger",{"_index":1939,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["prismamodule",{"_index":1723,"title":{"modules/PrismaModule.html":{}},"body":{"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":811,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"interfaces/IProps.html":{},"injectables/InvitePrismaRepo.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegistryAPIBootstrap.html":{},"injectables/UserPrismaRepo.html":{},"overview.html":{}}}],["private",{"_index":167,"title":{},"body":{"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"guards/JwtGuard.html":{},"classes/OTP.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UsersFirestore.html":{}}}],["process.env.access_token_key",{"_index":198,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["process.env.email_sender",{"_index":2440,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["process.env.gcp_project",{"_index":1529,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["process.env.host_sender",{"_index":2437,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["process.env.invite_admin_token_key",{"_index":741,"title":{},"body":{"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["process.env.invite_super_admin_token_key",{"_index":734,"title":{},"body":{"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["process.env.invite_token_key",{"_index":1601,"title":{},"body":{"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-12.html":{},"interfaces/IValidate.html":{}}}],["process.env.logs",{"_index":1327,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["process.env.name_sender",{"_index":1604,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{}}}],["process.env.node_env",{"_index":2753,"title":{},"body":{"controllers/UserController.html":{}}}],["process.env.not_send_emails",{"_index":2435,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["process.env.pass_sender",{"_index":2442,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["process.env.project_name",{"_index":1605,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{}}}],["process.env.refresh_token_key",{"_index":1110,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{}}}],["process.env.tfa_token_key",{"_index":511,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["processo",{"_index":1628,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"classes/LaunchTFADTO.html":{}}}],["processos",{"_index":3254,"title":{},"body":{"index.html":{}}}],["processtokens",{"_index":2701,"title":{},"body":{"controllers/UserController.html":{}}}],["processtokens(res",{"_index":2724,"title":{},"body":{"controllers/UserController.html":{}}}],["procurando",{"_index":2455,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["production",{"_index":2754,"title":{},"body":{"controllers/UserController.html":{}}}],["produção",{"_index":3166,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1528,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["projetada",{"_index":3014,"title":{},"body":{"index.html":{}}}],["projeto",{"_index":3017,"title":{},"body":{"index.html":{}}}],["promise",{"_index":176,"title":{},"body":{"guards/AdminJwt.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/EchoguardAdapter.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/ICheckCep.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-12.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/LoggerAdapter.html":{},"classes/NodemailerAdapter.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{}}}],["promise((resolve",{"_index":312,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["prontos",{"_index":3112,"title":{},"body":{"index.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AdapterError.html":{},"classes/BcryptAdapter.html":{},"classes/CepGatewaySpy.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/OTP.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"injectables/RedisService.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"properties.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["props",{"_index":588,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryContainer.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["prove",{"_index":561,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["provedor",{"_index":3134,"title":{},"body":{"index.html":{}}}],["provedora",{"_index":3052,"title":{},"body":{"index.html":{}}}],["provedoras",{"_index":3101,"title":{},"body":{"index.html":{}}}],["provide",{"_index":144,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{}}}],["providers",{"_index":118,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"overview.html":{}}}],["provisionadas",{"_index":3140,"title":{},"body":{"index.html":{}}}],["psql",{"_index":3284,"title":{},"body":{"index.html":{}}}],["public",{"_index":233,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/Email.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{}}}],["put",{"_index":1717,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["px",{"_index":2495,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["qu",{"_index":3068,"title":{},"body":{"index.html":{}}}],["qualquer",{"_index":3202,"title":{},"body":{"index.html":{}}}],["quanto",{"_index":3294,"title":{},"body":{"index.html":{}}}],["que",{"_index":242,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CondominiumRepo.html":{},"classes/Email.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-15.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/NotFoundFilter.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["queries",{"_index":2869,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["query",{"_index":833,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InviteFirestore.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["query.exec",{"_index":2875,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["query.get",{"_index":2301,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["query.id",{"_index":2831,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["query.trigger",{"_index":2873,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["queryresult",{"_index":2300,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["queryresult.foreach((doc",{"_index":2303,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["questão",{"_index":352,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Num.html":{},"index.html":{}}}],["quiser",{"_index":3266,"title":{},"body":{"index.html":{}}}],["randomuuid",{"_index":2393,"title":{},"body":{"injectables/LogInterceptor.html":{},"classes/UUID.html":{}}}],["rapidamente",{"_index":3113,"title":{},"body":{"index.html":{}}}],["rastramento",{"_index":1566,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{}}}],["rastreável",{"_index":32,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["rawcode",{"_index":1622,"title":{},"body":{"injectables/GenOldTFASevice.html":{},"interfaces/IProps-14.html":{}}}],["rawemail",{"_index":723,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["rawhours",{"_index":1264,"title":{},"body":{"classes/DateFormats.html":{}}}],["rawminutes",{"_index":1262,"title":{},"body":{"classes/DateFormats.html":{}}}],["rawres",{"_index":2502,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["rawseconds",{"_index":1260,"title":{},"body":{"classes/DateFormats.html":{}}}],["rawtoken",{"_index":205,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["rawtoken?.split",{"_index":214,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["readonly",{"_index":11,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryError.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Name.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"injectables/OTPRedisService.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["realizadas",{"_index":2612,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["realizar",{"_index":2052,"title":{},"body":{"interfaces/IServiceErrors.html":{},"injectables/LogInterceptor.html":{},"classes/ServiceErrorFilter.html":{},"index.html":{}}}],["received",{"_index":2070,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["reconhecível",{"_index":1436,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["record",{"_index":1796,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/IService.html":{},"classes/InMemoryContainer.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/typealiases.html":{}}}],["recurso",{"_index":2051,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/NotFoundFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["recursos",{"_index":1290,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["recusrsos",{"_index":2049,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["redes",{"_index":3127,"title":{},"body":{"index.html":{}}}],["redis",{"_index":1763,"title":{},"body":{"interfaces/IClassToRawObject.html":{},"interfaces/IProps.html":{},"interfaces/IProps-19.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/RedisLogicError.html":{},"injectables/RedisService.html":{},"classes/RegistryAPIBootstrap.html":{},"index.html":{}}}],["redis(process.env.redis_url",{"_index":2555,"title":{},"body":{"injectables/RedisService.html":{}}}],["redis.del",{"_index":2501,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["redis.get(`${redisenum.otp}${input.email.value",{"_index":2503,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["redis.init",{"_index":1953,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["redis.service",{"_index":2486,"title":{},"body":{"injectables/OTPRedisService.html":{},"modules/RedisModule.html":{}}}],["redis.set",{"_index":2492,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["redisenum",{"_index":2488,"title":{},"body":{"injectables/OTPRedisService.html":{},"miscellaneous/enumerations.html":{}}}],["redisenum.otp}${input.email.value",{"_index":2493,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["rediserrorfilter",{"_index":1903,"title":{"classes/RedisErrorFilter.html":{}},"body":{"interfaces/IProps.html":{},"interfaces/IRedisError.html":{},"classes/RedisErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["rediserrorfilter(this.logger",{"_index":1938,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["rediserrorstags",{"_index":1983,"title":{},"body":{"interfaces/IProps-19.html":{},"interfaces/IRedisError.html":{},"injectables/OTPRedisService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"miscellaneous/enumerations.html":{}}}],["rediserrorstags.alreadyexist",{"_index":2029,"title":{},"body":{"interfaces/IRedisError.html":{},"injectables/OTPRedisService.html":{},"classes/RedisErrorFilter.html":{}}}],["redislogicerror",{"_index":1985,"title":{"classes/RedisLogicError.html":{}},"body":{"interfaces/IProps-19.html":{},"interfaces/IRedisError.html":{},"injectables/OTPRedisService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{}}}],["redismodule",{"_index":1724,"title":{"modules/RedisModule.html":{}},"body":{"modules/HttpModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redisservice",{"_index":1900,"title":{"injectables/RedisService.html":{}},"body":{"interfaces/IProps.html":{},"injectables/OTPRedisService.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"classes/RegistryAPIBootstrap.html":{},"overview.html":{}}}],["reduzindo",{"_index":3081,"title":{},"body":{"index.html":{}}}],["ref",{"_index":987,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{}}}],["reference",{"_index":1209,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-18.html":{},"classes/Index.html":{},"miscellaneous/enumerations.html":{}}}],["referencias",{"_index":562,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["reflect",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["reflost",{"_index":1208,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["refresh",{"_index":1755,"title":{},"body":{"interfaces/IAccessTokenBody.html":{},"interfaces/IRefreshTokenBody.html":{},"miscellaneous/enumerations.html":{}}}],["refreshjwtbody",{"_index":1105,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["refreshtoken",{"_index":1113,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-8.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["refreshtoken(res",{"_index":2726,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtokencontent",{"_index":2587,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["refreshtokenguard",{"_index":2564,"title":{"guards/RefreshTokenGuard.html":{}},"body":{"guards/RefreshTokenGuard.html":{},"controllers/UserController.html":{}}}],["refs",{"_index":980,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["refs.condominiumrelusercollection",{"_index":2905,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["refs.core",{"_index":2295,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["regexp",{"_index":2620,"title":{},"body":{"classes/UUID.html":{}}}],["registry",{"_index":1923,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:app/adapters/adapter.module",{"_index":1729,"title":{},"body":{"modules/HttpModule.html":{}}}],["registry:app/adapters/cookie",{"_index":2574,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["registry:app/adapters/crypt",{"_index":437,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptSpy.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-9.html":{},"interfaces/IValidate.html":{}}}],["registry:app/adapters/email",{"_index":1347,"title":{},"body":{"classes/EmailSpy.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{}}}],["registry:app/adapters/http",{"_index":2065,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["registry:app/adapters/logger",{"_index":87,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["registry:app/auth/guards/admin",{"_index":713,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["registry:app/auth/guards/checkotp.guard",{"_index":2738,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/checkpassword.guard",{"_index":2733,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/checktfacode.guard",{"_index":2734,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/hmac",{"_index":2731,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/jwt.guard",{"_index":2737,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/refreshtoken.guard",{"_index":2736,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/super",{"_index":707,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["registry:app/auth/tokentypes",{"_index":1089,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["registry:app/entities/condominium",{"_index":356,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IProps-7.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/Num.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["registry:app/entities/condominiumreluser",{"_index":257,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-9.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["registry:app/entities/entities",{"_index":255,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-4.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{}}}],["registry:app/entities/invite",{"_index":1164,"title":{},"body":{"injectables/CreateUserService-1.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IValidate.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"controllers/UserController.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["registry:app/entities/otp",{"_index":438,"title":{},"body":{"guards/CheckOTPGuard.html":{},"injectables/GenOldTFASevice.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-14.html":{},"classes/InMemoryOTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{}}}],["registry:app/entities/user",{"_index":291,"title":{},"body":{"classes/Auth.html":{},"classes/CPF.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserDataCore.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["registry:app/entities/vo",{"_index":192,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/OTPRepo.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["registry:app/errors/adapter",{"_index":88,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/FetchAdapter.html":{}}}],["registry:app/errors/entities",{"_index":253,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["registry:app/errors/guard",{"_index":189,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["registry:app/errors/services",{"_index":1284,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["registry:app/gateways/cep.gateway",{"_index":422,"title":{},"body":{"classes/CepGatewaySpy.html":{},"injectables/CreateCondominiumService.html":{},"modules/GatewayModule.html":{},"interfaces/IProps-7.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["registry:app/mapper/condominium",{"_index":702,"title":{},"body":{"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"injectables/CondominiumsFirestore.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["registry:app/mapper/condominiumreluser",{"_index":921,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["registry:app/mapper/invite",{"_index":1800,"title":{},"body":{"interfaces/IIncomingFirestoreInviteData.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{}}}],["registry:app/mapper/user",{"_index":1805,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"injectables/InviteFirestore.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{}}}],["registry:app/repositories/condominium",{"_index":824,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"modules/FirestoreModule.html":{},"interfaces/IProps-7.html":{},"classes/InMemoryCondominium.html":{},"modules/PrismaModule.html":{}}}],["registry:app/repositories/invite",{"_index":1163,"title":{},"body":{"injectables/CreateUserService-1.html":{},"modules/FirestoreModule.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IValidate.html":{},"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"modules/PrismaModule.html":{}}}],["registry:app/repositories/otp",{"_index":439,"title":{},"body":{"guards/CheckOTPGuard.html":{},"injectables/CreateUserService.html":{},"injectables/GenOldTFASevice.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-9.html":{},"classes/InMemoryOTP.html":{},"injectables/OTPRedisService.html":{},"modules/RedisModule.html":{}}}],["registry:app/repositories/user",{"_index":187,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"modules/FirestoreModule.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-9.html":{},"classes/InMemoryUser.html":{},"guards/JwtGuard.html":{},"modules/PrismaModule.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["registry:app/services/createcondominium.service",{"_index":699,"title":{},"body":{"controllers/CondominiumController.html":{},"modules/HttpModule.html":{}}}],["registry:app/services/createtoken.service",{"_index":1731,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:app/services/createuser.service",{"_index":1730,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:app/services/deleteuser.service",{"_index":712,"title":{},"body":{"controllers/CondominiumController.html":{},"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:app/services/geninvite.service",{"_index":705,"title":{},"body":{"controllers/CondominiumController.html":{},"modules/HttpModule.html":{}}}],["registry:app/services/gentfa.service",{"_index":1737,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:app/services/gentfacode.old.service",{"_index":1747,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:app/services/getcondominiumrel.service",{"_index":1744,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:infra/gateways/errors",{"_index":1560,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["registry:infra/http/dto/inviteuser.dto",{"_index":1693,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["registry:infra/http/dto/launch",{"_index":500,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["registry:infra/http/dto/launchotp.dto",{"_index":440,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["registry:infra/http/dto/login.dto",{"_index":477,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["registry:infra/http/filters/errors/adapter.filter",{"_index":1890,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/classvalidator.filter",{"_index":1891,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/databasecustomerror.filter",{"_index":1898,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/gateways.filter",{"_index":1888,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/generic.filter",{"_index":1884,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/guard.filter",{"_index":1889,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/notfound.filter",{"_index":1895,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/prisma.filter",{"_index":1899,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/redis",{"_index":1904,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/services.filter",{"_index":1886,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/throttler.filter",{"_index":1893,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/vo.filter",{"_index":1887,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/interceptors/logger.interceptor",{"_index":1882,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/storages/cache/redis/error",{"_index":2027,"title":{},"body":{"interfaces/IRedisError.html":{},"classes/RedisErrorFilter.html":{}}}],["registry:infra/storages/cache/redis/redis.module",{"_index":1745,"title":{},"body":{"modules/HttpModule.html":{}}}],["registry:infra/storages/cache/redis/redis.service",{"_index":1901,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/storages/db/error",{"_index":1240,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["registry:infra/storages/db/firestore/firestore.module",{"_index":1743,"title":{},"body":{"modules/HttpModule.html":{}}}],["registry:infra/storages/db/prisma/prisma.module",{"_index":1746,"title":{},"body":{"modules/HttpModule.html":{}}}],["registry:infra/storages/db/prisma/prisma.service",{"_index":1902,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:tests/errors/inmemoryerror",{"_index":2097,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["registry:utils/class",{"_index":1381,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["registry:utils/convertvalidatorerr",{"_index":442,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["registry:utils/dateformats",{"_index":2392,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["registry:utils/generatestringcodecontent",{"_index":503,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IValidate.html":{}}}],["registry:utils/replace",{"_index":920,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{}}}],["registryapi",{"_index":3324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registryapibootstrap",{"_index":1906,"title":{"classes/RegistryAPIBootstrap.html":{}},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"miscellaneous/variables.html":{}}}],["reject",{"_index":313,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["reject(err",{"_index":322,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["relacionadas",{"_index":3142,"title":{},"body":{"index.html":{}}}],["relação",{"_index":1664,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-15.html":{},"miscellaneous/functions.html":{}}}],["remove",{"_index":2349,"title":{"interfaces/remove.html":{},"interfaces/remove-1.html":{}},"body":{"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["removelistener",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["renovação",{"_index":1076,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["repetido",{"_index":1867,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{},"classes/UUIDGroup.html":{}}}],["repositories/condominium.service",{"_index":2524,"title":{},"body":{"modules/PrismaModule.html":{}}}],["repositories/condominiums",{"_index":1513,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["repositories/invite",{"_index":1515,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["repositories/invite.service",{"_index":2527,"title":{},"body":{"modules/PrismaModule.html":{}}}],["repositories/otp.service",{"_index":2548,"title":{},"body":{"modules/RedisModule.html":{}}}],["repositories/user.service",{"_index":2526,"title":{},"body":{"modules/PrismaModule.html":{}}}],["repositories/users",{"_index":1512,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["req",{"_index":203,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["req.body",{"_index":462,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["req.headers.cookie",{"_index":2579,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["req.headers?.authorization?.split('bearer",{"_index":518,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["req.inmemorydata",{"_index":466,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{}}}],["req.inmemorydata.invite",{"_index":2761,"title":{},"body":{"controllers/UserController.html":{}}}],["req.inmemorydata.user",{"_index":743,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["req.method",{"_index":2409,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["req.params?.condominiumid",{"_index":208,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["req.path",{"_index":2401,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["req.query.invite",{"_index":1711,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["req.query?.invite",{"_index":1709,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["req?.headers?.authorization",{"_index":206,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["req?.inmemorydata?.user",{"_index":446,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["request",{"_index":190,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-1.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["requestlistener",{"_index":1875,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["required",{"_index":788,"title":{},"body":{"classes/CondominiumMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"classes/InviteMapper.html":{},"miscellaneous/typealiases.html":{}}}],["requiredlevel",{"_index":729,"title":{},"body":{"controllers/CondominiumController.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IValidate.html":{}}}],["requisitados",{"_index":3239,"title":{},"body":{"index.html":{}}}],["requisição",{"_index":541,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/FetchAdapter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["requisições",{"_index":1011,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/ThrottlerErrorFilter.html":{},"index.html":{}}}],["res",{"_index":1417,"title":{},"body":{"classes/FetchAdapter.html":{},"injectables/OTPRedisService.html":{},"controllers/UserController.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/variables.html":{}}}],["res.cookie('refresh",{"_index":2748,"title":{},"body":{"controllers/UserController.html":{}}}],["res.data",{"_index":2868,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["res.data().count",{"_index":2266,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["res.empty",{"_index":2257,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["res.exists",{"_index":2866,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["res.foreach((item",{"_index":2258,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["res.headers",{"_index":1420,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["res.id",{"_index":2867,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["res.json",{"_index":1423,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["res.status",{"_index":1419,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["reset",{"_index":127,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"overview.html":{}}}],["resolve(hash",{"_index":320,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["response",{"_index":90,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["response.status(400).json",{"_index":545,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"interfaces/IBodyProps.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["response.status(401).json",{"_index":1677,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["response.status(404).json",{"_index":2456,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["response.status(500).json",{"_index":106,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["response.status(error.httpcode).json",{"_index":1248,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["responsáveis",{"_index":3024,"title":{},"body":{"index.html":{}}}],["responsável",{"_index":1060,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"index.html":{}}}],["resposta",{"_index":3069,"title":{},"body":{"index.html":{}}}],["result",{"_index":403,"title":{},"body":{"classes/CPF.html":{},"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{},"classes/UUIDGroup.html":{},"miscellaneous/enumerations.html":{}}}],["resultado",{"_index":1543,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["resultofnumwithweights",{"_index":404,"title":{},"body":{"classes/CPF.html":{}}}],["results",{"_index":61,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retornar",{"_index":1663,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-15.html":{}}}],["retorno",{"_index":1461,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/IService.html":{}}}],["return",{"_index":105,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateTokenService.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/Email.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":84,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{}}}],["reutilizar",{"_index":3077,"title":{},"body":{"index.html":{}}}],["rodar",{"_index":3120,"title":{},"body":{"index.html":{}}}],["root",{"_index":3218,"title":{},"body":{"index.html":{}}}],["rota",{"_index":2405,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["rotas",{"_index":718,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["rua",{"_index":2459,"title":{},"body":{"classes/Num.html":{}}}],["ruim",{"_index":542,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["run",{"_index":2588,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["run(input",{"_index":1954,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["runstoragelayer",{"_index":1949,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["rxjs",{"_index":2395,"title":{},"body":{"injectables/LogInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2397,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["s",{"_index":2406,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["saas",{"_index":3135,"title":{},"body":{"index.html":{}}}],["safe",{"_index":1204,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["safelyfind",{"_index":2348,"title":{"interfaces/safelyFind.html":{}},"body":{"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["safesearch",{"_index":222,"title":{"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{}},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CondominiumRepo.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-13.html":{},"interfaces/IValidate.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["safesearchenabled",{"_index":1203,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["salvar",{"_index":3267,"title":{},"body":{"index.html":{}}}],["samesite",{"_index":2755,"title":{},"body":{"controllers/UserController.html":{}}}],["sandbox.smtp.mailtrap.io",{"_index":3198,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1466,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["schema.parse(input",{"_index":1474,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["se",{"_index":159,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CondominiumRepo.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"classes/InviteRepo.html":{},"classes/Num.html":{},"guards/SuperAdminJwt.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["search",{"_index":962,"title":{"interfaces/search.html":{},"interfaces/search-1.html":{}},"body":{"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{}}}],["searchbyfield",{"_index":2841,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["searchbyfield(collection",{"_index":2851,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["searchbyid",{"_index":2842,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["searchbyid(input",{"_index":2855,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["searchedcondominiumreluser",{"_index":2145,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["searchedinvite",{"_index":2141,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["searchedinviteindex",{"_index":2154,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["searchedotp",{"_index":453,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["seconds",{"_index":1266,"title":{},"body":{"classes/DateFormats.html":{}}}],["secret",{"_index":197,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["secure",{"_index":2752,"title":{},"body":{"controllers/UserController.html":{}}}],["segue",{"_index":3170,"title":{},"body":{"index.html":{}}}],["seguida",{"_index":3236,"title":{},"body":{"index.html":{}}}],["seguintes",{"_index":3033,"title":{},"body":{"index.html":{}}}],["seja",{"_index":28,"title":{},"body":{"classes/AdapterError.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/InviteRepo.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["semiparseddata",{"_index":2887,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["semiparsedinvite",{"_index":2306,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["semiparseduser",{"_index":2895,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["sempre",{"_index":3265,"title":{},"body":{"index.html":{}}}],["send",{"_index":1339,"title":{},"body":{"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"interfaces/ISendMailContent.html":{},"classes/NodemailerAdapter.html":{}}}],["send(data",{"_index":2431,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["sendo",{"_index":732,"title":{},"body":{"controllers/CondominiumController.html":{},"index.html":{}}}],["senha",{"_index":479,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"classes/Password.html":{}}}],["senhas",{"_index":469,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["ser",{"_index":949,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/Entity.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IProps-1.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"classes/LoginDTO.html":{},"classes/ServiceErrorFilter.html":{},"controllers/UserController.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["service",{"_index":1845,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-6.html":{},"classes/LoggerAdapter.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["serviceerrorfilter",{"_index":1885,"title":{"classes/ServiceErrorFilter.html":{}},"body":{"interfaces/IProps.html":{},"interfaces/IServiceErrors.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{}}}],["serviceerrorfilter(this.logger",{"_index":1941,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["serviceerrors",{"_index":1282,"title":{"classes/ServiceErrors.html":{}},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-6.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{}}}],["serviceerrorstags",{"_index":1283,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-6.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["serviceerrorstags.alreadyexist",{"_index":2047,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["serviceerrorstags.unauthorized",{"_index":2046,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["serviceerrorstags.wrongserviceusage",{"_index":1292,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["services",{"_index":1844,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-6.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"classes/LoggerAdapter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["servidor",{"_index":110,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["servidores",{"_index":3030,"title":{},"body":{"index.html":{}}}],["serviço",{"_index":1059,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService-1.html":{},"injectables/DeleteUserService.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"index.html":{}}}],["serviços",{"_index":3016,"title":{},"body":{"index.html":{}}}],["serão",{"_index":3106,"title":{},"body":{"index.html":{}}}],["set",{"_index":664,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"index.html":{}}}],["set(input",{"_index":2657,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["setapartmentnumber(input",{"_index":869,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setblock(input",{"_index":864,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setcep(input",{"_index":611,"title":{},"body":{"classes/Condominium.html":{}}}],["setcnpj(input",{"_index":619,"title":{},"body":{"classes/Condominium.html":{}}}],["setcondominiumid(input",{"_index":856,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setcpf(input",{"_index":2686,"title":{},"body":{"classes/User.html":{}}}],["setdescription('morada",{"_index":1924,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setemail(input",{"_index":2678,"title":{},"body":{"classes/User.html":{}}}],["setglobalfilters",{"_index":1935,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setglobalinteceptors",{"_index":1930,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setglobalpipes",{"_index":1933,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setlevel(input",{"_index":852,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setname(input",{"_index":606,"title":{},"body":{"classes/Condominium.html":{},"classes/User.html":{}}}],["setnum(input",{"_index":615,"title":{},"body":{"classes/Condominium.html":{}}}],["setpassword(input",{"_index":2682,"title":{},"body":{"classes/User.html":{}}}],["setphonenumber(input",{"_index":2690,"title":{},"body":{"classes/User.html":{}}}],["settitle('moradaapp",{"_index":1922,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setupdatedat(input",{"_index":872,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setupfilesafterenv",{"_index":3341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setuserid(input",{"_index":860,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setversion('1.0",{"_index":1925,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["seu",{"_index":3185,"title":{},"body":{"index.html":{}}}],["seus",{"_index":1548,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-15.html":{},"index.html":{}}}],["siafi",{"_index":2064,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["signature",{"_index":508,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["signed",{"_index":2757,"title":{},"body":{"controllers/UserController.html":{}}}],["significativa",{"_index":3083,"title":{},"body":{"index.html":{}}}],["sim",{"_index":3159,"title":{},"body":{"index.html":{}}}],["simbólicos",{"_index":3073,"title":{},"body":{"index.html":{}}}],["simples",{"_index":3070,"title":{},"body":{"index.html":{}}}],["simplesmente",{"_index":2638,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["sinta",{"_index":3288,"title":{},"body":{"index.html":{}}}],["sistema",{"_index":3086,"title":{},"body":{"index.html":{}}}],["sistemas",{"_index":3027,"title":{},"body":{"index.html":{}}}],["snapshot",{"_index":2880,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.data",{"_index":2886,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.empty",{"_index":2891,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.exists",{"_index":2883,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.foreach((item",{"_index":2892,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.id",{"_index":2885,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["sobre",{"_index":3011,"title":{},"body":{"index.html":{}}}],["solicitado",{"_index":1223,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["solicitação",{"_index":1623,"title":{},"body":{"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{}}}],["somente",{"_index":3264,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"modules/RedisModule.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["spec\\\\.ts",{"_index":3333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sprint",{"_index":3298,"title":{},"body":{"index.html":{}}}],["src/.../_iservice.ts",{"_index":3314,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../condominium.ts",{"_index":2975,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../condominiumreluser.ts",{"_index":2977,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../convertvalidatorerr.ts",{"_index":2973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cookie.ts",{"_index":3315,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../entities.ts",{"_index":2963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../enums.ts",{"_index":2965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../executioncontextspy.ts",{"_index":3322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generatestringcodecontent.ts",{"_index":2984,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":2962,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../invite.ts",{"_index":2981,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../logger.ts",{"_index":2966,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../otp.ts",{"_index":2987,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../redisenum.ts",{"_index":2967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../replace.ts",{"_index":3313,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../services.ts",{"_index":2968,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tokentypes.ts",{"_index":2969,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.ts",{"_index":2983,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app.module.ts",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["src/registryapi/app/adapters/adapter.module.ts",{"_index":129,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["src/registryapi/app/adapters/bcrypt/bcryptadapter.ts",{"_index":292,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["src/registryapi/app/adapters/bcrypt/bcryptadapter.ts:6",{"_index":298,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["src/registryapi/app/adapters/cookie",{"_index":1003,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["src/registryapi/app/adapters/cookie.ts",{"_index":997,"title":{},"body":{"classes/CookieAdapter.html":{},"interfaces/IValidateSignedCookie.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/adapters/cookie.ts:12",{"_index":1001,"title":{},"body":{"classes/CookieAdapter.html":{}}}],["src/registryapi/app/adapters/crypt.ts",{"_index":1169,"title":{},"body":{"classes/CryptAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["src/registryapi/app/adapters/crypt.ts:12",{"_index":1171,"title":{},"body":{"classes/CryptAdapter.html":{}}}],["src/registryapi/app/adapters/crypt.ts:13",{"_index":1172,"title":{},"body":{"classes/CryptAdapter.html":{}}}],["src/registryapi/app/adapters/crypt.ts:14",{"_index":1170,"title":{},"body":{"classes/CryptAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts",{"_index":1295,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:13",{"_index":1309,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:17",{"_index":1319,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:21",{"_index":1304,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:25",{"_index":1313,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:38",{"_index":1307,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:5",{"_index":1317,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:51",{"_index":1311,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:9",{"_index":1315,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/email.ts",{"_index":1338,"title":{},"body":{"classes/EmailAdapter.html":{},"interfaces/ISendMailContent.html":{}}}],["src/registryapi/app/adapters/email.ts:9",{"_index":1340,"title":{},"body":{"classes/EmailAdapter.html":{}}}],["src/registryapi/app/adapters/fetch/fetchadapter.ts",{"_index":1404,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["src/registryapi/app/adapters/fetch/fetchadapter.ts:6",{"_index":1408,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["src/registryapi/app/adapters/firebase",{"_index":1438,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["src/registryapi/app/adapters/http.ts",{"_index":1714,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["src/registryapi/app/adapters/http.ts:13",{"_index":1715,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts",{"_index":1840,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/adapters/logger.ts:25",{"_index":2420,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:26",{"_index":2419,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:27",{"_index":2416,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:28",{"_index":2421,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:29",{"_index":2414,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:30",{"_index":2418,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:31",{"_index":2415,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:32",{"_index":2417,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/nodemailer/nodemaileradapter.ts",{"_index":2430,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["src/registryapi/app/adapters/nodemailer/nodemaileradapter.ts:5",{"_index":2432,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["src/registryapi/app/auth/guards/admin",{"_index":156,"title":{},"body":{"guards/AdminJwt.html":{}}}],["src/registryapi/app/auth/guards/checkotp.guard.ts",{"_index":425,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["src/registryapi/app/auth/guards/checkotp.guard.ts:14",{"_index":429,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["src/registryapi/app/auth/guards/checkotp.guard.ts:21",{"_index":433,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["src/registryapi/app/auth/guards/checkotp.guard.ts:42",{"_index":436,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["src/registryapi/app/auth/guards/checkotp.guard.ts:53",{"_index":430,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["src/registryapi/app/auth/guards/checkpassword.guard.ts",{"_index":468,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["src/registryapi/app/auth/guards/checkpassword.guard.ts:13",{"_index":471,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["src/registryapi/app/auth/guards/checkpassword.guard.ts:19",{"_index":475,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["src/registryapi/app/auth/guards/checkpassword.guard.ts:31",{"_index":472,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["src/registryapi/app/auth/guards/checktfacode.guard.ts",{"_index":486,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["src/registryapi/app/auth/guards/checktfacode.guard.ts:15",{"_index":494,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["src/registryapi/app/auth/guards/checktfacode.guard.ts:21",{"_index":498,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["src/registryapi/app/auth/guards/checktfacode.guard.ts:41",{"_index":495,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["src/registryapi/app/auth/guards/hmac",{"_index":1681,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["src/registryapi/app/auth/guards/jwt.guard.ts",{"_index":2353,"title":{},"body":{"guards/JwtGuard.html":{}}}],["src/registryapi/app/auth/guards/jwt.guard.ts:11",{"_index":2356,"title":{},"body":{"guards/JwtGuard.html":{}}}],["src/registryapi/app/auth/guards/jwt.guard.ts:17",{"_index":2358,"title":{},"body":{"guards/JwtGuard.html":{}}}],["src/registryapi/app/auth/guards/jwt.guard.ts:29",{"_index":2357,"title":{},"body":{"guards/JwtGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts",{"_index":2565,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts:12",{"_index":2569,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts:19",{"_index":2572,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts:33",{"_index":2573,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts:47",{"_index":2570,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/super",{"_index":2604,"title":{},"body":{"guards/SuperAdminJwt.html":{}}}],["src/registryapi/app/auth/tokentypes.ts",{"_index":1753,"title":{},"body":{"interfaces/IAccessTokenBody.html":{},"interfaces/IRefreshTokenBody.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/app/entities/condominium/index.ts",{"_index":586,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:100",{"_index":605,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:103",{"_index":607,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:108",{"_index":610,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:111",{"_index":612,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:116",{"_index":614,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:119",{"_index":616,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:124",{"_index":618,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:127",{"_index":620,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:132",{"_index":622,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:137",{"_index":624,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:52",{"_index":598,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:53",{"_index":595,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:67",{"_index":600,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:81",{"_index":601,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:95",{"_index":603,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts",{"_index":842,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"miscellaneous/variables.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:107",{"_index":849,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:111",{"_index":853,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:114",{"_index":851,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:118",{"_index":857,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:121",{"_index":855,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:125",{"_index":861,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:128",{"_index":859,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:132",{"_index":866,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:135",{"_index":863,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:139",{"_index":870,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:142",{"_index":868,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:146",{"_index":873,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:149",{"_index":871,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:50",{"_index":845,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:51",{"_index":844,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:72",{"_index":847,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:89",{"_index":848,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/entities.ts",{"_index":1373,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/app/entities/entities.ts:14",{"_index":1379,"title":{},"body":{"classes/Entity.html":{}}}],["src/registryapi/app/entities/entities.ts:15",{"_index":1378,"title":{},"body":{"classes/Entity.html":{}}}],["src/registryapi/app/entities/entities.ts:24",{"_index":2916,"title":{},"body":{"classes/ValueObject.html":{}}}],["src/registryapi/app/entities/entities.ts:25",{"_index":2917,"title":{},"body":{"classes/ValueObject.html":{}}}],["src/registryapi/app/entities/entities.ts:27",{"_index":2915,"title":{},"body":{"classes/ValueObject.html":{}}}],["src/registryapi/app/entities/entities.ts:37",{"_index":2913,"title":{},"body":{"classes/ValueObject.html":{}}}],["src/registryapi/app/entities/invite/index.ts",{"_index":1822,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:21",{"_index":2227,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:22",{"_index":2226,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:35",{"_index":2228,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:48",{"_index":2229,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:59",{"_index":2231,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:62",{"_index":2233,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:65",{"_index":2235,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:68",{"_index":2237,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:71",{"_index":2238,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:74",{"_index":2239,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/otp/index.ts",{"_index":1852,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/entities/otp/index.ts:19",{"_index":2465,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:20",{"_index":2464,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:33",{"_index":2466,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:44",{"_index":2467,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:54",{"_index":2468,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:58",{"_index":2469,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:62",{"_index":2470,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:66",{"_index":2472,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:70",{"_index":2473,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/user/index.ts",{"_index":1997,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/registryapi/app/entities/user/index.ts:104",{"_index":2674,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:109",{"_index":2675,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:112",{"_index":2676,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:117",{"_index":2677,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:120",{"_index":2679,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:125",{"_index":2681,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:128",{"_index":2683,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:133",{"_index":2685,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:136",{"_index":2687,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:141",{"_index":2689,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:144",{"_index":2691,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:149",{"_index":2692,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:154",{"_index":2693,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:58",{"_index":2671,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:59",{"_index":2670,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:74",{"_index":2672,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:89",{"_index":2673,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/vo/condominium/cep/index.ts",{"_index":345,"title":{},"body":{"classes/CEP.html":{}}}],["src/registryapi/app/entities/vo/condominium/cep/index.ts:20",{"_index":353,"title":{},"body":{"classes/CEP.html":{}}}],["src/registryapi/app/entities/vo/condominium/cep/index.ts:24",{"_index":354,"title":{},"body":{"classes/CEP.html":{}}}],["src/registryapi/app/entities/vo/condominium/cep/index.ts:5",{"_index":346,"title":{},"body":{"classes/CEP.html":{}}}],["src/registryapi/app/entities/vo/condominium/cnpj/index.ts",{"_index":362,"title":{},"body":{"classes/CNPJ.html":{}}}],["src/registryapi/app/entities/vo/condominium/cnpj/index.ts:20",{"_index":364,"title":{},"body":{"classes/CNPJ.html":{}}}],["src/registryapi/app/entities/vo/condominium/cnpj/index.ts:24",{"_index":365,"title":{},"body":{"classes/CNPJ.html":{}}}],["src/registryapi/app/entities/vo/condominium/cnpj/index.ts:5",{"_index":363,"title":{},"body":{"classes/CNPJ.html":{}}}],["src/registryapi/app/entities/vo/condominium/num/index.ts",{"_index":2457,"title":{},"body":{"classes/Num.html":{}}}],["src/registryapi/app/entities/vo/condominium/num/index.ts:21",{"_index":2462,"title":{},"body":{"classes/Num.html":{}}}],["src/registryapi/app/entities/vo/condominium/num/index.ts:25",{"_index":2463,"title":{},"body":{"classes/Num.html":{}}}],["src/registryapi/app/entities/vo/condominium/num/index.ts:5",{"_index":2458,"title":{},"body":{"classes/Num.html":{}}}],["src/registryapi/app/entities/vo/generals/name/index.ts",{"_index":2425,"title":{},"body":{"classes/Name.html":{}}}],["src/registryapi/app/entities/vo/generals/name/index.ts:18",{"_index":2428,"title":{},"body":{"classes/Name.html":{}}}],["src/registryapi/app/entities/vo/generals/name/index.ts:22",{"_index":2429,"title":{},"body":{"classes/Name.html":{}}}],["src/registryapi/app/entities/vo/generals/name/index.ts:6",{"_index":2427,"title":{},"body":{"classes/Name.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts",{"_index":2633,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:24",{"_index":2650,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:33",{"_index":2647,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:48",{"_index":2649,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:56",{"_index":2651,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:6",{"_index":2636,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts",{"_index":2613,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:20",{"_index":2616,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:27",{"_index":2618,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:32",{"_index":2617,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:36",{"_index":2619,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:6",{"_index":2615,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/otp/code/index.ts",{"_index":548,"title":{},"body":{"classes/Code.html":{}}}],["src/registryapi/app/entities/vo/otp/code/index.ts:14",{"_index":550,"title":{},"body":{"classes/Code.html":{}}}],["src/registryapi/app/entities/vo/otp/code/index.ts:18",{"_index":551,"title":{},"body":{"classes/Code.html":{}}}],["src/registryapi/app/entities/vo/otp/code/index.ts:5",{"_index":549,"title":{},"body":{"classes/Code.html":{}}}],["src/registryapi/app/entities/vo/user/apartmentnumber/index.ts",{"_index":231,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["src/registryapi/app/entities/vo/user/apartmentnumber/index.ts:20",{"_index":248,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["src/registryapi/app/entities/vo/user/apartmentnumber/index.ts:24",{"_index":251,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["src/registryapi/app/entities/vo/user/apartmentnumber/index.ts:5",{"_index":238,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["src/registryapi/app/entities/vo/user/block/index.ts",{"_index":328,"title":{},"body":{"classes/Block.html":{}}}],["src/registryapi/app/entities/vo/user/block/index.ts:17",{"_index":334,"title":{},"body":{"classes/Block.html":{}}}],["src/registryapi/app/entities/vo/user/block/index.ts:21",{"_index":335,"title":{},"body":{"classes/Block.html":{}}}],["src/registryapi/app/entities/vo/user/block/index.ts:5",{"_index":329,"title":{},"body":{"classes/Block.html":{}}}],["src/registryapi/app/entities/vo/user/cpf/index.ts",{"_index":369,"title":{},"body":{"classes/CPF.html":{}}}],["src/registryapi/app/entities/vo/user/cpf/index.ts:5",{"_index":370,"title":{},"body":{"classes/CPF.html":{}}}],["src/registryapi/app/entities/vo/user/cpf/index.ts:61",{"_index":371,"title":{},"body":{"classes/CPF.html":{}}}],["src/registryapi/app/entities/vo/user/cpf/index.ts:65",{"_index":372,"title":{},"body":{"classes/CPF.html":{}}}],["src/registryapi/app/entities/vo/user/email/index.ts",{"_index":1332,"title":{},"body":{"classes/Email.html":{}}}],["src/registryapi/app/entities/vo/user/email/index.ts:17",{"_index":1336,"title":{},"body":{"classes/Email.html":{}}}],["src/registryapi/app/entities/vo/user/email/index.ts:21",{"_index":1337,"title":{},"body":{"classes/Email.html":{}}}],["src/registryapi/app/entities/vo/user/email/index.ts:5",{"_index":1333,"title":{},"body":{"classes/Email.html":{}}}],["src/registryapi/app/entities/vo/user/level/index.ts",{"_index":2373,"title":{},"body":{"classes/Level.html":{}}}],["src/registryapi/app/entities/vo/user/level/index.ts:20",{"_index":2378,"title":{},"body":{"classes/Level.html":{}}}],["src/registryapi/app/entities/vo/user/level/index.ts:24",{"_index":2379,"title":{},"body":{"classes/Level.html":{}}}],["src/registryapi/app/entities/vo/user/level/index.ts:5",{"_index":2374,"title":{},"body":{"classes/Level.html":{}}}],["src/registryapi/app/entities/vo/user/password/index.ts",{"_index":2508,"title":{},"body":{"classes/Password.html":{}}}],["src/registryapi/app/entities/vo/user/password/index.ts:20",{"_index":2510,"title":{},"body":{"classes/Password.html":{}}}],["src/registryapi/app/entities/vo/user/password/index.ts:24",{"_index":2511,"title":{},"body":{"classes/Password.html":{}}}],["src/registryapi/app/entities/vo/user/password/index.ts:5",{"_index":2509,"title":{},"body":{"classes/Password.html":{}}}],["src/registryapi/app/entities/vo/user/phonenumber/index.ts",{"_index":2512,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["src/registryapi/app/entities/vo/user/phonenumber/index.ts:20",{"_index":2515,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["src/registryapi/app/entities/vo/user/phonenumber/index.ts:24",{"_index":2516,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["src/registryapi/app/entities/vo/user/phonenumber/index.ts:5",{"_index":2513,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["src/registryapi/app/errors/adapter.ts",{"_index":6,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/IProps-3.html":{}}}],["src/registryapi/app/errors/adapter.ts:7",{"_index":17,"title":{},"body":{"classes/AdapterError.html":{}}}],["src/registryapi/app/errors/entities.ts",{"_index":1349,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-4.html":{}}}],["src/registryapi/app/errors/entities.ts:9",{"_index":1350,"title":{},"body":{"classes/EntitieError.html":{}}}],["src/registryapi/app/errors/guard.ts",{"_index":1678,"title":{},"body":{"classes/GuardErrors.html":{},"interfaces/IProps-5.html":{}}}],["src/registryapi/app/errors/guard.ts:5",{"_index":1679,"title":{},"body":{"classes/GuardErrors.html":{}}}],["src/registryapi/app/errors/services.ts",{"_index":1992,"title":{},"body":{"interfaces/IProps-6.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/app/errors/services.ts:13",{"_index":2600,"title":{},"body":{"classes/ServiceErrors.html":{}}}],["src/registryapi/app/gateways/auth.gateway.ts",{"_index":280,"title":{},"body":{"classes/Auth.html":{}}}],["src/registryapi/app/gateways/auth.gateway.ts:4",{"_index":286,"title":{},"body":{"classes/Auth.html":{}}}],["src/registryapi/app/gateways/auth.gateway.ts:5",{"_index":288,"title":{},"body":{"classes/Auth.html":{}}}],["src/registryapi/app/gateways/auth.gateway.ts:6",{"_index":290,"title":{},"body":{"classes/Auth.html":{}}}],["src/registryapi/app/gateways/cep.gateway.ts",{"_index":406,"title":{},"body":{"classes/CepGateway.html":{},"interfaces/ICheckCep.html":{}}}],["src/registryapi/app/gateways/cep.gateway.ts:11",{"_index":409,"title":{},"body":{"classes/CepGateway.html":{}}}],["src/registryapi/app/mapper/condominium.ts",{"_index":776,"title":{},"body":{"classes/CondominiumMapper.html":{},"interfaces/IConvertToObject.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/mapper/condominium.ts:20",{"_index":781,"title":{},"body":{"classes/CondominiumMapper.html":{}}}],["src/registryapi/app/mapper/condominium.ts:38",{"_index":786,"title":{},"body":{"classes/CondominiumMapper.html":{}}}],["src/registryapi/app/mapper/condominiumreluser.ts",{"_index":924,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/mapper/condominiumreluser.ts:28",{"_index":927,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{}}}],["src/registryapi/app/mapper/condominiumreluser.ts:36",{"_index":928,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{}}}],["src/registryapi/app/mapper/invite.ts",{"_index":1768,"title":{},"body":{"interfaces/IConvertToObject-1.html":{},"classes/InviteMapper.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/mapper/invite.ts:19",{"_index":2312,"title":{},"body":{"classes/InviteMapper.html":{}}}],["src/registryapi/app/mapper/invite.ts:32",{"_index":2313,"title":{},"body":{"classes/InviteMapper.html":{}}}],["src/registryapi/app/mapper/otp.ts",{"_index":1773,"title":{},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["src/registryapi/app/mapper/otp.ts:25",{"_index":2474,"title":{},"body":{"classes/OTPMapper.html":{}}}],["src/registryapi/app/mapper/otp.ts:41",{"_index":2475,"title":{},"body":{"classes/OTPMapper.html":{}}}],["src/registryapi/app/mapper/user.ts",{"_index":2080,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/mapper/user.ts:30",{"_index":2804,"title":{},"body":{"classes/UserMapper.html":{}}}],["src/registryapi/app/mapper/user.ts:45",{"_index":2805,"title":{},"body":{"classes/UserMapper.html":{}}}],["src/registryapi/app/repositories/condominium.ts",{"_index":943,"title":{},"body":{"classes/CondominiumRepo.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["src/registryapi/app/repositories/condominium.ts:21",{"_index":944,"title":{},"body":{"classes/CondominiumRepo.html":{}}}],["src/registryapi/app/repositories/condominium.ts:28",{"_index":945,"title":{},"body":{"classes/CondominiumRepo.html":{}}}],["src/registryapi/app/repositories/condominium.ts:37",{"_index":960,"title":{},"body":{"classes/CondominiumRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts",{"_index":2341,"title":{},"body":{"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["src/registryapi/app/repositories/invite.ts:29",{"_index":2342,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts:36",{"_index":2344,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts:45",{"_index":2345,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts:51",{"_index":2346,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts:56",{"_index":2343,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/otp.ts",{"_index":1777,"title":{},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/OTPRepo.html":{}}}],["src/registryapi/app/repositories/otp.ts:18",{"_index":2505,"title":{},"body":{"classes/OTPRepo.html":{}}}],["src/registryapi/app/repositories/otp.ts:19",{"_index":2507,"title":{},"body":{"classes/OTPRepo.html":{}}}],["src/registryapi/app/repositories/otp.ts:20",{"_index":2506,"title":{},"body":{"classes/OTPRepo.html":{}}}],["src/registryapi/app/repositories/user.ts",{"_index":2833,"title":{},"body":{"classes/UserRepo.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["src/registryapi/app/repositories/user.ts:33",{"_index":2834,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:40",{"_index":2836,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:47",{"_index":2837,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:50",{"_index":2839,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:55",{"_index":2838,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:60",{"_index":2835,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/services/_iservice.ts",{"_index":2032,"title":{},"body":{"classes/IService.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/services/_iservice.ts:6",{"_index":2039,"title":{},"body":{"classes/IService.html":{}}}],["src/registryapi/app/services/createcondominium.service.ts",{"_index":1058,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"interfaces/IProps-7.html":{}}}],["src/registryapi/app/services/createcondominium.service.ts:13",{"_index":1065,"title":{},"body":{"injectables/CreateCondominiumService.html":{}}}],["src/registryapi/app/services/createcondominium.service.ts:19",{"_index":1067,"title":{},"body":{"injectables/CreateCondominiumService.html":{}}}],["src/registryapi/app/services/createtoken.service.ts",{"_index":1073,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["src/registryapi/app/services/createtoken.service.ts:38",{"_index":1079,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["src/registryapi/app/services/createtoken.service.ts:41",{"_index":1082,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["src/registryapi/app/services/createtoken.service.ts:61",{"_index":1084,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["src/registryapi/app/services/createtoken.service.ts:75",{"_index":1086,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["src/registryapi/app/services/createuser.old.service.ts",{"_index":1147,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-9.html":{}}}],["src/registryapi/app/services/createuser.old.service.ts:16",{"_index":1148,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["src/registryapi/app/services/createuser.old.service.ts:23",{"_index":1149,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["src/registryapi/app/services/createuser.service.ts",{"_index":1158,"title":{},"body":{"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{}}}],["src/registryapi/app/services/createuser.service.ts:19",{"_index":1161,"title":{},"body":{"injectables/CreateUserService-1.html":{}}}],["src/registryapi/app/services/createuser.service.ts:25",{"_index":1162,"title":{},"body":{"injectables/CreateUserService-1.html":{}}}],["src/registryapi/app/services/deleteuser.service.ts",{"_index":1278,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{}}}],["src/registryapi/app/services/deleteuser.service.ts:17",{"_index":1280,"title":{},"body":{"injectables/DeleteUserService.html":{}}}],["src/registryapi/app/services/deleteuser.service.ts:20",{"_index":1281,"title":{},"body":{"injectables/DeleteUserService.html":{}}}],["src/registryapi/app/services/geninvite.service.ts",{"_index":1581,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["src/registryapi/app/services/geninvite.service.ts:19",{"_index":1585,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["src/registryapi/app/services/geninvite.service.ts:26",{"_index":1589,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["src/registryapi/app/services/geninvite.service.ts:43",{"_index":1586,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["src/registryapi/app/services/gentfa.service.ts",{"_index":1626,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["src/registryapi/app/services/gentfa.service.ts:16",{"_index":1630,"title":{},"body":{"injectables/GenTFAService.html":{}}}],["src/registryapi/app/services/gentfa.service.ts:23",{"_index":1633,"title":{},"body":{"injectables/GenTFAService.html":{}}}],["src/registryapi/app/services/gentfa.service.ts:44",{"_index":1631,"title":{},"body":{"injectables/GenTFAService.html":{}}}],["src/registryapi/app/services/gentfacode.old.service.ts",{"_index":1616,"title":{},"body":{"injectables/GenOldTFASevice.html":{},"interfaces/IProps-14.html":{}}}],["src/registryapi/app/services/gentfacode.old.service.ts:16",{"_index":1619,"title":{},"body":{"injectables/GenOldTFASevice.html":{}}}],["src/registryapi/app/services/gentfacode.old.service.ts:23",{"_index":1621,"title":{},"body":{"injectables/GenOldTFASevice.html":{}}}],["src/registryapi/app/services/gentfacode.old.service.ts:37",{"_index":1620,"title":{},"body":{"injectables/GenOldTFASevice.html":{}}}],["src/registryapi/app/services/getcondominiumrel.service.ts",{"_index":1661,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-15.html":{}}}],["src/registryapi/app/services/getcondominiumrel.service.ts:12",{"_index":1666,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{}}}],["src/registryapi/app/services/getcondominiumrel.service.ts:15",{"_index":1667,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{}}}],["src/registryapi/bootstrap.ts",{"_index":1874,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:33",{"_index":2589,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:34",{"_index":2590,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:36",{"_index":2591,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:61",{"_index":2595,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:65",{"_index":2596,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:69",{"_index":2594,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:84",{"_index":2593,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:92",{"_index":2592,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/index.ts",{"_index":3325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/registryapi/infra/gateways/apis/viacep.gateway.ts",{"_index":2056,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["src/registryapi/infra/gateways/apis/viacep.gateway.ts:20",{"_index":2919,"title":{},"body":{"injectables/ViacepGateway.html":{}}}],["src/registryapi/infra/gateways/apis/viacep.gateway.ts:23",{"_index":2920,"title":{},"body":{"injectables/ViacepGateway.html":{}}}],["src/registryapi/infra/gateways/errors/index.ts",{"_index":1564,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/infra/gateways/errors/index.ts:13",{"_index":1567,"title":{},"body":{"classes/GatewayErrors.html":{}}}],["src/registryapi/infra/gateways/errors/index.ts:14",{"_index":1565,"title":{},"body":{"classes/GatewayErrors.html":{}}}],["src/registryapi/infra/gateways/gateway.module.ts",{"_index":1578,"title":{},"body":{"modules/GatewayModule.html":{}}}],["src/registryapi/infra/http/controllers/admin.controller.ts",{"_index":149,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts",{"_index":674,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts:35",{"_index":682,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts:53",{"_index":687,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts:69",{"_index":692,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts:82",{"_index":695,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/super",{"_index":2601,"title":{},"body":{"controllers/SuperAdminController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts",{"_index":2694,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:121",{"_index":2714,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:132",{"_index":2707,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:140",{"_index":2710,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:158",{"_index":2717,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:169",{"_index":2723,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:177",{"_index":2720,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:188",{"_index":2729,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:54",{"_index":2725,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:78",{"_index":2704,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts",{"_index":1010,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:29",{"_index":1024,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:41",{"_index":1025,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:53",{"_index":1018,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:68",{"_index":1029,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:80",{"_index":1021,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts",{"_index":1116,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:104",{"_index":1124,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:27",{"_index":1122,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:42",{"_index":1121,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:54",{"_index":1123,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:66",{"_index":1120,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:76",{"_index":1119,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:92",{"_index":1118,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/deleteadminuser.dto.ts",{"_index":1274,"title":{},"body":{"classes/DeleteUserDTO.html":{}}}],["src/registryapi/infra/http/dto/deleteadminuser.dto.ts:20",{"_index":1277,"title":{},"body":{"classes/DeleteUserDTO.html":{}}}],["src/registryapi/infra/http/dto/inviteuser.dto.ts",{"_index":2350,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["src/registryapi/infra/http/dto/inviteuser.dto.ts:20",{"_index":2351,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["src/registryapi/infra/http/dto/launch",{"_index":2369,"title":{},"body":{"classes/LaunchTFADTO.html":{}}}],["src/registryapi/infra/http/dto/launchotp.dto.ts",{"_index":2359,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["src/registryapi/infra/http/dto/launchotp.dto.ts:18",{"_index":2363,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["src/registryapi/infra/http/dto/launchotp.dto.ts:27",{"_index":2365,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["src/registryapi/infra/http/dto/login.dto.ts",{"_index":2422,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/registryapi/infra/http/dto/login.dto.ts:20",{"_index":2423,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/registryapi/infra/http/dto/login.dto.ts:32",{"_index":2424,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/registryapi/infra/http/filters/errors/adapter.filter.ts",{"_index":64,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/adapter.filter.ts:11",{"_index":82,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/adapter.filter.ts:8",{"_index":77,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/classvalidator.filter.ts",{"_index":524,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["src/registryapi/infra/http/filters/errors/classvalidator.filter.ts:19",{"_index":526,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/classvalidator.filter.ts:22",{"_index":529,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/classvalidator.filter.ts:33",{"_index":527,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/databasecustomerror.filter.ts",{"_index":1216,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["src/registryapi/infra/http/filters/errors/databasecustomerror.filter.ts:18",{"_index":1219,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/databasecustomerror.filter.ts:21",{"_index":1238,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/databasecustomerror.filter.ts:66",{"_index":1239,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/gateways.filter.ts",{"_index":1536,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["src/registryapi/infra/http/filters/errors/gateways.filter.ts:18",{"_index":1538,"title":{},"body":{"classes/GatewayErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/gateways.filter.ts:21",{"_index":1556,"title":{},"body":{"classes/GatewayErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/gateways.filter.ts:37",{"_index":1558,"title":{},"body":{"classes/GatewayErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/generic.filter.ts",{"_index":1644,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["src/registryapi/infra/http/filters/errors/generic.filter.ts:14",{"_index":1647,"title":{},"body":{"classes/GenericErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/generic.filter.ts:17",{"_index":1650,"title":{},"body":{"classes/GenericErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/generic.filter.ts:26",{"_index":1651,"title":{},"body":{"classes/GenericErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/guard.filter.ts",{"_index":1672,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/guard.filter.ts:11",{"_index":1674,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/guard.filter.ts:8",{"_index":1673,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/notfound.filter.ts",{"_index":2448,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/notfound.filter.ts:12",{"_index":2449,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/notfound.filter.ts:15",{"_index":2452,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/prisma.filter.ts",{"_index":1863,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/prisma.filter.ts:15",{"_index":2517,"title":{},"body":{"classes/PrismaErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/prisma.filter.ts:18",{"_index":2518,"title":{},"body":{"classes/PrismaErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/prisma.filter.ts:45",{"_index":2519,"title":{},"body":{"classes/PrismaErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/redis",{"_index":2025,"title":{},"body":{"interfaces/IRedisError.html":{},"classes/RedisErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/services.filter.ts",{"_index":2042,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/services.filter.ts:18",{"_index":2597,"title":{},"body":{"classes/ServiceErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/services.filter.ts:21",{"_index":2598,"title":{},"body":{"classes/ServiceErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/services.filter.ts:43",{"_index":2599,"title":{},"body":{"classes/ServiceErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/throttler.filter.ts",{"_index":2605,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/throttler.filter.ts:11",{"_index":2609,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/throttler.filter.ts:8",{"_index":2607,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/vo.filter.ts",{"_index":1359,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/vo.filter.ts:12",{"_index":1362,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/vo.filter.ts:9",{"_index":1361,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["src/registryapi/infra/http/http.module.ts",{"_index":1725,"title":{},"body":{"modules/HttpModule.html":{}}}],["src/registryapi/infra/http/interceptors/logger.interceptor.ts",{"_index":2381,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/registryapi/infra/http/interceptors/logger.interceptor.ts:16",{"_index":2385,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/registryapi/infra/http/interceptors/logger.interceptor.ts:19",{"_index":2389,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/registryapi/infra/storages/cache/redis/error/index.ts",{"_index":1982,"title":{},"body":{"interfaces/IProps-19.html":{},"classes/RedisLogicError.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/infra/storages/cache/redis/error/index.ts:11",{"_index":2543,"title":{},"body":{"classes/RedisLogicError.html":{}}}],["src/registryapi/infra/storages/cache/redis/mapper/otp.ts",{"_index":1759,"title":{},"body":{"interfaces/IClassToRawObject.html":{},"classes/OTPRedisMapper.html":{}}}],["src/registryapi/infra/storages/cache/redis/mapper/otp.ts:16",{"_index":2478,"title":{},"body":{"classes/OTPRedisMapper.html":{}}}],["src/registryapi/infra/storages/cache/redis/mapper/otp.ts:30",{"_index":2477,"title":{},"body":{"classes/OTPRedisMapper.html":{}}}],["src/registryapi/infra/storages/cache/redis/redis.module.ts",{"_index":2547,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/registryapi/infra/storages/cache/redis/redis.service.ts",{"_index":2549,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/registryapi/infra/storages/cache/redis/redis.service.ts:16",{"_index":2550,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/registryapi/infra/storages/cache/redis/redis.service.ts:25",{"_index":2552,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/registryapi/infra/storages/cache/redis/redis.service.ts:6",{"_index":2553,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/registryapi/infra/storages/cache/redis/redis.service.ts:8",{"_index":2551,"title":{},"body":{"injectables/RedisService.html":{}}}],["src/registryapi/infra/storages/cache/redis/redisenum.ts",{"_index":2972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/registryapi/infra/storages/cache/redis/repositories/otp.service.ts",{"_index":2480,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["src/registryapi/infra/storages/cache/redis/repositories/otp.service.ts:10",{"_index":2482,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["src/registryapi/infra/storages/cache/redis/repositories/otp.service.ts:13",{"_index":2483,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["src/registryapi/infra/storages/cache/redis/repositories/otp.service.ts:32",{"_index":2484,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["src/registryapi/infra/storages/cache/redis/repositories/otp.service.ts:39",{"_index":2485,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["src/registryapi/infra/storages/db/error/index.ts",{"_index":1184,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/infra/storages/db/error/index.ts:19",{"_index":1185,"title":{},"body":{"classes/DatabaseCustomError.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts",{"_index":555,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts:11",{"_index":584,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts:23",{"_index":572,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts:31",{"_index":576,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts:5",{"_index":560,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getcondominium.ts",{"_index":1458,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getcondominium.ts:11",{"_index":1459,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getcondominiumrel.ts",{"_index":1476,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getcondominiumrel.ts:11",{"_index":1477,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getinvite.ts",{"_index":1484,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getinvite.ts:11",{"_index":1485,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getuser.ts",{"_index":1495,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getuser.ts:11",{"_index":1496,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/entities/indexes.ts",{"_index":1810,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["src/registryapi/infra/storages/db/firestore/entities/indexes.ts:24",{"_index":2225,"title":{},"body":{"classes/Index.html":{}}}],["src/registryapi/infra/storages/db/firestore/entities/indexes.ts:31",{"_index":2223,"title":{},"body":{"classes/Index.html":{}}}],["src/registryapi/infra/storages/db/firestore/entities/indexes.ts:9",{"_index":2221,"title":{},"body":{"classes/Index.html":{}}}],["src/registryapi/infra/storages/db/firestore/enums.ts",{"_index":2971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.module.ts",{"_index":1510,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts",{"_index":1516,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts:21",{"_index":1525,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts:25",{"_index":1522,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts:29",{"_index":1523,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts:8",{"_index":1521,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiumreluser.ts",{"_index":913,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiumreluser.ts:26",{"_index":916,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiumreluser.ts:43",{"_index":917,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiums.ts",{"_index":751,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiums.ts:20",{"_index":757,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiums.ts:40",{"_index":764,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/invite.ts",{"_index":1799,"title":{},"body":{"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/invite.ts:19",{"_index":2310,"title":{},"body":{"classes/InviteFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/invite.ts:33",{"_index":2311,"title":{},"body":{"classes/InviteFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/users.ts",{"_index":1803,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/users.ts:21",{"_index":2801,"title":{},"body":{"classes/UserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/users.ts:36",{"_index":2803,"title":{},"body":{"classes/UserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts",{"_index":965,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:13",{"_index":967,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:19",{"_index":969,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:47",{"_index":970,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:48",{"_index":971,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:52",{"_index":972,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts",{"_index":2240,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:141",{"_index":2244,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:142",{"_index":2245,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:144",{"_index":2246,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:18",{"_index":2241,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:24",{"_index":2242,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:77",{"_index":2243,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:83",{"_index":2247,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts",{"_index":2840,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:104",{"_index":2850,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:129",{"_index":2849,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:159",{"_index":2845,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:17",{"_index":2843,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:23",{"_index":2844,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:30",{"_index":2853,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:46",{"_index":2856,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:54",{"_index":2846,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:55",{"_index":2847,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:57",{"_index":2848,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominium.ts",{"_index":795,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominium.ts:25",{"_index":798,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominium.ts:9",{"_index":801,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominiumreluser.ts",{"_index":935,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominiumreluser.ts:25",{"_index":937,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominiumreluser.ts:9",{"_index":938,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/invite.ts",{"_index":2315,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/invite.ts:24",{"_index":2317,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/invite.ts:9",{"_index":2318,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/user.ts",{"_index":2806,"title":{},"body":{"classes/UserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/user.ts:26",{"_index":2808,"title":{},"body":{"classes/UserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/user.ts:9",{"_index":2809,"title":{},"body":{"classes/UserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.module.ts",{"_index":2523,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts",{"_index":2528,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:13",{"_index":2536,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:15",{"_index":2533,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:20",{"_index":2532,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:25",{"_index":2535,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:30",{"_index":2534,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts",{"_index":808,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:13",{"_index":812,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:16",{"_index":815,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:26",{"_index":818,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:27",{"_index":820,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:31",{"_index":821,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts",{"_index":2321,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:14",{"_index":2322,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:17",{"_index":2323,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:22",{"_index":2325,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:23",{"_index":2326,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:25",{"_index":2327,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:46",{"_index":2328,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:73",{"_index":2324,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts",{"_index":2810,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:16",{"_index":2811,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:19",{"_index":2812,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:21",{"_index":2814,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:22",{"_index":2815,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:24",{"_index":2816,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:52",{"_index":2818,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:73",{"_index":2817,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:92",{"_index":2813,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts",{"_index":1174,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts:10",{"_index":1178,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts:15",{"_index":1177,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts:20",{"_index":1176,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts:4",{"_index":1175,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/emailspy.ts",{"_index":1344,"title":{},"body":{"classes/EmailSpy.html":{}}}],["src/registryapi/tests/adapters/emailspy.ts:4",{"_index":1345,"title":{},"body":{"classes/EmailSpy.html":{}}}],["src/registryapi/tests/adapters/emailspy.ts:8",{"_index":1346,"title":{},"body":{"classes/EmailSpy.html":{}}}],["src/registryapi/tests/errors/inmemoryerror.ts",{"_index":1987,"title":{},"body":{"interfaces/IProps-2.html":{},"classes/InMemoryError.html":{}}}],["src/registryapi/tests/errors/inmemoryerror.ts:9",{"_index":2115,"title":{},"body":{"classes/InMemoryError.html":{}}}],["src/registryapi/tests/factories/condominium.ts",{"_index":2989,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/condominiumreluser.ts",{"_index":2992,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/firestore/condominium.ts",{"_index":2994,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/firestore/condominiumreluser.ts",{"_index":2996,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/firestore/invite.ts",{"_index":2998,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/firestore/user.ts",{"_index":3000,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/invite.ts",{"_index":3002,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/otp.ts",{"_index":3004,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/user.ts",{"_index":3006,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/gateways/cep.gateway.ts",{"_index":417,"title":{},"body":{"classes/CepGatewaySpy.html":{}}}],["src/registryapi/tests/gateways/cep.gateway.ts:4",{"_index":420,"title":{},"body":{"classes/CepGatewaySpy.html":{}}}],["src/registryapi/tests/gateways/cep.gateway.ts:8",{"_index":421,"title":{},"body":{"classes/CepGatewaySpy.html":{}}}],["src/registryapi/tests/guards/executioncontextspy.ts",{"_index":3347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts",{"_index":2087,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:12",{"_index":2092,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:16",{"_index":2090,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:22",{"_index":2093,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:38",{"_index":2094,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:39",{"_index":2095,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:43",{"_index":2096,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/inmemorycontainer.ts",{"_index":1790,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["src/registryapi/tests/inmemorydatabase/inmemorycontainer.ts:21",{"_index":2113,"title":{},"body":{"classes/InMemoryContainer.html":{}}}],["src/registryapi/tests/inmemorydatabase/inmemorycontainer.ts:28",{"_index":2114,"title":{},"body":{"classes/InMemoryContainer.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts",{"_index":2117,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:101",{"_index":2127,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:14",{"_index":2122,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:20",{"_index":2123,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:21",{"_index":2121,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:28",{"_index":2125,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:54",{"_index":2129,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:55",{"_index":2131,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:57",{"_index":2132,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:75",{"_index":2135,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts",{"_index":2159,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:12",{"_index":2161,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:17",{"_index":2162,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:19",{"_index":2163,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:38",{"_index":2165,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:48",{"_index":2164,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts",{"_index":2176,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:100",{"_index":2192,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:122",{"_index":2184,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:17",{"_index":2180,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:24",{"_index":2179,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:30",{"_index":2182,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:57",{"_index":2186,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:58",{"_index":2188,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:60",{"_index":2189,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:85",{"_index":2195,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/utils/class.ts",{"_index":1756,"title":{},"body":{"interfaces/IClass.html":{}}}],["src/registryapi/utils/convertvalidatorerr.ts",{"_index":1960,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["src/registryapi/utils/dateformats.ts",{"_index":1251,"title":{},"body":{"classes/DateFormats.html":{}}}],["src/registryapi/utils/dateformats.ts:6",{"_index":1254,"title":{},"body":{"classes/DateFormats.html":{}}}],["src/registryapi/utils/generatestringcodecontent.ts",{"_index":1782,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{}}}],["src/registryapi/utils/replace.ts",{"_index":3317,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stack",{"_index":103,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/LoggerAdapter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["start",{"_index":1841,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":3009,"title":{"index.html":{}},"body":{}}],["static",{"_index":752,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DateFormats.html":{},"classes/Entity.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/UUID.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/ValueObject.html":{}}}],["status",{"_index":1418,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"injectables/PrismaService.html":{}}}],["statuscode",{"_index":107,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["street_address",{"_index":411,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["strict",{"_index":2756,"title":{},"body":{"controllers/UserController.html":{}}}],["string",{"_index":45,"title":{},"body":{"classes/AdapterError.html":{},"guards/AdminJwt.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CookieAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EntitieError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryError.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string'})@isemail",{"_index":2360,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["string'})@length(6",{"_index":2364,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["string(process.env.cookie_key",{"_index":2577,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["strings",{"_index":2653,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["sua",{"_index":1785,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["suas",{"_index":3138,"title":{},"body":{"index.html":{}}}],["sub",{"_index":1095,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-8.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{}}}],["subject",{"_index":1342,"title":{},"body":{"classes/EmailAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/ISendMailContent.html":{},"classes/NodemailerAdapter.html":{}}}],["sucedida",{"_index":1425,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["sucedido",{"_index":2413,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["sucesso",{"_index":1965,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":54,"title":{},"body":{"classes/AdapterError.html":{},"controllers/CondominiumController.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/InMemoryError.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{}}}],["superadmincontroller",{"_index":1727,"title":{"controllers/SuperAdminController.html":{}},"body":{"modules/HttpModule.html":{},"controllers/SuperAdminController.html":{}}}],["superadminjwt",{"_index":706,"title":{"guards/SuperAdminJwt.html":{}},"body":{"controllers/CondominiumController.html":{},"guards/SuperAdminJwt.html":{}}}],["support",{"_index":3300,"title":{},"body":{"modules.html":{}}}],["supress_only_stack",{"_index":1328,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["svg",{"_index":3301,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3293,"title":{},"body":{"index.html":{}}}],["swaggermodule",{"_index":1897,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["swaggermodule.createdocument(this.app",{"_index":1928,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["swaggermodule.setup('api",{"_index":1929,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["switch",{"_index":1694,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["switchtohttp",{"_index":3351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["são",{"_index":1549,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["t",{"_index":1384,"title":{},"body":{"classes/Entity.html":{},"interfaces/IClass.html":{},"classes/ValueObject.html":{}}}],["tag",{"_index":839,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/OTPRedisService.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["tal",{"_index":1433,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["tanto",{"_index":3292,"title":{},"body":{"index.html":{}}}],["tap",{"_index":2396,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["tarefa",{"_index":1434,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["target",{"_index":745,"title":{},"body":{"controllers/CondominiumController.html":{},"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{},"controllers/UserController.html":{}}}],["target.equalto(actualuser",{"_index":1285,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{}}}],["tcondominiuminobject",{"_index":766,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"miscellaneous/typealiases.html":{}}}],["tcondominiumrelusertoobject",{"_index":918,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{},"miscellaneous/typealiases.html":{}}}],["teceprops",{"_index":1306,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/typealiases.html":{}}}],["telefone",{"_index":2514,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["tem",{"_index":162,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-15.html":{},"guards/SuperAdminJwt.html":{},"index.html":{}}}],["temos",{"_index":3279,"title":{},"body":{"index.html":{}}}],["temporário",{"_index":2408,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["tenham",{"_index":383,"title":{},"body":{"classes/CPF.html":{}}}],["tentar",{"_index":1705,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["ter",{"_index":3154,"title":{},"body":{"index.html":{}}}],["terminal",{"_index":3245,"title":{},"body":{"index.html":{}}}],["testenvironment",{"_index":3340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testes",{"_index":3257,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2926,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["testpara",{"_index":3277,"title":{},"body":{"index.html":{}}}],["testregex",{"_index":3332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tfa",{"_index":2780,"title":{},"body":{"controllers/UserController.html":{}}}],["tfa')@httpcode(204",{"_index":2713,"title":{},"body":{"controllers/UserController.html":{}}}],["tfa.dto",{"_index":501,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["tfa.dto.ts",{"_index":2370,"title":{},"body":{"classes/LaunchTFADTO.html":{}}}],["tfa.dto.ts:20",{"_index":2372,"title":{},"body":{"classes/LaunchTFADTO.html":{}}}],["tfirestorecondominiumrelusertoobject",{"_index":922,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"miscellaneous/typealiases.html":{}}}],["then((res",{"_index":2287,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["then(async",{"_index":1416,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["this.$connect().then",{"_index":2538,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect().then",{"_index":2539,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._id",{"_index":643,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["this._id.equalto(input._id",{"_index":1858,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this._instance",{"_index":1530,"title":{},"body":{"injectables/FirestoreService.html":{},"injectables/RedisService.html":{}}}],["this._instance.connect",{"_index":2558,"title":{},"body":{"injectables/RedisService.html":{}}}],["this._instance.quit",{"_index":2561,"title":{},"body":{"injectables/RedisService.html":{}}}],["this._instance.settings",{"_index":1532,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["this._instance.status",{"_index":2556,"title":{},"body":{"injectables/RedisService.html":{}}}],["this._instance.terminate",{"_index":1534,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["this._value",{"_index":343,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Email.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{}}}],["this._value.length",{"_index":359,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{}}}],["this._value.slice",{"_index":393,"title":{},"body":{"classes/CPF.html":{}}}],["this._value.slice(0",{"_index":398,"title":{},"body":{"classes/CPF.html":{}}}],["this.app",{"_index":1910,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.enablecors",{"_index":1915,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.enableshutdownhooks",{"_index":1913,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.get(loggeradapter",{"_index":1920,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.get(prismaservice",{"_index":1951,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.get(redisservice",{"_index":1950,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.init",{"_index":1959,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.use(cookieparser(process.env.cookie_key",{"_index":1914,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.useglobalfilters(new",{"_index":1936,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.useglobalinterceptors(new",{"_index":1931,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.useglobalpipes(new",{"_index":1934,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.build(input.requestlistener",{"_index":1955,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.buildaccesstoken(user",{"_index":1112,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["this.buildrefreshtoken(user.email",{"_index":1114,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["this.calls.check",{"_index":423,"title":{},"body":{"classes/CepGatewaySpy.html":{}}}],["this.calls.compare",{"_index":1182,"title":{},"body":{"classes/CryptSpy.html":{}}}],["this.calls.create",{"_index":2100,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["this.calls.delete",{"_index":2157,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["this.calls.find",{"_index":2107,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["this.calls.getallcondominiumrelation",{"_index":2213,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.calls.getcondominiumrelation",{"_index":2209,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.calls.hash",{"_index":1181,"title":{},"body":{"classes/CryptSpy.html":{}}}],["this.calls.hashwithhmac",{"_index":1179,"title":{},"body":{"classes/CryptSpy.html":{}}}],["this.calls.send",{"_index":1348,"title":{},"body":{"classes/EmailSpy.html":{}}}],["this.calls.transfertouserresources",{"_index":2153,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.cep",{"_index":668,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.cep.value",{"_index":647,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.cepgate.check(input.condominium.cep.value",{"_index":1070,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"interfaces/IProps-7.html":{}}}],["this.checkcookie(token",{"_index":2584,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["this.checktoken(parsedtoken",{"_index":2585,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["this.checktoken(token",{"_index":217,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["this.cnpj.value",{"_index":649,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.code.value",{"_index":1857,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.collectionsrefs.condominium.cep.doc(condominium.cep",{"_index":985,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["this.collectionsrefs.condominium.cnpj.doc",{"_index":982,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["this.collectionsrefs.condominium.itself.doc(id",{"_index":988,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["this.collectionsrefs.invite",{"_index":2274,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.invite.getinvitedoc(id",{"_index":2272,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.invite.getinvitedoc(inviteid",{"_index":2288,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.invite.itself",{"_index":2268,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.user",{"_index":2261,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.condominiumreluser",{"_index":2898,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.core",{"_index":2253,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.core.doc(input).get",{"_index":2865,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.core.doc(parseduser.id",{"_index":2900,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.core.doc(userid",{"_index":2291,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.user.cpfindex.doc",{"_index":2903,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.cpfindex.doc(user.cpf",{"_index":2290,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.user.emailindex.doc",{"_index":2901,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.emailindex.doc(user.email",{"_index":2289,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.comparator(this.value",{"_index":2669,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["this.condominiumid.value",{"_index":1830,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["this.condominiumrepo.create",{"_index":1071,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"interfaces/IProps-7.html":{}}}],["this.condominiums",{"_index":2098,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["this.condominiums.find((item",{"_index":2102,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["this.condominiums.push(input.condominium",{"_index":2106,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["this.content",{"_index":1573,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{}}}],["this.cookieadapter.validatesignedcookie",{"_index":2575,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["this.cpf.value",{"_index":2006,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.createcondominium.exec",{"_index":726,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["this.createdat",{"_index":650,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["this.createtoken.exec",{"_index":2745,"title":{},"body":{"controllers/UserController.html":{}}}],["this.createuser.exec",{"_index":2774,"title":{},"body":{"controllers/UserController.html":{}}}],["this.crypt",{"_index":1702,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["this.crypt.compare",{"_index":457,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{}}}],["this.crypt.hash(input.user.password.value",{"_index":1151,"title":{},"body":{"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-9.html":{}}}],["this.crypt.hashwithhmac",{"_index":509,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["this.cryptadapter.hashwithhmac",{"_index":1595,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["this.deleteuserservice.exec",{"_index":744,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["this.email.send",{"_index":1641,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["this.email.value",{"_index":1827,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["this.emailadapter.send",{"_index":1603,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["this.entity",{"_index":1357,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-4.html":{},"classes/InMemoryError.html":{}}}],["this.expiresat",{"_index":1831,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["this.find",{"_index":2830,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.find(tobesearched",{"_index":2665,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["this.firestore.instance",{"_index":977,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["this.firestore.instance.collection",{"_index":568,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.firestore.instance.collection('index/condominiums/cep",{"_index":571,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.firestore.instance.collection('index/condominiums/cnpj",{"_index":570,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.firestore.instance.collection('index/users/cpf",{"_index":583,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.firestore.instance.collection('index/users/email",{"_index":581,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.gencode(input.userid",{"_index":1640,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{}}}],["this.generateinvite",{"_index":1600,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["this.genhmacdata(input",{"_index":323,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["this.geninvite.exec",{"_index":728,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["this.geninviteservice.exec",{"_index":749,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["this.gentfa.exec",{"_index":2782,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getcondominiumreluserservice.exec",{"_index":2787,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getcontent(body",{"_index":463,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["this.httpadapter.call",{"_index":2066,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["this.httpcode",{"_index":57,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/IProps-3.html":{}}}],["this.id.equalto(input.id",{"_index":654,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.id.value",{"_index":652,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["this.init",{"_index":2563,"title":{},"body":{"injectables/RedisService.html":{}}}],["this.invite.itself.doc(id",{"_index":575,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.inviterepo.create",{"_index":1602,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-12.html":{}}}],["this.inviterepo.find",{"_index":1710,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["this.inviterepo.transfertouserresources",{"_index":1168,"title":{},"body":{"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{}}}],["this.invites",{"_index":2137,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.invites.find",{"_index":2142,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.invites.find((item",{"_index":2151,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.invites.findindex((item",{"_index":2155,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.invites.push(input.invite",{"_index":2150,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.jwtservice",{"_index":195,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["this.jwtservice.signasync(accessjwtbody",{"_index":1102,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["this.jwtservice.signasync(refreshjwtbody",{"_index":1109,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["this.logger",{"_index":1919,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.logger.error",{"_index":98,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["this.logger.info",{"_index":2400,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.mapkeybasedonlevel(input.invite.type.value",{"_index":1696,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["this.message",{"_index":59,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/InMemoryError.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["this.name",{"_index":55,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/InMemoryError.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["this.name.value",{"_index":646,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.num.value",{"_index":648,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.oldtfa.exec",{"_index":2792,"title":{},"body":{"controllers/UserController.html":{}}}],["this.otprepo.delete",{"_index":465,"title":{},"body":{"guards/CheckOTPGuard.html":{},"injectables/CreateUserService.html":{},"interfaces/IProps-9.html":{}}}],["this.otprepo.find",{"_index":454,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["this.otps.find",{"_index":2166,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["this.otps.findindex",{"_index":2174,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["this.otps.push",{"_index":2170,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["this.password.value",{"_index":2005,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.phonenumber.value",{"_index":2007,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.possibleerrors.find((item",{"_index":1242,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IRedisError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["this.prisma.$transaction",{"_index":2337,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.condominium.create",{"_index":832,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["this.prisma.condominium.findfirst",{"_index":836,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["this.prisma.condominiumreluser.create",{"_index":2340,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.condominiumreluser.findfirst",{"_index":2823,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.prisma.condominiumreluser.findmany",{"_index":2826,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.prisma.invite.create",{"_index":2332,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.invite.delete",{"_index":2338,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.invite.findfirst",{"_index":2333,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.user.create",{"_index":2339,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.user.delete",{"_index":2832,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.prisma.user.findfirst",{"_index":2820,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.processtokens(res",{"_index":2777,"title":{},"body":{"controllers/UserController.html":{}}}],["this.props",{"_index":636,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryContainer.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["this.props.apartmentnumber",{"_index":892,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.apartmentnumber.value",{"_index":893,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.block",{"_index":890,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.block.value",{"_index":891,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.cep",{"_index":666,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.cep.equalto(input.cep",{"_index":656,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.cnpj",{"_index":671,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.cnpj.equalto(input.cnpj",{"_index":658,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.code",{"_index":1861,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.props.code.equalto(input.code",{"_index":1860,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.props.condominiumid",{"_index":897,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["this.props.condominiumid.value",{"_index":894,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.cpf",{"_index":2020,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.createdat",{"_index":659,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["this.props.email",{"_index":1836,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["this.props.expiresat",{"_index":1838,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["this.props.level",{"_index":905,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.level.value",{"_index":889,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.name",{"_index":663,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.name.equalto(input.name",{"_index":655,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.num",{"_index":669,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.num.equalto(input.num",{"_index":657,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.password",{"_index":2018,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.phonenumber",{"_index":2022,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.ref",{"_index":1817,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["this.props.ttl",{"_index":1837,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{},"classes/OTP.html":{}}}],["this.props.type",{"_index":1839,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["this.props.updatedat",{"_index":661,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.userid",{"_index":908,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.props.userid.equalto(input.userid",{"_index":1859,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.props.userid.value",{"_index":895,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.redisservice.instance",{"_index":2489,"title":{},"body":{"injectables/OTPRedisService.html":{}}}],["this.ref",{"_index":1820,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["this.searchbyfield",{"_index":2872,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.searchbyid(input.key.value",{"_index":2870,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.setglobalfilters",{"_index":1958,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.setglobalinteceptors",{"_index":1956,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.setglobalpipes",{"_index":1957,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.status",{"_index":2537,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.tag",{"_index":1213,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/GatewayErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{}}}],["this.ttl",{"_index":1828,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{},"classes/OTP.html":{}}}],["this.type.value",{"_index":1829,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["this.untrackableerrors.find((item",{"_index":1652,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["this.updatedat",{"_index":651,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.userid.value",{"_index":1856,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.userrepo.create",{"_index":1155,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-9.html":{}}}],["this.userrepo.delete",{"_index":1293,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{}}}],["this.userrepo.find",{"_index":219,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["this.userrepo.getallcondominiumrelation",{"_index":1669,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-15.html":{}}}],["this.userrepo.getcondominiumrelation",{"_index":225,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["this.users",{"_index":2139,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["this.users.find",{"_index":2146,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["this.users.find((item",{"_index":2204,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.users.findindex((item",{"_index":2220,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.users.push",{"_index":2201,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.validate",{"_index":1712,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["this.validate(otp",{"_index":464,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["this.validate(password",{"_index":483,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["this.validate(user",{"_index":522,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["this.validatebody(body",{"_index":540,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["this.value",{"_index":2666,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["this.value.size",{"_index":2667,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["throttle",{"_index":2735,"title":{},"body":{"controllers/UserController.html":{}}}],["throttler",{"_index":2606,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["throttlererrorfilter",{"_index":1892,"title":{"classes/ThrottlerErrorFilter.html":{}},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["throttlererrorfilter(this.logger",{"_index":1947,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["throttlerexception",{"_index":2608,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["throttlerguard",{"_index":1738,"title":{},"body":{"modules/HttpModule.html":{}}}],["throttlermodule",{"_index":1739,"title":{},"body":{"modules/HttpModule.html":{}}}],["throttlermodule.forroot",{"_index":1748,"title":{},"body":{"modules/HttpModule.html":{}}}],["throw",{"_index":199,"title":{},"body":{"guards/AdminJwt.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-11.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/OTPRedisService.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["throwtfa",{"_index":283,"title":{},"body":{"classes/Auth.html":{}}}],["throwtfa(user",{"_index":287,"title":{},"body":{"classes/Auth.html":{}}}],["time",{"_index":3059,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":767,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{}}}],["tinputotpprops",{"_index":1853,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{},"miscellaneous/typealiases.html":{}}}],["tinputpropscondominium",{"_index":594,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/typealiases.html":{}}}],["tinputpropsuser",{"_index":1998,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["tinviteinobject",{"_index":1769,"title":{},"body":{"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"miscellaneous/typealiases.html":{}}}],["tipo",{"_index":1966,"title":{},"body":{"interfaces/IProps-1.html":{},"guards/RefreshTokenGuard.html":{},"miscellaneous/functions.html":{}}}],["tobeiterated",{"_index":2648,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["tobeiterated.values",{"_index":2660,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["tobesearched",{"_index":2646,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["toclass",{"_index":777,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["toclass(input",{"_index":779,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["toclass(undefined",{"_index":925,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{}}}],["toda",{"_index":3259,"title":{},"body":{"index.html":{}}}],["todas",{"_index":3156,"title":{},"body":{"index.html":{}}}],["todos",{"_index":3111,"title":{},"body":{"index.html":{}}}],["token",{"_index":179,"title":{},"body":{"guards/AdminJwt.html":{},"classes/Auth.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-8.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["token=')[1",{"_index":2582,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["tokendata",{"_index":193,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["tokens",{"_index":2566,"title":{},"body":{"guards/RefreshTokenGuard.html":{},"controllers/UserController.html":{}}}],["tokens')@httpcode(200",{"_index":2728,"title":{},"body":{"controllers/UserController.html":{}}}],["tokentype",{"_index":1088,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-8.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.accesstoken",{"_index":1101,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["tokentype.refreshtoken",{"_index":1108,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{}}}],["tokentypes",{"_index":186,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["toobject",{"_index":778,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/InviteMapper.html":{},"classes/OTPMapper.html":{},"classes/UserMapper.html":{}}}],["toobject(input",{"_index":785,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/OTPMapper.html":{},"classes/UserMapper.html":{}}}],["toomanyentities",{"_index":1191,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["toprisma",{"_index":796,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["toprisma(input",{"_index":800,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["toredis",{"_index":2476,"title":{},"body":{"classes/OTPRedisMapper.html":{}}}],["toredis(input",{"_index":1764,"title":{},"body":{"interfaces/IClassToRawObject.html":{},"classes/OTPRedisMapper.html":{}}}],["tovalidate",{"_index":399,"title":{},"body":{"classes/CPF.html":{}}}],["toverride",{"_index":2991,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["tranforma",{"_index":1761,"title":{},"body":{"interfaces/IClassToRawObject.html":{},"classes/OTPRedisMapper.html":{}}}],["transaction",{"_index":2251,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["transaction.create(inviteref",{"_index":2273,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["transaction.delete(condominiumreluser",{"_index":2908,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["transaction.delete(refs.core",{"_index":2909,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["transaction.delete(refs.cpfindex",{"_index":2911,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["transaction.delete(refs.emailindex",{"_index":2910,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["transaction.get(condominiumreluserquery).then((res",{"_index":2265,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["transaction.get(getuserquery).then((res",{"_index":2256,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["transferir",{"_index":2347,"title":{},"body":{"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["transfertouserresources",{"_index":2120,"title":{"interfaces/transferToUserResources.html":{}},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["transfertouserresources(input",{"_index":2133,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{}}}],["transform",{"_index":3334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transforma",{"_index":761,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{}}}],["transformer",{"_index":444,"title":{},"body":{"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"dependencies.html":{}}}],["transport",{"_index":2436,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["transport.sendmail",{"_index":2443,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["treplace",{"_index":919,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"miscellaneous/typealiases.html":{}}}],["trigger",{"_index":2871,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["troque",{"_index":3194,"title":{},"body":{"index.html":{}}}],["true",{"_index":223,"title":{},"body":{"guards/AdminJwt.html":{},"modules/AppModule.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRepo.html":{},"injectables/FirestoreService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-13.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":318,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["ts",{"_index":3331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tserviceexecinput",{"_index":2038,"title":{},"body":{"classes/IService.html":{},"miscellaneous/typealiases.html":{}}}],["tserviceexecreturn",{"_index":2040,"title":{},"body":{"classes/IService.html":{},"miscellaneous/typealiases.html":{}}}],["ttl",{"_index":450,"title":{},"body":{"guards/CheckOTPGuard.html":{},"classes/FirestoreGetInviteDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"modules/HttpModule.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"controllers/UserController.html":{}}}],["tudo",{"_index":3213,"title":{},"body":{"index.html":{}}}],["tuserclasstoobject",{"_index":1804,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IUserInObject.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"miscellaneous/typealiases.html":{}}}],["tvalidatesignedcookiereturn",{"_index":1002,"title":{},"body":{"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IValidateSignedCookie.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRedisError.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"injectables/OTPRedisService.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisErrorFilter.html":{},"classes/RedisLogicError.html":{},"injectables/RedisService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3311,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1708,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["typescript",{"_index":2279,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["t|j)s",{"_index":3346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u",{"_index":3285,"title":{},"body":{"index.html":{}}}],["uf",{"_index":415,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["um",{"_index":160,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService-1.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIndexProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"classes/InviteMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"classes/OTPMapper.html":{},"injectables/OTPRedisService.html":{},"guards/SuperAdminJwt.html":{},"classes/UUIDGroup.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["uma",{"_index":787,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IOTPInObject.html":{},"classes/IService.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"classes/LaunchOTPDTO.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["unauthorized",{"_index":1994,"title":{},"body":{"interfaces/IProps-6.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":42,"title":{},"body":{"classes/AdapterError.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService-1.html":{},"classes/DeleteUserDTO.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-3.html":{},"interfaces/IValidate.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"injectables/OTPRedisService.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["undefined})@isoptional",{"_index":1117,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["undefined})@maxlength(undefined.maxlength",{"_index":1017,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["undefined})@min(undefined.minlength",{"_index":1028,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["undefined})@minlength(undefined.minlength",{"_index":1020,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["unit",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["unitários",{"_index":3276,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":180,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateTokenService.html":{},"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/ILoggerDefaultProps.html":{},"guards/JwtGuard.html":{},"classes/LoggerAdapter.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["unparsedcondominium",{"_index":835,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["unparsedcondominiumrelgroup",{"_index":2825,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["unparsedcondominiumrelgroup.map((item",{"_index":2828,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["unparsedcondominiumreluser",{"_index":2822,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["unparseddata",{"_index":2884,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["unparsedinvite",{"_index":2302,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{}}}],["unparseduser",{"_index":2819,"title":{},"body":{"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["untrackableerrors",{"_index":1646,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["unused",{"_index":2281,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["up",{"_index":3214,"title":{},"body":{"index.html":{}}}],["upcom",{"_index":3219,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":592,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/variables.html":{}}}],["updatedat(input",{"_index":911,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["updateday",{"_index":635,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1429,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["usada",{"_index":3149,"title":{},"body":{"index.html":{}}}],["usado",{"_index":20,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"classes/OTPMapper.html":{},"classes/PrismaErrorFilter.html":{},"classes/RedisLogicError.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["usamos",{"_index":3042,"title":{},"body":{"index.html":{}}}],["usando",{"_index":377,"title":{},"body":{"classes/CPF.html":{},"injectables/LogInterceptor.html":{},"index.html":{}}}],["usar",{"_index":955,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/Entity.html":{},"classes/InviteRepo.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["use",{"_index":25,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["useclass",{"_index":145,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{}}}],["useguards",{"_index":697,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["useguards(adminjwt",{"_index":747,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["useguards(checkotpguard",{"_index":2793,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(checkotpguard)@post('/old/login')@httpcode(200",{"_index":2722,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(checkpasswordguard",{"_index":2778,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(checkpasswordguard)@post('/old/launch",{"_index":2716,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(checkpasswordguard)@post('launch",{"_index":2712,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(checktfacodeguard",{"_index":2796,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(checktfacodeguard)@post('login')@httpcode(200",{"_index":2719,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(hmacinviteguard",{"_index":2758,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(hmacinviteguard)@post('accept",{"_index":2703,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":2783,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete()@httpcode(204",{"_index":2706,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get()@httpcode(200",{"_index":2709,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(refreshtokenguard",{"_index":2798,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(refreshtokenguard)@get('get",{"_index":2727,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(superadminjwt",{"_index":736,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["user",{"_index":218,"title":{"classes/User.html":{}},"body":{"guards/AdminJwt.html":{},"classes/Auth.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CollectionsRefService.html":{},"controllers/CondominiumController.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"classes/Entity.html":{},"injectables/GenTFAService.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/NodemailerAdapter.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["user')@useguards(adminjwt)@httpcode(204",{"_index":694,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["user')@useguards(superadminjwt)@httpcode(204",{"_index":691,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["user.createdat",{"_index":1098,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["user.email",{"_index":506,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"controllers/UserController.html":{}}}],["user.email.value",{"_index":1096,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["user.id",{"_index":227,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateTokenService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{}}}],["user.id.value",{"_index":447,"title":{},"body":{"guards/CheckOTPGuard.html":{},"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{}}}],["user.name.value",{"_index":1097,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["user.password",{"_index":1153,"title":{},"body":{"injectables/CreateUserService.html":{},"injectables/CreateUserService-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-9.html":{}}}],["user.password.value",{"_index":484,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["user.phonenumber.value",{"_index":1100,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["user.updatedat",{"_index":1099,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["userarr",{"_index":1794,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["userasobject",{"_index":2788,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":1726,"title":{"controllers/UserController.html":{}},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["userdtorules",{"_index":373,"title":{},"body":{"classes/CPF.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IPropsUser.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["userdtorules.cpf.maxlength",{"_index":1137,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userdtorules.cpf.minlength",{"_index":1135,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userdtorules.email.maxlength",{"_index":1039,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["userdtorules.name.maxlength",{"_index":1127,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/Name.html":{}}}],["userdtorules.name.minlength",{"_index":1129,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userdtorules.password.maxlength",{"_index":1131,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{},"classes/Password.html":{}}}],["userdtorules.password.minlength",{"_index":1133,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["userdtorules.phonenumber.maxlength",{"_index":1143,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/PhoneNumber.html":{}}}],["userdtorules.phonenumber.minlength",{"_index":1145,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userfactory",{"_index":2988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userfactory(input",{"_index":3007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userfirestoremapper",{"_index":1806,"title":{"classes/UserFirestoreMapper.html":{}},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{},"injectables/UsersFirestore.html":{}}}],["userfirestoremapper.fromfirebasetoclass(parseduser",{"_index":2879,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["userfirestoremapper.fromfirebasetoobject(semiparseduser",{"_index":2896,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["userid",{"_index":226,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService-1.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"injectables/InviteFirestore.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRedisMapper.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{},"miscellaneous/variables.html":{}}}],["userid(input",{"_index":907,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["userid.value",{"_index":1106,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{}}}],["usermapper",{"_index":2082,"title":{"classes/UserMapper.html":{}},"body":{"interfaces/IUserInObject.html":{},"injectables/InviteFirestore.html":{},"controllers/UserController.html":{},"classes/UserMapper.html":{}}}],["usermapper.toclass",{"_index":2773,"title":{},"body":{"controllers/UserController.html":{}}}],["usermapper.toobject(input.user",{"_index":2276,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["usermapper.toobject(user",{"_index":2789,"title":{},"body":{"controllers/UserController.html":{}}}],["userprisma",{"_index":2807,"title":{},"body":{"classes/UserPrismaMapper.html":{}}}],["userprismamapper",{"_index":2329,"title":{"classes/UserPrismaMapper.html":{}},"body":{"injectables/InvitePrismaRepo.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{}}}],["userprismamapper.toclass(unparseduser",{"_index":2821,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["userprismamapper.toprisma(input.user",{"_index":2335,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["userprismarepo",{"_index":2525,"title":{"injectables/UserPrismaRepo.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/UserPrismaRepo.html":{}}}],["userrepo",{"_index":171,"title":{"classes/UserRepo.html":{}},"body":{"guards/AdminJwt.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"modules/FirestoreModule.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-9.html":{},"classes/InMemoryUser.html":{},"guards/JwtGuard.html":{},"modules/PrismaModule.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"overview.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces",{"_index":2196,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.create",{"_index":2181,"title":{},"body":{"classes/InMemoryUser.html":{},"classes/UserRepo.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.getallcondominiumrelation",{"_index":2191,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.getcondominiumrelation",{"_index":2194,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.remove",{"_index":2183,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.safesearch",{"_index":2185,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.search",{"_index":2187,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["users",{"_index":2119,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["usersfirestore",{"_index":1511,"title":{"injectables/UsersFirestore.html":{}},"body":{"modules/FirestoreModule.html":{},"injectables/UsersFirestore.html":{}}}],["uso",{"_index":2048,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["usuário",{"_index":161,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService-1.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-15.html":{},"interfaces/IUserInObject.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"guards/SuperAdminJwt.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["usuários",{"_index":1276,"title":{},"body":{"classes/DeleteUserDTO.html":{},"classes/InviteRepo.html":{},"controllers/UserController.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["utc",{"_index":1273,"title":{},"body":{"classes/DateFormats.html":{}}}],["util",{"_index":2639,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["utilizada",{"_index":950,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["utilizado",{"_index":2426,"title":{},"body":{"classes/Name.html":{},"index.html":{}}}],["utilizando",{"_index":1289,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{}}}],["utilizar",{"_index":2050,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["utilização",{"_index":804,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["uuid",{"_index":191,"title":{"classes/UUID.html":{}},"body":{"guards/AdminJwt.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRepo.html":{},"injectables/CreateTokenService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-17.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserDataCore.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryUser.html":{},"classes/Invite.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/OTP.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["uuid(condominiumid",{"_index":228,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["uuid(id",{"_index":644,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["uuid(input.condominiumid",{"_index":1825,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"classes/Invite.html":{}}}],["uuid(input.userid",{"_index":1855,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["uuid(tokendata.sub",{"_index":221,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["uuid(uuid",{"_index":2631,"title":{},"body":{"classes/UUID.html":{}}}],["uuid.check(item",{"_index":2654,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["uuid.genv4",{"_index":645,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["uuidgroup",{"_index":2632,"title":{"classes/UUIDGroup.html":{}},"body":{"classes/UUIDGroup.html":{}}}],["uuids",{"_index":2656,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["vai",{"_index":3247,"title":{},"body":{"index.html":{}}}],["valida",{"_index":1460,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["validade",{"_index":1683,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["validado",{"_index":1462,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["validar",{"_index":158,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/UUIDGroup.html":{}}}],["validate",{"_index":284,"title":{},"body":{"classes/Auth.html":{},"guards/CheckOTPGuard.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-1.html":{}}}],["validate(data.body",{"_index":1970,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["validate(input",{"_index":1690,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["validate(otp",{"_index":434,"title":{},"body":{"guards/CheckOTPGuard.html":{}}}],["validate(password",{"_index":473,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["validate(token",{"_index":289,"title":{},"body":{"classes/Auth.html":{}}}],["validate(user",{"_index":496,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["validatebody",{"_index":525,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{}}}],["validatebody(input",{"_index":528,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["validatesignedcookie",{"_index":998,"title":{},"body":{"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IValidateSignedCookie.html":{}}}],["validatesignedcookie(data",{"_index":999,"title":{},"body":{"classes/CookieAdapter.html":{}}}],["validatesignedcookie(input",{"_index":1005,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["validationpipe",{"_index":1883,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["validationres",{"_index":521,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["validator",{"_index":392,"title":{},"body":{"classes/CPF.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/IBodyProps.html":{},"interfaces/IProps-1.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["validação",{"_index":1964,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["validos",{"_index":348,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{}}}],["valor",{"_index":340,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CondominiumRepo.html":{},"classes/Email.html":{},"classes/Entity.html":{},"classes/InviteRepo.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["valores",{"_index":347,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["value",{"_index":236,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGatewaySpy.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IProps-4.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RedisErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valueobject",{"_index":232,"title":{"classes/ValueObject.html":{}},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/ValueObject.html":{}}}],["valueobject.build",{"_index":882,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.build(apartmentnumber",{"_index":2775,"title":{},"body":{"controllers/UserController.html":{}}}],["valueobject.build(block",{"_index":885,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"controllers/UserController.html":{}}}],["valueobject.build(level",{"_index":877,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.build(uuid",{"_index":875,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["valueobject.compare",{"_index":896,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.compare(this._id",{"_index":2008,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.cpf",{"_index":2011,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.email",{"_index":2016,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.name",{"_index":2015,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.password",{"_index":2013,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.phonenumber",{"_index":2009,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.props.block",{"_index":899,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.compare(this.props.level",{"_index":901,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.compare(this.props.userid",{"_index":902,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["values",{"_index":1402,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["vamos",{"_index":3211,"title":{},"body":{"index.html":{}}}],["variables",{"_index":3318,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variável",{"_index":3148,"title":{},"body":{"index.html":{}}}],["vars",{"_index":2282,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["ver",{"_index":717,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["verbosememoryleak",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["verificadores",{"_index":391,"title":{},"body":{"classes/CPF.html":{}}}],["verifique",{"_index":1547,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["verifyasync(token",{"_index":196,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["vez",{"_index":3260,"title":{},"body":{"index.html":{}}}],["viabilizando",{"_index":3098,"title":{},"body":{"index.html":{}}}],["viacepgateway",{"_index":1579,"title":{"injectables/ViacepGateway.html":{}},"body":{"modules/GatewayModule.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["vida",{"_index":3021,"title":{},"body":{"index.html":{}}}],["vinculado",{"_index":1235,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["vindo",{"_index":1607,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenOldTFASevice.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"guards/JwtGuard.html":{}}}],["vindos",{"_index":760,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DatabaseCustomError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IClassToRawObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-18.html":{},"interfaces/IProps-19.html":{},"interfaces/IProps-6.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPRedisMapper.html":{},"classes/RedisLogicError.html":{},"classes/ServiceErrors.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["virtual",{"_index":963,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["virtualização",{"_index":3088,"title":{},"body":{"index.html":{}}}],["visualizar",{"_index":3195,"title":{},"body":{"index.html":{}}}],["vo",{"_index":625,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-17.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["voc",{"_index":1287,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-11.html":{},"classes/NotFoundFilter.html":{},"index.html":{}}}],["voenum",{"_index":1382,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["void",{"_index":608,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/IService.html":{},"classes/InMemoryContainer.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["vontade",{"_index":3289,"title":{},"body":{"index.html":{}}}],["válido",{"_index":1036,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchOTPDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["válido'})@maxlength(320",{"_index":2361,"title":{},"body":{"classes/LaunchOTPDTO.html":{}}}],["válido'})@maxlength(undefined.maxlength",{"_index":1023,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["válidos",{"_index":1035,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["válidos'})@isemail",{"_index":1022,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["válidos'})@maxlength(undefined.maxlength",{"_index":1019,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["válidos'})@minlength(undefined.minlength",{"_index":1016,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["warn",{"_index":1301,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["warn(`alert",{"_index":1453,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["warn(`warn",{"_index":1452,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["warn(input",{"_index":1318,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["wasfinded",{"_index":2658,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["where('condominiumid",{"_index":2269,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["where('email",{"_index":2254,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["wildcard",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["windows",{"_index":3175,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":1196,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["wronginputlevel",{"_index":1195,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-18.html":{},"miscellaneous/enumerations.html":{}}}],["wrongserviceusage",{"_index":1993,"title":{},"body":{"interfaces/IProps-6.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["xito",{"_index":3243,"title":{},"body":{"index.html":{}}}],["yes",{"_index":597,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/IService.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":1464,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["z.instanceof(timestamp",{"_index":1473,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["z.object",{"_index":1467,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["z.optional",{"_index":1479,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["z.string().email",{"_index":1492,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["z.string().length(condominiumdtorules.cep.minlength",{"_index":1471,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["z.string().length(condominiumdtorules.cnpj.minlength",{"_index":1472,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["z.string().length(userdtorules.cpf.minlength",{"_index":1503,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["z.string().max(condominiumreluserdtorules.block.maxlength",{"_index":1480,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["z.string().uuid",{"_index":1468,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["zod",{"_index":1465,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"dependencies.html":{}}}],["zoom",{"_index":126,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules/RedisModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdapterError.html":{"url":"classes/AdapterError.html","title":"class - AdapterError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdapterError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/adapter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                httpCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/errors/adapter.ts:7\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de adaptadores, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        httpCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/errors/adapter.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        interface IProps {\n\tmessage: string;\n\thttpCode?: number;\n}\n\nexport class AdapterError extends Error {\n\treadonly httpCode: number | undefined;\n\n\t/**\n\t * Erro customizado usado na camada de adaptadores, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input- Deve conter a mensagem do erro e o código http\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Adapter Error';\n\t\tthis.httpCode = input.httpCode;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdapterErrorFilter.html":{"url":"classes/AdapterErrorFilter.html","title":"class - AdapterErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdapterErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/adapter.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Adapters\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/adapter.filter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: AdapterError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/adapter.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            AdapterError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { AdapterError } from '@registry:app/errors/adapter';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros dos Adapters */\n@Catch(AdapterError)\nexport class AdapterErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(exception: AdapterError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.adapter,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdaptersModule.html":{"url":"modules/AdaptersModule.html","title":"module - AdaptersModule","body":"\n                   \n\n\n\n\n    Modules\n    AdaptersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdaptersModule\n\n\n\ncluster_AdaptersModule_exports\n\n\n\n\nCookieAdapter \n\nCookieAdapter \n\n\n\nCryptAdapter \n\nCryptAdapter \n\n\n\nEmailAdapter \n\nEmailAdapter \n\n\n\nHttpAdapter \n\nHttpAdapter \n\n\n\nLoggerAdapter \n\nLoggerAdapter \n\n\n\nAdaptersModule\n\nAdaptersModule\n\nCookieAdapter  -->\n\nAdaptersModule->CookieAdapter \n\n\n\nCryptAdapter  -->\n\nAdaptersModule->CryptAdapter \n\n\n\nEmailAdapter  -->\n\nAdaptersModule->EmailAdapter \n\n\n\nHttpAdapter  -->\n\nAdaptersModule->HttpAdapter \n\n\n\nLoggerAdapter  -->\n\nAdaptersModule->LoggerAdapter \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/app/adapters/adapter.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CookieAdapter\n                        \n                        \n                            CryptAdapter\n                        \n                        \n                            EmailAdapter\n                        \n                        \n                            HttpAdapter\n                        \n                        \n                            LoggerAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { EmailAdapter } from './email';\nimport { NodemailerAdapter } from './nodemailer/nodemailerAdapter';\nimport { CryptAdapter } from './crypt';\nimport { BcryptAdapter } from './bcrypt/bcryptAdapter';\nimport { HttpAdapter } from './http';\nimport { FetchAdapter } from './fetch/fetchAdapter';\nimport { LoggerAdapter } from './logger';\nimport { CookieAdapter } from './cookie';\nimport { CookieParserAdapter } from './cookie-parser/cookieParserAdapter';\nimport { FirebaseLoggerAdapter } from './firebase-logger';\n\n@Global()\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: EmailAdapter,\n\t\t\tuseClass: NodemailerAdapter,\n\t\t},\n\t\t{\n\t\t\tprovide: CryptAdapter,\n\t\t\tuseClass: BcryptAdapter,\n\t\t},\n\t\t{\n\t\t\tprovide: HttpAdapter,\n\t\t\tuseClass: FetchAdapter,\n\t\t},\n\t\t{\n\t\t\tprovide: LoggerAdapter,\n\t\t\tuseClass: FirebaseLoggerAdapter,\n\t\t},\n\t\t{\n\t\t\tprovide: CookieAdapter,\n\t\t\tuseClass: CookieParserAdapter,\n\t\t},\n\t],\n\texports: [\n\t\tEmailAdapter,\n\t\tCryptAdapter,\n\t\tHttpAdapter,\n\t\tLoggerAdapter,\n\t\tCookieAdapter,\n\t],\n})\nexport class AdaptersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/controllers/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('admin')\nexport class AdminController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminJwt.html":{"url":"guards/AdminJwt.html","title":"guard - AdminJwt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminJwt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/admin-jwt.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar se um usuário tem permissões de um funcionário\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/admin-jwt.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/admin-jwt.guard.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/admin-jwt.guard.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n\tBadRequestException,\n\tCanActivate,\n\tExecutionContext,\n\tHttpStatus,\n\tInjectable,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IAccessTokenBody } from '../tokenTypes';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\nimport { UUID } from '@registry:app/entities/VO';\n\n/** Usado para validar se um usuário tem permissões de um funcionário */\n@Injectable()\nexport class AdminJwt implements CanActivate {\n\tconstructor(\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async checkToken(token: string) {\n\t\tconst tokenData = await this.jwtService\n\t\t\t.verifyAsync(token, {\n\t\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({ message: 'JWT inválido' });\n\t\t\t});\n\n\t\treturn tokenData;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\t\tconst rawToken = req?.headers?.authorization;\n\n\t\tconst condominiumId = req.params?.condominiumId;\n\t\tif (!condominiumId)\n\t\t\tthrow new BadRequestException({\n\t\t\t\tstatusCode: HttpStatus.BAD_REQUEST,\n\t\t\t\terror: 'Bad Request',\n\t\t\t\tmessage: 'Condomínio não especificado',\n\t\t\t});\n\n\t\tconst token = rawToken?.split(' ')[1];\n\t\tif (!token) throw new GuardErrors({ message: 'Token não encontrado' });\n\n\t\tconst tokenData = (await this.checkToken(token)) as IAccessTokenBody;\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new UUID(tokenData.sub),\n\t\t\tsafeSearch: true,\n\t\t});\n\t\tconst condominiumRelUser = await this.userRepo.getCondominiumRelation({\n\t\t\tuserId: user.id,\n\t\t\tcondominiumId: new UUID(condominiumId),\n\t\t});\n\n\t\tif (!condominiumRelUser || condominiumRelUser.level.value \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApartmentNumber.html":{"url":"classes/ApartmentNumber.html","title":"class - ApartmentNumber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApartmentNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/apartmentNumber/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/apartmentNumber/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nNúmero do apartamento que esta entre 2147483647 e 0\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: ApartmentNumber)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/apartmentNumber/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ApartmentNumber\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/apartmentNumber/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class ApartmentNumber implements ValueObject {\n\t/**\n\t * @param _value - Número do apartamento que esta entre 2147483647 e 0\n\t **/\n\tconstructor(private readonly _value: number) {\n\t\tif (\n\t\t\t_value > condominiumRelUserDTORules.apartmentNumber.maxLength ||\n\t\t\t_value \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHttpModule\n\nHttpModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHttpModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HttpModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpModule } from './infra/http/http.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n\timports: [\n\t\tHttpModule,\n\t\tEventEmitterModule.forRoot({\n\t\t\twildcard: false,\n\t\t\tdelimiter: '.',\n\t\t\tnewListener: false,\n\t\t\tremoveListener: false,\n\t\t\tmaxListeners: 10,\n\t\t\tverboseMemoryLeak: true,\n\t\t\tignoreErrors: false,\n\t\t}),\n\t],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/gateways/auth.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                genToken\n                            \n                            \n                                    Abstract\n                                throwTFA\n                            \n                            \n                                    Abstract\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        genToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    genToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/gateways/auth.gateway.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        throwTFA\n                        \n                    \n                \n            \n            \n                \n                        \n                    throwTFA(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/gateways/auth.gateway.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/gateways/auth.gateway.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@registry:app/entities/user';\n\nexport abstract class Auth {\n\tabstract genToken(user: User): Promise;\n\tabstract throwTFA(user: User): Promise;\n\tabstract validate(token: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BcryptAdapter.html":{"url":"classes/BcryptAdapter.html","title":"class - BcryptAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BcryptAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/bcrypt/bcryptAdapter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CryptAdapter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                genHmacData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                            \n                                    Async\n                                hashWithHmac\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        genHmacData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/adapters/bcrypt/bcryptAdapter.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(input: ICryptCompare)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CryptAdapter\n\n                        \n                    \n                    \n                        \n                                Defined in         CryptAdapter:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptCompare\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CryptAdapter\n\n                        \n                    \n                    \n                        \n                                Defined in         CryptAdapter:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashWithHmac\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashWithHmac(input: ICryptHmac)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CryptAdapter\n\n                        \n                    \n                    \n                        \n                                Defined in         CryptAdapter:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptHmac\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { createHmac } from 'node:crypto';\nimport { CryptAdapter, ICryptCompare, ICryptHmac } from '../crypt';\nimport * as bcrypt from 'bcrypt';\n\nexport class BcryptAdapter extends CryptAdapter {\n\tprivate genHmacData = (input: ICryptHmac): Promise =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\tconst hmac = createHmac('sha256', input.key);\n\t\t\thmac.update(input.data);\n\n\t\t\ttry {\n\t\t\t\tconst hash = hmac.digest('hex');\n\t\t\t\tresolve(hash);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\n\tasync hashWithHmac(input: ICryptHmac): Promise {\n\t\tconst hash = await this.genHmacData(input);\n\t\treturn hash;\n\t}\n\n\tasync hash(data: string): Promise {\n\t\treturn await bcrypt.hash(data, 10);\n\t}\n\n\tasync compare(input: ICryptCompare): Promise {\n\t\treturn await bcrypt.compare(input.data, input.hashedData);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Block.html":{"url":"classes/Block.html","title":"class - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/block/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/block/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nNome do block que deve estar entre 6 e 0 caracteres\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Block)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/block/index.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Block\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/block/index.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { ValueObject, EntitiesEnum } from '@registry:app/entities/entities';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class Block implements ValueObject {\n\t/**\n\t * @param _value - Nome do block que deve estar entre 6 e 0 caracteres\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tif (_value.length > condominiumRelUserDTORules.block.maxLength)\n\t\t\tthrow new EntitieError({\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\tmessage: 'Valor incorreto de Block',\n\t\t\t});\n\t}\n\n\tpublic equalTo(input: Block) {\n\t\treturn input.value === this._value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CEP.html":{"url":"classes/CEP.html","title":"class - CEP","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CEP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/condominium/CEP/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/condominium/CEP/index.ts:5\n                            \n                        \n\n                \n                    \n                            Deve conter valores validos de um CEP, formatados ou não\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nCEP em questão\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: CEP)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/condominium/CEP/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CEP\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/condominium/CEP/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\n\nexport class CEP implements ValueObject {\n\t/**\n\t * Deve conter valores validos de um CEP, formatados ou não\n\t * @param _value - CEP em questão\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tthis._value = _value.replace(/[-]/g, '');\n\n\t\tif (this._value.length !== condominiumDTORules.CEP.minLength)\n\t\t\tthrow new EntitieError({\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\tmessage: 'Valor incorreto de CEP',\n\t\t\t});\n\t}\n\n\tpublic equalTo(input: CEP) {\n\t\treturn input.value === this._value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CNPJ.html":{"url":"classes/CNPJ.html","title":"class - CNPJ","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CNPJ\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/condominium/CNPJ/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/condominium/CNPJ/index.ts:5\n                            \n                        \n\n                \n                    \n                            Deve conter valores validos de um CNPJ, formatados ou não\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nCNPJ em questão\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: CNPJ)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/condominium/CNPJ/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CNPJ\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/condominium/CNPJ/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\n\nexport class CNPJ implements ValueObject {\n\t/**\n\t * Deve conter valores validos de um CNPJ, formatados ou não\n\t * @param _value - CNPJ em questão\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tthis._value = _value.replaceAll(/[./-]/g, '');\n\n\t\tif (this._value.length !== condominiumDTORules.CNPJ.minLength)\n\t\t\tthrow new EntitieError({\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\tmessage: 'Valor incorreto de CNPJ',\n\t\t\t});\n\t}\n\n\tpublic equalTo(input: CNPJ) {\n\t\treturn input.value === this._value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CPF.html":{"url":"classes/CPF.html","title":"class - CPF","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CPF\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/CPF/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/CPF/index.ts:5\n                            \n                        \n\n                \n                    \n                            Deve conter valores validos de CPF, formatados ou não\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nCPF em questão\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: CPF)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/CPF/index.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CPF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/CPF/index.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { ValueObject, EntitiesEnum } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class CPF implements ValueObject {\n\t/**\n\t * Deve conter valores validos de CPF, formatados ou não\n\t * @param _value - CPF em questão\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tthis._value = _value.replace(/[.-]/g, '');\n\n\t\t/*\n\t\t * Função criada para validar CPFs usando o\n\t\t * algoritmo de módulo 11. Material abaixo caso tenham interesse:\n\t\t * https://www.youtube.com/watch?v=15Bw0duulMQ&themeRefresh=1\n\t\t **/\n\n\t\t// Pegando os últimos dois digitos (digitos verificadores)\n\t\tconst validator = this._value.slice(\n\t\t\tthis._value.length - 2,\n\t\t\tthis._value.length,\n\t\t);\n\t\t// Pegando os números do corpo do CPF\n\t\tlet body = this._value.slice(0, -2);\n\n\t\tlet toValidate: string = '';\n\t\tfor (let loop = 0; loop  prev + current,\n\t\t\t);\n\t\t\tlet result = resultOfNumWithWeights % 11;\n\n\t\t\tresult \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CepGateway.html":{"url":"classes/CepGateway.html","title":"class - CepGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CepGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/gateways/CEP.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/gateways/CEP.gateway.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface ICheckCep {\n\tcep: string;\n\tstreet_address: string;\n\tcomplement: string;\n\tneighborhood: string;\n\tcity: string;\n\tuf: string;\n}\n\nexport abstract class CepGateway {\n\tabstract check(input: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CepGatewaySpy.html":{"url":"classes/CepGatewaySpy.html","title":"class - CepGatewaySpy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CepGatewaySpy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/gateways/CEP.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CepGateway\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcheck: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/gateways/CEP.gateway.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/gateways/CEP.gateway.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CepGateway, ICheckCep } from '@registry:app/gateways/CEP.gateway';\n\nexport class CepGatewaySpy implements CepGateway {\n\tcalls = {\n\t\tcheck: 0,\n\t};\n\n\tasync check(): Promise {\n\t\tthis.calls.check = this.calls.check + 1;\n\t\treturn {\n\t\t\tcity: 'any',\n\t\t\tstreet_address: 'any',\n\t\t\tcomplement: 'any',\n\t\t\tneighborhood: 'any',\n\t\t\tcep: 'any',\n\t\t\tuf: 'any',\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckOTPGuard.html":{"url":"guards/CheckOTPGuard.html","title":"guard - CheckOTPGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckOTPGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/checkOTP.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                getContent\n                            \n                            \n                                    Private\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(otpRepo: OTPRepo, userRepo: UserRepo, crypt: CryptAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/checkOTP.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        otpRepo\n                                                  \n                                                        \n                                                                        OTPRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkOTP.guard.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    getContent(body: LaunchOTPDTO, req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkOTP.guard.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            LaunchOTPDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(otp: OTP, hash: OTP)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkOTP.guard.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otp\n                                            \n                                                            OTP\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            OTP\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { CryptAdapter } from \"@registry:app/adapters/crypt\";\nimport { OTP } from \"@registry:app/entities/OTP\";\nimport { Email } from \"@registry:app/entities/VO\";\nimport { GuardErrors } from \"@registry:app/errors/guard\";\nimport { OTPRepo } from \"@registry:app/repositories/otp\";\nimport { UserRepo } from \"@registry:app/repositories/user\";\nimport { LaunchOTPDTO } from \"@registry:infra/http/DTO/launchOTP.DTO\";\nimport { checkClassValidatorErrors } from \"@registry:utils/convertValidatorErr\";\nimport { plainToClass } from \"class-transformer\";\nimport { Request } from \"express\"\n\n@Injectable()\nexport class CheckOTPGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly otpRepo: OTPRepo,\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tprivate async getContent(body: LaunchOTPDTO, req: Request) {\n\t\tconst email = new Email(body.email);\n\t\tconst user = req?.inMemoryData?.user ?? await this.userRepo.find({ \n\t\t\tkey: email, safeSearch: true \n\t\t});\n\n\t\tconst otp = new OTP({\n\t\t\tuserId: user.id.value,\n\t\t\tcode: body.OTP,\n\t\t\tttl: 1000 * 60 * 2\n\t\t});\n\t\tconst searchedOTP = await this.otpRepo.find({ email });\n\n\t\tif (!searchedOTP)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'OTP não existe',\n\t\t\t});\n\n\t\treturn { otp, hashedOtp: searchedOTP, email, user };\n\t}\n\n\tprivate async validate(otp: OTP, hash: OTP) {\n\t\tconst response = await this.crypt.compare({\n\t\t\tdata: otp.code.value,\n\t\t\thashedData: hash.code.value,\n\t\t});\n\t\tif (!response)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'OTP inválido',\n\t\t\t});\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\n\t\tconst body = plainToClass(LaunchOTPDTO, req.body);\n\t\tawait checkClassValidatorErrors({ body });\n\n\t\tconst { otp, hashedOtp, user, email } = await this.getContent(body, req);\n\t\tawait this.validate(otp, hashedOtp);\n\t\tawait this.otpRepo.delete({ email })\n\n\t\treq.inMemoryData = {\n\t\t\t...req.inMemoryData,\n\t\t\tuser,\n\t\t\totp,\n\t\t};\n\n\t\treturn true;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckPasswordGuard.html":{"url":"guards/CheckPasswordGuard.html","title":"guard - CheckPasswordGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckPasswordGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/checkPassword.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar as senhas\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(crypt: CryptAdapter, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/checkPassword.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkPassword.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(password: Password, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkPassword.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            Password\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { Email, Password } from '@registry:app/entities/VO';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { LoginDTO } from '@registry:infra/http/DTO/login.DTO';\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { checkClassValidatorErrors } from '@registry:utils/convertValidatorErr';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\n/** Usado para validar as senhas */\n@Injectable()\nexport class CheckPasswordGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly crypt: CryptAdapter,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async validate(password: Password, hash: string) {\n\t\tconst response = await this.crypt.compare({\n\t\t\tdata: password.value,\n\t\t\thashedData: hash,\n\t\t});\n\n\t\tif (!response)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'Email ou senha incorretos',\n\t\t\t});\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\n\t\tconst body = plainToClass(LoginDTO, req.body);\n\t\tawait checkClassValidatorErrors({ body });\n\n\t\tconst email = new Email(body.email);\n\t\tconst password = new Password(body.password);\n\n\t\tconst user = await this.userRepo.find({ key: email, safeSearch: true });\n\t\tawait this.validate(password, user.password.value);\n\n\t\treq.inMemoryData = {\n\t\t\t...req.inMemoryData,\n\t\t\tuser,\n\t\t};\n\n\t\treturn true;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckTFACodeGuard.html":{"url":"guards/CheckTFACodeGuard.html","title":"guard - CheckTFACodeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckTFACodeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/checkTFACode.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar o códigos gerados nos fluxos de autenticação de dois fatores\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, crypt: CryptAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/checkTFACode.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkTFACode.guard.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(user: User, codeUsedOnInput: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkTFACode.guard.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codeUsedOnInput\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { Email } from '@registry:app/entities/VO';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { LaunchTFADTO } from '@registry:infra/http/DTO/launch-tfa.DTO';\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { checkClassValidatorErrors } from '@registry:utils/convertValidatorErr';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { User } from '@registry:app/entities/user';\n\n/** Usado para validar o códigos gerados nos fluxos de autenticação de dois fatores */\n@Injectable()\nexport class CheckTFACodeGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tprivate async validate(user: User, codeUsedOnInput: string) {\n\t\tconst metadata = codeUsedOnInput.split('.')[0];\n\t\tconst code = generateStringCodeContent({\n\t\t\temail: user.email,\n\t\t\tid: user.id,\n\t\t});\n\n\t\tconst signature = await this.crypt.hashWithHmac({\n\t\t\tdata: `${metadata}.${btoa(code)}`,\n\t\t\tkey: process.env.TFA_TOKEN_KEY as string,\n\t\t});\n\t\tconst codeForValidation = `${metadata}.${btoa(signature)}`;\n\n\t\tconst parsedMetadata = JSON.parse(atob(metadata));\n\t\treturn (\n\t\t\tcodeForValidation === codeUsedOnInput &&\n\t\t\tparsedMetadata?.exp >= Date.now()\n\t\t);\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\n\t\tconst token =\n\t\t\treq.headers?.authorization?.split('Bearer ')[1] ??\n\t\t\t(function () {\n\t\t\t\tthrow new GuardErrors({ message: 'O código é inválido' });\n\t\t\t})();\n\n\t\tconst body = plainToClass(LaunchTFADTO, req.body);\n\t\tawait checkClassValidatorErrors({ body });\n\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new Email(body.email),\n\t\t\tsafeSearch: true,\n\t\t});\n\t\tconst validationRes = await this.validate(user, token);\n\t\tif (!validationRes)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'O código é inválido',\n\t\t\t});\n\n\t\treq.inMemoryData = { ...req.inMemoryData, user };\n\t\treturn true;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClassValidatorErrorFilter.html":{"url":"classes/ClassValidatorErrorFilter.html","title":"class - ClassValidatorErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClassValidatorErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/classValidator.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros do Class Validator\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                validateBody\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/classValidator.filter.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: BadRequestException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/classValidator.filter.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        BadRequestException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateBody\n                        \n                    \n                \n            \n            \n                \nvalidateBody(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/classValidator.filter.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IBodyProps\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tArgumentsHost,\n\tBadRequestException,\n\tCatch,\n\tExceptionFilter,\n} from '@nestjs/common';\nimport { isArray, isNumber, isString } from 'class-validator';\nimport { Response } from 'express';\n\ninterface IBodyProps {\n\tmessage: Array;\n\terror: string;\n\tstatusCode: number;\n}\n\n/** Usado para filtrar erros do Class Validator */\n@Catch(BadRequestException)\nexport class ClassValidatorErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tvalidateBody(input: any): input is IBodyProps {\n\t\treturn (\n\t\t\t'message' in input &&\n\t\t\tisArray(input['message']) &&\n\t\t\t'error' in input &&\n\t\t\tisString(input['error']) &&\n\t\t\t'statusCode' in input &&\n\t\t\tisNumber(input['statusCode'])\n\t\t);\n\t}\n\n\tcatch(exception: BadRequestException, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst body = exception.getResponse() as IBodyProps;\n\t\tif (!this.validateBody(body))\n\t\t\treturn response.status(500).json({\n\t\t\t\tstatusCode: 500,\n\t\t\t\tmessage: 'Erro interno do servidor',\n\t\t\t});\n\n\t\tthis.logger.error({\n\t\t\tname: 'Requisição ruim',\n\t\t\tlayer: LayersEnum.dto,\n\t\t\tdescription: JSON.stringify(body.message),\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(400).json({\n\t\t\tstatusCode: 400,\n\t\t\tname: 'Requisição ruim',\n\t\t\tmessage: body.message,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Code.html":{"url":"classes/Code.html","title":"class - Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Code\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/OTP/code/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/OTP/code/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Code)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/OTP/code/index.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Code\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/OTP/code/index.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport { ValueObject } from '@registry:app/entities/entities';\n\nexport class Code implements ValueObject {\n\tconstructor(private readonly _value: string) {\n\t\tif (_value.length > 100 || _value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectionsRefService.html":{"url":"injectables/CollectionsRefService.html","title":"injectable - CollectionsRefService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CollectionsRefService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                condominium\n                            \n                            \n                                    Public\n                                invite\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: FirestoreService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts:5\n                            \n                        \n\n                \n                    \n                            Prove as referencias das coleções e documentos do firestore\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                        FirestoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        condominium\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\titself: this.firestore.instance.collection(\n\t\t\t'Entities/CondominiumsDocuments/Condominiums',\n\t\t),\n\t\tcnpj: this.firestore.instance.collection('Index/Condominiums/cnpj'),\n\t\tcep: this.firestore.instance.collection('Index/Condominiums/cep'),\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        invite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\titself: this.firestore.instance.collection(\n\t\t\t'/Entities/UsersDocuments/Invites',\n\t\t),\n\t\tgetInviteDoc: (id: string) => this.invite.itself.doc(id),\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcore: this.firestore.instance.collection(\n\t\t\t'Entities/UsersDocuments/Core',\n\t\t),\n\t\tcondominiumRelUser: (id: string) =>\n\t\t\tthis.firestore.instance.collection(\n\t\t\t\t`Entities/UsersDocuments/Core/${id}/CondominiumRelUser`,\n\t\t\t),\n\t\temailIndex: this.firestore.instance.collection('Index/Users/email'),\n\t\tcpfIndex: this.firestore.instance.collection('Index/Users/cpf'),\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FirestoreService } from './firestore.service';\n\n@Injectable()\nexport class CollectionsRefService {\n\t/**\n\t * Prove as referencias das coleções e documentos do firestore\n\t **/\n\tconstructor(private readonly firestore: FirestoreService) {}\n\n\tpublic user = {\n\t\tcore: this.firestore.instance.collection(\n\t\t\t'Entities/UsersDocuments/Core',\n\t\t),\n\t\tcondominiumRelUser: (id: string) =>\n\t\t\tthis.firestore.instance.collection(\n\t\t\t\t`Entities/UsersDocuments/Core/${id}/CondominiumRelUser`,\n\t\t\t),\n\t\temailIndex: this.firestore.instance.collection('Index/Users/email'),\n\t\tcpfIndex: this.firestore.instance.collection('Index/Users/cpf'),\n\t};\n\n\tpublic condominium = {\n\t\titself: this.firestore.instance.collection(\n\t\t\t'Entities/CondominiumsDocuments/Condominiums',\n\t\t),\n\t\tcnpj: this.firestore.instance.collection('Index/Condominiums/cnpj'),\n\t\tcep: this.firestore.instance.collection('Index/Condominiums/cep'),\n\t};\n\n\tpublic invite = {\n\t\titself: this.firestore.instance.collection(\n\t\t\t'/Entities/UsersDocuments/Invites',\n\t\t),\n\t\tgetInviteDoc: (id: string) => this.invite.itself.doc(id),\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Condominium.html":{"url":"classes/Condominium.html","title":"class - Condominium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Condominium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominium/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dereference\n                            \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    CEP\n                                \n                                \n                                    num\n                                \n                                \n                                    CNPJ\n                                \n                                \n                                    createdAt\n                                \n                                \n                                    updatedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(content: TInputPropsCondominium, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/condominium/index.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                        TInputPropsCondominium\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UUID\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/condominium/index.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IPropsCondominium\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/condominium/index.ts:53\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dereference\n                        \n                    \n                \n            \n            \n                \n                        \n                    dereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/condominium/index.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Condominium\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Condominium)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/condominium/index.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Condominium\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:100\n                                \n                            \n\n                \n                    \n                        setname(input: Name)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:103\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Name\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        CEP\n                    \n                \n\n                \n                    \n                        getCEP()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:108\n                                \n                            \n\n                \n                    \n                        setCEP(input: CEP)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:111\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            CEP\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        num\n                    \n                \n\n                \n                    \n                        getnum()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:116\n                                \n                            \n\n                \n                    \n                        setnum(input: Num)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:119\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Num\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        CNPJ\n                    \n                \n\n                \n                    \n                        getCNPJ()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:124\n                                \n                            \n\n                \n                    \n                        setCNPJ(input: CNPJ)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:127\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            CNPJ\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:132\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:137\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { CEP, Name, Num, CNPJ, UUID } from '../VO';\nimport { Entity } from '../entities';\n\ninterface IPropsCondominium {\n\tname: Name;\n\tCEP: CEP;\n\tnum: Num;\n\tCNPJ: CNPJ;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n}\n\nexport type TInputPropsCondominium = {\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n};\n\nexport const condominiumDTORules = {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\tCEP: {\n\t\tminLength: 8,\n\t\tmaxLength: 9,\n\t\ttype: 'string',\n\t},\n\tnum: {\n\t\tminLength: 0,\n\t\tmaxLength: 2147483647,\n\t\ttype: 'number',\n\t},\n\tCNPJ: {\n\t\tminLength: 14,\n\t\tmaxLength: 18,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAy: {\n\t\ttype: Date,\n\t},\n};\n\nexport class Condominium implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: IPropsCondominium;\n\n\tconstructor(content: TInputPropsCondominium, id?: string) {\n\t\tthis.props = {\n\t\t\tname: new Name(content.name),\n\t\t\tCEP: new CEP(content.CEP),\n\t\t\tnum: new Num(content.num),\n\t\t\tCNPJ: new CNPJ(content.CNPJ),\n\t\t\tcreatedAt: content.createdAt ?? new Date(),\n\t\t\tupdatedAt: content.updatedAt ?? new Date(),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tpublic dereference(): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: this.name.value,\n\t\t\t\tCEP: this.CEP.value,\n\t\t\t\tnum: this.num.value,\n\t\t\t\tCNPJ: this.CNPJ.value,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t\tupdatedAt: this.updatedAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tpublic equalTo(input: Condominium): boolean {\n\t\treturn (\n\t\t\tinput instanceof Condominium &&\n\t\t\tthis.id.equalTo(input.id) &&\n\t\t\tthis.props.name.equalTo(input.name) &&\n\t\t\tthis.props.CEP.equalTo(input.CEP) &&\n\t\t\tthis.props.num.equalTo(input.num) &&\n\t\t\tthis.props.CNPJ.equalTo(input.CNPJ) &&\n\t\t\tthis.props.createdAt === input.createdAt &&\n\t\t\tthis.props.updatedAt === input.updatedAt\n\t\t);\n\t}\n\n\t// ID\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\t// NAME\n\tget name(): Name {\n\t\treturn this.props.name;\n\t}\n\tset name(input: Name) {\n\t\tthis.props.name = input;\n\t}\n\n\t// CEP\n\tget CEP(): CEP {\n\t\treturn this.props.CEP;\n\t}\n\tset CEP(input: CEP) {\n\t\tthis.CEP = input;\n\t}\n\n\t// NUM\n\tget num(): Num {\n\t\treturn this.props.num;\n\t}\n\tset num(input: Num) {\n\t\tthis.props.num = input;\n\t}\n\n\t// CNPJ\n\tget CNPJ(): CNPJ {\n\t\treturn this.props.CNPJ;\n\t}\n\tset CNPJ(input: CNPJ) {\n\t\tthis.props.CNPJ = input;\n\t}\n\n\t// CREATEDAT\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n\n\t// UPDATEDAT\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CondominiumController.html":{"url":"controllers/CondominiumController.html","title":"controller - CondominiumController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CondominiumController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/controllers/condominium.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /condominium\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createAdmin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                invite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateCondominiumDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/condominium.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCondominiumDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAdmin(req: Request, body: InviteUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':condominiumId/invite-admin')@UseGuards(SuperAdminJwt)@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/condominium.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            InviteUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(req: Request, body: DeleteUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('dev/:condominiumId/delete-user')@UseGuards(SuperAdminJwt)@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/condominium.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            DeleteUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        invite\n                        \n                    \n                \n            \n            \n                \n                        \n                    invite(req: Request, body: InviteUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':condominiumId/invite-user')@UseGuards(AdminJwt)@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/condominium.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            InviteUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tBody,\n\tController,\n\tDelete,\n\tHttpCode,\n\tPost,\n\tReq,\n\tUseGuards,\n} from '@nestjs/common';\nimport { CreateCondominiumService } from '@registry:app/services/createCondominium.service';\nimport { CreateCondominiumDTO } from '../DTO/createCondominium.DTO';\nimport { CondominiumMapper } from '@registry:app/mapper/condominium';\nimport { Email, Level } from '@registry:app/entities/VO';\nimport { GenInviteService } from '@registry:app/services/genInvite.service';\nimport { SuperAdminJwt } from '@registry:app/auth/guards/super-admin-jwt.guard';\nimport { InviteUserDTO } from '../DTO/inviteUser.DTO';\nimport { Request } from 'express';\nimport { DeleteUserDTO } from '../DTO/deleteAdminUser.DTO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { DeleteUserService } from '@registry:app/services/deleteUser.service';\nimport { AdminJwt } from '@registry:app/auth/guards/admin-jwt.guard';\nimport { User } from '@registry:app/entities/user';\n\n@Controller('/condominium')\nexport class CondominiumController {\n\t/** Acesse /api para ver as rotas disponíveis **/\n\tconstructor(\n\t\tprivate readonly createCondominium: CreateCondominiumService,\n\t\tprivate readonly genInvite: GenInviteService,\n\t\tprivate readonly deleteUserService: DeleteUserService,\n\t\tprivate readonly genInviteService: GenInviteService,\n\t) {}\n\n\t@Post()\n\tasync create(@Body() body: CreateCondominiumDTO) {\n\t\tconst { email: rawEmail, ...condominiumData } = body;\n\n\t\tconst condominium = CondominiumMapper.toClass({ ...condominiumData });\n\t\tawait this.createCondominium.exec({ condominium });\n\n\t\tconst email = new Email(rawEmail);\n\t\tawait this.genInvite.exec({\n\t\t\temail,\n\t\t\trequiredLevel: new Level(2), // AVISO: SUPER ADMIN SENDO CONVIDADO\n\t\t\tkey: process.env.INVITE_SUPER_ADMIN_TOKEN_KEY,\n\t\t\tcondominiumId: condominium.id,\n\t\t});\n\t}\n\n\t@Post(':condominiumId/invite-admin')\n\t@UseGuards(SuperAdminJwt)\n\t@HttpCode(204)\n\tasync createAdmin(@Req() req: Request, @Body() body: InviteUserDTO) {\n\t\tconst condominiumRelUser = req.inMemoryData\n\t\t\t.condominiumRelUser as CondominiumRelUser;\n\t\tconst email = new Email(body.email);\n\n\t\tawait this.genInvite.exec({\n\t\t\trequiredLevel: new Level(1),\n\t\t\tcondominiumId: condominiumRelUser.condominiumId,\n\t\t\tkey: process.env.INVITE_ADMIN_TOKEN_KEY,\n\t\t\temail,\n\t\t});\n\t}\n\n\t@Delete('dev/:condominiumId/delete-user')\n\t@UseGuards(SuperAdminJwt)\n\t@HttpCode(204)\n\tasync deleteUser(@Req() req: Request, @Body() body: DeleteUserDTO) {\n\t\tconst user = req.inMemoryData.user as User;\n\n\t\tconst email = new Email(body.email);\n\t\tawait this.deleteUserService.exec({\n\t\t\ttarget: email,\n\t\t\tactualUser: user.email,\n\t\t});\n\t}\n\n\t@Post(':condominiumId/invite-user')\n\t@UseGuards(AdminJwt)\n\t@HttpCode(204)\n\tasync invite(@Req() req: Request, @Body() body: InviteUserDTO) {\n\t\tconst condominiumRelUser = req.inMemoryData\n\t\t\t.condominiumRelUser as CondominiumRelUser;\n\n\t\tawait this.genInviteService.exec({\n\t\t\temail: new Email(body.email),\n\t\t\tcondominiumId: condominiumRelUser.condominiumId,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumFirestoreMapper.html":{"url":"classes/CondominiumFirestoreMapper.html","title":"class - CondominiumFirestoreMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumFirestoreMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/condominiums.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromFirestoreToClass\n                            \n                            \n                                    Static\n                                fromFirestoreToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToClass(input: IIncomingFirestoreCondominiumData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/condominiums.ts:20\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreCondominiumData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Condominium\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToObject(input: IIncomingFirestoreCondominiumData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/condominiums.ts:40\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreCondominiumData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TCondominiumInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { TCondominiumInObject } from '@registry:app/mapper/condominium';\nimport { Timestamp } from 'firebase-admin/firestore';\n\nexport interface IIncomingFirestoreCondominiumData {\n\tid: string;\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt: Timestamp;\n\tupdatedAt: Timestamp;\n}\n\nexport class CondominiumFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass(\n\t\tinput: IIncomingFirestoreCondominiumData,\n\t): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tnum: input.num,\n\t\t\t\tname: input.name,\n\t\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreCondominiumData,\n\t): TCondominiumInObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumMapper.html":{"url":"classes/CondominiumMapper.html","title":"class - CondominiumMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/condominium.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: IConvertToObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/condominium.ts:20\n                        \n                    \n\n\n            \n                \n                        Método usado para converter um objeto de um condomínio em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IConvertToObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados do condomínio em forma de objeto\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Condominium\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: Condominium)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/condominium.ts:38\n                        \n                    \n\n\n            \n                \n                        Método usado para converter uma classe de condomínio em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Condominium\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados do condomínio em forma de classe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TCondominiumInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\n\ninterface IConvertToObject {\n\tid?: string;\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport type TCondominiumInObject = Required;\n\nexport class CondominiumMapper {\n\t/**\n\t * Método usado para converter um objeto de um condomínio em classe\n\t * @param input - Deve conter os dados do condomínio em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: input.name,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tnum: input.num,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de condomínio em objeto\n\t * @param input - Deve conter os dados do condomínio em forma de classe\n\t **/\n\tstatic toObject(input: Condominium): TCondominiumInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tnum: input.num.value,\n\t\t\tCEP: input.CEP.value,\n\t\t\tname: input.name.value,\n\t\t\tCNPJ: input.CNPJ.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumPrismaMapper.html":{"url":"classes/CondominiumPrismaMapper.html","title":"class - CondominiumPrismaMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumPrismaMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/mapper/condominium.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: CondominiumPrisma)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/condominium.ts:25\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do prisma em classes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumPrisma\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do prisma\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Condominium\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(input: Condominium)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/condominium.ts:9\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados inseridos e os adapta para a utilização no prisma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Condominium\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados de entrada do condomínio\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CondominiumPrisma\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { Condominium as CondominiumPrisma } from '@prisma/client';\n\nexport class CondominiumPrismaMapper {\n\t/**\n\t * Mapeia os dados inseridos e os adapta para a utilização no prisma\n\t * @param input - Deve conter os dados de entrada do condomínio\n\t **/\n\tstatic toPrisma(input: Condominium): CondominiumPrisma {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tname: input.name.value,\n\t\t\tCNPJ: input.CNPJ.value,\n\t\t\tCEP: input.CEP.value,\n\t\t\tnum: input.num.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do prisma em classes\n\t * @param input - Deve conter os dados vindos do prisma\n\t **/\n\tstatic toClass(input: CondominiumPrisma): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: input.name,\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tnum: input.num,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CondominiumPrismaRepo.html":{"url":"injectables/CondominiumPrismaRepo.html","title":"injectable - CondominiumPrismaRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CondominiumPrismaRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: CondominiumInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search | CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search | CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tCondominiumRepo,\n\tCondominiumInterfaces,\n} from '@registry:app/repositories/condominium';\nimport { PrismaService } from '../prisma.service';\nimport { Injectable } from '@nestjs/common';\nimport { CondominiumPrismaMapper } from '../mapper/condominium';\nimport { Condominium } from '@registry:app/entities/condominium';\nimport { CEP, CNPJ, Name } from '@registry:app/entities/VO';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\n@Injectable()\nexport class CondominiumPrismaRepo implements CondominiumRepo {\n\tconstructor(private readonly prisma: PrismaService) {}\n\n\tasync create(input: CondominiumInterfaces.create): Promise {\n\t\tconst condominiumInPrisma = CondominiumPrismaMapper.toPrisma(\n\t\t\tinput.condominium,\n\t\t);\n\n\t\tawait this.prisma.condominium.create({\n\t\t\tdata: { ...condominiumInPrisma },\n\t\t});\n\t}\n\n\tasync find(input: CondominiumInterfaces.safeSearch): Promise;\n\tasync find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n\n\tasync find(\n\t\tinput: CondominiumInterfaces.search | CondominiumInterfaces.safeSearch,\n\t): Promise {\n\t\tconst query =\n\t\t\tinput.key instanceof Name\n\t\t\t\t? { name: input.key.value }\n\t\t\t\t: input.key instanceof CEP\n\t\t\t\t\t? { CEP: input.key.value }\n\t\t\t\t\t: input.key instanceof CNPJ\n\t\t\t\t\t\t? { CNPJ: input.key.value }\n\t\t\t\t\t\t: { id: input.key.value };\n\n\t\tconst unparsedCondominium = await this.prisma.condominium.findFirst({\n\t\t\twhere: query,\n\t\t});\n\n\t\tif (!unparsedCondominium && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tif (!unparsedCondominium) return undefined;\n\n\t\tconst condominium =\n\t\t\tCondominiumPrismaMapper.toClass(unparsedCondominium);\n\t\treturn condominium;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRelUser.html":{"url":"classes/CondominiumRelUser.html","title":"class - CondominiumRelUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRelUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominiumRelUser/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dereference\n                            \n                            \n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    level\n                                \n                                \n                                    condominiumId\n                                \n                                \n                                    userId\n                                \n                                \n                                    block\n                                \n                                \n                                    apartmentNumber\n                                \n                                \n                                    updatedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IInputCondominiumRelUser, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IInputCondominiumRelUser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UUID\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICondominiumRelUserProps\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:51\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dereference\n                        \n                    \n                \n            \n            \n                \ndereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         CondominiumRelUser\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equalTo\n                        \n                    \n                \n            \n            \n                \nequalTo(input: CondominiumRelUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumRelUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:107\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n\n                \n                    \n                        getlevel()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:114\n                                \n                            \n\n                \n                    \n                        setlevel(input: Level)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:111\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Level\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        condominiumId\n                    \n                \n\n                \n                    \n                        getcondominiumId()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:121\n                                \n                            \n\n                \n                    \n                        setcondominiumId(input: UUID)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:118\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            UUID\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:128\n                                \n                            \n\n                \n                    \n                        setuserId(input: UUID)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:125\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            UUID\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        block\n                    \n                \n\n                \n                    \n                        getblock()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:135\n                                \n                            \n\n                \n                    \n                        setblock(input: Block | undefined | null)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:132\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Block | undefined | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        apartmentNumber\n                    \n                \n\n                \n                    \n                        getapartmentNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:142\n                                \n                            \n\n                \n                    \n                        setapartmentNumber(input: ApartmentNumber | undefined | null)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:139\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                        ApartmentNumber | undefined | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:149\n                                \n                            \n\n                \n                    \n                        setupdatedAt(input: Date)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:146\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Date\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { UUID, Block, Level, ApartmentNumber } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\nexport interface ICondominiumRelUserProps {\n\tuserId: UUID;\n\tcondominiumId: UUID;\n\tblock?: Block | null;\n\tapartmentNumber?: ApartmentNumber | null;\n\tlevel: Level;\n\tupdatedAt: Date;\n}\n\nexport interface IInputCondominiumRelUser {\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel?: number | null;\n\tupdatedAt?: Date;\n}\n\nexport const condominiumRelUserDTORules = {\n\tuserId: {\n\t\ttype: 'string',\n\t},\n\tcondominiumId: {\n\t\ttype: 'string',\n\t},\n\tblock: {\n\t\tmaxLength: 6,\n\t\toption: true,\n\t\ttype: 'string',\n\t},\n\tapartmentNumber: {\n\t\tmaxLength: 2147483647,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tlevel: {\n\t\tmaxLength: 2,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class CondominiumRelUser implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: ICondominiumRelUserProps;\n\n\tconstructor(input: IInputCondominiumRelUser, id?: string) {\n\t\tthis._id = ValueObject.build(UUID, id).or(UUID.genV4()).exec();\n\t\tthis.props = {\n\t\t\tlevel: ValueObject.build(Level, input.level)\n\t\t\t\t.or(new Level(0))\n\t\t\t\t.exec(),\n\t\t\tapartmentNumber: ValueObject.build(\n\t\t\t\tApartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t)\n\t\t\t\t.allowNullish()\n\t\t\t\t.exec(),\n\t\t\tblock: ValueObject.build(Block, input.block).allowNullish().exec(),\n\t\t\tcondominiumId: ValueObject.build(UUID, input.condominiumId).exec(),\n\t\t\tuserId: ValueObject.build(UUID, input.userId).exec(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): CondominiumRelUser {\n\t\treturn new CondominiumRelUser({\n\t\t\tlevel: this.props.level.value,\n\t\t\tblock:\n\t\t\t\tthis.props.block instanceof Block\n\t\t\t\t\t? this.props.block.value\n\t\t\t\t\t: this.props.block,\n\t\t\tapartmentNumber:\n\t\t\t\tthis.props.apartmentNumber instanceof ApartmentNumber\n\t\t\t\t\t? this.props.apartmentNumber.value\n\t\t\t\t\t: this.props.apartmentNumber,\n\t\t\tcondominiumId: this.props.condominiumId.value,\n\t\t\tuserId: this.props.userId.value,\n\t\t\tupdatedAt: this.props.updatedAt,\n\t\t});\n\t}\n\n\tequalTo(input: CondominiumRelUser): boolean {\n\t\treturn (\n\t\t\tinput instanceof CondominiumRelUser &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.condominiumId,\n\t\t\t\tinput.condominiumId,\n\t\t\t) &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.apartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t) &&\n\t\t\tValueObject.compare(this.props.block, input.block) &&\n\t\t\tValueObject.compare(this.props.level, input.level) &&\n\t\t\tValueObject.compare(this.props.userId, input.userId) &&\n\t\t\tthis.props.updatedAt === this.props.updatedAt\n\t\t);\n\t}\n\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\tset level(input: Level) {\n\t\tthis.props.level = input;\n\t}\n\tget level(): Level {\n\t\treturn this.props.level;\n\t}\n\n\tset condominiumId(input: UUID) {\n\t\tthis.props.condominiumId = input;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\n\tset userId(input: UUID) {\n\t\tthis.props.userId = input;\n\t}\n\tget userId(): UUID {\n\t\treturn this.props.userId;\n\t}\n\n\tset block(input: Block | undefined | null) {\n\t\tthis.props.block = input;\n\t}\n\tget block(): Block | undefined | null {\n\t\treturn this.props.block;\n\t}\n\n\tset apartmentNumber(input: ApartmentNumber | undefined | null) {\n\t\tthis.props.apartmentNumber = input;\n\t}\n\tget apartmentNumber(): ApartmentNumber | undefined | null {\n\t\treturn this.props.apartmentNumber;\n\t}\n\n\tset updatedAt(input: Date) {\n\t\tthis.props.updatedAt = input;\n\t}\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRelUserFirestoreMapper.html":{"url":"classes/CondominiumRelUserFirestoreMapper.html","title":"class - CondominiumRelUserFirestoreMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRelUserFirestoreMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromFirestoreToClass\n                            \n                            \n                                    Static\n                                fromFirestoreToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToClass(undefined: IIncomingFirestoreCondominiumRelUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts:26\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IIncomingFirestoreCondominiumRelUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CondominiumRelUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToObject(input: IIncomingFirestoreCondominiumRelUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts:43\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreCondominiumRelUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TCondominiumRelUserToObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Timestamp } from 'firebase-admin/firestore';\nimport { TReplace } from '@registry:utils/replace';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport interface IIncomingFirestoreCondominiumRelUserData {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock: string | null;\n\tapartmentNumber: number | null;\n\tlevel: number;\n\tupdatedAt: Timestamp;\n}\n\nexport type TFirestoreCondominiumRelUserToObject = TReplace;\n\nexport class CondominiumRelUserFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass({\n\t\tid,\n\t\t...input\n\t}: IIncomingFirestoreCondominiumRelUserData): CondominiumRelUser {\n\t\treturn new CondominiumRelUser(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tid,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreCondominiumRelUserData,\n\t): TCondominiumRelUserToObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRelUserMapper.html":{"url":"classes/CondominiumRelUserMapper.html","title":"class - CondominiumRelUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRelUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/condominiumRelUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(undefined: ICondominiumRelUserInObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/condominiumRelUser.ts:28\n                        \n                    \n\n\n            \n                \n                        Método usado para converter um objeto de CondominiumRelUser em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            ICondominiumRelUserInObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: CondominiumRelUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/condominiumRelUser.ts:36\n                        \n                    \n\n\n            \n                \n                        Método usado para converter uma classe de CondominiumRelUser em um objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumRelUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de classe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TCondominiumRelUserToObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\n\nexport interface ICondominiumRelUserInObject {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel: number;\n\tupdatedAt?: Date;\n}\n\nexport type TCondominiumRelUserToObject = {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel: number;\n\tupdatedAt: Date;\n};\n\nexport class CondominiumRelUserMapper {\n\t/**\n\t * Método usado para converter um objeto de CondominiumRelUser em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass({ id, ...input }: ICondominiumRelUserInObject) {\n\t\treturn new CondominiumRelUser({ ...input }, id);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de CondominiumRelUser em um objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: CondominiumRelUser): TCondominiumRelUserToObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tuserId: input.userId.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\tblock: input.block ? input.block.value : input.block,\n\t\t\tlevel: input.level.value,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t\tapartmentNumber: input.apartmentNumber\n\t\t\t\t? input.apartmentNumber.value\n\t\t\t\t: input.apartmentNumber,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRelUserPrismaMapper.html":{"url":"classes/CondominiumRelUserPrismaMapper.html","title":"class - CondominiumRelUserPrismaMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRelUserPrismaMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/mapper/condominiumRelUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: CondominiumRelUserPrisma)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/condominiumRelUser.ts:25\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do prisma em classes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        CondominiumRelUserPrisma\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do prisma\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CondominiumRelUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(input: CondominiumRelUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/condominiumRelUser.ts:9\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados inseridos e os adapta para a utilização no prisma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumRelUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados de entrada do CondominiumRelUser\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CondominiumRelUserPrisma\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { CondominiumRelUser as CondominiumRelUserPrisma } from '@prisma/client';\n\nexport class CondominiumRelUserPrismaMapper {\n\t/**\n\t * Mapeia os dados inseridos e os adapta para a utilização no prisma\n\t * @param input - Deve conter os dados de entrada do CondominiumRelUser\n\t **/\n\tstatic toPrisma(input: CondominiumRelUser): CondominiumRelUserPrisma {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\tuserId: input.userId.value,\n\t\t\tblock: input.block?.value ?? null,\n\t\t\tlevel: input.level.value,\n\t\t\tapartment_number: input.apartmentNumber?.value ?? null,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do prisma em classes\n\t * @param input - Deve conter os dados vindos do prisma\n\t **/\n\tstatic toClass(input: CondominiumRelUserPrisma): CondominiumRelUser {\n\t\treturn new CondominiumRelUser(\n\t\t\t{\n\t\t\t\tuserId: input.userId,\n\t\t\t\tcondominiumId: input.condominiumId,\n\t\t\t\tapartmentNumber: input.apartment_number,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t\tblock: input.block,\n\t\t\t\tlevel: input.level,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRepo.html":{"url":"classes/CondominiumRepo.html","title":"class - CondominiumRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/condominium.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/repositories/condominium.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/condominium.ts:28\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um condomínio\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/condominium.ts:37\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um condomínio\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\n\nexport namespace CondominiumInterfaces {\n\texport interface create {\n\t\tcondominium: Condominium;\n\t}\n\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n\texport interface search {\n\t\tsafeSearch: undefined;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n}\n\nexport abstract class CondominiumRepo {\n\t/** @virtual */\n\tabstract create: (input: CondominiumInterfaces.create) => Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.safeSearch,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CondominiumsFirestore.html":{"url":"injectables/CondominiumsFirestore.html","title":"injectable - CondominiumsFirestore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CondominiumsFirestore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(collectionsRefs: CollectionsRefService, firestore: FirestoreService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionsRefs\n                                                  \n                                                        \n                                                                        CollectionsRefService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                        FirestoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: CondominiumInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CondominiumMapper } from '@registry:app/mapper/condominium';\nimport {\n\tCondominiumInterfaces,\n\tCondominiumRepo,\n} from '@registry:app/repositories/condominium';\nimport { FirestoreService } from '../firestore.service';\nimport { Condominium } from '@registry:app/entities/condominium';\nimport { Injectable } from '@nestjs/common';\nimport { Index } from '../entities/indexes';\nimport { CollectionsRefService } from '../collectionsRefs.service';\n\n@Injectable()\nexport class CondominiumsFirestore implements CondominiumRepo {\n\tconstructor(\n\t\tprivate readonly collectionsRefs: CollectionsRefService,\n\t\tprivate readonly firestore: FirestoreService,\n\t) {}\n\n\tasync create(input: CondominiumInterfaces.create): Promise {\n\t\tconst { id, ...condominium } = CondominiumMapper.toObject(\n\t\t\tinput.condominium,\n\t\t);\n\n\t\tconst database = this.firestore.instance;\n\t\tconst batch = database.batch();\n\n\t\tconst refs = {\n\t\t\tcnpjIndex: this.collectionsRefs.condominium.cnpj.doc(\n\t\t\t\tcondominium.CNPJ,\n\t\t\t),\n\t\t\tcepIndex: this.collectionsRefs.condominium.cep.doc(condominium.CEP),\n\t\t};\n\n\t\tconst condominiumIndexRef = new Index({\n\t\t\tref: this.collectionsRefs.condominium.itself.doc(id),\n\t\t}).flat();\n\n\t\tbatch.create(refs.cnpjIndex, condominiumIndexRef);\n\t\tbatch.create(refs.cepIndex, condominiumIndexRef);\n\n\t\tconst entityRef = this.collectionsRefs.condominium.itself.doc(id);\n\t\tbatch.create(entityRef, condominium);\n\n\t\tawait batch.commit();\n\t}\n\n\tasync find(input: CondominiumInterfaces.safeSearch): Promise;\n\tasync find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n\n\tasync find(): Promise {\n\t\tthrow new Error(\n\t\t\t'\"find\" Method not implemented in \"CondominiumsFirestore\"',\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CookieAdapter.html":{"url":"classes/CookieAdapter.html","title":"class - CookieAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CookieAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/cookie.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                validateSignedCookie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateSignedCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateSignedCookie(data: IValidateSignedCookie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/cookie.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            IValidateSignedCookie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TValidateSignedCookieReturn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export type TValidateSignedCookieReturn =\n\t| Promise\n\t| string\n\t| false;\n\nexport interface IValidateSignedCookie {\n\tcookie: string;\n\tkey: string;\n}\n\nexport abstract class CookieAdapter {\n\tabstract validateSignedCookie(\n\t\tdata: IValidateSignedCookie,\n\t): TValidateSignedCookieReturn;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CookieParserAdapter.html":{"url":"classes/CookieParserAdapter.html","title":"class - CookieParserAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CookieParserAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/cookie-parser/cookieParserAdapter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CookieAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateSignedCookie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validateSignedCookie\n                        \n                    \n                \n            \n            \n                \nvalidateSignedCookie(input: IValidateSignedCookie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/cookie-parser/cookieParserAdapter.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IValidateSignedCookie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TValidateSignedCookieReturn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as cookieParser from 'cookie-parser';\nimport {\n\tCookieAdapter,\n\tIValidateSignedCookie,\n\tTValidateSignedCookieReturn,\n} from '../cookie';\n\nexport class CookieParserAdapter implements CookieAdapter {\n\tvalidateSignedCookie(\n\t\tinput: IValidateSignedCookie,\n\t): TValidateSignedCookieReturn {\n\t\treturn cookieParser.signedCookie(input.cookie, input.key);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCondominiumDTO.html":{"url":"classes/CreateCondominiumDTO.html","title":"class - CreateCondominiumDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCondominiumDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/createCondominium.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de criação de condomínio\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                CEP\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                CNPJ\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                num\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        CEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"CEP\" precisa conter caracteres válidos'})@MinLength(undefined.minLength, {message: undefined})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        CNPJ\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"CNPJ\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"name\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        num\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber({}, {message: 'O campo \"num\" precisa ser um número'})@Max(undefined.maxLength, {message: undefined})@Min(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\nimport { userDTORules } from '@registry:app/entities/user';\nimport {\n\tIsEmail,\n\tIsNumber,\n\tIsString,\n\tMax,\n\tMaxLength,\n\tMin,\n\tMinLength,\n} from 'class-validator';\n\n/** Usado para validar o corpo das requisições de criação de condomínio */\nexport class CreateCondominiumDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"name\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(condominiumDTORules.name.maxLength, {\n\t\tmessage: `O campo \"name\" precisa conter no máximo ${condominiumDTORules.name.maxLength} caracteres`,\n\t})\n\t@MinLength(condominiumDTORules.name.minLength, {\n\t\tmessage: `O campo \"name\" precisa conter no mínimo ${condominiumDTORules.name.minLength} caracteres`,\n\t})\n\t\tname: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"CEP\" precisa conter caracteres válidos',\n\t})\n\t@MinLength(condominiumDTORules.CEP.minLength, {\n\t\tmessage: `O campo \"CEP\" precisa conter no mínimo ${condominiumDTORules.CEP.minLength} caracteres`,\n\t})\n\t@MaxLength(condominiumDTORules.CEP.maxLength, {\n\t\tmessage: `O campo \"CEP\" precisa conter no máximo ${condominiumDTORules.CEP.maxLength} caracteres`,\n\t})\n\t\tCEP: string;\n\n\t@ApiProperty()\n\t@IsNumber(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"num\" precisa ser um número',\n\t\t},\n\t)\n\t@Max(condominiumDTORules.num.maxLength, {\n\t\tmessage: `O campo \"num\" precisa ser menor ou igual a ${condominiumDTORules.num.maxLength}`,\n\t})\n\t@Min(condominiumDTORules.num.minLength, {\n\t\tmessage: `O campo \"num\" precisa ser maior ou igual a ${condominiumDTORules.num.minLength}`,\n\t})\n\t\tnum: number;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"CNPJ\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(condominiumDTORules.CNPJ.maxLength, {\n\t\tmessage: `O campo \"CNPJ\" precisa conter no máximo ${condominiumDTORules.CNPJ.maxLength} caracteres`,\n\t})\n\t@MinLength(condominiumDTORules.CNPJ.minLength, {\n\t\tmessage: `O campo \"CNPJ\" precisa conter no mínimo ${condominiumDTORules.CNPJ.minLength} caracteres`,\n\t})\n\t\tCNPJ: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateCondominiumService.html":{"url":"injectables/CreateCondominiumService.html","title":"injectable - CreateCondominiumService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateCondominiumService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createCondominium.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por criar um novo condomínio\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(condominiumRepo: CondominiumRepo, cepGate: CepGateway)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/createCondominium.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        condominiumRepo\n                                                  \n                                                        \n                                                                        CondominiumRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cepGate\n                                                  \n                                                        \n                                                                        CepGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createCondominium.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CepGateway } from '@registry:app/gateways/CEP.gateway';\nimport { CondominiumRepo } from '@registry:app/repositories/condominium';\nimport { Injectable } from '@nestjs/common';\nimport { IService } from './_IService';\n\ninterface IProps {\n\tcondominium: Condominium;\n}\n\n/** Serviço responsável por criar um novo condomínio */\n@Injectable()\nexport class CreateCondominiumService implements IService {\n\tconstructor(\n\t\tprivate readonly condominiumRepo: CondominiumRepo,\n\t\tprivate readonly cepGate: CepGateway,\n\t) {}\n\n\tasync exec(input: IProps) {\n\t\tawait this.cepGate.check(input.condominium.CEP.value);\n\n\t\tawait this.condominiumRepo.create({\n\t\t\tcondominium: input.condominium,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTokenService.html":{"url":"injectables/CreateTokenService.html","title":"injectable - CreateTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createToken.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por gerar o token de acesso e o de renovação\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                buildAccessToken\n                            \n                            \n                                    Private\n                                    Async\n                                buildRefreshToken\n                            \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/createToken.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        buildAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAccessToken(user: User | IUserDataCore)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createToken.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | IUserDataCore\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        buildRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildRefreshToken(email: Email, userId: UUID)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createToken.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            Email\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(undefined: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createToken.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tIAccessTokenBody,\n\tIRefreshTokenBody,\n\tTokenType,\n} from '@registry:app/auth/tokenTypes';\nimport {\n\tApartmentNumber,\n\tBlock,\n\tEmail,\n\tLevel,\n\tName,\n\tPhoneNumber,\n\tUUID,\n} from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IService } from './_IService';\n\ninterface IUserDataCore {\n\tid: UUID;\n\temail: Email;\n\tblock?: Block;\n\tapartmentNumber?: ApartmentNumber;\n\tname: Name;\n\tlevel: Level;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n\tphoneNumber: PhoneNumber;\n}\n\ninterface IProps {\n\tuser: User | IUserDataCore;\n}\n\n/** Serviço responsável por gerar o token de acesso e o de renovação */\n@Injectable()\nexport class CreateTokenService implements IService {\n\tconstructor(private readonly jwtService: JwtService) {}\n\n\tprivate async buildAccessToken(user: User | IUserDataCore) {\n\t\tconst exp = parseInt(process.env.ACCESS_TOKEN_EXP as string);\n\t\tconst accessJwtBody: Omit = {\n\t\t\tsub: user.id.value,\n\t\t\tcontent: {\n\t\t\t\temail: user.email.value,\n\t\t\t\tname: user.name.value,\n\t\t\t\tcreatedAt: user.createdAt,\n\t\t\t\tupdatedAt: user.updatedAt,\n\t\t\t\tphoneNumber: user.phoneNumber.value,\n\t\t\t},\n\t\t\ttype: TokenType.accessToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(accessJwtBody, {\n\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tprivate async buildRefreshToken(email: Email, userId: UUID) {\n\t\tconst exp = parseInt(process.env.REFRESH_TOKEN_EXP as string);\n\t\tconst refreshJwtBody: Omit = {\n\t\t\tsub: userId.value,\n\t\t\temail: email.value,\n\t\t\ttype: TokenType.refreshToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(refreshJwtBody, {\n\t\t\tsecret: process.env.REFRESH_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tasync exec({ user }: IProps) {\n\t\tconst accessToken = await this.buildAccessToken(user);\n\t\tconst refreshToken = await this.buildRefreshToken(user.email, user.id);\n\n\t\treturn { accessToken, refreshToken };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/createUser.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de criação de usuário\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                apartmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                block\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                CPF\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        apartmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber({}, {message: 'O campo \"apartmentNumber\" precisa ser um número'})@Max(undefined.maxLength, {message: undefined})@Min(undefined.minLength, {message: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        block\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"block\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"CPF\" precisa conter caracteres válidos'})@MinLength(undefined.minLength, {message: undefined})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"name\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"password\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"phoneNumber\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:104\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\nimport { userDTORules } from '@registry:app/entities/user';\nimport {\n\tIsEmail,\n\tIsNumber,\n\tIsOptional,\n\tIsString,\n\tMax,\n\tMaxLength,\n\tMin,\n\tMinLength,\n} from 'class-validator';\n\n/** Usado para validar o corpo das requisições de criação de usuário */\nexport class CreateUserDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"name\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(userDTORules.name.maxLength, {\n\t\tmessage: `O campo \"name\" precisa conter no máximo ${userDTORules.name.maxLength} caracteres`,\n\t})\n\t@MinLength(userDTORules.name.minLength, {\n\t\tmessage: `O campo \"name\" precisa conter no mínimo ${userDTORules.name.minLength} caracteres`,\n\t})\n\t\tname: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"password\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(userDTORules.password.maxLength, {\n\t\tmessage: `O campo \"password\" precisa conter no máximo ${userDTORules.password.maxLength} caracteres`,\n\t})\n\t@MinLength(userDTORules.password.minLength, {\n\t\tmessage: `O campo \"password\" precisa conter no mínimo ${userDTORules.password.minLength} caracteres`,\n\t})\n\t\tpassword: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"CPF\" precisa conter caracteres válidos',\n\t})\n\t@MinLength(userDTORules.CPF.minLength, {\n\t\tmessage: `O campo \"CPF\" precisa conter no mínimo ${userDTORules.CPF.minLength} caracteres`,\n\t})\n\t@MaxLength(userDTORules.CPF.maxLength, {\n\t\tmessage: `O campo \"CPF\" precisa conter no máximo ${userDTORules.CPF.maxLength} caracteres`,\n\t})\n\t\tCPF: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"block\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(condominiumRelUserDTORules.block.maxLength, {\n\t\tmessage: `O campo \"block\" precisa conter no máximo ${condominiumRelUserDTORules.block.maxLength} caracteres`,\n\t})\n\t@IsOptional()\n\t\tblock: string;\n\n\t@ApiProperty()\n\t@IsNumber(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"apartmentNumber\" precisa ser um número',\n\t\t},\n\t)\n\t@Max(condominiumRelUserDTORules.apartmentNumber.maxLength, {\n\t\tmessage: `O campo \"apartmentNumber\" precisa ser menor ou igual a ${condominiumRelUserDTORules.apartmentNumber.maxLength}`,\n\t})\n\t@Min(condominiumRelUserDTORules.apartmentNumber.minLength, {\n\t\tmessage: `O campo \"apartmentNumber\" precisa ser maior ou igual a ${condominiumRelUserDTORules.apartmentNumber.minLength}`,\n\t})\n\t@IsOptional()\n\t\tapartmentNumber: number;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"phoneNumber\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(userDTORules.phoneNumber.maxLength, {\n\t\tmessage: `O campo \"phoneNumber\" precisa conter no máximo ${userDTORules.phoneNumber.maxLength} caracteres`,\n\t})\n\t@MinLength(userDTORules.phoneNumber.minLength, {\n\t\tmessage: `O campo \"phoneNumber\" precisa conter no mínimo ${userDTORules.phoneNumber.minLength} caracteres`,\n\t})\n\t\tphoneNumber: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserService.html":{"url":"injectables/CreateUserService.html","title":"injectable - CreateUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createUser.old.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, crypt: CryptAdapter, otpRepo: OTPRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/createUser.old.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpRepo\n                                                  \n                                                        \n                                                                        OTPRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createUser.old.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { CryptAdapter } from \"@registry:app/adapters/crypt\";\nimport { OTPRepo } from \"@registry:app/repositories/otp\";\nimport { UserRepo } from \"@registry:app/repositories/user\";\nimport { IService } from \"./_IService\";\nimport { Password } from \"@registry:app/entities/VO\";\nimport { User } from \"@registry:app/entities/user\";\nimport { CondominiumRelUser } from \"@registry:app/entities/condominiumRelUser\";\n\ninterface IProps {\n\tuser: User;\n\tcondominiumRelUser: CondominiumRelUser;\n}\n\n@Injectable()\nexport class CreateUserService implements IService {\n\tconstructor(\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t\tprivate readonly otpRepo: OTPRepo,\n\t) {}\n\n\tasync exec(input: IProps) {\n\t\tconst hashPass = await this.crypt.hash(input.user.password.value);\n\n\t\tconst user = input.user.dereference();\n\t\tuser.password = new Password(hashPass);\n\n\t\tawait this.userRepo.create({ \n\t\t\tuser, \n\t\t\tcondominiumRelUser: input.condominiumRelUser \n\t\t});\n\t\tawait this.otpRepo.delete({ email: input.user.email });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserService-1.html":{"url":"injectables/CreateUserService-1.html","title":"injectable - CreateUserService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createUser.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por criar um novo usuário\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(inviteRepo: InviteRepo, crypt: CryptAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/createUser.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inviteRepo\n                                                  \n                                                        \n                                                                        InviteRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(undefined: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createUser.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { ApartmentNumber, Block, Password } from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { IService } from './_IService';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\n\ninterface IProps {\n\tuser: User;\n\tinvite: Invite;\n\tapartmentNumber?: ApartmentNumber | null;\n\tblock?: Block | null;\n}\n\n/** Serviço responsável por criar um novo usuário */\n@Injectable()\nexport class CreateUserService implements IService {\n\tconstructor(\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tasync exec({ ...input }: IProps) {\n\t\tconst hashPass = await this.crypt.hash(input.user.password.value);\n\n\t\tconst user = input.user.dereference();\n\t\tuser.password = new Password(hashPass);\n\n\t\tconst condominiumRelUser = new CondominiumRelUser({\n\t\t\tapartmentNumber: input.apartmentNumber\n\t\t\t\t? input.apartmentNumber.value\n\t\t\t\t: undefined,\n\t\t\tblock: input.block ? input.block.value : undefined,\n\t\t\tlevel: input.invite.type.value,\n\t\t\tcondominiumId: input.invite.condominiumId.value,\n\t\t\tuserId: input.user.id.value,\n\t\t});\n\n\t\tawait this.inviteRepo.transferToUserResources({\n\t\t\tuser,\n\t\t\tcondominiumRelUser,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptAdapter.html":{"url":"classes/CryptAdapter.html","title":"class - CryptAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/crypt.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                compare\n                            \n                            \n                                    Abstract\n                                hash\n                            \n                            \n                                    Abstract\n                                hashWithHmac\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(input: ICryptCompare)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/crypt.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptCompare\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/crypt.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hashWithHmac\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashWithHmac(input: ICryptHmac)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/crypt.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptHmac\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface ICryptCompare {\n\tdata: string;\n\thashedData: string;\n}\n\nexport interface ICryptHmac {\n\tdata: string;\n\tkey: string;\n}\n\nexport abstract class CryptAdapter {\n\tabstract hash(data: string): Promise;\n\tabstract hashWithHmac(input: ICryptHmac): Promise;\n\tabstract compare(input: ICryptCompare): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptSpy.html":{"url":"classes/CryptSpy.html","title":"class - CryptSpy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptSpy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/adapters/cryptSpy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CryptAdapter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                            \n                                    Async\n                                hashWithHmac\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\thashWithHmac: 0,\n\t\thash: 0,\n\t\tcompare: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/adapters/cryptSpy.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(input: ICryptCompare)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/adapters/cryptSpy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptCompare\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/adapters/cryptSpy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashWithHmac\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashWithHmac()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/adapters/cryptSpy.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CryptAdapter, ICryptCompare } from '@registry:app/adapters/crypt';\n\nexport class CryptSpy implements CryptAdapter {\n\tcalls = {\n\t\thashWithHmac: 0,\n\t\thash: 0,\n\t\tcompare: 0,\n\t};\n\n\tasync hashWithHmac(): Promise {\n\t\tthis.calls.hashWithHmac = this.calls.hashWithHmac + 1;\n\t\treturn 'e187f1f266a145c2f8649b2324d0bb54a7cf62e3c9abfce5a7f2ff8bbbd59d44b';\n\t}\n\n\tasync hash(data: string): Promise {\n\t\tthis.calls.hash = this.calls.hash + 1;\n\t\treturn data;\n\t}\n\n\tasync compare(input: ICryptCompare): Promise {\n\t\tthis.calls.compare = this.calls.compare + 1;\n\t\treturn input.data === input.hashedData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseCustomError.html":{"url":"classes/DatabaseCustomError.html","title":"class - DatabaseCustomError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseCustomError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/error/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/error/index.ts:19\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de banco de dados, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro e o identificador usado para mapear os erros na camada dos filters, use os enums vindos de DatabaseCustomErrorsTags\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DatabaseCustomErrorsTags\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/error/index.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DatabaseCustomErrorsTags {\n\ttooManyEntities = 'Too many entities',\n\tmaximumCondominiumRelUser = 'Maximum condominiumRelUser',\n\twrongInputLevel = 'Wrong input level detected',\n\tcontentAlreadyExists = 'This content already exists',\n\tcontentDoesntExists = 'This content doesn\\'t exists',\n\tsafeSearchEnabled = 'Safe search detected',\n\tdtoFailure = 'The DTO found an error',\n\trefLost = 'The reference could not be found',\n\tmalformedRef = 'Malformed reference',\n}\n\ninterface IProps {\n\tmessage: string;\n\ttag: DatabaseCustomErrorsTags;\n}\n\nexport class DatabaseCustomError extends Error {\n\treadonly tag: DatabaseCustomErrorsTags;\n\n\t/**\n\t * Erro customizado usado na camada de banco de dados, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e o identificador usado para mapear os erros na camada dos filters, use os enums vindos de DatabaseCustomErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Database Custom Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseCustomErrorFilter.html":{"url":"classes/DatabaseCustomErrorFilter.html","title":"class - DatabaseCustomErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseCustomErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros customizados do banco de dados\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                possibleErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        possibleErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFirestoreErrors[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentAlreadyExists,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.refLost,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.tooManyEntities,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.maximumCondominiumRelUser,\n\t\t\tmessage: 'Este usuário já está vinculado a outro condomínio',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.wrongInputLevel,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: DatabaseCustomError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            DatabaseCustomError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\nimport {\n\tDatabaseCustomError,\n\tDatabaseCustomErrorsTags,\n} from '@registry:infra/storages/db/error';\n\ninterface IFirestoreErrors {\n\tname: string;\n\ttag: DatabaseCustomErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros customizados do banco de dados */\n@Catch(DatabaseCustomError)\nexport class DatabaseCustomErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate readonly possibleErrors: IFirestoreErrors[] = [\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentAlreadyExists,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.refLost,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.tooManyEntities,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.maximumCondominiumRelUser,\n\t\t\tmessage: 'Este usuário já está vinculado a outro condomínio',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.wrongInputLevel,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t];\n\n\tcatch(exception: DatabaseCustomError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.database,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateFormats.html":{"url":"classes/DateFormats.html","title":"class - DateFormats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateFormats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/utils/dateFormats.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                prettify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        prettify\n                        \n                    \n                \n            \n            \n                \n                        \n                    prettify(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/utils/dateFormats.ts:6\n                        \n                    \n\n\n            \n                \n                        Formata a data para ser mostrado, por exemplo, em logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter a data a ser formatada\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DateFormats {\n\t/**\n\t * Formata a data para ser mostrado, por exemplo, em logs\n\t * @param date - Deve conter a data a ser formatada\n\t **/\n\tstatic prettify(date: Date): string {\n\t\tconst rawSeconds = date.getUTCSeconds();\n\t\tconst rawMinutes = date.getUTCMinutes();\n\t\tconst rawHours = date.getUTCHours();\n\n\t\tconst seconds = rawSeconds > 9 ? rawSeconds : `0${rawSeconds}`;\n\t\tconst minutes = rawMinutes > 9 ? rawMinutes : `0${rawMinutes}`;\n\t\tconst hours = rawHours > 9 ? rawHours : `0${rawHours}`;\n\n\t\treturn `${hours}:${minutes}:${seconds} UTC`;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserDTO.html":{"url":"classes/DeleteUserDTO.html","title":"class - DeleteUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/deleteAdminUser.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de deleção de usuários\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/deleteAdminUser.DTO.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { userDTORules } from '@registry:app/entities/user';\nimport { IsEmail, IsString, MaxLength } from 'class-validator';\n\n/** Usado para validar o corpo das requisições de deleção de usuários */\nexport class DeleteUserDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserService.html":{"url":"injectables/DeleteUserService.html","title":"injectable - DeleteUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/deleteUser.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por deletar um usuário\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/deleteUser.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(undefined: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/deleteUser.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Email } from '@registry:app/entities/VO';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { Injectable } from '@nestjs/common';\nimport { IService } from './_IService';\nimport {\n\tServiceErrors,\n\tServiceErrorsTags,\n} from '@registry:app/errors/services';\n\ninterface IProps {\n\ttarget: Email;\n\tactualUser?: Email;\n}\n\n/** Serviço responsável por deletar um usuário */\n@Injectable()\nexport class DeleteUserService implements IService {\n\tconstructor(private readonly userRepo: UserRepo) {}\n\n\tasync exec({ target, actualUser }: IProps) {\n\t\tif (actualUser && target.equalTo(actualUser))\n\t\t\tthrow new ServiceErrors({\n\t\t\t\tmessage:\n\t\t\t\t\t'Não é possível deletar você mesmo utilizando os recursos de administradores',\n\t\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\t});\n\n\t\tawait this.userRepo.delete({ key: target });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EchoguardAdapter.html":{"url":"classes/EchoguardAdapter.html","title":"class - EchoguardAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EchoguardAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/echoguard/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            LoggerAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                alert\n                            \n                            \n                                    Async\n                                critical\n                            \n                            \n                                    Async\n                                debug\n                            \n                            \n                                    Async\n                                emergencial\n                            \n                            \n                                    Async\n                                error\n                            \n                            \n                                    Async\n                                info\n                            \n                            \n                                    Async\n                                log\n                            \n                            \n                                    Async\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        alert\n                        \n                    \n                \n            \n            \n                \n                        \n                    alert(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        critical\n                        \n                    \n                \n            \n            \n                \n                        \n                    critical(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emergencial\n                        \n                    \n                \n            \n            \n                \n                        \n                    emergencial(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        warn\n                        \n                    \n                \n            \n            \n                \n                        \n                    warn(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Echo } from 'echoguard';\nimport { ILoggerDefaultProps, LoggerAdapter, TECEProps } from '../logger';\n\nexport class EchoguardAdapter implements LoggerAdapter {\n\tasync log(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.info });\n\t}\n\n\tasync info(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.info });\n\t}\n\n\tasync debug(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.debug });\n\t}\n\n\tasync warn(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.warn });\n\t}\n\n\tasync alert(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.alert });\n\t}\n\n\tasync error({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\tEcho.create({\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: Echo.LogsLevelEnum.error,\n\t\t});\n\t}\n\n\tasync critical({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\tEcho.create({\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: Echo.LogsLevelEnum.error,\n\t\t});\n\t}\n\n\tasync emergencial({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\tEcho.create({\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: Echo.LogsLevelEnum.error,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Email.html":{"url":"classes/Email.html","title":"class - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/email/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/email/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEmail que deve conter menos de 320 caracteres\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Email)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/email/index.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Email\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/email/index.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class Email implements ValueObject {\n\t/**\n\t * @param _value - Email que deve conter menos de 320 caracteres\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tif (_value.length > userDTORules.email.maxLength)\n\t\t\tthrow new EntitieError({\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\tmessage: 'Valor incorreto de Email',\n\t\t\t});\n\t}\n\n\tpublic equalTo(input: Email) {\n\t\treturn input.value === this._value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailAdapter.html":{"url":"classes/EmailAdapter.html","title":"class - EmailAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/email.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        send\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/adapters/email.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface ISendMailContent {\n\tfrom: string;\n\tto: string;\n\tsubject: string;\n\tbody: string;\n}\n\nexport abstract class EmailAdapter {\n\tabstract send: (data: ISendMailContent) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailSpy.html":{"url":"classes/EmailSpy.html","title":"class - EmailSpy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailSpy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/adapters/emailSpy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            EmailAdapter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tsend: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/adapters/emailSpy.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/adapters/emailSpy.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EmailAdapter } from '@registry:app/adapters/email';\n\nexport class EmailSpy implements EmailAdapter {\n\tcalls = {\n\t\tsend: 0,\n\t};\n\n\tasync send(): Promise {\n\t\tthis.calls.send = this.calls.send + 1;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntitieError.html":{"url":"classes/EntitieError.html","title":"class - EntitieError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntitieError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/entities.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/errors/entities.ts:9\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de entidades, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro e a entidade envolvida, use EntitiesEnum para fazer esta indicação\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntitiesEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/errors/entities.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\n\ninterface IProps {\n\tentity: EntitiesEnum;\n\tmessage: string;\n}\n\nexport class EntitieError extends Error {\n\treadonly entity: EntitiesEnum;\n\n\t/**\n\t * Erro customizado usado na camada de entidades, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e a entidade envolvida, use EntitiesEnum para fazer esta indicação\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name =\n\t\t\tinput.entity === EntitiesEnum.vo\n\t\t\t\t? 'Value Object error'\n\t\t\t\t: 'Entity error';\n\t\tthis.message = input.message;\n\t\tthis.entity = input.entity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntitieErrorFilter.html":{"url":"classes/EntitieErrorFilter.html","title":"class - EntitieErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntitieErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/vo.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Value Objects\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/vo.filter.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: EntitieError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/vo.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            EntitieError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport { EntitieError } from '@registry:app/errors/entities';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros dos Value Objects */\n@Catch(EntitieError)\nexport class EntitieErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(exception: EntitieError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tif (exception.entity === EntitiesEnum.vo) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: exception.name,\n\t\t\t\tlayer: LayersEnum.entitie,\n\t\t\t\tdescription: exception.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(400).json({\n\t\t\t\tstatusCode: 400,\n\t\t\t\tmessage:\n\t\t\t\t\t'Valores malformados foram detectados, certifique-se de que o conteúdo possui uma boa integridade',\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.entitie,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entity.html":{"url":"classes/Entity.html","title":"class - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/entities.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para manter um padrão nas classes da camada de entidades\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                dereference\n                            \n                            \n                                    Abstract\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        dereference\n                        \n                    \n                \n            \n            \n                \n                        \n                    dereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Entity\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { IClass } from '@registry:utils/class';\n\nexport enum EntitiesEnum {\n\tcondominium = 'Condominium',\n\tuser = 'User',\n\totp = 'OTP',\n\tinvite = 'Invite',\n\tvo = 'Value Object',\n}\n\n/** Usado para manter um padrão nas classes da camada de entidades */\nexport abstract class Entity {\n\tabstract equalTo(input: Entity): boolean;\n\tabstract dereference(): Entity;\n}\n\nexport enum VOEnum {\n\tNullOrUndefined,\n}\n\n/** Usado para manter um padrão nos Value Objects */\nexport abstract class ValueObject {\n\tabstract equalTo(input: T): boolean;\n\tabstract get value(): O;\n\n\tstatic compare(\n\t\tc1?: ValueObject | null,\n\t\tc2?: ValueObject | null,\n\t): boolean {\n\t\tif (c1 !== null && c1 !== undefined && c2 !== null && c2 !== undefined)\n\t\t\treturn c1.equalTo(c2);\n\n\t\treturn c1 === c2;\n\t}\n\n\tstatic build(\n\t\tconstructor: IClass,\n\t\tinternalValue?: ConstructorParameters> | null,\n\t) {\n\t\tconst orStatement = (\n\t\t\talternativeValue: A,\n\t\t): { exec: () => InstanceType> | A } => {\n\t\t\tif (!internalValue) return { exec: () => alternativeValue };\n\t\t\treturn { exec: () => new constructor(internalValue) };\n\t\t};\n\n\t\tconst allowNullish = (): {\n\t\t\texec: () => InstanceType> | null | undefined;\n\t\t} => {\n\t\t\tif (internalValue === null || internalValue === undefined)\n\t\t\t\treturn { exec: () => internalValue };\n\t\t\treturn { exec: () => new constructor(internalValue) };\n\t\t};\n\n\t\treturn {\n\t\t\texec: (): InstanceType> => {\n\t\t\t\tif (!internalValue)\n\t\t\t\t\tthrow new EntitieError({\n\t\t\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t'Valor interno de entidade não pode ser null ou undefined, use \\'or\\' para garantir que seja possível de se usar valores nulos ou valores alternativos ou use \\'allowNullish\\' para lidar diretamente com nullish values',\n\t\t\t\t\t});\n\t\t\t\treturn new constructor(internalValue);\n\t\t\t},\n\t\t\tor: (alternativeValue: T) =>\n\t\t\t\torStatement(alternativeValue),\n\t\t\tallowNullish,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchAdapter.html":{"url":"classes/FetchAdapter.html","title":"class - FetchAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/fetch/fetchAdapter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            HttpAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                call\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        call\n                        \n                    \n                \n            \n            \n                \n                        \n                    call(input: IHttpClientCall)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/fetch/fetchAdapter.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IHttpClientCall\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { IHttpClientCall, HttpAdapter, IHttpClientCallReturn } from '../http';\nimport { AdapterError } from '@registry:app/errors/adapter';\n\nexport class FetchAdapter implements HttpAdapter {\n\tasync call(input: IHttpClientCall): Promise {\n\t\tlet statusCode: number | undefined;\n\n\t\treturn await fetch(input.url, {\n\t\t\tmethod: input.method,\n\t\t\theaders: input.headers,\n\t\t\tbody: input.body,\n\t\t})\n\t\t\t.then(async (res) => {\n\t\t\t\tconst status = res.status;\n\t\t\t\tconst headers = res.headers;\n\t\t\t\tconst body: any = res.headers\n\t\t\t\t\t.get('content-type')\n\t\t\t\t\t?.includes('application/json')\n\t\t\t\t\t? await res.json()\n\t\t\t\t\t: undefined;\n\n\t\t\t\tif (res.status >= 400) {\n\t\t\t\t\tstatusCode = res.status;\n\t\t\t\t\tthrow new HttpException(\n\t\t\t\t\t\t'Requisição mal sucedida',\n\t\t\t\t\t\tres.status,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tstatus,\n\t\t\t\t\theaders,\n\t\t\t\t\tbody,\n\t\t\t\t};\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (!(err instanceof HttpException))\n\t\t\t\t\tthrow new AdapterError({\n\t\t\t\t\t\tmessage: `Não foi possível estabelecer uma conexão com o serviço de URL ${input.url}, pois o adaptador responsável por tal tarefa disparou um erro não reconhecível`,\n\t\t\t\t\t});\n\n\t\t\t\tthrow new AdapterError({\n\t\t\t\t\tmessage: `A requisição do serviço de URL ${input.url} falhou com o código ${statusCode}`,\n\t\t\t\t\thttpCode: statusCode,\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseLoggerAdapter.html":{"url":"classes/FirebaseLoggerAdapter.html","title":"class - FirebaseLoggerAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseLoggerAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/firebase-logger/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            LoggerAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                alert\n                            \n                            \n                                    Async\n                                critical\n                            \n                            \n                                    Async\n                                debug\n                            \n                            \n                                    Async\n                                emergencial\n                            \n                            \n                                    Async\n                                error\n                            \n                            \n                                    Async\n                                info\n                            \n                            \n                                    Async\n                                log\n                            \n                            \n                                    Async\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        alert\n                        \n                    \n                \n            \n            \n                \n                        \n                    alert(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        critical\n                        \n                    \n                \n            \n            \n                \n                        \n                    critical(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emergencial\n                        \n                    \n                \n            \n            \n                \n                        \n                    emergencial(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        warn\n                        \n                    \n                \n            \n            \n                \n                        \n                    warn(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ILoggerDefaultProps, LoggerAdapter, TECEProps } from '../logger';\nimport { warn, info, debug, error, log } from 'firebase-functions/logger';\n\nexport class FirebaseLoggerAdapter implements LoggerAdapter {\n\tasync log(input: ILoggerDefaultProps): Promise {\n\t\tlog(`LOG: ${input.name}`, { ...input, level: 'LOG' });\n\t}\n\n\tasync info(input: ILoggerDefaultProps): Promise {\n\t\tinfo(`INFO: ${input.name}`, {\n\t\t\t...input,\n\t\t\tlevel: 'INFO',\n\t\t});\n\t}\n\n\tasync debug(input: ILoggerDefaultProps): Promise {\n\t\tdebug(`DEBUG: ${input.name}`, {\n\t\t\t...input,\n\t\t\tlevel: 'DEBUG',\n\t\t});\n\t}\n\n\tasync warn(input: ILoggerDefaultProps): Promise {\n\t\twarn(`WARN: ${input.name}`, {\n\t\t\t...input,\n\t\t\tlevel: 'WARN',\n\t\t});\n\t}\n\n\tasync alert(input: ILoggerDefaultProps): Promise {\n\t\twarn(`ALERT: ${input.name}`, {\n\t\t\t...input,\n\t\t\tlevel: 'ALERT',\n\t\t});\n\t}\n\n\tasync error({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\terror(`ERROR: ${input.name}`, {\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: 'ERROR',\n\t\t});\n\t}\n\n\tasync critical({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\terror(`CRITICAL: ${input.name}`, {\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: 'CRITICAL',\n\t\t});\n\t}\n\n\tasync emergencial({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\terror(`EMERGENCIAL: ${input.name}`, {\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: 'EMERGENCIAL',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirestoreGetCondominiumDTO.html":{"url":"classes/FirestoreGetCondominiumDTO.html","title":"class - FirestoreGetCondominiumDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirestoreGetCondominiumDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/DTO/getCondominium.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/DTO/getCondominium.ts:11\n                        \n                    \n\n\n            \n                \n                        Valida o retorno dos dados vindos do firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreCondominiumData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { IIncomingFirestoreCondominiumData } from '../mapper/condominiums';\nimport { z } from 'zod';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\n\nexport class FirestoreGetCondominiumDTO {\n\t/**\n\t * Valida o retorno dos dados vindos do firestore\n\t * @param input - Deve conter os dados a ser validado\n\t **/\n\tstatic exec(input: any) {\n\t\tconst schema = z.object({\n\t\t\tid: z.string().uuid(),\n\t\t\tname: z\n\t\t\t\t.string()\n\t\t\t\t.min(condominiumDTORules.name.minLength)\n\t\t\t\t.max(condominiumDTORules.name.maxLength),\n\t\t\tCEP: z.string().length(condominiumDTORules.CEP.minLength),\n\t\t\tCNPJ: z.string().length(condominiumDTORules.CNPJ.minLength),\n\t\t\tnum: z\n\t\t\t\t.number()\n\t\t\t\t.min(condominiumDTORules.num.minLength)\n\t\t\t\t.max(condominiumDTORules.num.maxLength),\n\t\t\tcreatedAt: z.instanceof(Timestamp),\n\t\t\tupdatedAt: z.instanceof(Timestamp),\n\t\t});\n\t\tschema.parse(input);\n\n\t\treturn input as IIncomingFirestoreCondominiumData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirestoreGetCondominiumRelUserDTO.html":{"url":"classes/FirestoreGetCondominiumRelUserDTO.html","title":"class - FirestoreGetCondominiumRelUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirestoreGetCondominiumRelUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/DTO/getCondominiumRel.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/DTO/getCondominiumRel.ts:11\n                        \n                    \n\n\n            \n                \n                        Valida o retorno dos dados vindos do firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreCondominiumRelUserData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { z } from 'zod';\nimport { IIncomingFirestoreCondominiumRelUserData } from '../mapper/condominiumRelUser';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class FirestoreGetCondominiumRelUserDTO {\n\t/**\n\t * Valida o retorno dos dados vindos do firestore\n\t * @param input - Deve conter os dados a ser validado\n\t **/\n\tstatic exec(input: any) {\n\t\tconst schema = z.object({\n\t\t\tapartmentNumber: z.optional(\n\t\t\t\tz\n\t\t\t\t\t.number()\n\t\t\t\t\t.min(condominiumRelUserDTORules.apartmentNumber.minLength)\n\t\t\t\t\t.max(condominiumRelUserDTORules.apartmentNumber.maxLength),\n\t\t\t),\n\t\t\tblock: z.optional(\n\t\t\t\tz.string().max(condominiumRelUserDTORules.block.maxLength),\n\t\t\t),\n\t\t\tlevel: z.optional(\n\t\t\t\tz\n\t\t\t\t\t.number()\n\t\t\t\t\t.min(condominiumRelUserDTORules.level.minLength)\n\t\t\t\t\t.max(condominiumRelUserDTORules.level.maxLength),\n\t\t\t),\n\t\t\tupdatedAt: z.instanceof(Timestamp),\n\t\t\tuserId: z.string().uuid(),\n\t\t\tid: z.string().uuid(),\n\t\t\tcondominiumId: z.string().uuid(),\n\t\t});\n\t\tschema.parse(input);\n\n\t\treturn input as IIncomingFirestoreCondominiumRelUserData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirestoreGetInviteDTO.html":{"url":"classes/FirestoreGetInviteDTO.html","title":"class - FirestoreGetInviteDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirestoreGetInviteDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/DTO/getInvite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/DTO/getInvite.ts:11\n                        \n                    \n\n\n            \n                \n                        Valida o retorno dos dados vindos do firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ndado a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreInviteData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { IIncomingFirestoreInviteData } from '../mapper/invite';\nimport { z } from 'zod';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class FirestoreGetInviteDTO {\n\t/**\n\t * Valida o retorno dos dados vindos do firestore\n\t * @param input - dado a ser validado\n\t **/\n\tstatic exec(input: any) {\n\t\tconst schema = z.object({\n\t\t\tid: z.string().uuid(),\n\t\t\tcondominiumId: z.string().uuid(),\n\t\t\tttl: z\n\t\t\t\t.number()\n\t\t\t\t.max(1000 * 60 * 60 * 24 * 10)\n\t\t\t\t.min(0),\n\t\t\ttype: z\n\t\t\t\t.number()\n\t\t\t\t.min(condominiumRelUserDTORules.level.minLength)\n\t\t\t\t.max(condominiumRelUserDTORules.level.maxLength),\n\t\t\temail: z.string().email(),\n\t\t\texpiresAt: z.instanceof(Timestamp),\n\t\t});\n\t\tschema.parse(input);\n\n\t\treturn input as IIncomingFirestoreInviteData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirestoreGetUserDTO.html":{"url":"classes/FirestoreGetUserDTO.html","title":"class - FirestoreGetUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirestoreGetUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/DTO/getUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/DTO/getUser.ts:11\n                        \n                    \n\n\n            \n                \n                        Valida o retorno dos dados vindos do firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreUserData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { IIncomingFirestoreUserData } from '../mapper/users';\nimport { z } from 'zod';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class FirestoreGetUserDTO {\n\t/**\n\t * Valida o retorno dos dados vindos do firestore\n\t * @param input - Deve conter os dados a ser validado\n\t **/\n\tstatic exec(input: any) {\n\t\tconst schema = z.object({\n\t\t\tid: z.string().uuid(),\n\t\t\tname: z\n\t\t\t\t.string()\n\t\t\t\t.min(userDTORules.name.minLength)\n\t\t\t\t.max(userDTORules.name.maxLength),\n\t\t\temail: z.string().email(),\n\t\t\tpassword: z\n\t\t\t\t.string()\n\t\t\t\t.min(userDTORules.password.minLength)\n\t\t\t\t.max(userDTORules.password.maxLength),\n\t\t\tCPF: z.string().length(userDTORules.CPF.minLength),\n\t\t\tphoneNumber: z\n\t\t\t\t.string()\n\t\t\t\t.min(userDTORules.phoneNumber.minLength)\n\t\t\t\t.max(userDTORules.phoneNumber.maxLength),\n\t\t\tcreatedAt: z.instanceof(Timestamp),\n\t\t\tupdatedAt: z.instanceof(Timestamp),\n\t\t});\n\t\tschema.parse(input);\n\n\t\treturn input as IIncomingFirestoreUserData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FirestoreModule.html":{"url":"modules/FirestoreModule.html","title":"module - FirestoreModule","body":"\n                   \n\n\n\n\n    Modules\n    FirestoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FirestoreModule\n\n\n\ncluster_FirestoreModule_providers\n\n\n\ncluster_FirestoreModule_exports\n\n\n\n\nCondominiumRepo \n\nCondominiumRepo \n\n\n\nInviteRepo \n\nInviteRepo \n\n\n\nUserRepo \n\nUserRepo \n\n\n\nFirestoreModule\n\nFirestoreModule\n\nCondominiumRepo  -->\n\nFirestoreModule->CondominiumRepo \n\n\n\nInviteRepo  -->\n\nFirestoreModule->InviteRepo \n\n\n\nUserRepo  -->\n\nFirestoreModule->UserRepo \n\n\n\n\n\nCollectionsRefService\n\nCollectionsRefService\n\nFirestoreModule -->\n\nCollectionsRefService->FirestoreModule\n\n\n\n\n\nFirestoreService\n\nFirestoreService\n\nFirestoreModule -->\n\nFirestoreService->FirestoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/firestore.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CollectionsRefService\n                        \n                        \n                            FirestoreService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CondominiumRepo\n                        \n                        \n                            InviteRepo\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UserRepo } from '@registry:app/repositories/user';\nimport { Global, Module } from '@nestjs/common';\nimport { UsersFirestore } from './repositories/users';\nimport { CondominiumRepo } from '@registry:app/repositories/condominium';\nimport { CondominiumsFirestore } from './repositories/condominiums';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { InviteFirestore } from './repositories/invite';\nimport { FirestoreService } from './firestore.service';\nimport { CollectionsRefService } from './collectionsRefs.service';\n\n@Global()\n@Module({\n\tproviders: [\n\t\tFirestoreService,\n\t\tCollectionsRefService,\n\t\t{\n\t\t\tprovide: UserRepo,\n\t\t\tuseClass: UsersFirestore,\n\t\t},\n\t\t{\n\t\t\tprovide: CondominiumRepo,\n\t\t\tuseClass: CondominiumsFirestore,\n\t\t},\n\t\t{\n\t\t\tprovide: InviteRepo,\n\t\t\tuseClass: InviteFirestore,\n\t\t},\n\t],\n\texports: [UserRepo, CondominiumRepo, InviteRepo],\n})\nexport class FirestoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirestoreService.html":{"url":"injectables/FirestoreService.html","title":"injectable - FirestoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirestoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/firestore.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                onApplicationShutdown\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    instance\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                        \n                    close()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        instance\n                    \n                \n\n                \n                    \n                        getinstance()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, OnApplicationShutdown } from '@nestjs/common';\nimport { initializeApp } from 'firebase-admin/app';\nimport { Firestore } from 'firebase-admin/firestore';\nimport admin from 'firebase-admin';\n\n@Injectable()\nexport class FirestoreService implements OnApplicationShutdown {\n\tprivate readonly _instance: Firestore;\n\n\tconstructor() {\n\t\tinitializeApp({\n\t\t\tprojectId: process.env.GCP_PROJECT,\n\t\t});\n\n\t\tthis._instance = admin.firestore();\n\t\tthis._instance.settings({\n\t\t\tignoreUndefinedProperties: true,\n\t\t});\n\t}\n\n\tget instance(): Firestore {\n\t\treturn this._instance;\n\t}\n\n\tasync close() {\n\t\tawait this._instance.terminate();\n\t}\n\n\tasync onApplicationShutdown() {\n\t\tawait this._instance.terminate();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GatewayErrorFilter.html":{"url":"classes/GatewayErrorFilter.html","title":"class - GatewayErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GatewayErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/gateways.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Gateways\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                possibleErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/gateways.filter.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        possibleErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGatewayError[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Entrada inválida',\n\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\tmessage:\n\t\t\t\t'Não foi possível atingir o resultado esperado com a entrada de dados fornecida, por favor, verifique se seus dados são válidos',\n\t\t\thttpCode: 400,\n\t\t},\n\t\t{\n\t\t\tname: 'Dada envenenado',\n\t\t\ttag: GatewaysErrorsTags.PoisonedContent,\n\t\t\tmessage: 'Conteúdo mau formado pelo servidor',\n\t\t\thttpCode: 500,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/gateways.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: GatewayErrors, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/gateways.filter.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            GatewayErrors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tGatewayErrors,\n\tGatewaysErrorsTags,\n} from '@registry:infra/gateways/errors';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IGatewayError {\n\tname: string;\n\ttag: GatewaysErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros dos Gateways */\n@Catch(GatewayErrors)\nexport class GatewayErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IGatewayError[] = [\n\t\t{\n\t\t\tname: 'Entrada inválida',\n\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\tmessage:\n\t\t\t\t'Não foi possível atingir o resultado esperado com a entrada de dados fornecida, por favor, verifique se seus dados são válidos',\n\t\t\thttpCode: 400,\n\t\t},\n\t\t{\n\t\t\tname: 'Dada envenenado',\n\t\t\ttag: GatewaysErrorsTags.PoisonedContent,\n\t\t\tmessage: 'Conteúdo mau formado pelo servidor',\n\t\t\thttpCode: 500,\n\t\t},\n\t];\n\n\tcatch(exception: GatewayErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.gateway,\n\t\t\t\tdescription: `${\n\t\t\t\t\texception.content\n\t\t\t\t\t\t? `${error.message} - ${exception.content}`\n\t\t\t\t\t\t: error.message\n\t\t\t\t}`,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.gateway,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GatewayErrors.html":{"url":"classes/GatewayErrors.html","title":"class - GatewayErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GatewayErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/gateways/errors/index.ts:14\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de gateways, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro, o conteúdo e a tag de rastramento para os filters, use o GatewaysErrorsTags\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/gateways/errors/index.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GatewaysErrorsTags\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/gateways/errors/index.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum GatewaysErrorsTags {\n\tInvalidResult = 'Invalid Result',\n\tPoisonedContent = 'Poisoned Content',\n}\n\ninterface IProps {\n\tmessage: string;\n\tcontent?: any;\n\ttag: GatewaysErrorsTags;\n}\n\nexport class GatewayErrors extends Error {\n\treadonly tag: GatewaysErrorsTags;\n\treadonly content: any;\n\n\t/**\n\t * Erro customizado usado na camada de gateways, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro, o conteúdo e a tag de rastramento para os filters, use o GatewaysErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Gateway Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t\tthis.content = input.content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\n\nCepGateway \n\nCepGateway \n\n\n\nGatewayModule\n\nGatewayModule\n\nCepGateway  -->\n\nGatewayModule->CepGateway \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CepGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CepGateway } from '@registry:app/gateways/CEP.gateway';\nimport { Module } from '@nestjs/common';\nimport { ViacepGateway } from './APIs/viacep.gateway';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: CepGateway,\n\t\t\tuseClass: ViacepGateway,\n\t\t},\n\t],\n\texports: [CepGateway],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenInviteService.html":{"url":"injectables/GenInviteService.html","title":"injectable - GenInviteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenInviteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genInvite.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por criar um convite\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                            \n                                    Private\n                                    Async\n                                generateInvite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptAdapter: CryptAdapter, emailAdapter: EmailAdapter, inviteRepo: InviteRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/genInvite.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptAdapter\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailAdapter\n                                                  \n                                                        \n                                                                        EmailAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inviteRepo\n                                                  \n                                                        \n                                                                        InviteRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genInvite.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateInvite\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateInvite(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genInvite.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { Email, Level, UUID } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { Invite } from '@registry:app/entities/invite';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tcondominiumId: UUID;\n\trequiredLevel?: Level;\n\tkey?: string;\n}\n\n/** Serviço responsável por criar um convite */\n@Injectable()\nexport class GenInviteService implements IService {\n\tconstructor(\n\t\tprivate readonly cryptAdapter: CryptAdapter,\n\t\tprivate readonly emailAdapter: EmailAdapter,\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t) {}\n\n\tprivate async generateInvite({\n\t\tinvite,\n\t\tkey,\n\t}: {\n\t\tinvite: Invite;\n\t\tkey: string;\n\t}) {\n\t\tconst inputData = generateStringCodeContent({\n\t\t\tid: invite.id,\n\t\t\temail: invite.email,\n\t\t\trequiredLevel: invite.type,\n\t\t\tcondominiumId: invite.condominiumId,\n\t\t});\n\n\t\treturn await this.cryptAdapter.hashWithHmac({ key, data: inputData });\n\t}\n\n\tasync exec(input: IProps): Promise {\n\t\tconst invite = new Invite({\n\t\t\temail: input.email.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\ttype: input.requiredLevel?.value ?? 0,\n\t\t\tttl: 1000 * 60 * 60 * 24 * 7,\n\t\t});\n\t\tconst inviteAsHash = await this.generateInvite({\n\t\t\tinvite,\n\t\t\tkey: input.key ?? (process.env.INVITE_TOKEN_KEY as string),\n\t\t});\n\n\t\tawait this.inviteRepo.create({ invite });\n\t\tawait this.emailAdapter.send({\n\t\t\tfrom: `${process.env.NAME_SENDER} `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Convite para o condomínio`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este link com ninguém\n\t\t\t\thttps://[EXEMPLO DE DOMÍNIO]/[PÁGINA DO FRONT PARA VALIDAR O CONVITE]/${inviteAsHash}`,\n\t\t});\n\n\t\treturn invite;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenOldTFASevice.html":{"url":"injectables/GenOldTFASevice.html","title":"injectable - GenOldTFASevice","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenOldTFASevice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genTFACode.old.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                            \n                                    Private\n                                    Async\n                                generateRandomNumbers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: EmailAdapter, otp: OTPRepo, crypt: CryptAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/genTFACode.old.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        EmailAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otp\n                                                  \n                                                        \n                                                                        OTPRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genTFACode.old.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateRandomNumbers\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRandomNumbers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genTFACode.old.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Email } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { OTPRepo } from '@registry:app/repositories/otp';\nimport { OTP } from '@registry:app/entities/OTP';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tuserId: string;\n\tttl?: number;\n}\n\n@Injectable()\nexport class GenOldTFASevice implements IService {\n\tconstructor(\n\t\tprivate readonly email: EmailAdapter,\n\t\tprivate readonly otp: OTPRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tprivate async generateRandomNumbers() {\n\t\tlet rawCode: number[] | string = [];\n\n\t\tfor (let i = 0; i `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Solicitação de login`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este código com ninguém\n\t\t\t\t${rawCode}`,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenTFAService.html":{"url":"injectables/GenTFAService.html","title":"injectable - GenTFAService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenTFAService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genTFA.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por iniciar o processo de autenticação de dois fatores\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                            \n                                    Private\n                                    Async\n                                genCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: EmailAdapter, userRepo: UserRepo, crypt: CryptAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/genTFA.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        EmailAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genTFA.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        genCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    genCode(input: UUID)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genTFA.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { Email, UUID } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tuserId: UUID;\n}\n\n/** Serviço responsável por iniciar o processo de autenticação de dois fatores */\n@Injectable()\nexport class GenTFAService implements IService {\n\tconstructor(\n\t\tprivate readonly email: EmailAdapter,\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tprivate async genCode(input: UUID) {\n\t\tconst user = await this.userRepo.find({ key: input, safeSearch: true });\n\t\tlet code = generateStringCodeContent({\n\t\t\temail: user.email,\n\t\t\tid: user.id,\n\t\t});\n\t\tconst key = process.env.TFA_TOKEN_KEY as string;\n\n\t\tconst metadata = JSON.stringify({\n\t\t\tiat: Date.now(),\n\t\t\texp: Date.now() + 1000 * 60 * 60 * 3,\n\t\t});\n\t\tcode = `${btoa(metadata)}.${btoa(code)}`;\n\n\t\tconst inviteSignature = await this.crypt.hashWithHmac({\n\t\t\tdata: code,\n\t\t\tkey,\n\t\t});\n\t\treturn `${btoa(metadata)}.${btoa(inviteSignature)}`;\n\t}\n\n\tasync exec(input: IProps) {\n\t\tconst code = await this.genCode(input.userId);\n\t\tawait this.email.send({\n\t\t\tfrom: `${process.env.NAME_SENDER} `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Solicitação de login`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este código com ninguém\n\t\t\t\thttps://[EXEMPLO DE DOMÍNIO]/[PÁGINA DO FRONT PARA VALIDAR O CÓDIGO]/${code}`,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenericErrorFilter.html":{"url":"classes/GenericErrorFilter.html","title":"class - GenericErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenericErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/generic.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros genéricos\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                untrackableErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/generic.filter.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        untrackableErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUntrackableErrors[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\tkey: 'ALREADY_EXISTS: entity already exists',\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/generic.filter.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/generic.filter.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IUntrackableErrors {\n\tname: string;\n\tkey: string;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros genéricos */\n@Catch()\nexport class GenericErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate readonly untrackableErrors: IUntrackableErrors[] = [\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\tkey: 'ALREADY_EXISTS: entity already exists',\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t];\n\n\tcatch(exception: Error, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.untrackableErrors.find((item) => {\n\t\t\treturn exception?.message?.includes(item.key);\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: `Erro interno do servidor ${exception?.name}`,\n\t\t\tlayer: LayersEnum.unknown,\n\t\t\tdescription: exception?.message ?? 'Causa desconhecida',\n\t\t\tstack: exception?.stack ?? 'Causa desconhecida',\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetCondominiumRelUserService.html":{"url":"injectables/GetCondominiumRelUserService.html","title":"injectable - GetCondominiumRelUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetCondominiumRelUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/getCondominiumRel.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por ler e retornar a relação que um usuário tem com seus condominios\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/getCondominiumRel.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(undefined: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/getCondominiumRel.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UUID } from '@registry:app/entities/VO';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { IService } from './_IService';\n\ninterface IProps {\n\tuserId: UUID;\n}\n\n/** Serviço responsável por ler e retornar a relação que um usuário tem com seus condominios */\n@Injectable()\nexport class GetCondominiumRelUserService implements IService {\n\tconstructor(private readonly userRepo: UserRepo) {}\n\n\tasync exec({ userId }: IProps) {\n\t\tconst condominiumRelUserGroup =\n\t\t\tawait this.userRepo.getAllCondominiumRelation({ userId });\n\t\treturn {\n\t\t\tcondominiumRels: condominiumRelUserGroup,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuardErrorFilter.html":{"url":"classes/GuardErrorFilter.html","title":"class - GuardErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuardErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/guard.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Guards\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/guard.filter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: GuardErrors, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/guard.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            GuardErrors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros dos Guards */\n@Catch(GuardErrors)\nexport class GuardErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(exception: GuardErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tthis.logger.error({\n\t\t\tname: `Camada de autenticação - ${exception.name}`,\n\t\t\tlayer: LayersEnum.auth,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(401).json({\n\t\t\tstatusCode: 401,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuardErrors.html":{"url":"classes/GuardErrors.html","title":"class - GuardErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuardErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/errors/guard.ts:5\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de guards, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        interface IProps {\n\tmessage: string;\n}\n\nexport class GuardErrors extends Error {\n\t/**\n\t * Erro customizado usado na camada de guards, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Guard Error';\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/HmacInviteGuard.html":{"url":"guards/HmacInviteGuard.html","title":"guard - HmacInviteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    HmacInviteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/hmac-invite.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar a integridade e validade dos convites\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                mapKeyBasedOnLevel\n                            \n                            \n                                    Private\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(crypt: CryptAdapter, inviteRepo: InviteRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/hmac-invite.guard.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inviteRepo\n                                                  \n                                                        \n                                                                        InviteRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/hmac-invite.guard.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapKeyBasedOnLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapKeyBasedOnLevel(input: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/hmac-invite.guard.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(input: IValidate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/hmac-invite.guard.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IValidate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { Email } from '@registry:app/entities/VO';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\nimport { plainToClass } from 'class-transformer';\nimport { InviteUserDTO } from '@registry:infra/http/DTO/inviteUser.DTO';\nimport { checkClassValidatorErrors } from '@registry:utils/convertValidatorErr';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { Invite } from '@registry:app/entities/invite';\n\ninterface IValidate {\n\temail: Email;\n\tinviteAsHash: string;\n\tinvite: Invite;\n}\n\n/** Usado para validar a integridade e validade dos convites */\n@Injectable()\nexport class HmacInviteGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly crypt: CryptAdapter,\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t) {}\n\n\tprivate mapKeyBasedOnLevel(input: number | undefined) {\n\t\tswitch (input) {\n\t\tcase 1:\n\t\t\treturn process.env.INVITE_ADMIN_TOKEN_KEY;\n\t\tcase 2:\n\t\t\treturn process.env.INVITE_SUPER_ADMIN_TOKEN_KEY;\n\t\tdefault:\n\t\t\treturn process.env.INVITE_TOKEN_KEY;\n\t\t}\n\t}\n\n\tprivate async validate(input: IValidate): Promise {\n\t\tconst key = this.mapKeyBasedOnLevel(input.invite.type.value);\n\n\t\tconst invite = generateStringCodeContent({\n\t\t\tcondominiumId: input.invite.condominiumId,\n\t\t\temail: input.email,\n\t\t\trequiredLevel: input.invite.type,\n\t\t\tid: input.invite.id,\n\t\t});\n\t\tconst hashedInvite = await this.crypt\n\t\t\t.hashWithHmac({ data: invite, key: key as string })\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({\n\t\t\t\t\tmessage: 'Falha ao tentar gerar um HMAC do convite',\n\t\t\t\t});\n\t\t\t});\n\n\t\treturn hashedInvite === input.inviteAsHash;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\n\t\tconst body = plainToClass(InviteUserDTO, req.body);\n\t\tawait checkClassValidatorErrors({ body });\n\t\tconst email = new Email(body.email);\n\n\t\tif (typeof req.query?.invite !== 'string')\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'O convite é inválido',\n\t\t\t});\n\n\t\tconst invite = await this.inviteRepo.find({\n\t\t\tkey: email,\n\t\t\tsafeSearch: true,\n\t\t});\n\n\t\tconst inviteAsHash = req.query.invite;\n\t\tconst validationRes = await this.validate({\n\t\t\temail,\n\t\t\tinviteAsHash,\n\t\t\tinvite,\n\t\t});\n\t\tif (!validationRes || invite.expiresAt.getTime() \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpAdapter.html":{"url":"classes/HttpAdapter.html","title":"class - HttpAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/http.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                call\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        call\n                        \n                    \n                \n            \n            \n                \n                        \n                    call(input: IHttpClientCall)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/http.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IHttpClientCall\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface IHttpClientCall {\n\turl: string;\n\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE';\n\theaders?: Headers | { [key: string]: string };\n\tbody?: string | FormData | BodyInit;\n}\nexport interface IHttpClientCallReturn {\n\tbody: any;\n\theaders: Headers;\n\tstatus: number;\n}\nexport abstract class HttpAdapter {\n\tabstract call(input: IHttpClientCall): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpModule.html":{"url":"modules/HttpModule.html","title":"module - HttpModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HttpModule\n\n\n\ncluster_HttpModule_imports\n\n\n\ncluster_HttpModule_providers\n\n\n\n\nAdaptersModule\n\nAdaptersModule\n\n\n\nHttpModule\n\nHttpModule\n\nHttpModule -->\n\nAdaptersModule->HttpModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nHttpModule -->\n\nGatewayModule->HttpModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nHttpModule -->\n\nPrismaModule->HttpModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nHttpModule -->\n\nRedisModule->HttpModule\n\n\n\n\n\nCreateCondominiumService\n\nCreateCondominiumService\n\nHttpModule -->\n\nCreateCondominiumService->HttpModule\n\n\n\n\n\nCreateTokenService\n\nCreateTokenService\n\nHttpModule -->\n\nCreateTokenService->HttpModule\n\n\n\n\n\nCreateUserService\n\nCreateUserService\n\nHttpModule -->\n\nCreateUserService->HttpModule\n\n\n\n\n\nDeleteUserService\n\nDeleteUserService\n\nHttpModule -->\n\nDeleteUserService->HttpModule\n\n\n\n\n\nGenInviteService\n\nGenInviteService\n\nHttpModule -->\n\nGenInviteService->HttpModule\n\n\n\n\n\nGenOldTFASevice\n\nGenOldTFASevice\n\nHttpModule -->\n\nGenOldTFASevice->HttpModule\n\n\n\n\n\nGenTFAService\n\nGenTFAService\n\nHttpModule -->\n\nGenTFAService->HttpModule\n\n\n\n\n\nGetCondominiumRelUserService\n\nGetCondominiumRelUserService\n\nHttpModule -->\n\nGetCondominiumRelUserService->HttpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/infra/http/http.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateCondominiumService\n                        \n                        \n                            CreateTokenService\n                        \n                        \n                            CreateUserService\n                        \n                        \n                            DeleteUserService\n                        \n                        \n                            GenInviteService\n                        \n                        \n                            GenOldTFASevice\n                        \n                        \n                            GenTFAService\n                        \n                        \n                            GetCondominiumRelUserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CondominiumController\n                        \n                        \n                            UserController\n                        \n                        \n                            AdminController\n                        \n                        \n                            SuperAdminController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdaptersModule\n                        \n                        \n                            GatewayModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CondominiumController } from './controllers/condominium.controller';\nimport { AdaptersModule } from '@registry:app/adapters/adapter.module';\nimport { CreateCondominiumService } from '@registry:app/services/createCondominium.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { CreateUserService } from '@registry:app/services/createUser.service';\nimport { CreateTokenService } from '@registry:app/services/createToken.service';\nimport { DeleteUserService } from '@registry:app/services/deleteUser.service';\nimport { GenInviteService } from '@registry:app/services/genInvite.service';\nimport { UserController } from './controllers/user.controller';\nimport { AdminController } from './controllers/admin.controller';\nimport { SuperAdminController } from './controllers/super-admin.controller';\nimport { GatewayModule } from '../gateways/gateway.module';\nimport { GenTFAService } from '@registry:app/services/genTFA.service';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\nimport { FirestoreModule } from '@registry:infra/storages/db/firestore/firestore.module';\nimport { GetCondominiumRelUserService } from '@registry:app/services/getCondominiumRel.service';\nimport { RedisModule } from '@registry:infra/storages/cache/redis/redis.module';\nimport { PrismaModule } from '@registry:infra/storages/db/prisma/prisma.module';\nimport { GenOldTFASevice } from '@registry:app/services/genTFACode.old.service';\n\n@Module({\n\timports: [\n\t\tRedisModule,\n\t\tPrismaModule,\n\t\tAdaptersModule,\n\t\tGatewayModule,\n\t\tThrottlerModule.forRoot([\n\t\t\t{\n\t\t\t\tlimit: 45,\n\t\t\t\tttl: 30000,\n\t\t\t},\n\t\t]),\n\t],\n\tcontrollers: [\n\t\tCondominiumController,\n\t\tUserController,\n\t\tAdminController,\n\t\tSuperAdminController,\n\t],\n\tproviders: [\n\t\tJwtService,\n\t\tCreateCondominiumService,\n\t\tCreateUserService,\n\t\tCreateTokenService,\n\t\tDeleteUserService,\n\t\tGenInviteService,\n\t\tGenTFAService,\n\t\tGenOldTFASevice,\n\t\tGetCondominiumRelUserService,\n\t\t{\n\t\t\tprovide: APP_GUARD,\n\t\t\tuseClass: ThrottlerGuard,\n\t\t},\n\t],\n})\nexport class HttpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccessTokenBody.html":{"url":"interfaces/IAccessTokenBody.html","title":"interface - IAccessTokenBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccessTokenBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/auth/tokenTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum TokenType {\n\taccessToken = 'Access Token',\n\trefreshToken = 'Refresh Token',\n}\n\nexport interface IAccessTokenBody {\n\tsub: string;\n\ttype: string;\n\tcontent: {\n\t\tname: string;\n\t\temail: string;\n\t\tphoneNumber: string;\n\t\tcreatedAt: Date;\n\t\tupdatedAt: Date;\n\t};\n\tiat: number;\n\texp: number;\n}\n\nexport interface IRefreshTokenBody {\n\tsub: string;\n\ttype: string;\n\temail: string;\n\tiat: number;\n\texp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBodyProps.html":{"url":"interfaces/IBodyProps.html","title":"interface - IBodyProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBodyProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/classValidator.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tArgumentsHost,\n\tBadRequestException,\n\tCatch,\n\tExceptionFilter,\n} from '@nestjs/common';\nimport { isArray, isNumber, isString } from 'class-validator';\nimport { Response } from 'express';\n\ninterface IBodyProps {\n\tmessage: Array;\n\terror: string;\n\tstatusCode: number;\n}\n\n/** Usado para filtrar erros do Class Validator */\n@Catch(BadRequestException)\nexport class ClassValidatorErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tvalidateBody(input: any): input is IBodyProps {\n\t\treturn (\n\t\t\t'message' in input &&\n\t\t\tisArray(input['message']) &&\n\t\t\t'error' in input &&\n\t\t\tisString(input['error']) &&\n\t\t\t'statusCode' in input &&\n\t\t\tisNumber(input['statusCode'])\n\t\t);\n\t}\n\n\tcatch(exception: BadRequestException, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst body = exception.getResponse() as IBodyProps;\n\t\tif (!this.validateBody(body))\n\t\t\treturn response.status(500).json({\n\t\t\t\tstatusCode: 500,\n\t\t\t\tmessage: 'Erro interno do servidor',\n\t\t\t});\n\n\t\tthis.logger.error({\n\t\t\tname: 'Requisição ruim',\n\t\t\tlayer: LayersEnum.dto,\n\t\t\tdescription: JSON.stringify(body.message),\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(400).json({\n\t\t\tstatusCode: 400,\n\t\t\tname: 'Requisição ruim',\n\t\t\tmessage: body.message,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICheckCep.html":{"url":"interfaces/ICheckCep.html","title":"interface - ICheckCep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICheckCep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/gateways/CEP.gateway.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cep\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            complement\n                                        \n                                \n                                \n                                        \n                                            neighborhood\n                                        \n                                \n                                \n                                        \n                                            street_address\n                                        \n                                \n                                \n                                        \n                                            uf\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cep\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cep:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        complement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complement:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        neighborhood\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        neighborhood:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street_address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uf\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uf:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICheckCep {\n\tcep: string;\n\tstreet_address: string;\n\tcomplement: string;\n\tneighborhood: string;\n\tcity: string;\n\tuf: string;\n}\n\nexport abstract class CepGateway {\n\tabstract check(input: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClass.html":{"url":"interfaces/IClass.html","title":"interface - IClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/utils/class.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IClass {\n\tnew (...args: any): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClassToRawObject.html":{"url":"interfaces/IClassToRawObject.html","title":"interface - IClassToRawObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClassToRawObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/cache/redis/mapper/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OTP } from \"@registry:app/entities/OTP\";\n\ninterface IClassToRawObject {\n  userId: string;\n  id: string;\n  ttl: number;\n  code: string;\n  createdAt: Date;\n}\n\nexport class OTPRedisMapper {\n  /**\n  * Mapeia os dados e tranforma em objeto apto a estar no redis\n  * @param input - Deve conter a classe OTP\n  **/\n  static toRedis(input: OTP): IClassToRawObject {\n\treturn {\n\t  id: input.id.value,\n\t  userId: input.userId.value,\n      code: input.code.value,\n      ttl: input.ttl,\n      createdAt: input.createdAt\n\t}\n  }\n\n  /**\n  * Mapeia os dados vindos do redis e tranforma em uma class\n  * @param input - Deve conter os dados vindos do redis\n  **/\n  static toClass(input: IClassToRawObject): OTP {\n    return new OTP({\n      ttl: input.ttl,\n      userId: input.userId,\n      code: input.code,\n      createdAt: input.createdAt,\n    }, input.id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICondominiumRelUserInObject.html":{"url":"interfaces/ICondominiumRelUserInObject.html","title":"interface - ICondominiumRelUserInObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICondominiumRelUserInObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/condominiumRelUser.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\n\nexport interface ICondominiumRelUserInObject {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel: number;\n\tupdatedAt?: Date;\n}\n\nexport type TCondominiumRelUserToObject = {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel: number;\n\tupdatedAt: Date;\n};\n\nexport class CondominiumRelUserMapper {\n\t/**\n\t * Método usado para converter um objeto de CondominiumRelUser em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass({ id, ...input }: ICondominiumRelUserInObject) {\n\t\treturn new CondominiumRelUser({ ...input }, id);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de CondominiumRelUser em um objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: CondominiumRelUser): TCondominiumRelUserToObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tuserId: input.userId.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\tblock: input.block ? input.block.value : input.block,\n\t\t\tlevel: input.level.value,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t\tapartmentNumber: input.apartmentNumber\n\t\t\t\t? input.apartmentNumber.value\n\t\t\t\t: input.apartmentNumber,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICondominiumRelUserProps.html":{"url":"interfaces/ICondominiumRelUserProps.html","title":"interface - ICondominiumRelUserProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICondominiumRelUserProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominiumRelUser/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     ApartmentNumber | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApartmentNumber | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         Block | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Block, Level, ApartmentNumber } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\nexport interface ICondominiumRelUserProps {\n\tuserId: UUID;\n\tcondominiumId: UUID;\n\tblock?: Block | null;\n\tapartmentNumber?: ApartmentNumber | null;\n\tlevel: Level;\n\tupdatedAt: Date;\n}\n\nexport interface IInputCondominiumRelUser {\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel?: number | null;\n\tupdatedAt?: Date;\n}\n\nexport const condominiumRelUserDTORules = {\n\tuserId: {\n\t\ttype: 'string',\n\t},\n\tcondominiumId: {\n\t\ttype: 'string',\n\t},\n\tblock: {\n\t\tmaxLength: 6,\n\t\toption: true,\n\t\ttype: 'string',\n\t},\n\tapartmentNumber: {\n\t\tmaxLength: 2147483647,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tlevel: {\n\t\tmaxLength: 2,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class CondominiumRelUser implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: ICondominiumRelUserProps;\n\n\tconstructor(input: IInputCondominiumRelUser, id?: string) {\n\t\tthis._id = ValueObject.build(UUID, id).or(UUID.genV4()).exec();\n\t\tthis.props = {\n\t\t\tlevel: ValueObject.build(Level, input.level)\n\t\t\t\t.or(new Level(0))\n\t\t\t\t.exec(),\n\t\t\tapartmentNumber: ValueObject.build(\n\t\t\t\tApartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t)\n\t\t\t\t.allowNullish()\n\t\t\t\t.exec(),\n\t\t\tblock: ValueObject.build(Block, input.block).allowNullish().exec(),\n\t\t\tcondominiumId: ValueObject.build(UUID, input.condominiumId).exec(),\n\t\t\tuserId: ValueObject.build(UUID, input.userId).exec(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): CondominiumRelUser {\n\t\treturn new CondominiumRelUser({\n\t\t\tlevel: this.props.level.value,\n\t\t\tblock:\n\t\t\t\tthis.props.block instanceof Block\n\t\t\t\t\t? this.props.block.value\n\t\t\t\t\t: this.props.block,\n\t\t\tapartmentNumber:\n\t\t\t\tthis.props.apartmentNumber instanceof ApartmentNumber\n\t\t\t\t\t? this.props.apartmentNumber.value\n\t\t\t\t\t: this.props.apartmentNumber,\n\t\t\tcondominiumId: this.props.condominiumId.value,\n\t\t\tuserId: this.props.userId.value,\n\t\t\tupdatedAt: this.props.updatedAt,\n\t\t});\n\t}\n\n\tequalTo(input: CondominiumRelUser): boolean {\n\t\treturn (\n\t\t\tinput instanceof CondominiumRelUser &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.condominiumId,\n\t\t\t\tinput.condominiumId,\n\t\t\t) &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.apartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t) &&\n\t\t\tValueObject.compare(this.props.block, input.block) &&\n\t\t\tValueObject.compare(this.props.level, input.level) &&\n\t\t\tValueObject.compare(this.props.userId, input.userId) &&\n\t\t\tthis.props.updatedAt === this.props.updatedAt\n\t\t);\n\t}\n\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\tset level(input: Level) {\n\t\tthis.props.level = input;\n\t}\n\tget level(): Level {\n\t\treturn this.props.level;\n\t}\n\n\tset condominiumId(input: UUID) {\n\t\tthis.props.condominiumId = input;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\n\tset userId(input: UUID) {\n\t\tthis.props.userId = input;\n\t}\n\tget userId(): UUID {\n\t\treturn this.props.userId;\n\t}\n\n\tset block(input: Block | undefined | null) {\n\t\tthis.props.block = input;\n\t}\n\tget block(): Block | undefined | null {\n\t\treturn this.props.block;\n\t}\n\n\tset apartmentNumber(input: ApartmentNumber | undefined | null) {\n\t\tthis.props.apartmentNumber = input;\n\t}\n\tget apartmentNumber(): ApartmentNumber | undefined | null {\n\t\treturn this.props.apartmentNumber;\n\t}\n\n\tset updatedAt(input: Date) {\n\t\tthis.props.updatedAt = input;\n\t}\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConvertToObject.html":{"url":"interfaces/IConvertToObject.html","title":"interface - IConvertToObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConvertToObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/condominium.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CEP\n                                        \n                                \n                                \n                                        \n                                            CNPJ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            num\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CEP\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CEP:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CNPJ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CNPJ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\n\ninterface IConvertToObject {\n\tid?: string;\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport type TCondominiumInObject = Required;\n\nexport class CondominiumMapper {\n\t/**\n\t * Método usado para converter um objeto de um condomínio em classe\n\t * @param input - Deve conter os dados do condomínio em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: input.name,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tnum: input.num,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de condomínio em objeto\n\t * @param input - Deve conter os dados do condomínio em forma de classe\n\t **/\n\tstatic toObject(input: Condominium): TCondominiumInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tnum: input.num.value,\n\t\t\tCEP: input.CEP.value,\n\t\t\tname: input.name.value,\n\t\t\tCNPJ: input.CNPJ.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConvertToObject-1.html":{"url":"interfaces/IConvertToObject-1.html","title":"interface - IConvertToObject-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConvertToObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Invite } from '@registry:app/entities/invite';\n\ninterface IConvertToObject {\n\tid?: string;\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport type TInviteInObject = Required;\n\nexport class InviteMapper {\n\t/**\n\t * Método usado para converter um objeto de convite em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de convite em objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: Invite): TInviteInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\temail: input.email.value,\n\t\t\tttl: input.ttl,\n\t\t\texpiresAt: input.expiresAt,\n\t\t\ttype: input.type.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConvertToObject-2.html":{"url":"interfaces/IConvertToObject-2.html","title":"interface - IConvertToObject-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConvertToObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\n\ninterface IConvertToObject {\n\tid?: string;\n\tttl: number;\n\tuserId: string;\n\tcode: string;\n\tcreatedAt?: Date;\n}\n\nexport interface IOTPInObject {\n\tid: string;\n\tttl: number;\n\tuserId: string;\n\tcode: string;\n\tcreatedAt: Date;\n}\n\nexport class OTPMapper {\n\n\t/**\n\t * Método usado para converter um objeto de OTP em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tttl: input.ttl,\n\t\t\t\tuserId: input.userId,\n\t\t\t\tcode: input.code,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de OTP em um objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: OTP): IOTPInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tttl: input.ttl,\n\t\t\tuserId: input.userId.value,\n\t\t\tcode: input.code.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateOTPInput.html":{"url":"interfaces/ICreateOTPInput.html","title":"interface - ICreateOTPInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateOTPInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            otp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otp:         OTP\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OTP\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { Email } from '@registry:app/entities/VO';\n\nexport interface ICreateOTPInput {\n\totp: OTP;\n\temail: Email;\n}\n\nexport interface IFindOTPInput {\n\temail: Email;\n}\n\nexport interface IDeleteOTPInput {\n\temail: Email;\n}\n\nexport abstract class OTPRepo {\n\tabstract create(input: ICreateOTPInput): Promise;\n\tabstract find(input: IFindOTPInput): Promise;\n\tabstract delete(input: IDeleteOTPInput): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICryptCompare.html":{"url":"interfaces/ICryptCompare.html","title":"interface - ICryptCompare","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICryptCompare\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/crypt.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            hashedData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hashedData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hashedData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICryptCompare {\n\tdata: string;\n\thashedData: string;\n}\n\nexport interface ICryptHmac {\n\tdata: string;\n\tkey: string;\n}\n\nexport abstract class CryptAdapter {\n\tabstract hash(data: string): Promise;\n\tabstract hashWithHmac(input: ICryptHmac): Promise;\n\tabstract compare(input: ICryptCompare): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICryptHmac.html":{"url":"interfaces/ICryptHmac.html","title":"interface - ICryptHmac","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICryptHmac\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/crypt.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICryptCompare {\n\tdata: string;\n\thashedData: string;\n}\n\nexport interface ICryptHmac {\n\tdata: string;\n\tkey: string;\n}\n\nexport abstract class CryptAdapter {\n\tabstract hash(data: string): Promise;\n\tabstract hashWithHmac(input: ICryptHmac): Promise;\n\tabstract compare(input: ICryptCompare): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDeleteOTPInput.html":{"url":"interfaces/IDeleteOTPInput.html","title":"interface - IDeleteOTPInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDeleteOTPInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { Email } from '@registry:app/entities/VO';\n\nexport interface ICreateOTPInput {\n\totp: OTP;\n\temail: Email;\n}\n\nexport interface IFindOTPInput {\n\temail: Email;\n}\n\nexport interface IDeleteOTPInput {\n\temail: Email;\n}\n\nexport abstract class OTPRepo {\n\tabstract create(input: ICreateOTPInput): Promise;\n\tabstract find(input: IFindOTPInput): Promise;\n\tabstract delete(input: IDeleteOTPInput): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOTPInput.html":{"url":"interfaces/IFindOTPInput.html","title":"interface - IFindOTPInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOTPInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { Email } from '@registry:app/entities/VO';\n\nexport interface ICreateOTPInput {\n\totp: OTP;\n\temail: Email;\n}\n\nexport interface IFindOTPInput {\n\temail: Email;\n}\n\nexport interface IDeleteOTPInput {\n\temail: Email;\n}\n\nexport abstract class OTPRepo {\n\tabstract create(input: ICreateOTPInput): Promise;\n\tabstract find(input: IFindOTPInput): Promise;\n\tabstract delete(input: IDeleteOTPInput): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFirestoreErrors.html":{"url":"interfaces/IFirestoreErrors.html","title":"interface - IFirestoreErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFirestoreErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         DatabaseCustomErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseCustomErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\nimport {\n\tDatabaseCustomError,\n\tDatabaseCustomErrorsTags,\n} from '@registry:infra/storages/db/error';\n\ninterface IFirestoreErrors {\n\tname: string;\n\ttag: DatabaseCustomErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros customizados do banco de dados */\n@Catch(DatabaseCustomError)\nexport class DatabaseCustomErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate readonly possibleErrors: IFirestoreErrors[] = [\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentAlreadyExists,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.refLost,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.tooManyEntities,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.maximumCondominiumRelUser,\n\t\t\tmessage: 'Este usuário já está vinculado a outro condomínio',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.wrongInputLevel,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t];\n\n\tcatch(exception: DatabaseCustomError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.database,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGatewayError.html":{"url":"interfaces/IGatewayError.html","title":"interface - IGatewayError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGatewayError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/gateways.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         GatewaysErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GatewaysErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tGatewayErrors,\n\tGatewaysErrorsTags,\n} from '@registry:infra/gateways/errors';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IGatewayError {\n\tname: string;\n\ttag: GatewaysErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros dos Gateways */\n@Catch(GatewayErrors)\nexport class GatewayErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IGatewayError[] = [\n\t\t{\n\t\t\tname: 'Entrada inválida',\n\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\tmessage:\n\t\t\t\t'Não foi possível atingir o resultado esperado com a entrada de dados fornecida, por favor, verifique se seus dados são válidos',\n\t\t\thttpCode: 400,\n\t\t},\n\t\t{\n\t\t\tname: 'Dada envenenado',\n\t\t\ttag: GatewaysErrorsTags.PoisonedContent,\n\t\t\tmessage: 'Conteúdo mau formado pelo servidor',\n\t\t\thttpCode: 500,\n\t\t},\n\t];\n\n\tcatch(exception: GatewayErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.gateway,\n\t\t\t\tdescription: `${\n\t\t\t\t\texception.content\n\t\t\t\t\t\t? `${error.message} - ${exception.content}`\n\t\t\t\t\t\t: error.message\n\t\t\t\t}`,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.gateway,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGenerateInviteKeyProps.html":{"url":"interfaces/IGenerateInviteKeyProps.html","title":"interface - IGenerateInviteKeyProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGenerateInviteKeyProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/utils/generateStringCodeContent.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            requiredLevel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredLevel:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Level, Email, UUID } from '@registry:app/entities/VO';\n\nexport interface IGenerateInviteKeyProps {\n\tid: UUID;\n\temail: Email;\n\trequiredLevel?: Level;\n\tcondominiumId?: UUID;\n}\n\n/**\n * Feito para gerar uma string com base nos dados do usuário e sua relação com o condomínio\n **/\nexport function generateStringCodeContent(input: IGenerateInviteKeyProps) {\n\tconst key = `[ID(${input.id.value})].[EMAIL(${input.email.value})].[LEVEL(${\n\t\tinput.requiredLevel?.value ?? 'UNKNOWN'\n\t})].[CONDOMINIUMID(${input.condominiumId?.value ?? 'UNKNOWN'})]`;\n\treturn key;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHttpClientCall.html":{"url":"interfaces/IHttpClientCall.html","title":"interface - IHttpClientCall","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHttpClientCall\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/http.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     string | FormData | BodyInit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | FormData | BodyInit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Headers | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Headers | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:     \"GET\" | \"POST\" | \"PATCH\" | \"PUT\" | \"DELETE\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"GET\" | \"POST\" | \"PATCH\" | \"PUT\" | \"DELETE\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHttpClientCall {\n\turl: string;\n\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE';\n\theaders?: Headers | { [key: string]: string };\n\tbody?: string | FormData | BodyInit;\n}\nexport interface IHttpClientCallReturn {\n\tbody: any;\n\theaders: Headers;\n\tstatus: number;\n}\nexport abstract class HttpAdapter {\n\tabstract call(input: IHttpClientCall): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHttpClientCallReturn.html":{"url":"interfaces/IHttpClientCallReturn.html","title":"interface - IHttpClientCallReturn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHttpClientCallReturn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/http.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Headers\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Headers\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHttpClientCall {\n\turl: string;\n\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE';\n\theaders?: Headers | { [key: string]: string };\n\tbody?: string | FormData | BodyInit;\n}\nexport interface IHttpClientCallReturn {\n\tbody: any;\n\theaders: Headers;\n\tstatus: number;\n}\nexport abstract class HttpAdapter {\n\tabstract call(input: IHttpClientCall): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInMemoryContainerProps.html":{"url":"interfaces/IInMemoryContainerProps.html","title":"interface - IInMemoryContainerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInMemoryContainerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumArr\n                                        \n                                \n                                \n                                        \n                                            condominiumRelUserArr\n                                        \n                                \n                                \n                                        \n                                            inviteArr\n                                        \n                                \n                                \n                                        \n                                            userArr\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumArr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumArr:         Condominium[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Condominium[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumRelUserArr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumRelUserArr:     CondominiumRelUser[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CondominiumRelUser[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteArr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inviteArr:         Invite[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invite[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userArr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userArr:         IInMemoryUserContainer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IInMemoryUserContainer[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport interface IInMemoryUserContainer {\n\tuser: {\n\t\tcontent: User;\n\t\tcondominiumRelUser: Record;\n\t};\n}\n\ninterface IInMemoryContainerProps {\n\tuserArr: IInMemoryUserContainer[];\n\tcondominiumArr: Condominium[];\n\tcondominiumRelUserArr: CondominiumRelUser[];\n\tinviteArr: Invite[];\n}\n\nexport class InMemoryContainer {\n\tprops: IInMemoryContainerProps = {\n\t\tuserArr: [],\n\t\tcondominiumArr: [],\n\t\tcondominiumRelUserArr: [],\n\t\tinviteArr: [],\n\t};\n\n\terase() {\n\t\tthis.props = {\n\t\t\tuserArr: [],\n\t\t\tcondominiumRelUserArr: [],\n\t\t\tinviteArr: [],\n\t\t\tcondominiumArr: [],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInMemoryUserContainer.html":{"url":"interfaces/IInMemoryUserContainer.html","title":"interface - IInMemoryUserContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInMemoryUserContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport interface IInMemoryUserContainer {\n\tuser: {\n\t\tcontent: User;\n\t\tcondominiumRelUser: Record;\n\t};\n}\n\ninterface IInMemoryContainerProps {\n\tuserArr: IInMemoryUserContainer[];\n\tcondominiumArr: Condominium[];\n\tcondominiumRelUserArr: CondominiumRelUser[];\n\tinviteArr: Invite[];\n}\n\nexport class InMemoryContainer {\n\tprops: IInMemoryContainerProps = {\n\t\tuserArr: [],\n\t\tcondominiumArr: [],\n\t\tcondominiumRelUserArr: [],\n\t\tinviteArr: [],\n\t};\n\n\terase() {\n\t\tthis.props = {\n\t\t\tuserArr: [],\n\t\t\tcondominiumRelUserArr: [],\n\t\t\tinviteArr: [],\n\t\t\tcondominiumArr: [],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIncomingFirestoreCondominiumData.html":{"url":"interfaces/IIncomingFirestoreCondominiumData.html","title":"interface - IIncomingFirestoreCondominiumData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIncomingFirestoreCondominiumData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/condominiums.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CEP\n                                        \n                                \n                                \n                                        \n                                            CNPJ\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            num\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CEP\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CEP:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CNPJ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CNPJ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { TCondominiumInObject } from '@registry:app/mapper/condominium';\nimport { Timestamp } from 'firebase-admin/firestore';\n\nexport interface IIncomingFirestoreCondominiumData {\n\tid: string;\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt: Timestamp;\n\tupdatedAt: Timestamp;\n}\n\nexport class CondominiumFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass(\n\t\tinput: IIncomingFirestoreCondominiumData,\n\t): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tnum: input.num,\n\t\t\t\tname: input.name,\n\t\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreCondominiumData,\n\t): TCondominiumInObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{"url":"interfaces/IIncomingFirestoreCondominiumRelUserData.html","title":"interface - IIncomingFirestoreCondominiumRelUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIncomingFirestoreCondominiumRelUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Timestamp } from 'firebase-admin/firestore';\nimport { TReplace } from '@registry:utils/replace';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport interface IIncomingFirestoreCondominiumRelUserData {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock: string | null;\n\tapartmentNumber: number | null;\n\tlevel: number;\n\tupdatedAt: Timestamp;\n}\n\nexport type TFirestoreCondominiumRelUserToObject = TReplace;\n\nexport class CondominiumRelUserFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass({\n\t\tid,\n\t\t...input\n\t}: IIncomingFirestoreCondominiumRelUserData): CondominiumRelUser {\n\t\treturn new CondominiumRelUser(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tid,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreCondominiumRelUserData,\n\t): TCondominiumRelUserToObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIncomingFirestoreInviteData.html":{"url":"interfaces/IIncomingFirestoreInviteData.html","title":"interface - IIncomingFirestoreInviteData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIncomingFirestoreInviteData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { Invite } from '@registry:app/entities/invite';\nimport { TInviteInObject } from '@registry:app/mapper/invite';\n\nexport interface IIncomingFirestoreInviteData {\n\tid: string;\n\temail: string;\n\tttl: number;\n\texpiresAt: Timestamp;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class InviteFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass(input: IIncomingFirestoreInviteData): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\texpiresAt: input.expiresAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreInviteData,\n\t): TInviteInObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tttl: input.ttl,\n\t\t\texpiresAt: input.expiresAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIncomingFirestoreUserData.html":{"url":"interfaces/IIncomingFirestoreUserData.html","title":"interface - IIncomingFirestoreUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIncomingFirestoreUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/users.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CPF\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CPF\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CPF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '@registry:app/entities/user';\nimport { TUserClassToObject } from '@registry:app/mapper/user';\nimport { Timestamp } from 'firebase-admin/firestore';\n\nexport interface IIncomingFirestoreUserData {\n\tid: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt: Timestamp;\n\tupdatedAt: Timestamp;\n}\n\nexport class UserFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirebaseToClass(input: IIncomingFirestoreUserData): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirebaseToObject(\n\t\tinput: IIncomingFirestoreUserData,\n\t): TUserClassToObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIndexProps.html":{"url":"interfaces/IIndexProps.html","title":"interface - IIndexProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIndexProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/entities/indexes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ref\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ref:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentData, DocumentReference } from 'firebase-admin/firestore';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\nexport interface IIndexProps {\n\tref: DocumentReference;\n}\n\nexport class Index {\n\tprivate readonly props: IIndexProps;\n\n\t/**\n\t *\tUsado para manipular e validar a integridade dos índices no firestore\n\t **/\n\tconstructor(input: IIndexProps) {\n\t\tif (!(input.ref instanceof DocumentReference))\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Malformed reference',\n\t\t\t\ttag: DatabaseCustomErrorsTags.malformedRef,\n\t\t\t});\n\n\t\tthis.props = { ...input };\n\t}\n\n\tget ref(): DocumentReference {\n\t\treturn this.props.ref;\n\t}\n\n\t/**\n\t * Converte o índice em um objeto\n\t **/\n\tflat(): IIndexProps {\n\t\treturn { ref: this.ref };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInputCondominiumRelUser.html":{"url":"interfaces/IInputCondominiumRelUser.html","title":"interface - IInputCondominiumRelUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInputCondominiumRelUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominiumRelUser/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            level\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Block, Level, ApartmentNumber } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\nexport interface ICondominiumRelUserProps {\n\tuserId: UUID;\n\tcondominiumId: UUID;\n\tblock?: Block | null;\n\tapartmentNumber?: ApartmentNumber | null;\n\tlevel: Level;\n\tupdatedAt: Date;\n}\n\nexport interface IInputCondominiumRelUser {\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel?: number | null;\n\tupdatedAt?: Date;\n}\n\nexport const condominiumRelUserDTORules = {\n\tuserId: {\n\t\ttype: 'string',\n\t},\n\tcondominiumId: {\n\t\ttype: 'string',\n\t},\n\tblock: {\n\t\tmaxLength: 6,\n\t\toption: true,\n\t\ttype: 'string',\n\t},\n\tapartmentNumber: {\n\t\tmaxLength: 2147483647,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tlevel: {\n\t\tmaxLength: 2,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class CondominiumRelUser implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: ICondominiumRelUserProps;\n\n\tconstructor(input: IInputCondominiumRelUser, id?: string) {\n\t\tthis._id = ValueObject.build(UUID, id).or(UUID.genV4()).exec();\n\t\tthis.props = {\n\t\t\tlevel: ValueObject.build(Level, input.level)\n\t\t\t\t.or(new Level(0))\n\t\t\t\t.exec(),\n\t\t\tapartmentNumber: ValueObject.build(\n\t\t\t\tApartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t)\n\t\t\t\t.allowNullish()\n\t\t\t\t.exec(),\n\t\t\tblock: ValueObject.build(Block, input.block).allowNullish().exec(),\n\t\t\tcondominiumId: ValueObject.build(UUID, input.condominiumId).exec(),\n\t\t\tuserId: ValueObject.build(UUID, input.userId).exec(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): CondominiumRelUser {\n\t\treturn new CondominiumRelUser({\n\t\t\tlevel: this.props.level.value,\n\t\t\tblock:\n\t\t\t\tthis.props.block instanceof Block\n\t\t\t\t\t? this.props.block.value\n\t\t\t\t\t: this.props.block,\n\t\t\tapartmentNumber:\n\t\t\t\tthis.props.apartmentNumber instanceof ApartmentNumber\n\t\t\t\t\t? this.props.apartmentNumber.value\n\t\t\t\t\t: this.props.apartmentNumber,\n\t\t\tcondominiumId: this.props.condominiumId.value,\n\t\t\tuserId: this.props.userId.value,\n\t\t\tupdatedAt: this.props.updatedAt,\n\t\t});\n\t}\n\n\tequalTo(input: CondominiumRelUser): boolean {\n\t\treturn (\n\t\t\tinput instanceof CondominiumRelUser &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.condominiumId,\n\t\t\t\tinput.condominiumId,\n\t\t\t) &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.apartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t) &&\n\t\t\tValueObject.compare(this.props.block, input.block) &&\n\t\t\tValueObject.compare(this.props.level, input.level) &&\n\t\t\tValueObject.compare(this.props.userId, input.userId) &&\n\t\t\tthis.props.updatedAt === this.props.updatedAt\n\t\t);\n\t}\n\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\tset level(input: Level) {\n\t\tthis.props.level = input;\n\t}\n\tget level(): Level {\n\t\treturn this.props.level;\n\t}\n\n\tset condominiumId(input: UUID) {\n\t\tthis.props.condominiumId = input;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\n\tset userId(input: UUID) {\n\t\tthis.props.userId = input;\n\t}\n\tget userId(): UUID {\n\t\treturn this.props.userId;\n\t}\n\n\tset block(input: Block | undefined | null) {\n\t\tthis.props.block = input;\n\t}\n\tget block(): Block | undefined | null {\n\t\treturn this.props.block;\n\t}\n\n\tset apartmentNumber(input: ApartmentNumber | undefined | null) {\n\t\tthis.props.apartmentNumber = input;\n\t}\n\tget apartmentNumber(): ApartmentNumber | undefined | null {\n\t\treturn this.props.apartmentNumber;\n\t}\n\n\tset updatedAt(input: Date) {\n\t\tthis.props.updatedAt = input;\n\t}\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInputPropsInvite.html":{"url":"interfaces/IInputPropsInvite.html","title":"interface - IInputPropsInvite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInputPropsInvite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/invite/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email, Level, UUID } from '../VO';\nimport { Entity } from '../entities';\n\nexport interface IProps {\n\temail: Email;\n\tttl: number;\n\texpiresAt: Date;\n\tcondominiumId: UUID;\n\ttype: Level;\n}\n\nexport interface IInputPropsInvite {\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class Invite implements Entity {\n\tprivate readonly props: IProps;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: IInputPropsInvite, id?: string) {\n\t\tthis.props = {\n\t\t\temail: new Email(input.email),\n\t\t\tttl: input.ttl,\n\t\t\ttype: new Level(input.type),\n\t\t\tcondominiumId: new UUID(input.condominiumId),\n\t\t\texpiresAt: input.expiresAt ?? new Date(Date.now() + input.ttl),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tdereference(): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\temail: this.email.value,\n\t\t\t\tttl: this.ttl,\n\t\t\t\ttype: this.type.value,\n\t\t\t\tcondominiumId: this.condominiumId.value,\n\t\t\t\texpiresAt: this.expiresAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tequalTo(input: Invite): boolean {\n\t\treturn (\n\t\t\tinput.id.equalTo(this.id) &&\n\t\t\tinput.type.equalTo(this.type) &&\n\t\t\tinput.email.equalTo(this.email) &&\n\t\t\tinput.ttl === this.ttl &&\n\t\t\tinput.expiresAt === this.expiresAt &&\n\t\t\tinput.condominiumId.equalTo(this.condominiumId)\n\t\t);\n\t}\n\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\tget expiresAt(): Date {\n\t\treturn this.props.expiresAt;\n\t}\n\tget type(): Level {\n\t\treturn this.props.type;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoggerDefaultProps.html":{"url":"interfaces/ILoggerDefaultProps.html","title":"interface - ILoggerDefaultProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILoggerDefaultProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:         LayersEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LayersEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum LayersEnum {\n\tstart = 'Start-layer',\n\tinterceptors = 'Interceptor-Layer',\n\tservices = 'Service-Layer',\n\tentitie = 'Entitie-Layer',\n\tcontroller = 'Controller-Layer',\n\tdto = 'DTO-Layer',\n\tauth = 'Auth-Layer',\n\tgateway = 'Gateway-Layer',\n\tunknown = 'Unknown-Layer',\n\tadapter = 'Adapter-Layer',\n\tdatabase = 'Database-Layer',\n\tcache = 'Cache-Layer',\n}\n\nexport interface ILoggerDefaultProps {\n\tname: string;\n\tdescription: string;\n\tlayer: LayersEnum;\n}\n\nexport type TECEProps = ILoggerDefaultProps & { stack?: string };\n\nexport abstract class LoggerAdapter {\n\tabstract log(input: ILoggerDefaultProps): Promise;\n\tabstract info(input: ILoggerDefaultProps): Promise;\n\tabstract debug(input: ILoggerDefaultProps): Promise;\n\tabstract warn(input: ILoggerDefaultProps): Promise;\n\tabstract alert(input: ILoggerDefaultProps): Promise;\n\tabstract error(input: TECEProps): Promise;\n\tabstract critical(input: TECEProps): Promise;\n\tabstract emergencial(input: TECEProps): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOTPInObject.html":{"url":"interfaces/IOTPInObject.html","title":"interface - IOTPInObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOTPInObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\n\ninterface IConvertToObject {\n\tid?: string;\n\tttl: number;\n\tuserId: string;\n\tcode: string;\n\tcreatedAt?: Date;\n}\n\nexport interface IOTPInObject {\n\tid: string;\n\tttl: number;\n\tuserId: string;\n\tcode: string;\n\tcreatedAt: Date;\n}\n\nexport class OTPMapper {\n\n\t/**\n\t * Método usado para converter um objeto de OTP em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tttl: input.ttl,\n\t\t\t\tuserId: input.userId,\n\t\t\t\tcode: input.code,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de OTP em um objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: OTP): IOTPInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tttl: input.ttl,\n\t\t\tuserId: input.userId.value,\n\t\t\tcode: input.code.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOTPProps.html":{"url":"interfaces/IOTPProps.html","title":"interface - IOTPProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOTPProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/OTP/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         Code\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Code\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Code, UUID } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\ninterface IOTPProps {\n\tuserId: UUID;\n\tcode: Code;\n\tttl: number;\n\tcreatedAt: Date;\n}\n\nexport type TInputOTPProps = {\n\tuserId: string;\n\tcode: string;\n\tttl: number;\n\tcreatedAt?: Date;\n};\n\nexport class OTP implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate readonly props: IOTPProps;\n\n\tconstructor(input: TInputOTPProps, id?: string) {\n\t\tthis._id = ValueObject.build(UUID, id).or(UUID.genV4()).exec();\n\t\tthis.props = {\n\t\t\t...input,\n\t\t\tcode: new Code(input.code),\n\t\t\tuserId: new UUID(input.userId),\n\t\t\tttl: input.ttl ?? 1000 * 60 * 2,\n\t\t\tcreatedAt: input.createdAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tuserId: this.userId.value,\n\t\t\t\tcode: this.code.value,\n\t\t\t\tttl: this.ttl,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\tpublic equalTo(input: OTP) {\n\t\treturn (\n\t\t\tthis._id.equalTo(input._id) &&\n\t\t\tthis.props.ttl === input.ttl &&\n\t\t\tthis.props.userId.equalTo(input.userId) &&\n\t\t\tthis.props.code.equalTo(input.code) &&\n\t\t\tthis.props.createdAt === input.createdAt\n\t\t);\n\t}\n\n\tget userId(): UUID {\n\t\treturn this.props.userId;\n\t}\n\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\tget code(): Code {\n\t\treturn this.props.code;\n\t}\n\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPrismaError.html":{"url":"interfaces/IPrismaError.html","title":"interface - IPrismaError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPrismaError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/prisma.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { Response } from 'express';\n\ninterface IPrismaError {\n\tname: string;\n\tcode: string;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros do Prisma */\n@Catch(Prisma.PrismaClientKnownRequestError)\nexport class PrismaErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IPrismaError[] = [\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P2025',\n\t\t\tmessage: 'Não foi possível deletar o dado, pois o mesmo não existe',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Erro ao criar dado repetido',\n\t\t\tcode: 'P2002',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\tcode: 'P1009',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P1003',\n\t\t\tmessage: 'Não encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t];\n\n\tcatch(\n\t\texception: Prisma.PrismaClientKnownRequestError,\n\t\thost: ArgumentsHost,\n\t) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.code === exception.code;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.code}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: `${exception.name} - ${exception.code}`,\n\t\t\tlayer: LayersEnum.database,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps.html":{"url":"interfaces/IProps.html","title":"interface - IProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/bootstrap.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            requestListener\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestListener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requestListener:     Express\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Express\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LoggerAdapter } from '@registry:app/adapters/logger';\nimport { NestFactory } from '@nestjs/core';\nimport {\n\tExpressAdapter,\n\tNestExpressApplication,\n} from '@nestjs/platform-express';\nimport express, { Express } from 'express';\nimport { AppModule } from './app.module';\nimport { LogInterceptor } from '@registry:infra/http/interceptors/logger.interceptor';\nimport cookieParser from 'cookie-parser';\nimport { ValidationPipe } from '@nestjs/common';\nimport { GenericErrorFilter } from '@registry:infra/http/filters/errors/generic.filter';\nimport { ServiceErrorFilter } from '@registry:infra/http/filters/errors/services.filter';\nimport { EntitieErrorFilter } from '@registry:infra/http/filters/errors/vo.filter';\nimport { GatewayErrorFilter } from '@registry:infra/http/filters/errors/gateways.filter';\nimport { GuardErrorFilter } from '@registry:infra/http/filters/errors/guard.filter';\nimport { AdapterErrorFilter } from '@registry:infra/http/filters/errors/adapter.filter';\nimport { ClassValidatorErrorFilter } from '@registry:infra/http/filters/errors/classValidator.filter';\nimport { ThrottlerErrorFilter } from '@registry:infra/http/filters/errors/throttler.filter';\nimport { NotFoundFilter } from '@registry:infra/http/filters/errors/notFound.filter';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { DatabaseCustomErrorFilter } from '@registry:infra/http/filters/errors/databaseCustomError.filter';\nimport { PrismaErrorFilter } from '@registry:infra/http/filters/errors/prisma.filter';\nimport { RedisService } from '@registry:infra/storages/cache/redis/redis.service';\nimport { PrismaService } from '@registry:infra/storages/db/prisma/prisma.service';\nimport { RedisErrorFilter } from '@registry:infra/http/filters/errors/redis-login.filter';\n\ninterface IProps {\n\trequestListener: Express;\n}\n\nexport class RegistryAPIBootstrap {\n\tprivate app: NestExpressApplication;\n\tprivate logger: LoggerAdapter;\n\n\tprivate async build(requestListener: express.Express) {\n\t\tthis.app = await NestFactory.create(\n\t\t\tAppModule,\n\t\t\tnew ExpressAdapter(requestListener),\n\t\t);\n\n\t\tthis.app.enableShutdownHooks();\n\t\tthis.app.use(cookieParser(process.env.COOKIE_KEY));\n\t\tthis.app.enableCors({\n\t\t\torigin: '*', // mudar no futuro\n\t\t\tmethods: ['DELETE', 'POST', 'PATCH', 'PUT', 'GET'],\n\t\t});\n\t\tthis.logger = this.app.get(LoggerAdapter);\n\n\t\tconst config = new DocumentBuilder()\n\t\t\t.setTitle('MoradaApp: Registry API')\n\t\t\t.setDescription('Morada App Registry API')\n\t\t\t.setVersion('1.0')\n\t\t\t.addTag('moradaApp')\n\t\t\t.build();\n\n\t\tconst document = SwaggerModule.createDocument(this.app, config);\n\t\tSwaggerModule.setup('api', this.app, document);\n\t}\n\n\tprivate setGlobalInteceptors() {\n\t\tthis.app.useGlobalInterceptors(new LogInterceptor(this.logger));\n\t}\n\n\tprivate setGlobalPipes() {\n\t\tthis.app.useGlobalPipes(new ValidationPipe());\n\t}\n\n\tprivate setGlobalFilters() {\n\t\tthis.app.useGlobalFilters(new GenericErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new RedisErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new PrismaErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new DatabaseCustomErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ServiceErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new EntitieErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new GatewayErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new GuardErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new AdapterErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ClassValidatorErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ThrottlerErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new NotFoundFilter(this.logger));\n\t}\n\n\tasync runStorageLayer() {\n\t\tconst redis = this.app.get(RedisService);\n\t\tconst prisma = this.app.get(PrismaService);\n\n\t\tawait prisma.init();\n\t\tawait redis.init();\n\t}\n\n\tasync run(input: IProps) {\n\t\tawait this.build(input.requestListener);\n\t\tthis.setGlobalInteceptors();\n\t\tthis.setGlobalPipes();\n\t\tthis.setGlobalFilters();\n\n\t\tawait this.app.init();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-1.html":{"url":"interfaces/IProps-1.html","title":"interface - IProps-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/utils/convertValidatorErr.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\ninterface IProps {\n\tbody: any;\n}\n\n/**\n * Usado para aplicar o class validator fora dos controllers\n * em forma de decorator, caso a validação não seja um sucesso, um erro do tipo BadRequestException será disparado\n * @param data - Deve conter o corpo da requisição a ser validado\n **/\nexport async function checkClassValidatorErrors(data: IProps) {\n\tconst errors = await validate(data.body);\n\n\tconst errorMessages = errors.flatMap(({ constraints }) =>\n\t\tObject.values(constraints!),\n\t);\n\n\tif (errorMessages.length > 0) {\n\t\tthrow new BadRequestException({\n\t\t\tstatusCode: HttpStatus.BAD_REQUEST,\n\t\t\terror: 'Bad Request',\n\t\t\tmessage: errorMessages,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-10.html":{"url":"interfaces/IProps-10.html","title":"interface - IProps-10","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createUser.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            invite\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     ApartmentNumber | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApartmentNumber | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         Block | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invite:         Invite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { ApartmentNumber, Block, Password } from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { IService } from './_IService';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\n\ninterface IProps {\n\tuser: User;\n\tinvite: Invite;\n\tapartmentNumber?: ApartmentNumber | null;\n\tblock?: Block | null;\n}\n\n/** Serviço responsável por criar um novo usuário */\n@Injectable()\nexport class CreateUserService implements IService {\n\tconstructor(\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tasync exec({ ...input }: IProps) {\n\t\tconst hashPass = await this.crypt.hash(input.user.password.value);\n\n\t\tconst user = input.user.dereference();\n\t\tuser.password = new Password(hashPass);\n\n\t\tconst condominiumRelUser = new CondominiumRelUser({\n\t\t\tapartmentNumber: input.apartmentNumber\n\t\t\t\t? input.apartmentNumber.value\n\t\t\t\t: undefined,\n\t\t\tblock: input.block ? input.block.value : undefined,\n\t\t\tlevel: input.invite.type.value,\n\t\t\tcondominiumId: input.invite.condominiumId.value,\n\t\t\tuserId: input.user.id.value,\n\t\t});\n\n\t\tawait this.inviteRepo.transferToUserResources({\n\t\t\tuser,\n\t\t\tcondominiumRelUser,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-11.html":{"url":"interfaces/IProps-11.html","title":"interface - IProps-11","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/deleteUser.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actualUser\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actualUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actualUser:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email } from '@registry:app/entities/VO';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { Injectable } from '@nestjs/common';\nimport { IService } from './_IService';\nimport {\n\tServiceErrors,\n\tServiceErrorsTags,\n} from '@registry:app/errors/services';\n\ninterface IProps {\n\ttarget: Email;\n\tactualUser?: Email;\n}\n\n/** Serviço responsável por deletar um usuário */\n@Injectable()\nexport class DeleteUserService implements IService {\n\tconstructor(private readonly userRepo: UserRepo) {}\n\n\tasync exec({ target, actualUser }: IProps) {\n\t\tif (actualUser && target.equalTo(actualUser))\n\t\t\tthrow new ServiceErrors({\n\t\t\t\tmessage:\n\t\t\t\t\t'Não é possível deletar você mesmo utilizando os recursos de administradores',\n\t\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\t});\n\n\t\tawait this.userRepo.delete({ key: target });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-12.html":{"url":"interfaces/IProps-12.html","title":"interface - IProps-12","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genInvite.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            requiredLevel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredLevel:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { Email, Level, UUID } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { Invite } from '@registry:app/entities/invite';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tcondominiumId: UUID;\n\trequiredLevel?: Level;\n\tkey?: string;\n}\n\n/** Serviço responsável por criar um convite */\n@Injectable()\nexport class GenInviteService implements IService {\n\tconstructor(\n\t\tprivate readonly cryptAdapter: CryptAdapter,\n\t\tprivate readonly emailAdapter: EmailAdapter,\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t) {}\n\n\tprivate async generateInvite({\n\t\tinvite,\n\t\tkey,\n\t}: {\n\t\tinvite: Invite;\n\t\tkey: string;\n\t}) {\n\t\tconst inputData = generateStringCodeContent({\n\t\t\tid: invite.id,\n\t\t\temail: invite.email,\n\t\t\trequiredLevel: invite.type,\n\t\t\tcondominiumId: invite.condominiumId,\n\t\t});\n\n\t\treturn await this.cryptAdapter.hashWithHmac({ key, data: inputData });\n\t}\n\n\tasync exec(input: IProps): Promise {\n\t\tconst invite = new Invite({\n\t\t\temail: input.email.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\ttype: input.requiredLevel?.value ?? 0,\n\t\t\tttl: 1000 * 60 * 60 * 24 * 7,\n\t\t});\n\t\tconst inviteAsHash = await this.generateInvite({\n\t\t\tinvite,\n\t\t\tkey: input.key ?? (process.env.INVITE_TOKEN_KEY as string),\n\t\t});\n\n\t\tawait this.inviteRepo.create({ invite });\n\t\tawait this.emailAdapter.send({\n\t\t\tfrom: `${process.env.NAME_SENDER} `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Convite para o condomínio`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este link com ninguém\n\t\t\t\thttps://[EXEMPLO DE DOMÍNIO]/[PÁGINA DO FRONT PARA VALIDAR O CONVITE]/${inviteAsHash}`,\n\t\t});\n\n\t\treturn invite;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-13.html":{"url":"interfaces/IProps-13.html","title":"interface - IProps-13","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genTFA.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { Email, UUID } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tuserId: UUID;\n}\n\n/** Serviço responsável por iniciar o processo de autenticação de dois fatores */\n@Injectable()\nexport class GenTFAService implements IService {\n\tconstructor(\n\t\tprivate readonly email: EmailAdapter,\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tprivate async genCode(input: UUID) {\n\t\tconst user = await this.userRepo.find({ key: input, safeSearch: true });\n\t\tlet code = generateStringCodeContent({\n\t\t\temail: user.email,\n\t\t\tid: user.id,\n\t\t});\n\t\tconst key = process.env.TFA_TOKEN_KEY as string;\n\n\t\tconst metadata = JSON.stringify({\n\t\t\tiat: Date.now(),\n\t\t\texp: Date.now() + 1000 * 60 * 60 * 3,\n\t\t});\n\t\tcode = `${btoa(metadata)}.${btoa(code)}`;\n\n\t\tconst inviteSignature = await this.crypt.hashWithHmac({\n\t\t\tdata: code,\n\t\t\tkey,\n\t\t});\n\t\treturn `${btoa(metadata)}.${btoa(inviteSignature)}`;\n\t}\n\n\tasync exec(input: IProps) {\n\t\tconst code = await this.genCode(input.userId);\n\t\tawait this.email.send({\n\t\t\tfrom: `${process.env.NAME_SENDER} `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Solicitação de login`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este código com ninguém\n\t\t\t\thttps://[EXEMPLO DE DOMÍNIO]/[PÁGINA DO FRONT PARA VALIDAR O CÓDIGO]/${code}`,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-14.html":{"url":"interfaces/IProps-14.html","title":"interface - IProps-14","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genTFACode.old.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { OTPRepo } from '@registry:app/repositories/otp';\nimport { OTP } from '@registry:app/entities/OTP';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tuserId: string;\n\tttl?: number;\n}\n\n@Injectable()\nexport class GenOldTFASevice implements IService {\n\tconstructor(\n\t\tprivate readonly email: EmailAdapter,\n\t\tprivate readonly otp: OTPRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tprivate async generateRandomNumbers() {\n\t\tlet rawCode: number[] | string = [];\n\n\t\tfor (let i = 0; i `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Solicitação de login`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este código com ninguém\n\t\t\t\t${rawCode}`,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-15.html":{"url":"interfaces/IProps-15.html","title":"interface - IProps-15","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/getCondominiumRel.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UUID } from '@registry:app/entities/VO';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { IService } from './_IService';\n\ninterface IProps {\n\tuserId: UUID;\n}\n\n/** Serviço responsável por ler e retornar a relação que um usuário tem com seus condominios */\n@Injectable()\nexport class GetCondominiumRelUserService implements IService {\n\tconstructor(private readonly userRepo: UserRepo) {}\n\n\tasync exec({ userId }: IProps) {\n\t\tconst condominiumRelUserGroup =\n\t\t\tawait this.userRepo.getAllCondominiumRelation({ userId });\n\t\treturn {\n\t\t\tcondominiumRels: condominiumRelUserGroup,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-16.html":{"url":"interfaces/IProps-16.html","title":"interface - IProps-16","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/errors/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         GatewaysErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GatewaysErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GatewaysErrorsTags {\n\tInvalidResult = 'Invalid Result',\n\tPoisonedContent = 'Poisoned Content',\n}\n\ninterface IProps {\n\tmessage: string;\n\tcontent?: any;\n\ttag: GatewaysErrorsTags;\n}\n\nexport class GatewayErrors extends Error {\n\treadonly tag: GatewaysErrorsTags;\n\treadonly content: any;\n\n\t/**\n\t * Erro customizado usado na camada de gateways, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro, o conteúdo e a tag de rastramento para os filters, use o GatewaysErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Gateway Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t\tthis.content = input.content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-17.html":{"url":"interfaces/IProps-17.html","title":"interface - IProps-17","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/invite/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email, Level, UUID } from '../VO';\nimport { Entity } from '../entities';\n\nexport interface IProps {\n\temail: Email;\n\tttl: number;\n\texpiresAt: Date;\n\tcondominiumId: UUID;\n\ttype: Level;\n}\n\nexport interface IInputPropsInvite {\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class Invite implements Entity {\n\tprivate readonly props: IProps;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: IInputPropsInvite, id?: string) {\n\t\tthis.props = {\n\t\t\temail: new Email(input.email),\n\t\t\tttl: input.ttl,\n\t\t\ttype: new Level(input.type),\n\t\t\tcondominiumId: new UUID(input.condominiumId),\n\t\t\texpiresAt: input.expiresAt ?? new Date(Date.now() + input.ttl),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tdereference(): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\temail: this.email.value,\n\t\t\t\tttl: this.ttl,\n\t\t\t\ttype: this.type.value,\n\t\t\t\tcondominiumId: this.condominiumId.value,\n\t\t\t\texpiresAt: this.expiresAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tequalTo(input: Invite): boolean {\n\t\treturn (\n\t\t\tinput.id.equalTo(this.id) &&\n\t\t\tinput.type.equalTo(this.type) &&\n\t\t\tinput.email.equalTo(this.email) &&\n\t\t\tinput.ttl === this.ttl &&\n\t\t\tinput.expiresAt === this.expiresAt &&\n\t\t\tinput.condominiumId.equalTo(this.condominiumId)\n\t\t);\n\t}\n\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\tget expiresAt(): Date {\n\t\treturn this.props.expiresAt;\n\t}\n\tget type(): Level {\n\t\treturn this.props.type;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-18.html":{"url":"interfaces/IProps-18.html","title":"interface - IProps-18","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/error/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         DatabaseCustomErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseCustomErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum DatabaseCustomErrorsTags {\n\ttooManyEntities = 'Too many entities',\n\tmaximumCondominiumRelUser = 'Maximum condominiumRelUser',\n\twrongInputLevel = 'Wrong input level detected',\n\tcontentAlreadyExists = 'This content already exists',\n\tcontentDoesntExists = 'This content doesn\\'t exists',\n\tsafeSearchEnabled = 'Safe search detected',\n\tdtoFailure = 'The DTO found an error',\n\trefLost = 'The reference could not be found',\n\tmalformedRef = 'Malformed reference',\n}\n\ninterface IProps {\n\tmessage: string;\n\ttag: DatabaseCustomErrorsTags;\n}\n\nexport class DatabaseCustomError extends Error {\n\treadonly tag: DatabaseCustomErrorsTags;\n\n\t/**\n\t * Erro customizado usado na camada de banco de dados, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e o identificador usado para mapear os erros na camada dos filters, use os enums vindos de DatabaseCustomErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Database Custom Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-19.html":{"url":"interfaces/IProps-19.html","title":"interface - IProps-19","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/cache/redis/error/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         RedisErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RedisErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum RedisErrorsTags {\n  alreadyExist = 'Entitie already exists'\n}\n\ninterface IProps {\n  tag: RedisErrorsTags;\n  message: string;\n}\n\nexport class RedisLogicError extends Error {\n  readonly tag: RedisErrorsTags;\n\n  /**\n  * Erro customizado usado na camada de banco de dados cache, use-o caso seja necessário disparar algum erro rastreável pelos filters\n  * @param input - Deve conter a mensagem do erro e o identificador usado para mapear os erros na camada dos filters, use os enums vindos de RedisErrorsTags\n  **/\n  constructor(input: IProps) {\n\tsuper();\n\n\tthis.name = 'Redis Logic Error';\n\tthis.message = input.message;\n\tthis.tag = input.tag;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-2.html":{"url":"interfaces/IProps-2.html","title":"interface - IProps-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/errors/inMemoryError.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         EntitiesEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntitiesEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\n\ninterface IProps {\n\tentity: EntitiesEnum;\n\tmessage: string;\n}\n\nexport class InMemoryError extends Error {\n\treadonly entity: EntitiesEnum;\n\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = `In Memory Error: ${input.entity}`;\n\t\tthis.message = input.message;\n\t\tthis.entity = input.entity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-3.html":{"url":"interfaces/IProps-3.html","title":"interface - IProps-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/adapter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IProps {\n\tmessage: string;\n\thttpCode?: number;\n}\n\nexport class AdapterError extends Error {\n\treadonly httpCode: number | undefined;\n\n\t/**\n\t * Erro customizado usado na camada de adaptadores, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input- Deve conter a mensagem do erro e o código http\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Adapter Error';\n\t\tthis.httpCode = input.httpCode;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-4.html":{"url":"interfaces/IProps-4.html","title":"interface - IProps-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/entities.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         EntitiesEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntitiesEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\n\ninterface IProps {\n\tentity: EntitiesEnum;\n\tmessage: string;\n}\n\nexport class EntitieError extends Error {\n\treadonly entity: EntitiesEnum;\n\n\t/**\n\t * Erro customizado usado na camada de entidades, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e a entidade envolvida, use EntitiesEnum para fazer esta indicação\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name =\n\t\t\tinput.entity === EntitiesEnum.vo\n\t\t\t\t? 'Value Object error'\n\t\t\t\t: 'Entity error';\n\t\tthis.message = input.message;\n\t\tthis.entity = input.entity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-5.html":{"url":"interfaces/IProps-5.html","title":"interface - IProps-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IProps {\n\tmessage: string;\n}\n\nexport class GuardErrors extends Error {\n\t/**\n\t * Erro customizado usado na camada de guards, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Guard Error';\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-6.html":{"url":"interfaces/IProps-6.html","title":"interface - IProps-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/services.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         ServiceErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ServiceErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum ServiceErrorsTags {\n\twrongServiceUsage = 'WrongServiceUsage',\n\tunauthorized = 'Unauthorized',\n\talreadyExist = 'Conflict',\n}\n\ninterface IProps {\n\tmessage: string;\n\ttag: ServiceErrorsTags;\n}\n\nexport class ServiceErrors extends Error {\n\treadonly tag: ServiceErrorsTags;\n\n\t/**\n\t * Erro customizado usado na camada de services, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e o identificador em forma de tag usado para mapear os erros na camada dos filters, use os enums vindos de ServiceErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Service Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-7.html":{"url":"interfaces/IProps-7.html","title":"interface - IProps-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createCondominium.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominium\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominium:         Condominium\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Condominium\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CepGateway } from '@registry:app/gateways/CEP.gateway';\nimport { CondominiumRepo } from '@registry:app/repositories/condominium';\nimport { Injectable } from '@nestjs/common';\nimport { IService } from './_IService';\n\ninterface IProps {\n\tcondominium: Condominium;\n}\n\n/** Serviço responsável por criar um novo condomínio */\n@Injectable()\nexport class CreateCondominiumService implements IService {\n\tconstructor(\n\t\tprivate readonly condominiumRepo: CondominiumRepo,\n\t\tprivate readonly cepGate: CepGateway,\n\t) {}\n\n\tasync exec(input: IProps) {\n\t\tawait this.cepGate.check(input.condominium.CEP.value);\n\n\t\tawait this.condominiumRepo.create({\n\t\t\tcondominium: input.condominium,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-8.html":{"url":"interfaces/IProps-8.html","title":"interface - IProps-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createToken.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | IUserDataCore\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | IUserDataCore\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tIAccessTokenBody,\n\tIRefreshTokenBody,\n\tTokenType,\n} from '@registry:app/auth/tokenTypes';\nimport {\n\tApartmentNumber,\n\tBlock,\n\tEmail,\n\tLevel,\n\tName,\n\tPhoneNumber,\n\tUUID,\n} from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IService } from './_IService';\n\ninterface IUserDataCore {\n\tid: UUID;\n\temail: Email;\n\tblock?: Block;\n\tapartmentNumber?: ApartmentNumber;\n\tname: Name;\n\tlevel: Level;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n\tphoneNumber: PhoneNumber;\n}\n\ninterface IProps {\n\tuser: User | IUserDataCore;\n}\n\n/** Serviço responsável por gerar o token de acesso e o de renovação */\n@Injectable()\nexport class CreateTokenService implements IService {\n\tconstructor(private readonly jwtService: JwtService) {}\n\n\tprivate async buildAccessToken(user: User | IUserDataCore) {\n\t\tconst exp = parseInt(process.env.ACCESS_TOKEN_EXP as string);\n\t\tconst accessJwtBody: Omit = {\n\t\t\tsub: user.id.value,\n\t\t\tcontent: {\n\t\t\t\temail: user.email.value,\n\t\t\t\tname: user.name.value,\n\t\t\t\tcreatedAt: user.createdAt,\n\t\t\t\tupdatedAt: user.updatedAt,\n\t\t\t\tphoneNumber: user.phoneNumber.value,\n\t\t\t},\n\t\t\ttype: TokenType.accessToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(accessJwtBody, {\n\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tprivate async buildRefreshToken(email: Email, userId: UUID) {\n\t\tconst exp = parseInt(process.env.REFRESH_TOKEN_EXP as string);\n\t\tconst refreshJwtBody: Omit = {\n\t\t\tsub: userId.value,\n\t\t\temail: email.value,\n\t\t\ttype: TokenType.refreshToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(refreshJwtBody, {\n\t\t\tsecret: process.env.REFRESH_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tasync exec({ user }: IProps) {\n\t\tconst accessToken = await this.buildAccessToken(user);\n\t\tconst refreshToken = await this.buildRefreshToken(user.email, user.id);\n\n\t\treturn { accessToken, refreshToken };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-9.html":{"url":"interfaces/IProps-9.html","title":"interface - IProps-9","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createUser.old.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumRelUser\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumRelUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumRelUser:         CondominiumRelUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CondominiumRelUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { CryptAdapter } from \"@registry:app/adapters/crypt\";\nimport { OTPRepo } from \"@registry:app/repositories/otp\";\nimport { UserRepo } from \"@registry:app/repositories/user\";\nimport { IService } from \"./_IService\";\nimport { Password } from \"@registry:app/entities/VO\";\nimport { User } from \"@registry:app/entities/user\";\nimport { CondominiumRelUser } from \"@registry:app/entities/condominiumRelUser\";\n\ninterface IProps {\n\tuser: User;\n\tcondominiumRelUser: CondominiumRelUser;\n}\n\n@Injectable()\nexport class CreateUserService implements IService {\n\tconstructor(\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t\tprivate readonly otpRepo: OTPRepo,\n\t) {}\n\n\tasync exec(input: IProps) {\n\t\tconst hashPass = await this.crypt.hash(input.user.password.value);\n\n\t\tconst user = input.user.dereference();\n\t\tuser.password = new Password(hashPass);\n\n\t\tawait this.userRepo.create({ \n\t\t\tuser, \n\t\t\tcondominiumRelUser: input.condominiumRelUser \n\t\t});\n\t\tawait this.otpRepo.delete({ email: input.user.email });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropsCondominium.html":{"url":"interfaces/IPropsCondominium.html","title":"interface - IPropsCondominium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropsCondominium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominium/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CEP\n                                        \n                                \n                                \n                                        \n                                            CNPJ\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            num\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CEP\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CEP:         CEP\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CEP\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CNPJ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CNPJ:         CNPJ\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CNPJ\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num:         Num\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Num\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CEP, Name, Num, CNPJ, UUID } from '../VO';\nimport { Entity } from '../entities';\n\ninterface IPropsCondominium {\n\tname: Name;\n\tCEP: CEP;\n\tnum: Num;\n\tCNPJ: CNPJ;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n}\n\nexport type TInputPropsCondominium = {\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n};\n\nexport const condominiumDTORules = {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\tCEP: {\n\t\tminLength: 8,\n\t\tmaxLength: 9,\n\t\ttype: 'string',\n\t},\n\tnum: {\n\t\tminLength: 0,\n\t\tmaxLength: 2147483647,\n\t\ttype: 'number',\n\t},\n\tCNPJ: {\n\t\tminLength: 14,\n\t\tmaxLength: 18,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAy: {\n\t\ttype: Date,\n\t},\n};\n\nexport class Condominium implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: IPropsCondominium;\n\n\tconstructor(content: TInputPropsCondominium, id?: string) {\n\t\tthis.props = {\n\t\t\tname: new Name(content.name),\n\t\t\tCEP: new CEP(content.CEP),\n\t\t\tnum: new Num(content.num),\n\t\t\tCNPJ: new CNPJ(content.CNPJ),\n\t\t\tcreatedAt: content.createdAt ?? new Date(),\n\t\t\tupdatedAt: content.updatedAt ?? new Date(),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tpublic dereference(): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: this.name.value,\n\t\t\t\tCEP: this.CEP.value,\n\t\t\t\tnum: this.num.value,\n\t\t\t\tCNPJ: this.CNPJ.value,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t\tupdatedAt: this.updatedAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tpublic equalTo(input: Condominium): boolean {\n\t\treturn (\n\t\t\tinput instanceof Condominium &&\n\t\t\tthis.id.equalTo(input.id) &&\n\t\t\tthis.props.name.equalTo(input.name) &&\n\t\t\tthis.props.CEP.equalTo(input.CEP) &&\n\t\t\tthis.props.num.equalTo(input.num) &&\n\t\t\tthis.props.CNPJ.equalTo(input.CNPJ) &&\n\t\t\tthis.props.createdAt === input.createdAt &&\n\t\t\tthis.props.updatedAt === input.updatedAt\n\t\t);\n\t}\n\n\t// ID\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\t// NAME\n\tget name(): Name {\n\t\treturn this.props.name;\n\t}\n\tset name(input: Name) {\n\t\tthis.props.name = input;\n\t}\n\n\t// CEP\n\tget CEP(): CEP {\n\t\treturn this.props.CEP;\n\t}\n\tset CEP(input: CEP) {\n\t\tthis.CEP = input;\n\t}\n\n\t// NUM\n\tget num(): Num {\n\t\treturn this.props.num;\n\t}\n\tset num(input: Num) {\n\t\tthis.props.num = input;\n\t}\n\n\t// CNPJ\n\tget CNPJ(): CNPJ {\n\t\treturn this.props.CNPJ;\n\t}\n\tset CNPJ(input: CNPJ) {\n\t\tthis.props.CNPJ = input;\n\t}\n\n\t// CREATEDAT\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n\n\t// UPDATEDAT\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropsUser.html":{"url":"interfaces/IPropsUser.html","title":"interface - IPropsUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropsUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/user/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CPF\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CPF\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CPF:         CPF\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPF\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         Password\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Password\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         PhoneNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PhoneNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Name, Email, Password, CPF, PhoneNumber, UUID } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\ninterface IPropsUser {\n\tname: Name;\n\temail: Email;\n\tpassword: Password;\n\tCPF: CPF;\n\tphoneNumber: PhoneNumber;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n}\n\nexport type TInputPropsUser = {\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n};\n\nexport const userDTORules = {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\temail: {\n\t\tmaxLength: 320,\n\t\ttype: 'string',\n\t},\n\tpassword: {\n\t\tmaxLength: 64,\n\t\tminLength: 8,\n\t\ttype: 'string',\n\t},\n\tCPF: {\n\t\tmaxLength: 14,\n\t\tminLength: 11,\n\t\ttype: 'string',\n\t},\n\tphoneNumber: {\n\t\tmaxLength: 30,\n\t\tminLength: 10,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class User implements Entity {\n\tprivate props: IPropsUser;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: TInputPropsUser, id?: string) {\n\t\tthis.props = {\n\t\t\tname: new Name(input.name),\n\t\t\temail: new Email(input.email),\n\t\t\tpassword: new Password(input.password),\n\t\t\tCPF: new CPF(input.CPF),\n\t\t\tphoneNumber: new PhoneNumber(input.phoneNumber),\n\t\t\tcreatedAt: input.createdAt ?? new Date(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tpublic dereference(): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\tname: this.name.value,\n\t\t\t\temail: this.email.value,\n\t\t\t\tpassword: this.password.value,\n\t\t\t\tCPF: this.CPF.value,\n\t\t\t\tphoneNumber: this.phoneNumber.value,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t\tupdatedAt: this.updatedAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tpublic equalTo(input: User): boolean {\n\t\treturn (\n\t\t\tinput instanceof User &&\n\t\t\tthis.createdAt === input.createdAt &&\n\t\t\tthis.updatedAt === input.updatedAt &&\n\t\t\tValueObject.compare(this._id, input.id) &&\n\t\t\tValueObject.compare(this.phoneNumber, input.phoneNumber) &&\n\t\t\tValueObject.compare(this.CPF, input.CPF) &&\n\t\t\tValueObject.compare(this.password, input.password) &&\n\t\t\tValueObject.compare(this.name, input.name) &&\n\t\t\tValueObject.compare(this.email, input.email)\n\t\t);\n\t}\n\n\t// Id\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\t// Name\n\tget name(): Name {\n\t\treturn this.props.name;\n\t}\n\tset name(input: Name) {\n\t\tthis.props.name = input;\n\t}\n\n\t// Email\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tset email(input: Email) {\n\t\tthis.props.email = input;\n\t}\n\n\t// Password\n\tget password(): Password {\n\t\treturn this.props.password;\n\t}\n\tset password(input: Password) {\n\t\tthis.props.password = input;\n\t}\n\n\t// CPF\n\tget CPF(): CPF {\n\t\treturn this.props.CPF;\n\t}\n\tset CPF(input: CPF) {\n\t\tthis.props.CPF = input;\n\t}\n\n\t// PhoneNumber\n\tget phoneNumber(): PhoneNumber {\n\t\treturn this.props.phoneNumber;\n\t}\n\tset phoneNumber(input: PhoneNumber) {\n\t\tthis.props.phoneNumber = input;\n\t}\n\n\t// CreatedAt\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n\n\t// UpdatedAt\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRedisError.html":{"url":"interfaces/IRedisError.html","title":"interface - IRedisError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRedisError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/redis-login.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         RedisErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RedisErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from \"@nestjs/common\";\nimport { LayersEnum, LoggerAdapter } from \"@registry:app/adapters/logger\";\nimport { RedisErrorsTags, RedisLogicError } from \"@registry:infra/storages/cache/redis/error\";\nimport { Response } from \"express\"\n\ninterface IRedisError {\n\tname: string;\n\ttag: RedisErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n@Catch(RedisLogicError)\nexport class RedisErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IRedisError[] = [\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\ttag: RedisErrorsTags.alreadyExist,\n\t\t\tmessage: 'Não foi possível criar o dado, pois o mesmo já existe',\n\t\t\thttpCode: 409,\n\t\t},\n\t];\n\n\tcatch(exception: RedisLogicError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.cache,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.cache,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRefreshTokenBody.html":{"url":"interfaces/IRefreshTokenBody.html","title":"interface - IRefreshTokenBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRefreshTokenBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/auth/tokenTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum TokenType {\n\taccessToken = 'Access Token',\n\trefreshToken = 'Refresh Token',\n}\n\nexport interface IAccessTokenBody {\n\tsub: string;\n\ttype: string;\n\tcontent: {\n\t\tname: string;\n\t\temail: string;\n\t\tphoneNumber: string;\n\t\tcreatedAt: Date;\n\t\tupdatedAt: Date;\n\t};\n\tiat: number;\n\texp: number;\n}\n\nexport interface IRefreshTokenBody {\n\tsub: string;\n\ttype: string;\n\temail: string;\n\tiat: number;\n\texp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISendMailContent.html":{"url":"interfaces/ISendMailContent.html","title":"interface - ISendMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISendMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/email.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISendMailContent {\n\tfrom: string;\n\tto: string;\n\tsubject: string;\n\tbody: string;\n}\n\nexport abstract class EmailAdapter {\n\tabstract send: (data: ISendMailContent) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IService.html":{"url":"classes/IService.html","title":"class - IService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/_IService.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para garantir uma padronização nos services, obrigando por exemplo, o a existência de funções com retorno de objetos ou void\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input?: TServiceExecInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/_IService.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TServiceExecInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TServiceExecReturn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type TServiceExecReturn = Promise> | Promise | void;\ntype TServiceExecInput = Record;\n\n/** Usado para garantir uma padronização nos services, obrigando por exemplo, o a existência de funções com retorno de objetos ou void **/\nexport abstract class IService {\n\tabstract exec(input?: TServiceExecInput): TServiceExecReturn;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IServiceErrors.html":{"url":"interfaces/IServiceErrors.html","title":"interface - IServiceErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IServiceErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/services.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         ServiceErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ServiceErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tServiceErrors,\n\tServiceErrorsTags,\n} from '@registry:app/errors/services';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IServiceErrors {\n\tname: string;\n\ttag: ServiceErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros dos Services */\n@Catch(ServiceErrors)\nexport class ServiceErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IServiceErrors[] = [\n\t\t{\n\t\t\tname: 'Credenciais inválidas',\n\t\t\ttag: ServiceErrorsTags.unauthorized,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\ttag: ServiceErrorsTags.alreadyExist,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 409,\n\t\t},\n\t\t{\n\t\t\tname: 'Uso incorreto de recusrsos',\n\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\tmessage:\n\t\t\t\t'Não é possível utilizar este recurso para realizar está ação',\n\t\t\thttpCode: 400,\n\t\t},\n\t];\n\n\tcatch(exception: ServiceErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.services,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.services,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISuccess.html":{"url":"interfaces/ISuccess.html","title":"interface - ISuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/APIs/viacep.gateway.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bairro\n                                        \n                                \n                                \n                                        \n                                            cep\n                                        \n                                \n                                \n                                        \n                                            complemento\n                                        \n                                \n                                \n                                        \n                                            ddd\n                                        \n                                \n                                \n                                        \n                                            gia\n                                        \n                                \n                                \n                                        \n                                            ibge\n                                        \n                                \n                                \n                                        \n                                            localidade\n                                        \n                                \n                                \n                                        \n                                            logradouro\n                                        \n                                \n                                \n                                        \n                                            siafi\n                                        \n                                \n                                \n                                        \n                                            uf\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bairro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bairro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cep\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cep:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        complemento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complemento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ddd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ddd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gia\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gia:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ibge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ibge:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localidade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localidade:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logradouro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logradouro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        siafi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        siafi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uf\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uf:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpAdapter } from '@registry:app/adapters/http';\nimport { CepGateway, ICheckCep } from '@registry:app/gateways/CEP.gateway';\nimport { Injectable } from '@nestjs/common';\nimport { GatewayErrors, GatewaysErrorsTags } from '../errors';\n\ninterface ISuccess {\n\tcep: string;\n\tlogradouro: string;\n\tcomplemento: string;\n\tbairro: string;\n\tlocalidade: string;\n\tuf: string;\n\tibge: string;\n\tgia: string;\n\tddd: string;\n\tsiafi: string;\n}\n\n@Injectable()\nexport class ViacepGateway implements CepGateway {\n\tconstructor(private readonly httpAdapter: HttpAdapter) {}\n\n\tasync check(input: string): Promise {\n\t\tconst data = await this.httpAdapter.call({\n\t\t\turl: `https://viacep.com.br/ws/${input}/json/`,\n\t\t\tmethod: 'GET',\n\t\t});\n\n\t\tif (data.body?.erro)\n\t\t\tthrow new GatewayErrors({\n\t\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\t\tmessage: `Could not finish the request: https://viacep.com.br/ws/${input}/json/. Received 'erro' field as true!`,\n\t\t\t});\n\n\t\tconst body = data.body as ISuccess;\n\t\treturn {\n\t\t\tuf: body.uf,\n\t\t\tcep: body.cep,\n\t\t\tneighborhood: body.bairro,\n\t\t\tcomplement: body.complemento,\n\t\t\tcity: body.localidade,\n\t\t\tstreet_address: body.logradouro,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUntrackableErrors.html":{"url":"interfaces/IUntrackableErrors.html","title":"interface - IUntrackableErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUntrackableErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/generic.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IUntrackableErrors {\n\tname: string;\n\tkey: string;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros genéricos */\n@Catch()\nexport class GenericErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate readonly untrackableErrors: IUntrackableErrors[] = [\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\tkey: 'ALREADY_EXISTS: entity already exists',\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t];\n\n\tcatch(exception: Error, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.untrackableErrors.find((item) => {\n\t\t\treturn exception?.message?.includes(item.key);\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: `Erro interno do servidor ${exception?.name}`,\n\t\t\tlayer: LayersEnum.unknown,\n\t\t\tdescription: exception?.message ?? 'Causa desconhecida',\n\t\t\tstack: exception?.stack ?? 'Causa desconhecida',\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserDataCore.html":{"url":"interfaces/IUserDataCore.html","title":"interface - IUserDataCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserDataCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createToken.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:         ApartmentNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ApartmentNumber\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         Block\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         PhoneNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PhoneNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tIAccessTokenBody,\n\tIRefreshTokenBody,\n\tTokenType,\n} from '@registry:app/auth/tokenTypes';\nimport {\n\tApartmentNumber,\n\tBlock,\n\tEmail,\n\tLevel,\n\tName,\n\tPhoneNumber,\n\tUUID,\n} from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IService } from './_IService';\n\ninterface IUserDataCore {\n\tid: UUID;\n\temail: Email;\n\tblock?: Block;\n\tapartmentNumber?: ApartmentNumber;\n\tname: Name;\n\tlevel: Level;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n\tphoneNumber: PhoneNumber;\n}\n\ninterface IProps {\n\tuser: User | IUserDataCore;\n}\n\n/** Serviço responsável por gerar o token de acesso e o de renovação */\n@Injectable()\nexport class CreateTokenService implements IService {\n\tconstructor(private readonly jwtService: JwtService) {}\n\n\tprivate async buildAccessToken(user: User | IUserDataCore) {\n\t\tconst exp = parseInt(process.env.ACCESS_TOKEN_EXP as string);\n\t\tconst accessJwtBody: Omit = {\n\t\t\tsub: user.id.value,\n\t\t\tcontent: {\n\t\t\t\temail: user.email.value,\n\t\t\t\tname: user.name.value,\n\t\t\t\tcreatedAt: user.createdAt,\n\t\t\t\tupdatedAt: user.updatedAt,\n\t\t\t\tphoneNumber: user.phoneNumber.value,\n\t\t\t},\n\t\t\ttype: TokenType.accessToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(accessJwtBody, {\n\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tprivate async buildRefreshToken(email: Email, userId: UUID) {\n\t\tconst exp = parseInt(process.env.REFRESH_TOKEN_EXP as string);\n\t\tconst refreshJwtBody: Omit = {\n\t\t\tsub: userId.value,\n\t\t\temail: email.value,\n\t\t\ttype: TokenType.refreshToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(refreshJwtBody, {\n\t\t\tsecret: process.env.REFRESH_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tasync exec({ user }: IProps) {\n\t\tconst accessToken = await this.buildAccessToken(user);\n\t\tconst refreshToken = await this.buildRefreshToken(user.email, user.id);\n\n\t\treturn { accessToken, refreshToken };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserInObject.html":{"url":"interfaces/IUserInObject.html","title":"interface - IUserInObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserInObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CPF\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CPF\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CPF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../entities/user';\n\nexport interface IUserInObject {\n\tid?: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport type TUserClassToObject = {\n\tid: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n};\n\nexport class UserMapper {\n\t/**\n\t * Método usado para converter um objeto de usuário em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IUserInObject): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de usuário em objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: User): TUserClassToObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tname: input.name.value,\n\t\t\temail: input.email.value,\n\t\t\tpassword: input.password.value,\n\t\t\tCPF: input.CPF.value,\n\t\t\tphoneNumber: input.phoneNumber.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidate.html":{"url":"interfaces/IValidate.html","title":"interface - IValidate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/auth/guards/hmac-invite.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invite\n                                        \n                                \n                                \n                                        \n                                            inviteAsHash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invite:         Invite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteAsHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inviteAsHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { Email } from '@registry:app/entities/VO';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\nimport { plainToClass } from 'class-transformer';\nimport { InviteUserDTO } from '@registry:infra/http/DTO/inviteUser.DTO';\nimport { checkClassValidatorErrors } from '@registry:utils/convertValidatorErr';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { Invite } from '@registry:app/entities/invite';\n\ninterface IValidate {\n\temail: Email;\n\tinviteAsHash: string;\n\tinvite: Invite;\n}\n\n/** Usado para validar a integridade e validade dos convites */\n@Injectable()\nexport class HmacInviteGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly crypt: CryptAdapter,\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t) {}\n\n\tprivate mapKeyBasedOnLevel(input: number | undefined) {\n\t\tswitch (input) {\n\t\tcase 1:\n\t\t\treturn process.env.INVITE_ADMIN_TOKEN_KEY;\n\t\tcase 2:\n\t\t\treturn process.env.INVITE_SUPER_ADMIN_TOKEN_KEY;\n\t\tdefault:\n\t\t\treturn process.env.INVITE_TOKEN_KEY;\n\t\t}\n\t}\n\n\tprivate async validate(input: IValidate): Promise {\n\t\tconst key = this.mapKeyBasedOnLevel(input.invite.type.value);\n\n\t\tconst invite = generateStringCodeContent({\n\t\t\tcondominiumId: input.invite.condominiumId,\n\t\t\temail: input.email,\n\t\t\trequiredLevel: input.invite.type,\n\t\t\tid: input.invite.id,\n\t\t});\n\t\tconst hashedInvite = await this.crypt\n\t\t\t.hashWithHmac({ data: invite, key: key as string })\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({\n\t\t\t\t\tmessage: 'Falha ao tentar gerar um HMAC do convite',\n\t\t\t\t});\n\t\t\t});\n\n\t\treturn hashedInvite === input.inviteAsHash;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\n\t\tconst body = plainToClass(InviteUserDTO, req.body);\n\t\tawait checkClassValidatorErrors({ body });\n\t\tconst email = new Email(body.email);\n\n\t\tif (typeof req.query?.invite !== 'string')\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'O convite é inválido',\n\t\t\t});\n\n\t\tconst invite = await this.inviteRepo.find({\n\t\t\tkey: email,\n\t\t\tsafeSearch: true,\n\t\t});\n\n\t\tconst inviteAsHash = req.query.invite;\n\t\tconst validationRes = await this.validate({\n\t\t\temail,\n\t\t\tinviteAsHash,\n\t\t\tinvite,\n\t\t});\n\t\tif (!validationRes || invite.expiresAt.getTime() \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidateSignedCookie.html":{"url":"interfaces/IValidateSignedCookie.html","title":"interface - IValidateSignedCookie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidateSignedCookie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/cookie.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cookie\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cookie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cookie:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type TValidateSignedCookieReturn =\n\t| Promise\n\t| string\n\t| false;\n\nexport interface IValidateSignedCookie {\n\tcookie: string;\n\tkey: string;\n}\n\nexport abstract class CookieAdapter {\n\tabstract validateSignedCookie(\n\t\tdata: IValidateSignedCookie,\n\t): TValidateSignedCookieReturn;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryCondominium.html":{"url":"classes/InMemoryCondominium.html","title":"class - InMemoryCondominium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryCondominium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/condominium/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CondominiumRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calls\n                            \n                            \n                                    Public\n                                condominiums\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: InMemoryContainer)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        InMemoryContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        condominiums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Condominium[]\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: CondominiumInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport {\n\tCondominiumInterfaces,\n\tCondominiumRepo,\n} from '@registry:app/repositories/condominium';\nimport { InMemoryError } from '@registry:tests/errors/inMemoryError';\nimport { InMemoryContainer } from '../inMemoryContainer';\n\nexport class InMemoryCondominium implements CondominiumRepo {\n\tpublic calls = {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t};\n\tpublic condominiums: Condominium[];\n\n\tconstructor(container: InMemoryContainer) {\n\t\tthis.condominiums = container.props.condominiumArr;\n\t}\n\n\tpublic async create(input: CondominiumInterfaces.create): Promise {\n\t\t++this.calls.create;\n\n\t\tconst existentData = this.condominiums.find((item) =>\n\t\t\tinput.condominium.equalTo(item),\n\t\t);\n\n\t\tif (existentData)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.condominium,\n\t\t\t\tmessage: 'Condominium already exist',\n\t\t\t});\n\n\t\tthis.condominiums.push(input.condominium);\n\t}\n\n\tasync find(input: CondominiumInterfaces.safeSearch): Promise;\n\tasync find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n\n\tpublic async find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise {\n\t\t++this.calls.find;\n\n\t\tconst existentData = this.condominiums.find((item) => {\n\t\t\treturn (\n\t\t\t\t(input.key instanceof CNPJ && item.CNPJ.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof CEP && item.CEP.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof Name && item.name.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof UUID && item.id.equalTo(input.key))\n\t\t\t);\n\t\t});\n\n\t\tif (!existentData && input.safeSearch)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.condominium,\n\t\t\t\tmessage: 'Condominium not found',\n\t\t\t});\n\n\t\treturn existentData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryContainer.html":{"url":"classes/InMemoryContainer.html","title":"class - InMemoryContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                erase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IInMemoryContainerProps\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tuserArr: [],\n\t\tcondominiumArr: [],\n\t\tcondominiumRelUserArr: [],\n\t\tinviteArr: [],\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        erase\n                        \n                    \n                \n            \n            \n                \nerase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport interface IInMemoryUserContainer {\n\tuser: {\n\t\tcontent: User;\n\t\tcondominiumRelUser: Record;\n\t};\n}\n\ninterface IInMemoryContainerProps {\n\tuserArr: IInMemoryUserContainer[];\n\tcondominiumArr: Condominium[];\n\tcondominiumRelUserArr: CondominiumRelUser[];\n\tinviteArr: Invite[];\n}\n\nexport class InMemoryContainer {\n\tprops: IInMemoryContainerProps = {\n\t\tuserArr: [],\n\t\tcondominiumArr: [],\n\t\tcondominiumRelUserArr: [],\n\t\tinviteArr: [],\n\t};\n\n\terase() {\n\t\tthis.props = {\n\t\t\tuserArr: [],\n\t\t\tcondominiumRelUserArr: [],\n\t\t\tinviteArr: [],\n\t\t\tcondominiumArr: [],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryError.html":{"url":"classes/InMemoryError.html","title":"class - InMemoryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/errors/inMemoryError.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/tests/errors/inMemoryError.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntitiesEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/errors/inMemoryError.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\n\ninterface IProps {\n\tentity: EntitiesEnum;\n\tmessage: string;\n}\n\nexport class InMemoryError extends Error {\n\treadonly entity: EntitiesEnum;\n\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = `In Memory Error: ${input.entity}`;\n\t\tthis.message = input.message;\n\t\tthis.entity = input.entity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryInvite.html":{"url":"classes/InMemoryInvite.html","title":"class - InMemoryInvite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryInvite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/invites/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            InviteRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calls\n                            \n                            \n                                    Public\n                                invites\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                transferToUserResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: InMemoryContainer)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        InMemoryContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\ttransferToUserResources: 0,\n\t\tdelete: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        invites\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Invite[]\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IInMemoryUserContainer[]\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: InviteRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: InviteRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind | InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.safelyFind | InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transferToUserResources\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferToUserResources(input: InviteRepoInterfaces.transferToUserResources)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.transferToUserResources\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\nimport { Invite } from '@registry:app/entities/invite';\nimport {\n\tInviteRepo,\n\tInviteRepoInterfaces,\n} from '@registry:app/repositories/invite';\nimport { InMemoryError } from '@registry:tests/errors/inMemoryError';\nimport {\n\tIInMemoryUserContainer,\n\tInMemoryContainer,\n} from '../inMemoryContainer';\n\nexport class InMemoryInvite implements InviteRepo {\n\tpublic calls = {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\ttransferToUserResources: 0,\n\t\tdelete: 0,\n\t};\n\tpublic invites: Invite[];\n\tpublic users: IInMemoryUserContainer[];\n\n\tconstructor(container: InMemoryContainer) {\n\t\tthis.invites = container.props.inviteArr;\n\t\tthis.users = container.props.userArr;\n\t}\n\n\tasync create(input: InviteRepoInterfaces.create): Promise {\n\t\t++this.calls.create;\n\n\t\tconst searchedInvite = this.invites.find(\n\t\t\t(item) => item.id === input.invite.id,\n\t\t);\n\t\tif (searchedInvite)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.invite,\n\t\t\t\tmessage: 'Invite already exist',\n\t\t\t});\n\n\t\tconst searchedCondominiumRelUser = this.users.find(\n\t\t\t(item) =>\n\t\t\t\titem.user.condominiumRelUser[input.invite.condominiumId.value],\n\t\t);\n\n\t\tif (searchedCondominiumRelUser)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.invite,\n\t\t\t\tmessage: 'User is already linked in one condominium',\n\t\t\t});\n\n\t\tthis.invites.push(input.invite);\n\t}\n\n\tasync find(input: InviteRepoInterfaces.safelyFind): Promise;\n\tasync find(input: InviteRepoInterfaces.find): Promise;\n\n\tasync find(\n\t\tinput: InviteRepoInterfaces.safelyFind | InviteRepoInterfaces.find,\n\t): Promise {\n\t\t++this.calls.find;\n\n\t\tconst searchedInvite = this.invites.find((item) =>\n\t\t\titem.email.equalTo(input.key),\n\t\t);\n\n\t\tif (!searchedInvite && input.safeSearch)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.invite,\n\t\t\t\tmessage: 'Invite not found',\n\t\t\t});\n\n\t\treturn searchedInvite;\n\t}\n\n\tasync transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise {\n\t\t++this.calls.transferToUserResources;\n\n\t\tconst searchedInviteIndex = this.invites.findIndex((item) =>\n\t\t\titem.email.equalTo(input.user.email),\n\t\t);\n\t\tif (searchedInviteIndex  {\n\t\t++this.calls.delete;\n\n\t\tconst searchedInviteIndex = this.invites.findIndex((item) =>\n\t\t\titem.id.equalTo(input.key),\n\t\t);\n\t\tif (searchedInviteIndex \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryOTP.html":{"url":"classes/InMemoryOTP.html","title":"class - InMemoryOTP","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryOTP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/otp/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OTPRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calls\n                            \n                            \n                                    Public\n                                otps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\tdelete: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        otps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: ICreateOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICreateOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: IDeleteOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IDeleteOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: IFindOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IFindOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport {\n\tICreateOTPInput,\n\tIDeleteOTPInput,\n\tIFindOTPInput,\n\tOTPRepo,\n} from '@registry:app/repositories/otp';\nimport { InMemoryError } from '@registry:tests/errors/inMemoryError';\n\nexport class InMemoryOTP implements OTPRepo {\n\tpublic calls = {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\tdelete: 0,\n\t};\n\tpublic otps: Array = [];\n\n\tpublic async create(input: ICreateOTPInput): Promise {\n\t\tthis.calls.create = this.calls.create + 1;\n\n\t\tconst existentData = this.otps.find(\n\t\t\t(item) => `mockOTP:${input.email.value}` === item.key,\n\t\t);\n\n\t\tif (existentData)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.otp,\n\t\t\t\tmessage: 'OTP already exist',\n\t\t\t});\n\n\t\tthis.otps.push({\n\t\t\tkey: `mockOTP:${input.email.value}`,\n\t\t\tvalue: input.otp,\n\t\t});\n\t}\n\n\tpublic async find(input: IFindOTPInput): Promise {\n\t\tthis.calls.find = this.calls.find + 1;\n\n\t\tconst existentData = this.otps.find(\n\t\t\t(item) => `mockOTP:${input.email.value}` === item.key,\n\t\t);\n\n\t\treturn existentData?.value;\n\t}\n\n\tpublic async delete(input: IDeleteOTPInput): Promise {\n\t\tthis.calls.delete = this.calls.delete + 1;\n\n\t\tconst existentDataIndex = this.otps.findIndex(\n\t\t\t(item) => `mockOTP:${input.email.value}` === item.key,\n\t\t);\n\n\t\tif (existentDataIndex \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryUser.html":{"url":"classes/InMemoryUser.html","title":"class - InMemoryUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/user/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            UserRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calls\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                getAllCondominiumRelation\n                            \n                            \n                                    Async\n                                getCondominiumRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: InMemoryContainer)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        InMemoryContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\tdelete: 0,\n\t\tgetCondominiumRelation: 0,\n\t\tgetAllCondominiumRelation: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IInMemoryUserContainer[]\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: UserRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: UserRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search | UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCondominiumRelation(input: UserRepoInterfaces.getAllCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getAllCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCondominiumRelation(input: UserRepoInterfaces.getCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport { User } from '@registry:app/entities/user';\nimport { UserRepo, UserRepoInterfaces } from '@registry:app/repositories/user';\nimport { InMemoryError } from '@registry:tests/errors/inMemoryError';\nimport {\n\tIInMemoryUserContainer,\n\tInMemoryContainer,\n} from '../inMemoryContainer';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport {\n\tCondominiumRelUserMapper,\n\tTCondominiumRelUserToObject,\n} from '@registry:app/mapper/condominiumRelUser';\n\nexport class InMemoryUser implements UserRepo {\n\tpublic calls = {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\tdelete: 0,\n\t\tgetCondominiumRelation: 0,\n\t\tgetAllCondominiumRelation: 0,\n\t};\n\tpublic users: IInMemoryUserContainer[];\n\n\tconstructor(container: InMemoryContainer) {\n\t\tthis.users = container.props.userArr;\n\t}\n\n\tpublic async create(input: UserRepoInterfaces.create): Promise {\n\t\t++this.calls.create;\n\n\t\tconst existentData = this.users.find(\n\t\t\t(item) =>\n\t\t\t\tinput.user.id.equalTo(item.user.content.id) ||\n\t\t\t\tinput.user.email.equalTo(item.user.content.email) ||\n\t\t\t\tinput.user.CPF.equalTo(item.user.content.CPF),\n\t\t);\n\n\t\tif (existentData)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.user,\n\t\t\t\tmessage: 'User already exist',\n\t\t\t});\n\n\t\tthis.users.push({\n\t\t\tuser: {\n\t\t\t\tcontent: input.user,\n\t\t\t\tcondominiumRelUser: {\n\t\t\t\t\t[input.condominiumRelUser.condominiumId.value]:\n\t\t\t\t\t\tinput.condominiumRelUser,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync find(input: UserRepoInterfaces.safeSearch): Promise;\n\tasync find(input: UserRepoInterfaces.search): Promise;\n\n\tpublic async find(\n\t\tinput: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch,\n\t): Promise {\n\t\t++this.calls.find;\n\n\t\tconst existentData = this.users.find((item) => {\n\t\t\treturn (\n\t\t\t\t(input.key instanceof Email &&\n\t\t\t\t\titem.user.content.email.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof CPF &&\n\t\t\t\t\titem.user.content.CPF.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof UUID &&\n\t\t\t\t\titem.user.content.id.equalTo(input.key))\n\t\t\t);\n\t\t});\n\n\t\tif (!existentData && input.safeSearch)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.user,\n\t\t\t\tmessage: 'User not found',\n\t\t\t});\n\n\t\treturn existentData?.user.content;\n\t}\n\n\tasync getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise {\n\t\t++this.calls.getCondominiumRelation;\n\n\t\tconst existentData = this.users.find(\n\t\t\t(item) =>\n\t\t\t\titem.user.content.id === input.userId &&\n\t\t\t\titem.user.condominiumRelUser[input.condominiumId.value],\n\t\t);\n\n\t\tif (!existentData) return undefined;\n\n\t\treturn existentData.user.condominiumRelUser[input.condominiumId.value];\n\t}\n\tasync getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise {\n\t\t++this.calls.getAllCondominiumRelation;\n\n\t\tconst existentUser = this.users.find((item) =>\n\t\t\titem.user.content.id.equalTo(input.userId),\n\t\t);\n\n\t\tif (!existentUser) return [];\n\t\tconst condominiumRelUser: TCondominiumRelUserToObject[] = [];\n\n\t\tfor (const key in existentUser.user.condominiumRelUser)\n\t\t\tcondominiumRelUser.push(\n\t\t\t\tCondominiumRelUserMapper.toObject(\n\t\t\t\t\texistentUser.user.condominiumRelUser[key],\n\t\t\t\t),\n\t\t\t);\n\n\t\treturn condominiumRelUser;\n\t}\n\n\tpublic async delete(input: UserRepoInterfaces.remove): Promise {\n\t\t++this.calls.delete;\n\n\t\tconst existentDataIndex = this.users.findIndex((item) => {\n\t\t\treturn (\n\t\t\t\t(input.key instanceof UUID &&\n\t\t\t\t\titem.user.content.id.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof Email &&\n\t\t\t\t\titem.user.content.email.equalTo(input.key))\n\t\t\t);\n\t\t});\n\n\t\tif (existentDataIndex \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Index.html":{"url":"classes/Index.html","title":"class - Index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Index\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/entities/indexes.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flat\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ref\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IIndexProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/entities/indexes.ts:9\n                            \n                        \n\n                \n                    \n                            Example :Usado para manipular e validar a integridade dos índices no firestore\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IIndexProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIndexProps\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/entities/indexes.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        flat\n                        \n                    \n                \n            \n            \n                \nflat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/entities/indexes.ts:31\n                        \n                    \n\n\n            \n                \n                        Converte o índice em um objeto\n\n\n                        \n                            Returns :         IIndexProps\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ref\n                    \n                \n\n                \n                    \n                        getref()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/infra/storages/db/firestore/entities/indexes.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DocumentData, DocumentReference } from 'firebase-admin/firestore';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\nexport interface IIndexProps {\n\tref: DocumentReference;\n}\n\nexport class Index {\n\tprivate readonly props: IIndexProps;\n\n\t/**\n\t *\tUsado para manipular e validar a integridade dos índices no firestore\n\t **/\n\tconstructor(input: IIndexProps) {\n\t\tif (!(input.ref instanceof DocumentReference))\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Malformed reference',\n\t\t\t\ttag: DatabaseCustomErrorsTags.malformedRef,\n\t\t\t});\n\n\t\tthis.props = { ...input };\n\t}\n\n\tget ref(): DocumentReference {\n\t\treturn this.props.ref;\n\t}\n\n\t/**\n\t * Converte o índice em um objeto\n\t **/\n\tflat(): IIndexProps {\n\t\treturn { ref: this.ref };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Invite.html":{"url":"classes/Invite.html","title":"class - Invite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Invite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/invite/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                    Readonly\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dereference\n                            \n                            \n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    ttl\n                                \n                                \n                                    expiresAt\n                                \n                                \n                                    type\n                                \n                                \n                                    condominiumId\n                                \n                                \n                                    id\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IInputPropsInvite, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/invite/index.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IInputPropsInvite\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UUID\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/invite/index.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProps\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/invite/index.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dereference\n                        \n                    \n                \n            \n            \n                \ndereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/invite/index.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Invite\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equalTo\n                        \n                    \n                \n            \n            \n                \nequalTo(input: Invite)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/invite/index.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Invite\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:59\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ttl\n                    \n                \n\n                \n                    \n                        getttl()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expiresAt\n                    \n                \n\n                \n                    \n                        getexpiresAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        condominiumId\n                    \n                \n\n                \n                    \n                        getcondominiumId()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:74\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Email, Level, UUID } from '../VO';\nimport { Entity } from '../entities';\n\nexport interface IProps {\n\temail: Email;\n\tttl: number;\n\texpiresAt: Date;\n\tcondominiumId: UUID;\n\ttype: Level;\n}\n\nexport interface IInputPropsInvite {\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class Invite implements Entity {\n\tprivate readonly props: IProps;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: IInputPropsInvite, id?: string) {\n\t\tthis.props = {\n\t\t\temail: new Email(input.email),\n\t\t\tttl: input.ttl,\n\t\t\ttype: new Level(input.type),\n\t\t\tcondominiumId: new UUID(input.condominiumId),\n\t\t\texpiresAt: input.expiresAt ?? new Date(Date.now() + input.ttl),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tdereference(): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\temail: this.email.value,\n\t\t\t\tttl: this.ttl,\n\t\t\t\ttype: this.type.value,\n\t\t\t\tcondominiumId: this.condominiumId.value,\n\t\t\t\texpiresAt: this.expiresAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tequalTo(input: Invite): boolean {\n\t\treturn (\n\t\t\tinput.id.equalTo(this.id) &&\n\t\t\tinput.type.equalTo(this.type) &&\n\t\t\tinput.email.equalTo(this.email) &&\n\t\t\tinput.ttl === this.ttl &&\n\t\t\tinput.expiresAt === this.expiresAt &&\n\t\t\tinput.condominiumId.equalTo(this.condominiumId)\n\t\t);\n\t}\n\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\tget expiresAt(): Date {\n\t\treturn this.props.expiresAt;\n\t}\n\tget type(): Level {\n\t\treturn this.props.type;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InviteFirestore.html":{"url":"injectables/InviteFirestore.html","title":"injectable - InviteFirestore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InviteFirestore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/repositories/invite.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                transferToUserResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(collectionsRefs: CollectionsRefService, firestore: FirestoreService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionsRefs\n                                                  \n                                                        \n                                                                        CollectionsRefService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                        FirestoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: InviteRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: InviteRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transferToUserResources\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferToUserResources(input: InviteRepoInterfaces.transferToUserResources)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.transferToUserResources\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FirestoreService } from '../firestore.service';\nimport {\n\tInviteRepo,\n\tInviteRepoInterfaces,\n} from '@registry:app/repositories/invite';\nimport { InviteFirestoreMapper } from '../mapper/invite';\nimport { InviteMapper } from '@registry:app/mapper/invite';\nimport { Invite } from '@registry:app/entities/invite';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\nimport { UserMapper } from '@registry:app/mapper/user';\nimport { Index } from '../entities/indexes';\nimport { FirestoreGetInviteDTO } from '../DTO/getInvite';\nimport { CondominiumRelUserMapper } from '@registry:app/mapper/condominiumRelUser';\nimport { CollectionsRefService } from '../collectionsRefs.service';\n\n@Injectable()\nexport class InviteFirestore implements InviteRepo {\n\tconstructor(\n\t\tprivate readonly collectionsRefs: CollectionsRefService,\n\t\tprivate readonly firestore: FirestoreService,\n\t) {}\n\n\tasync create(input: InviteRepoInterfaces.create): Promise {\n\t\tconst { id, ...invite } = InviteMapper.toObject(input.invite);\n\t\tconst database = this.firestore.instance;\n\n\t\tawait database.runTransaction(async (transaction) => {\n\t\t\tlet userId: string | undefined;\n\t\t\tconst getUserQuery = this.collectionsRefs.user.core\n\t\t\t\t.where('email', '==', invite.email)\n\t\t\t\t.limit(1);\n\n\t\t\tawait transaction.get(getUserQuery).then((res) => {\n\t\t\t\tif (res.empty) return;\n\n\t\t\t\tres.forEach((item) => {\n\t\t\t\t\tif (item.exists) userId = item.id;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (userId) {\n\t\t\t\tconst condominiumRelUserQuery = this.collectionsRefs.user\n\t\t\t\t\t.condominiumRelUser(userId)\n\t\t\t\t\t.count();\n\t\t\t\tlet condominiumLinkedWithThisUser = 0;\n\n\t\t\t\tawait transaction.get(condominiumRelUserQuery).then((res) => {\n\t\t\t\t\tcondominiumLinkedWithThisUser = res.data().count;\n\t\t\t\t});\n\n\t\t\t\tif (condominiumLinkedWithThisUser >= 1)\n\t\t\t\t\tthrow new DatabaseCustomError({\n\t\t\t\t\t\tmessage: 'Este usuário já esta em um condomínio',\n\t\t\t\t\t\ttag: DatabaseCustomErrorsTags.maximumCondominiumRelUser,\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst existentNumberOfInvites =\n\t\t\t\tawait this.collectionsRefs.invite.itself\n\t\t\t\t\t.where('email', '==', invite.email)\n\t\t\t\t\t.where('condominiumId', '==', invite.condominiumId)\n\t\t\t\t\t.count()\n\t\t\t\t\t.get();\n\n\t\t\tif (existentNumberOfInvites.data().count > 0)\n\t\t\t\tthrow new DatabaseCustomError({\n\t\t\t\t\tmessage: 'Usuário já foi convidado',\n\t\t\t\t\ttag: DatabaseCustomErrorsTags.contentAlreadyExists,\n\t\t\t\t});\n\n\t\t\tconst inviteRef = this.collectionsRefs.invite.getInviteDoc(id);\n\t\t\ttransaction.create(inviteRef, invite);\n\t\t});\n\t}\n\n\tasync delete(input: InviteRepoInterfaces.remove): Promise {\n\t\tawait this.collectionsRefs.invite\n\t\t\t.getInviteDoc(input.key.value)\n\t\t\t.delete();\n\t}\n\n\tasync transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise {\n\t\tconst { id: userId, ...user } = UserMapper.toObject(input.user);\n\n\t\t/* eslint-disable @typescript-eslint/no-unused-vars */\n\t\tconst {\n\t\t\tid: __,\n\t\t\tuserId: _,\n\t\t\tcondominiumId,\n\t\t\t...condominiumRelUser\n\t\t} = CondominiumRelUserMapper.toObject(input.condominiumRelUser);\n\n\t\tconst database = this.firestore.instance;\n\n\t\tlet inviteId: undefined | string;\n\t\tawait this.collectionsRefs.invite.itself\n\t\t\t.where('email', '==', user.email)\n\t\t\t.where('condominiumId', '==', condominiumId)\n\t\t\t.limit(1)\n\t\t\t.get()\n\t\t\t.then((res) =>\n\t\t\t\tres.forEach((item) => {\n\t\t\t\t\tif (item.exists) inviteId = item.id;\n\t\t\t\t}),\n\t\t\t);\n\n\t\tif (!inviteId)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Convite não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tconst refs = {\n\t\t\tinvite: this.collectionsRefs.invite.getInviteDoc(inviteId),\n\t\t\temail: this.collectionsRefs.user.emailIndex.doc(user.email),\n\t\t\tcpf: this.collectionsRefs.user.cpfIndex.doc(user.CPF),\n\t\t\tcore: this.collectionsRefs.user.core.doc(userId),\n\t\t\tcondominiumRelUser: this.collectionsRefs.user\n\t\t\t\t.condominiumRelUser(userId)\n\t\t\t\t.doc(condominiumId),\n\t\t};\n\n\t\tconst batch = database.batch();\n\t\tbatch.delete(refs.invite, { exists: true });\n\n\t\tconst contentOfIndexThatPointsToUser = new Index({\n\t\t\tref: refs.core,\n\t\t}).flat();\n\t\tbatch.create(refs.cpf, contentOfIndexThatPointsToUser);\n\t\tbatch.create(refs.email, contentOfIndexThatPointsToUser);\n\n\t\tbatch.create(refs.core, user);\n\t\tbatch.create(refs.condominiumRelUser, condominiumRelUser);\n\n\t\tawait batch.commit();\n\t}\n\n\tasync find(input: InviteRepoInterfaces.safelyFind): Promise;\n\tasync find(input: InviteRepoInterfaces.find): Promise;\n\n\tasync find(\n\t\tinput: InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind,\n\t): Promise {\n\t\tconst query = this.collectionsRefs.invite.itself\n\t\t\t.where('email', '==', input.key.value)\n\t\t\t.limit(1);\n\t\tconst queryResult = await query.get();\n\n\t\tlet unparsedInvite: Record | undefined;\n\n\t\tqueryResult.forEach((doc) => {\n\t\t\tunparsedInvite = { id: doc.id, ...doc.data() };\n\t\t\treturn;\n\t\t});\n\n\t\tif (!unparsedInvite && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\t});\n\n\t\tif (!unparsedInvite) return undefined;\n\n\t\tconst semiparsedInvite = FirestoreGetInviteDTO.exec(unparsedInvite);\n\t\tconst parsedInvite =\n\t\t\tInviteFirestoreMapper.fromFirestoreToClass(semiparsedInvite);\n\t\treturn parsedInvite;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteFirestoreMapper.html":{"url":"classes/InviteFirestoreMapper.html","title":"class - InviteFirestoreMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteFirestoreMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/invite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromFirestoreToClass\n                            \n                            \n                                    Static\n                                fromFirestoreToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToClass(input: IIncomingFirestoreInviteData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/invite.ts:19\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreInviteData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Invite\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToObject(input: IIncomingFirestoreInviteData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/invite.ts:33\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreInviteData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TInviteInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { Invite } from '@registry:app/entities/invite';\nimport { TInviteInObject } from '@registry:app/mapper/invite';\n\nexport interface IIncomingFirestoreInviteData {\n\tid: string;\n\temail: string;\n\tttl: number;\n\texpiresAt: Timestamp;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class InviteFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass(input: IIncomingFirestoreInviteData): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\texpiresAt: input.expiresAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreInviteData,\n\t): TInviteInObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tttl: input.ttl,\n\t\t\texpiresAt: input.expiresAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteMapper.html":{"url":"classes/InviteMapper.html","title":"class - InviteMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/invite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: IConvertToObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/invite.ts:19\n                        \n                    \n\n\n            \n                \n                        Método usado para converter um objeto de convite em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IConvertToObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de objeto\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Invite\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: Invite)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/invite.ts:32\n                        \n                    \n\n\n            \n                \n                        Método usado para converter uma classe de convite em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Invite\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de classe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TInviteInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Invite } from '@registry:app/entities/invite';\n\ninterface IConvertToObject {\n\tid?: string;\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport type TInviteInObject = Required;\n\nexport class InviteMapper {\n\t/**\n\t * Método usado para converter um objeto de convite em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de convite em objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: Invite): TInviteInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\temail: input.email.value,\n\t\t\tttl: input.ttl,\n\t\t\texpiresAt: input.expiresAt,\n\t\t\ttype: input.type.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvitePrismaMapper.html":{"url":"classes/InvitePrismaMapper.html","title":"class - InvitePrismaMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvitePrismaMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/mapper/invite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: InvitePrisma)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/invite.ts:24\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do prisma em classes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InvitePrisma\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do prisma\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Invite\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(input: Invite)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/invite.ts:9\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados inseridos e os adapta para a utilização no prisma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Invite\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados de entrada do convite\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         InvitePrisma\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Invite as InvitePrisma } from '@prisma/client';\nimport { Invite } from '@registry:app/entities/invite';\n\nexport class InvitePrismaMapper {\n\t/**\n\t * Mapeia os dados inseridos e os adapta para a utilização no prisma\n\t * @param input - Deve conter os dados de entrada do convite\n\t **/\n\tstatic toPrisma(input: Invite): InvitePrisma {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\texpiresAt: input.expiresAt,\n\t\t\tttl: input.ttl,\n\t\t\ttype: input.type.value,\n\t\t\temail: input.email.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t};\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do prisma em classes\n\t * @param input - Deve conter os dados vindos do prisma\n\t **/\n\tstatic toClass(input: InvitePrisma): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\tcondominiumId: input.condominiumId,\n\t\t\t\temail: input.email,\n\t\t\t\ttype: input.type,\n\t\t\t\tttl: input.ttl,\n\t\t\t\texpiresAt: input.expiresAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvitePrismaRepo.html":{"url":"injectables/InvitePrismaRepo.html","title":"injectable - InvitePrismaRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvitePrismaRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                transferToUserResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: InviteRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: InviteRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transferToUserResources\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferToUserResources(input: InviteRepoInterfaces.transferToUserResources)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.transferToUserResources\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n\tInviteRepo,\n\tInviteRepoInterfaces,\n} from '@registry:app/repositories/invite';\nimport { PrismaService } from '../prisma.service';\nimport { Invite } from '@registry:app/entities/invite';\nimport { InvitePrismaMapper } from '../mapper/invite';\nimport { UserPrismaMapper } from '../mapper/user';\nimport { CondominiumRelUserPrismaMapper } from '../mapper/condominiumRelUser';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\n@Injectable()\nexport class InvitePrismaRepo implements InviteRepo {\n\tconstructor(private readonly prisma: PrismaService) {}\n\n\tasync create(input: InviteRepoInterfaces.create): Promise {\n\t\tconst data = InvitePrismaMapper.toPrisma(input.invite);\n\t\tawait this.prisma.invite.create({ data });\n\t}\n\n\tasync find(input: InviteRepoInterfaces.find): Promise;\n\tasync find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\tasync find(\n\t\tinput: InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind,\n\t): Promise {\n\t\tconst unparsedInvite = await this.prisma.invite.findFirst({\n\t\t\twhere: {\n\t\t\t\temail: input.key.value,\n\t\t\t},\n\t\t});\n\n\t\tif (!unparsedInvite && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este convite não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tif (!unparsedInvite) return undefined;\n\n\t\tconst invite = InvitePrismaMapper.toClass(unparsedInvite);\n\t\treturn invite;\n\t}\n\n\tasync transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise {\n\t\tconst user = UserPrismaMapper.toPrisma(input.user);\n\t\tconst condominiumRelUser = CondominiumRelUserPrismaMapper.toPrisma(\n\t\t\tinput.condominiumRelUser,\n\t\t);\n\n\t\tconst invite = await this.prisma.invite.findFirst({\n\t\t\twhere: { email: user.email },\n\t\t});\n\n\t\tif (!invite)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Não foi possível criar um usuário',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tawait this.prisma.$transaction([\n\t\t\tthis.prisma.invite.delete({\n\t\t\t\twhere: { id: invite.id },\n\t\t\t}),\n\t\t\tthis.prisma.user.create({ data: user }),\n\t\t\tthis.prisma.condominiumRelUser.create({ data: condominiumRelUser }),\n\t\t]);\n\t}\n\n\tasync delete(input: InviteRepoInterfaces.remove): Promise {\n\t\tawait this.prisma.invite.delete({\n\t\t\twhere: { id: input.key.value },\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteRepo.html":{"url":"classes/InviteRepo.html","title":"class - InviteRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                transferToUserResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: InviteRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: InviteRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:36\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um convite\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:45\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um convite\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        transferToUserResources\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferToUserResources(input: InviteRepoInterfaces.transferToUserResources)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:51\n                        \n                    \n\n\n            \n                \n                        Método usado para transferir um convite para os recursos de usuários\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.transferToUserResources\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteUserDTO.html":{"url":"classes/InviteUserDTO.html","title":"class - InviteUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/inviteUser.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de criação de convites\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/inviteUser.DTO.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { userDTORules } from '@registry:app/entities/user';\nimport { IsEmail, IsString, MaxLength } from 'class-validator';\n\n/** Usado para validar o corpo das requisições de criação de convites */\nexport class InviteUserDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtGuard.html":{"url":"guards/JwtGuard.html","title":"guard - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/jwt.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar um JWT vindo do authorization header\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/jwt.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/jwt.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/jwt.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { IAccessTokenBody } from '../tokenTypes';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\nimport { UUID } from '@registry:app/entities/VO';\n\n/** Usado para validar um JWT vindo do authorization header */\n@Injectable()\nexport class JwtGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async checkToken(token: string) {\n\t\tconst tokenData: IAccessTokenBody = await this.jwtService\n\t\t\t.verifyAsync(token, {\n\t\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({ message: 'JWT inválido' });\n\t\t\t});\n\n\t\treturn tokenData;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\t\tconst rawToken = req?.headers?.authorization;\n\n\t\tconst token = rawToken?.split(' ')[1];\n\t\tif (!token) throw new GuardErrors({ message: 'Token não encontrado' });\n\n\t\tconst tokenData = (await this.checkToken(token)) as IAccessTokenBody;\n\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new UUID(tokenData.sub),\n\t\t\tsafeSearch: true,\n\t\t});\n\n\t\treq.inMemoryData = {\n\t\t\t...req.inMemoryData,\n\t\t\tuser,\n\t\t};\n\n\t\treturn true;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchOTPDTO.html":{"url":"classes/LaunchOTPDTO.html","title":"class - LaunchOTPDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchOTPDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/launchOTP.DTO.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                OTP\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa ser uma string'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(320, {message: 'O campo \"email\" precisa conter no máximo 255 caracteres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/launchOTP.DTO.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        OTP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"OTP\" precisa ser uma string'})@Length(6, 6, {message: 'O campo \"OTP\" precisa conter 6 caracteres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/launchOTP.DTO.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsString, Length, MaxLength } from \"class-validator\";\n\nexport class LaunchOTPDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa ser uma string',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(320, {\n\t\tmessage: 'O campo \"email\" precisa conter no máximo 255 caracteres',\n\t})\n\t\temail: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"OTP\" precisa ser uma string',\n\t})\n\t@Length(6, 6, {\n\t\tmessage: 'O campo \"OTP\" precisa conter 6 caracteres',\n\t})\n\t\tOTP: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchTFADTO.html":{"url":"classes/LaunchTFADTO.html","title":"class - LaunchTFADTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchTFADTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/launch-tfa.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de inicialização do processo de autenticação de dois fatores\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/launch-tfa.DTO.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { userDTORules } from '@registry:app/entities/user';\nimport { IsEmail, IsString, MaxLength } from 'class-validator';\n\n/** Usado para validar o corpo das requisições de inicialização do processo de autenticação de dois fatores */\nexport class LaunchTFADTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Level.html":{"url":"classes/Level.html","title":"class - Level","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Level\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/level/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/level/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nO nível do usuário, que deve ser 0 (usuário comum), 1 (funcionário) ou 2 (administrador)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Level)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/level/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Level\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/level/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class Level implements ValueObject {\n\t/**\n\t * @param _value - O nível do usuário, que deve ser 0 (usuário comum), 1 (funcionário) ou 2 (administrador)\n\t **/\n\tconstructor(private readonly _value: number) {\n\t\tif (\n\t\t\t_value > condominiumRelUserDTORules.level.maxLength ||\n\t\t\t_value \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogInterceptor.html":{"url":"injectables/LogInterceptor.html","title":"injectable - LogInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/interceptors/logger.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para interceptar e realizar os logs da aplicação\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/interceptors/logger.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(content: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/interceptors/logger.interceptor.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tInjectable,\n\tNestInterceptor,\n\tExecutionContext,\n\tCallHandler,\n} from '@nestjs/common';\nimport { DateFormats } from '@registry:utils/dateFormats';\nimport { randomUUID } from 'crypto';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/** Usado para interceptar e realizar os logs da aplicação */\n@Injectable()\nexport class LogInterceptor implements NestInterceptor {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tintercept(content: ExecutionContext, next: CallHandler): Observable {\n\t\tconst req = content.switchToHttp().getRequest();\n\t\tconst date = new Date();\n\t\tconst anonymous = randomUUID();\n\n\t\tthis.logger.info({\n\t\t\tname: `\"${req.path}\" acessado`,\n\t\t\tdescription: `Um usuário não identificado esta acessando a rota \"${\n\t\t\t\treq.path\n\t\t\t}\" às \"${DateFormats.prettify(\n\t\t\t\tdate,\n\t\t\t)}\" usando o id temporário \"${anonymous}\" e o método \"${\n\t\t\t\treq.method\n\t\t\t}\"`,\n\t\t\tlayer: LayersEnum.interceptors,\n\t\t});\n\n\t\treturn next.handle().pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.logger.info({\n\t\t\t\t\tname: `\"${req.path}\" acesso finalizado`,\n\t\t\t\t\tdescription: `Acesso bem sucedido por \"${anonymous}\"`,\n\t\t\t\t\tlayer: LayersEnum.interceptors,\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerAdapter.html":{"url":"classes/LoggerAdapter.html","title":"class - LoggerAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/logger.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                alert\n                            \n                            \n                                    Abstract\n                                critical\n                            \n                            \n                                    Abstract\n                                debug\n                            \n                            \n                                    Abstract\n                                emergencial\n                            \n                            \n                                    Abstract\n                                error\n                            \n                            \n                                    Abstract\n                                info\n                            \n                            \n                                    Abstract\n                                log\n                            \n                            \n                                    Abstract\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        alert\n                        \n                    \n                \n            \n            \n                \n                        \n                    alert(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        critical\n                        \n                    \n                \n            \n            \n                \n                        \n                    critical(input: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        emergencial\n                        \n                    \n                \n            \n            \n                \n                        \n                    emergencial(input: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(input: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        warn\n                        \n                    \n                \n            \n            \n                \n                        \n                    warn(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum LayersEnum {\n\tstart = 'Start-layer',\n\tinterceptors = 'Interceptor-Layer',\n\tservices = 'Service-Layer',\n\tentitie = 'Entitie-Layer',\n\tcontroller = 'Controller-Layer',\n\tdto = 'DTO-Layer',\n\tauth = 'Auth-Layer',\n\tgateway = 'Gateway-Layer',\n\tunknown = 'Unknown-Layer',\n\tadapter = 'Adapter-Layer',\n\tdatabase = 'Database-Layer',\n\tcache = 'Cache-Layer',\n}\n\nexport interface ILoggerDefaultProps {\n\tname: string;\n\tdescription: string;\n\tlayer: LayersEnum;\n}\n\nexport type TECEProps = ILoggerDefaultProps & { stack?: string };\n\nexport abstract class LoggerAdapter {\n\tabstract log(input: ILoggerDefaultProps): Promise;\n\tabstract info(input: ILoggerDefaultProps): Promise;\n\tabstract debug(input: ILoggerDefaultProps): Promise;\n\tabstract warn(input: ILoggerDefaultProps): Promise;\n\tabstract alert(input: ILoggerDefaultProps): Promise;\n\tabstract error(input: TECEProps): Promise;\n\tabstract critical(input: TECEProps): Promise;\n\tabstract emergencial(input: TECEProps): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDTO.html":{"url":"classes/LoginDTO.html","title":"class - LoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/login.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de login\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/login.DTO.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"password\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/login.DTO.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { userDTORules } from '@registry:app/entities/user';\nimport { IsEmail, IsString, MaxLength, MinLength } from 'class-validator';\n\n/** Usado para validar o corpo das requisições de login */\nexport class LoginDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"password\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(userDTORules.password.maxLength, {\n\t\tmessage: `O campo \"password\" precisa conter no máximo ${userDTORules.password.maxLength} caracteres`,\n\t})\n\t@MinLength(userDTORules.password.minLength, {\n\t\tmessage: `O campo \"password\" precisa conter no mínimo ${userDTORules.password.minLength} caracteres`,\n\t})\n\t\tpassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Name.html":{"url":"classes/Name.html","title":"class - Name","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Name\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/generals/name/index.ts\n        \n\n\n            \n                Description\n            \n            \n                Nome utilizado nas entidades\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/generals/name/index.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Name)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/name/index.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Name\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/generals/name/index.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { ValueObject, EntitiesEnum } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\n/** Nome utilizado nas entidades */\nexport class Name implements ValueObject {\n\tconstructor(private readonly _value: string) {\n\t\tif (\n\t\t\t_value.length > userDTORules.name.maxLength ||\n\t\t\t_value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodemailerAdapter.html":{"url":"classes/NodemailerAdapter.html","title":"class - NodemailerAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodemailerAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/nodemailer/nodemailerAdapter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            EmailAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(data: ISendMailContent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/nodemailer/nodemailerAdapter.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ISendMailContent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { createTransport } from 'nodemailer';\nimport { EmailAdapter, ISendMailContent } from '../email';\n\nexport class NodemailerAdapter implements EmailAdapter {\n\tasync send(data: ISendMailContent): Promise {\n\t\tif (process.env.NOT_SEND_EMAILS) return;\n\n\t\tconst transport = createTransport({\n\t\t\thost: process.env.HOST_SENDER as string,\n\t\t\tport: parseInt(process.env.HOST_PORT_SENDER as string),\n\t\t\tauth: {\n\t\t\t\tuser: process.env.EMAIL_SENDER,\n\t\t\t\tpass: process.env.PASS_SENDER,\n\t\t\t},\n\t\t});\n\n\t\tawait transport.sendMail({\n\t\t\tfrom: data.from,\n\t\t\tto: data.to,\n\t\t\tsubject: data.subject,\n\t\t\thtml: data.body,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundFilter.html":{"url":"classes/NotFoundFilter.html","title":"class - NotFoundFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/notFound.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros de Not Found\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/notFound.filter.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(_: NotFoundException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/notFound.filter.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        NotFoundException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tArgumentsHost,\n\tCatch,\n\tExceptionFilter,\n\tNotFoundException,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros de Not Found */\n@Catch(NotFoundException)\nexport class NotFoundFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(_: NotFoundException, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tthis.logger.error({\n\t\t\tname: 'Não encontrado',\n\t\t\tlayer: LayersEnum.controller,\n\t\t\tdescription: 'O recurso que você está procurando não existe',\n\t\t});\n\n\t\treturn response.status(404).json({\n\t\t\tstatusCode: 404,\n\t\t\tname: 'Não encontrado',\n\t\t\tmessage: 'O recurso que você está procurando não existe',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Num.html":{"url":"classes/Num.html","title":"class - Num","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Num\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/condominium/num/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/condominium/num/index.ts:5\n                            \n                        \n\n                \n                    \n                            Número da rua onde se encontra o condomínio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nO número em questão\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Num)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/condominium/num/index.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Num\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/condominium/num/index.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\n\nexport class Num implements ValueObject {\n\t/**\n\t * Número da rua onde se encontra o condomínio\n\t * @param _value - O número em questão\n\t **/\n\tconstructor(private readonly _value: number) {\n\t\tif (\n\t\t\t_value > condominiumDTORules.num.maxLength ||\n\t\t\t_value \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTP.html":{"url":"classes/OTP.html","title":"class - OTP","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/OTP/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                    Readonly\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dereference\n                            \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userId\n                                \n                                \n                                    ttl\n                                \n                                \n                                    id\n                                \n                                \n                                    code\n                                \n                                \n                                    createdAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: TInputOTPProps, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/OTP/index.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        TInputOTPProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UUID\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/OTP/index.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IOTPProps\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/OTP/index.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dereference\n                        \n                    \n                \n            \n            \n                \ndereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/OTP/index.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         OTP\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: OTP)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/OTP/index.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            OTP\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:54\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ttl\n                    \n                \n\n                \n                    \n                        getttl()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n\n                \n                    \n                        getcode()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:70\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Code, UUID } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\ninterface IOTPProps {\n\tuserId: UUID;\n\tcode: Code;\n\tttl: number;\n\tcreatedAt: Date;\n}\n\nexport type TInputOTPProps = {\n\tuserId: string;\n\tcode: string;\n\tttl: number;\n\tcreatedAt?: Date;\n};\n\nexport class OTP implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate readonly props: IOTPProps;\n\n\tconstructor(input: TInputOTPProps, id?: string) {\n\t\tthis._id = ValueObject.build(UUID, id).or(UUID.genV4()).exec();\n\t\tthis.props = {\n\t\t\t...input,\n\t\t\tcode: new Code(input.code),\n\t\t\tuserId: new UUID(input.userId),\n\t\t\tttl: input.ttl ?? 1000 * 60 * 2,\n\t\t\tcreatedAt: input.createdAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tuserId: this.userId.value,\n\t\t\t\tcode: this.code.value,\n\t\t\t\tttl: this.ttl,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\tpublic equalTo(input: OTP) {\n\t\treturn (\n\t\t\tthis._id.equalTo(input._id) &&\n\t\t\tthis.props.ttl === input.ttl &&\n\t\t\tthis.props.userId.equalTo(input.userId) &&\n\t\t\tthis.props.code.equalTo(input.code) &&\n\t\t\tthis.props.createdAt === input.createdAt\n\t\t);\n\t}\n\n\tget userId(): UUID {\n\t\treturn this.props.userId;\n\t}\n\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\tget code(): Code {\n\t\treturn this.props.code;\n\t}\n\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTPMapper.html":{"url":"classes/OTPMapper.html","title":"class - OTPMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTPMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/otp.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: IConvertToObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/otp.ts:25\n                        \n                    \n\n\n            \n                \n                        Método usado para converter um objeto de OTP em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IConvertToObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de objeto\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OTP\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: OTP)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/otp.ts:41\n                        \n                    \n\n\n            \n                \n                        Método usado para converter uma classe de OTP em um objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            OTP\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de classe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IOTPInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\n\ninterface IConvertToObject {\n\tid?: string;\n\tttl: number;\n\tuserId: string;\n\tcode: string;\n\tcreatedAt?: Date;\n}\n\nexport interface IOTPInObject {\n\tid: string;\n\tttl: number;\n\tuserId: string;\n\tcode: string;\n\tcreatedAt: Date;\n}\n\nexport class OTPMapper {\n\n\t/**\n\t * Método usado para converter um objeto de OTP em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tttl: input.ttl,\n\t\t\t\tuserId: input.userId,\n\t\t\t\tcode: input.code,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de OTP em um objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: OTP): IOTPInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tttl: input.ttl,\n\t\t\tuserId: input.userId.value,\n\t\t\tcode: input.code.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTPRedisMapper.html":{"url":"classes/OTPRedisMapper.html","title":"class - OTPRedisMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTPRedisMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/cache/redis/mapper/otp.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toRedis\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: IClassToRawObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/cache/redis/mapper/otp.ts:30\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do redis e tranforma em uma class\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IClassToRawObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do redis\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OTP\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toRedis\n                        \n                    \n                \n            \n            \n                \n                        \n                    toRedis(input: OTP)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/cache/redis/mapper/otp.ts:16\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados e tranforma em objeto apto a estar no redis\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            OTP\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter a classe OTP\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IClassToRawObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OTP } from \"@registry:app/entities/OTP\";\n\ninterface IClassToRawObject {\n  userId: string;\n  id: string;\n  ttl: number;\n  code: string;\n  createdAt: Date;\n}\n\nexport class OTPRedisMapper {\n  /**\n  * Mapeia os dados e tranforma em objeto apto a estar no redis\n  * @param input - Deve conter a classe OTP\n  **/\n  static toRedis(input: OTP): IClassToRawObject {\n\treturn {\n\t  id: input.id.value,\n\t  userId: input.userId.value,\n      code: input.code.value,\n      ttl: input.ttl,\n      createdAt: input.createdAt\n\t}\n  }\n\n  /**\n  * Mapeia os dados vindos do redis e tranforma em uma class\n  * @param input - Deve conter os dados vindos do redis\n  **/\n  static toClass(input: IClassToRawObject): OTP {\n    return new OTP({\n      ttl: input.ttl,\n      userId: input.userId,\n      code: input.code,\n      createdAt: input.createdAt,\n    }, input.id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OTPRedisService.html":{"url":"injectables/OTPRedisService.html","title":"injectable - OTPRedisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OTPRedisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/cache/redis/repositories/OTP.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redisService: RedisService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/cache/redis/repositories/OTP.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                        RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: ICreateOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/cache/redis/repositories/OTP.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICreateOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: IDeleteOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/cache/redis/repositories/OTP.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IDeleteOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: IFindOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/cache/redis/repositories/OTP.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IFindOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ICreateOTPInput, IDeleteOTPInput, IFindOTPInput, OTPRepo } from \"@registry:app/repositories/otp\";\nimport { RedisService } from \"../redis.service\";\nimport { OTPRedisMapper } from \"../mapper/otp\";\nimport { RedisErrorsTags, RedisLogicError } from \"../error\";\nimport { RedisEnum } from \"../redisEnum\";\nimport { OTP } from \"@registry:app/entities/OTP\";\n\n@Injectable()\nexport class OTPRedisService implements OTPRepo {\n\tconstructor(private readonly redisService: RedisService) {}\n\n\tasync create(input: ICreateOTPInput): Promise {\n\t\tconst redis = await this.redisService.instance();\n\n\t\tconst otpObjt = OTPRedisMapper.toRedis(input.otp);\n\n\t\tconst res = await redis.set(\n\t\t\t`${RedisEnum.otp}${input.email.value}`,\n\t\t\tJSON.stringify(otpObjt),\n\t\t\t'PX',\n\t\t\tinput.otp.ttl ?? 1000 * 60 * 2,\n\t\t\t'NX'\n\t\t)\n\n\t\tif(!res) throw new RedisLogicError({\n\t\t\ttag: RedisErrorsTags.alreadyExist,\n\t\t\tmessage: 'Não foi possível criar um código, porque ele já existe.'\n\t\t})\n\t}\n\n\tasync delete(input: IDeleteOTPInput): Promise {\n\t\tconst redis = await this.redisService.instance();\n\t\tawait redis.del(\n\t\t\t`${RedisEnum.otp}${input.email.value}`,\n\t\t)\n\t}\n\n\tasync find(input: IFindOTPInput): Promise {\n\t\tconst redis = await this.redisService.instance();\n\t\tconst rawRes = await redis.get(`${RedisEnum.otp}${input.email.value}`)\n\t\tconst res = rawRes\n\t\t\t? OTPRedisMapper.toClass(JSON.parse(rawRes))\n\t\t\t: undefined;\n\n\t\treturn res;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTPRepo.html":{"url":"classes/OTPRepo.html","title":"class - OTPRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTPRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/otp.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: ICreateOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/otp.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICreateOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: IDeleteOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/otp.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IDeleteOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: IFindOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/otp.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IFindOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { Email } from '@registry:app/entities/VO';\n\nexport interface ICreateOTPInput {\n\totp: OTP;\n\temail: Email;\n}\n\nexport interface IFindOTPInput {\n\temail: Email;\n}\n\nexport interface IDeleteOTPInput {\n\temail: Email;\n}\n\nexport abstract class OTPRepo {\n\tabstract create(input: ICreateOTPInput): Promise;\n\tabstract find(input: IFindOTPInput): Promise;\n\tabstract delete(input: IDeleteOTPInput): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Password.html":{"url":"classes/Password.html","title":"class - Password","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Password\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/password/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/password/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSenha do usuário que deve estar entre 64 e 8 caracteres\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Password)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/password/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Password\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/password/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class Password implements ValueObject {\n\t/**\n\t * @param _value - Senha do usuário que deve estar entre 64 e 8 caracteres\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tif (\n\t\t\t_value.length > userDTORules.password.maxLength ||\n\t\t\t_value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhoneNumber.html":{"url":"classes/PhoneNumber.html","title":"class - PhoneNumber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhoneNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/phoneNumber/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/phoneNumber/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nNúmero do telefone do usuário que deve estar entre 30 e 10 caracteres\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: PhoneNumber)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/phoneNumber/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            PhoneNumber\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/phoneNumber/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class PhoneNumber implements ValueObject {\n\t/**\n\t * @param _value - Número do telefone do usuário que deve estar entre 30 e 10 caracteres\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tif (\n\t\t\t_value.length > userDTORules.phoneNumber.maxLength ||\n\t\t\t_value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaErrorFilter.html":{"url":"classes/PrismaErrorFilter.html","title":"class - PrismaErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/prisma.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros do Prisma\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                possibleErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/prisma.filter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        possibleErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IPrismaError[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P2025',\n\t\t\tmessage: 'Não foi possível deletar o dado, pois o mesmo não existe',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Erro ao criar dado repetido',\n\t\t\tcode: 'P2002',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\tcode: 'P1009',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P1003',\n\t\t\tmessage: 'Não encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/prisma.filter.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/prisma.filter.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Prisma.PrismaClientKnownRequestError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { Response } from 'express';\n\ninterface IPrismaError {\n\tname: string;\n\tcode: string;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros do Prisma */\n@Catch(Prisma.PrismaClientKnownRequestError)\nexport class PrismaErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IPrismaError[] = [\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P2025',\n\t\t\tmessage: 'Não foi possível deletar o dado, pois o mesmo não existe',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Erro ao criar dado repetido',\n\t\t\tcode: 'P2002',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\tcode: 'P1009',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P1003',\n\t\t\tmessage: 'Não encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t];\n\n\tcatch(\n\t\texception: Prisma.PrismaClientKnownRequestError,\n\t\thost: ArgumentsHost,\n\t) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.code === exception.code;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.code}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: `${exception.name} - ${exception.code}`,\n\t\t\tlayer: LayersEnum.database,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nCondominiumRepo \n\nCondominiumRepo \n\n\n\nInviteRepo \n\nInviteRepo \n\n\n\nUserRepo \n\nUserRepo \n\n\n\nPrismaModule\n\nPrismaModule\n\nCondominiumRepo  -->\n\nPrismaModule->CondominiumRepo \n\n\n\nInviteRepo  -->\n\nPrismaModule->InviteRepo \n\n\n\nUserRepo  -->\n\nPrismaModule->UserRepo \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CondominiumRepo\n                        \n                        \n                            InviteRepo\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { CondominiumRepo } from '@registry:app/repositories/condominium';\nimport { CondominiumPrismaRepo } from './repositories/condominium.service';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { UserPrismaRepo } from './repositories/user.service';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { InvitePrismaRepo } from './repositories/invite.service';\n\n@Global()\n@Module({\n\tproviders: [\n\t\tPrismaService,\n\t\t{\n\t\t\tprovide: InviteRepo,\n\t\t\tuseClass: InvitePrismaRepo,\n\t\t},\n\t\t{\n\t\t\tprovide: CondominiumRepo,\n\t\t\tuseClass: CondominiumPrismaRepo,\n\t\t},\n\t\t{\n\t\t\tprovide: UserRepo,\n\t\t\tuseClass: UserPrismaRepo,\n\t\t},\n\t],\n\texports: [InviteRepo, CondominiumRepo, UserRepo],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                onApplicationShutdown\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                        \n                    close()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n\tInjectable,\n\tOnApplicationShutdown,\n\tOnModuleDestroy,\n} from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService\n\textends PrismaClient\n\timplements OnModuleDestroy, OnApplicationShutdown\n{\n\tprivate status = false;\n\n\tasync init() {\n\t\tif (!this.status)\n\t\t\tawait this.$connect().then(() => (this.status = true));\n\t}\n\n\tasync close() {\n\t\tif (this.status)\n\t\t\tawait this.$disconnect().then(() => (this.status = false));\n\t}\n\n\tasync onModuleDestroy() {\n\t\tif (this.status)\n\t\t\tawait this.$disconnect().then(() => (this.status = false));\n\t}\n\n\tasync onApplicationShutdown() {\n\t\tif (this.status)\n\t\t\tawait this.$disconnect().then(() => (this.status = false));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisErrorFilter.html":{"url":"classes/RedisErrorFilter.html","title":"class - RedisErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/redis-login.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                possibleErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/redis-login.filter.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        possibleErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IRedisError[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\ttag: RedisErrorsTags.alreadyExist,\n\t\t\tmessage: 'Não foi possível criar o dado, pois o mesmo já existe',\n\t\t\thttpCode: 409,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/redis-login.filter.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: RedisLogicError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/redis-login.filter.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            RedisLogicError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from \"@nestjs/common\";\nimport { LayersEnum, LoggerAdapter } from \"@registry:app/adapters/logger\";\nimport { RedisErrorsTags, RedisLogicError } from \"@registry:infra/storages/cache/redis/error\";\nimport { Response } from \"express\"\n\ninterface IRedisError {\n\tname: string;\n\ttag: RedisErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n@Catch(RedisLogicError)\nexport class RedisErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IRedisError[] = [\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\ttag: RedisErrorsTags.alreadyExist,\n\t\t\tmessage: 'Não foi possível criar o dado, pois o mesmo já existe',\n\t\t\thttpCode: 409,\n\t\t},\n\t];\n\n\tcatch(exception: RedisLogicError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.cache,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.cache,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisLogicError.html":{"url":"classes/RedisLogicError.html","title":"class - RedisLogicError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisLogicError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/cache/redis/error/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/cache/redis/error/index.ts:11\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de banco de dados cache, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro e o identificador usado para mapear os erros na camada dos filters, use os enums vindos de RedisErrorsTags\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RedisErrorsTags\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/cache/redis/error/index.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum RedisErrorsTags {\n  alreadyExist = 'Entitie already exists'\n}\n\ninterface IProps {\n  tag: RedisErrorsTags;\n  message: string;\n}\n\nexport class RedisLogicError extends Error {\n  readonly tag: RedisErrorsTags;\n\n  /**\n  * Erro customizado usado na camada de banco de dados cache, use-o caso seja necessário disparar algum erro rastreável pelos filters\n  * @param input - Deve conter a mensagem do erro e o identificador usado para mapear os erros na camada dos filters, use os enums vindos de RedisErrorsTags\n  **/\n  constructor(input: IProps) {\n\tsuper();\n\n\tthis.name = 'Redis Logic Error';\n\tthis.message = input.message;\n\tthis.tag = input.tag;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_providers\n\n\n\ncluster_RedisModule_exports\n\n\n\n\nOTPRepo \n\nOTPRepo \n\n\n\nRedisModule\n\nRedisModule\n\nOTPRepo  -->\n\nRedisModule->OTPRepo \n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/infra/storages/cache/redis/redis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RedisService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OTPRepo\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \"@nestjs/common\";\nimport { RedisService } from \"./redis.service\";\nimport { OTPRepo } from \"@registry:app/repositories/otp\";\nimport { OTPRedisService } from \"./repositories/OTP.service\";\n\n@Global()\n@Module({\n\tproviders: [\n\t\tRedisService,\n\t\t{\n\t\t\tprovide: OTPRepo,\n\t\t\tuseClass: OTPRedisService\n\t\t}\n\t],\n\texports: [OTPRepo]\n})\nexport class RedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisService.html":{"url":"injectables/RedisService.html","title":"injectable - RedisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/cache/redis/redis.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                instance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                        \n                    close()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/cache/redis/redis.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/cache/redis/redis.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        instance\n                        \n                    \n                \n            \n            \n                \n                        \n                    instance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/cache/redis/redis.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/cache/redis/redis.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport Redis from 'ioredis'\n\n@Injectable()\nexport class RedisService {\n\tprivate _instance: Redis;\n\n\tasync init() {\n\t\tif (!this._instance)\n\t\t\tthis._instance = new Redis(process.env.REDIS_URL as string);\n\n\t\tif (this._instance.status === 'close' || this._instance.status === 'end')\n\t\t\tawait this._instance.connect();\n\t}\n\n\tasync close() {\n\t\tif (\n\t\t\tthis._instance &&\n\t\t\t(this._instance.status === 'connect' ||\n\t\t\t\tthis._instance.status === 'connecting')\n\t\t)\n\t\t\tawait this._instance.quit();\n\t}\n\n\tasync instance(): Promise {\n\t\tif(!this._instance) await this.init();\n\n\t\treturn this._instance;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RefreshTokenGuard.html":{"url":"guards/RefreshTokenGuard.html","title":"guard - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/refreshToken.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar os tokens do tipo \"RefreshToken\"\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkCookie\n                            \n                            \n                                    Private\n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieAdapter: CookieAdapter, jwtService: JwtService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/refreshToken.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieAdapter\n                                                  \n                                                        \n                                                                        CookieAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/refreshToken.guard.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkCookie(cookie: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/refreshToken.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cookie\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/refreshToken.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CookieAdapter } from '@registry:app/adapters/cookie';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { IRefreshTokenBody, TokenType } from '../tokenTypes';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { Email } from '@registry:app/entities/VO';\n\n/** Usado para validar os tokens do tipo \"RefreshToken\" */\n@Injectable()\nexport class RefreshTokenGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly cookieAdapter: CookieAdapter,\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async checkCookie(cookie: string) {\n\t\tconst token = await this.cookieAdapter.validateSignedCookie({\n\t\t\tcookie: decodeURIComponent(cookie),\n\t\t\tkey: String(process.env.COOKIE_KEY),\n\t\t});\n\n\t\tif (!token)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'Cookie inválido',\n\t\t\t});\n\n\t\treturn token;\n\t}\n\n\tprivate async checkToken(token: string) {\n\t\tconst data: IRefreshTokenBody = await this.jwtService\n\t\t\t.verifyAsync(token, {\n\t\t\t\tsecret: process.env.REFRESH_TOKEN_KEY,\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({\n\t\t\t\t\tmessage: `Dado armazenado no ${TokenType.refreshToken} é inválido`,\n\t\t\t\t});\n\t\t\t});\n\n\t\treturn data;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\t\tconst cookie = req.headers.cookie;\n\t\tif (!cookie)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: `Nenhum token do tipo ${TokenType.refreshToken} foi encontrado`,\n\t\t\t});\n\n\t\tconst token = cookie.split('refresh-token=')[1];\n\t\tif (!token)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: `Nenhum token do tipo ${TokenType.refreshToken} foi encontrado`,\n\t\t\t});\n\n\t\tconst parsedToken = await this.checkCookie(token);\n\t\tconst data = await this.checkToken(parsedToken);\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new Email(data.email),\n\t\t\tsafeSearch: true,\n\t\t});\n\n\t\treq.inMemoryData = {\n\t\t\t...req.inMemoryData,\n\t\t\trefreshTokenContent: data,\n\t\t\tuser,\n\t\t};\n\n\t\treturn true;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistryAPIBootstrap.html":{"url":"classes/RegistryAPIBootstrap.html","title":"class - RegistryAPIBootstrap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistryAPIBootstrap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/bootstrap.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                app\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                build\n                            \n                            \n                                    Async\n                                run\n                            \n                            \n                                    Async\n                                runStorageLayer\n                            \n                            \n                                    Private\n                                setGlobalFilters\n                            \n                            \n                                    Private\n                                setGlobalInteceptors\n                            \n                            \n                                    Private\n                                setGlobalPipes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestExpressApplication\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/bootstrap.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/bootstrap.ts:34\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(requestListener: express.Express)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestListener\n                                            \n                                                        express.Express\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        runStorageLayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    runStorageLayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setGlobalFilters\n                        \n                    \n                \n            \n            \n                \n                        \n                    setGlobalFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setGlobalInteceptors\n                        \n                    \n                \n            \n            \n                \n                        \n                    setGlobalInteceptors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setGlobalPipes\n                        \n                    \n                \n            \n            \n                \n                        \n                    setGlobalPipes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LoggerAdapter } from '@registry:app/adapters/logger';\nimport { NestFactory } from '@nestjs/core';\nimport {\n\tExpressAdapter,\n\tNestExpressApplication,\n} from '@nestjs/platform-express';\nimport express, { Express } from 'express';\nimport { AppModule } from './app.module';\nimport { LogInterceptor } from '@registry:infra/http/interceptors/logger.interceptor';\nimport cookieParser from 'cookie-parser';\nimport { ValidationPipe } from '@nestjs/common';\nimport { GenericErrorFilter } from '@registry:infra/http/filters/errors/generic.filter';\nimport { ServiceErrorFilter } from '@registry:infra/http/filters/errors/services.filter';\nimport { EntitieErrorFilter } from '@registry:infra/http/filters/errors/vo.filter';\nimport { GatewayErrorFilter } from '@registry:infra/http/filters/errors/gateways.filter';\nimport { GuardErrorFilter } from '@registry:infra/http/filters/errors/guard.filter';\nimport { AdapterErrorFilter } from '@registry:infra/http/filters/errors/adapter.filter';\nimport { ClassValidatorErrorFilter } from '@registry:infra/http/filters/errors/classValidator.filter';\nimport { ThrottlerErrorFilter } from '@registry:infra/http/filters/errors/throttler.filter';\nimport { NotFoundFilter } from '@registry:infra/http/filters/errors/notFound.filter';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { DatabaseCustomErrorFilter } from '@registry:infra/http/filters/errors/databaseCustomError.filter';\nimport { PrismaErrorFilter } from '@registry:infra/http/filters/errors/prisma.filter';\nimport { RedisService } from '@registry:infra/storages/cache/redis/redis.service';\nimport { PrismaService } from '@registry:infra/storages/db/prisma/prisma.service';\nimport { RedisErrorFilter } from '@registry:infra/http/filters/errors/redis-login.filter';\n\ninterface IProps {\n\trequestListener: Express;\n}\n\nexport class RegistryAPIBootstrap {\n\tprivate app: NestExpressApplication;\n\tprivate logger: LoggerAdapter;\n\n\tprivate async build(requestListener: express.Express) {\n\t\tthis.app = await NestFactory.create(\n\t\t\tAppModule,\n\t\t\tnew ExpressAdapter(requestListener),\n\t\t);\n\n\t\tthis.app.enableShutdownHooks();\n\t\tthis.app.use(cookieParser(process.env.COOKIE_KEY));\n\t\tthis.app.enableCors({\n\t\t\torigin: '*', // mudar no futuro\n\t\t\tmethods: ['DELETE', 'POST', 'PATCH', 'PUT', 'GET'],\n\t\t});\n\t\tthis.logger = this.app.get(LoggerAdapter);\n\n\t\tconst config = new DocumentBuilder()\n\t\t\t.setTitle('MoradaApp: Registry API')\n\t\t\t.setDescription('Morada App Registry API')\n\t\t\t.setVersion('1.0')\n\t\t\t.addTag('moradaApp')\n\t\t\t.build();\n\n\t\tconst document = SwaggerModule.createDocument(this.app, config);\n\t\tSwaggerModule.setup('api', this.app, document);\n\t}\n\n\tprivate setGlobalInteceptors() {\n\t\tthis.app.useGlobalInterceptors(new LogInterceptor(this.logger));\n\t}\n\n\tprivate setGlobalPipes() {\n\t\tthis.app.useGlobalPipes(new ValidationPipe());\n\t}\n\n\tprivate setGlobalFilters() {\n\t\tthis.app.useGlobalFilters(new GenericErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new RedisErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new PrismaErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new DatabaseCustomErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ServiceErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new EntitieErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new GatewayErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new GuardErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new AdapterErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ClassValidatorErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ThrottlerErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new NotFoundFilter(this.logger));\n\t}\n\n\tasync runStorageLayer() {\n\t\tconst redis = this.app.get(RedisService);\n\t\tconst prisma = this.app.get(PrismaService);\n\n\t\tawait prisma.init();\n\t\tawait redis.init();\n\t}\n\n\tasync run(input: IProps) {\n\t\tawait this.build(input.requestListener);\n\t\tthis.setGlobalInteceptors();\n\t\tthis.setGlobalPipes();\n\t\tthis.setGlobalFilters();\n\n\t\tawait this.app.init();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceErrorFilter.html":{"url":"classes/ServiceErrorFilter.html","title":"class - ServiceErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/services.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Services\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                possibleErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/services.filter.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        possibleErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IServiceErrors[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Credenciais inválidas',\n\t\t\ttag: ServiceErrorsTags.unauthorized,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\ttag: ServiceErrorsTags.alreadyExist,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 409,\n\t\t},\n\t\t{\n\t\t\tname: 'Uso incorreto de recusrsos',\n\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\tmessage:\n\t\t\t\t'Não é possível utilizar este recurso para realizar está ação',\n\t\t\thttpCode: 400,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/services.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ServiceErrors, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/services.filter.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ServiceErrors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tServiceErrors,\n\tServiceErrorsTags,\n} from '@registry:app/errors/services';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IServiceErrors {\n\tname: string;\n\ttag: ServiceErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros dos Services */\n@Catch(ServiceErrors)\nexport class ServiceErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IServiceErrors[] = [\n\t\t{\n\t\t\tname: 'Credenciais inválidas',\n\t\t\ttag: ServiceErrorsTags.unauthorized,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\ttag: ServiceErrorsTags.alreadyExist,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 409,\n\t\t},\n\t\t{\n\t\t\tname: 'Uso incorreto de recusrsos',\n\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\tmessage:\n\t\t\t\t'Não é possível utilizar este recurso para realizar está ação',\n\t\t\thttpCode: 400,\n\t\t},\n\t];\n\n\tcatch(exception: ServiceErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.services,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.services,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceErrors.html":{"url":"classes/ServiceErrors.html","title":"class - ServiceErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/services.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/errors/services.ts:13\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de services, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro e o identificador em forma de tag usado para mapear os erros na camada dos filters, use os enums vindos de ServiceErrorsTags\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServiceErrorsTags\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/errors/services.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum ServiceErrorsTags {\n\twrongServiceUsage = 'WrongServiceUsage',\n\tunauthorized = 'Unauthorized',\n\talreadyExist = 'Conflict',\n}\n\ninterface IProps {\n\tmessage: string;\n\ttag: ServiceErrorsTags;\n}\n\nexport class ServiceErrors extends Error {\n\treadonly tag: ServiceErrorsTags;\n\n\t/**\n\t * Erro customizado usado na camada de services, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e o identificador em forma de tag usado para mapear os erros na camada dos filters, use os enums vindos de ServiceErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Service Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SuperAdminController.html":{"url":"controllers/SuperAdminController.html","title":"controller - SuperAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SuperAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/controllers/super-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                super-admin\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('super-admin')\nexport class SuperAdminController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SuperAdminJwt.html":{"url":"guards/SuperAdminJwt.html","title":"guard - SuperAdminJwt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    SuperAdminJwt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/super-admin-jwt.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar se um usuário tem permissões de um administrador\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/super-admin-jwt.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/super-admin-jwt.guard.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/super-admin-jwt.guard.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n\tBadRequestException,\n\tCanActivate,\n\tExecutionContext,\n\tHttpStatus,\n\tInjectable,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IAccessTokenBody } from '../tokenTypes';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { UUID } from '@registry:app/entities/VO';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\n\n/** Usado para validar se um usuário tem permissões de um administrador */\n@Injectable()\nexport class SuperAdminJwt implements CanActivate {\n\tconstructor(\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async checkToken(token: string) {\n\t\tconst tokenData: IAccessTokenBody = await this.jwtService\n\t\t\t.verifyAsync(token, {\n\t\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({ message: 'JWT inválido' });\n\t\t\t});\n\n\t\treturn tokenData;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\t\tconst rawToken = req?.headers?.authorization;\n\n\t\tconst condominiumId = req.params?.condominiumId;\n\t\tif (!condominiumId)\n\t\t\tthrow new BadRequestException({\n\t\t\t\tstatusCode: HttpStatus.BAD_REQUEST,\n\t\t\t\terror: 'Bad Request',\n\t\t\t\tmessage: 'Condomínio não especificado',\n\t\t\t});\n\n\t\tconst token = rawToken?.split(' ')[1];\n\t\tif (!token) throw new GuardErrors({ message: 'Token não encontrado' });\n\n\t\tconst tokenData = (await this.checkToken(token)) as IAccessTokenBody;\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new UUID(tokenData.sub),\n\t\t\tsafeSearch: true,\n\t\t});\n\t\tconst condominiumRelUser = await this.userRepo.getCondominiumRelation({\n\t\t\tuserId: user.id,\n\t\t\tcondominiumId: new UUID(condominiumId),\n\t\t});\n\n\t\tif (!condominiumRelUser || condominiumRelUser.level.value \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThrottlerErrorFilter.html":{"url":"classes/ThrottlerErrorFilter.html","title":"class - ThrottlerErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThrottlerErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/throttler.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Throttler\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/throttler.filter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ThrottlerException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/throttler.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        ThrottlerException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { ThrottlerException } from '@nestjs/throttler';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros dos Throttler */\n@Catch(ThrottlerException)\nexport class ThrottlerErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(exception: ThrottlerException, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tthis.logger.error({\n\t\t\tname: 'Muitas requisições',\n\t\t\tlayer: LayersEnum.auth,\n\t\t\tdescription: 'Muitas requisições realizadas',\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(400).json({\n\t\t\tstatusCode: 400,\n\t\t\tname: 'Muitas requisições',\n\t\t\tmessage: 'Muitas requisições realizadas',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UUID.html":{"url":"classes/UUID.html","title":"class - UUID","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UUID\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/generals/UUID/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                check\n                            \n                            \n                                equalTo\n                            \n                            \n                                    Static\n                                genV4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equalTo\n                        \n                    \n                \n            \n            \n                \nequalTo(input: UUID)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        genV4\n                        \n                    \n                \n            \n            \n                \n                        \n                    genV4()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UUID\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:36\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { EntitieError } from '@registry:app/errors/entities';\nimport { randomUUID } from 'node:crypto';\n\nexport class UUID implements ValueObject {\n\tprivate readonly _value: string;\n\n\tconstructor(input: string) {\n\t\tconst regexp =\n\t\t\t/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\t\tif (!input.match(regexp))\n\t\t\tthrow new EntitieError({\n\t\t\t\tmessage: 'UUID não está formatado corretamente',\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t});\n\n\t\tthis._value = input;\n\t}\n\n\tstatic check(input: string): boolean {\n\t\tconst regexp =\n\t\t\t/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\t\tif (!input.match(regexp)) return false;\n\t\treturn true;\n\t}\n\n\tstatic genV4() {\n\t\tconst uuid = randomUUID();\n\t\treturn new UUID(uuid);\n\t}\n\n\tequalTo(input: UUID): boolean {\n\t\treturn this._value === input.value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UUIDGroup.html":{"url":"classes/UUIDGroup.html","title":"class - UUIDGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UUIDGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/generals/UUID/group.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                comparator\n                            \n                            \n                                equalTo\n                            \n                            \n                                    Private\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: Iterable)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:6\n                            \n                        \n\n                \n                    \n                            Use UUIDGroup ao invés de simplesmente usar UUID[], esta classe é util para garantir que nenhum id seja repetido e possui a capacidade de validar listas de inteiras com apenas um metódo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                    Iterable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comparator\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparator(toBeIterated: Set, toBeSearched: Set)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                toBeIterated\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBeSearched\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equalTo\n                        \n                    \n                \n            \n            \n                \nequalTo(input: UUIDGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UUIDGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: Set, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:56\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { UUID } from './index';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\n\nexport class UUIDGroup implements ValueObject> {\n\tprivate _value: Set;\n\n\t/**\n\t * Use UUIDGroup ao invés de simplesmente usar UUID[], esta classe é util para garantir que nenhum id seja repetido e possui a capacidade de validar listas de inteiras com apenas um metódo\n\t * @param _value - Valor iterável de strings em forma de UUID\n\t **/\n\tconstructor(input: Iterable) {\n\t\tfor (const item of input) {\n\t\t\tif (!UUID.check(item))\n\t\t\t\tthrow new EntitieError({\n\t\t\t\t\tmessage: 'Coleção de UUIDs possui valores incorretos',\n\t\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\t});\n\t\t}\n\n\t\tthis._value = new Set(input);\n\t}\n\n\tprivate find(input: Set, value: string): boolean {\n\t\tlet wasFinded = false;\n\t\tinput.forEach((item: string) => {\n\t\t\tif (item === value) wasFinded = true;\n\t\t});\n\n\t\treturn wasFinded;\n\t}\n\n\tprivate comparator(\n\t\ttoBeIterated: Set,\n\t\ttoBeSearched: Set,\n\t): boolean {\n\t\tconst iterable = toBeIterated.values();\n\t\tlet data: IteratorResult = iterable.next();\n\t\twhile (!data.done && data.value) {\n\t\t\tconst result = this.find(toBeSearched, data.value);\n\t\t\tif (!result) return false;\n\n\t\t\tdata = iterable.next();\n\t\t}\n\t\treturn true;\n\t}\n\n\tequalTo(input: UUIDGroup): boolean {\n\t\tif (this.value === input.value) return true;\n\n\t\tif (this.value.size !== input.value.size) return false;\n\n\t\treturn this.comparator(this.value, input.value);\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/user/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dereference\n                            \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    CPF\n                                \n                                \n                                    phoneNumber\n                                \n                                \n                                    createdAt\n                                \n                                \n                                    updatedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: TInputPropsUser, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/user/index.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        TInputPropsUser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UUID\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/user/index.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IPropsUser\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/user/index.ts:58\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dereference\n                        \n                    \n                \n            \n            \n                \n                        \n                    dereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/user/index.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/user/index.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:109\n                                \n                            \n\n                \n                    \n                        setname(input: Name)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:112\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Name\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:117\n                                \n                            \n\n                \n                    \n                        setemail(input: Email)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:120\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Email\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:125\n                                \n                            \n\n                \n                    \n                        setpassword(input: Password)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:128\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Password\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        CPF\n                    \n                \n\n                \n                    \n                        getCPF()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:133\n                                \n                            \n\n                \n                    \n                        setCPF(input: CPF)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:136\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            CPF\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        phoneNumber\n                    \n                \n\n                \n                    \n                        getphoneNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:141\n                                \n                            \n\n                \n                    \n                        setphoneNumber(input: PhoneNumber)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:144\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            PhoneNumber\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:149\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:154\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Name, Email, Password, CPF, PhoneNumber, UUID } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\ninterface IPropsUser {\n\tname: Name;\n\temail: Email;\n\tpassword: Password;\n\tCPF: CPF;\n\tphoneNumber: PhoneNumber;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n}\n\nexport type TInputPropsUser = {\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n};\n\nexport const userDTORules = {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\temail: {\n\t\tmaxLength: 320,\n\t\ttype: 'string',\n\t},\n\tpassword: {\n\t\tmaxLength: 64,\n\t\tminLength: 8,\n\t\ttype: 'string',\n\t},\n\tCPF: {\n\t\tmaxLength: 14,\n\t\tminLength: 11,\n\t\ttype: 'string',\n\t},\n\tphoneNumber: {\n\t\tmaxLength: 30,\n\t\tminLength: 10,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class User implements Entity {\n\tprivate props: IPropsUser;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: TInputPropsUser, id?: string) {\n\t\tthis.props = {\n\t\t\tname: new Name(input.name),\n\t\t\temail: new Email(input.email),\n\t\t\tpassword: new Password(input.password),\n\t\t\tCPF: new CPF(input.CPF),\n\t\t\tphoneNumber: new PhoneNumber(input.phoneNumber),\n\t\t\tcreatedAt: input.createdAt ?? new Date(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tpublic dereference(): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\tname: this.name.value,\n\t\t\t\temail: this.email.value,\n\t\t\t\tpassword: this.password.value,\n\t\t\t\tCPF: this.CPF.value,\n\t\t\t\tphoneNumber: this.phoneNumber.value,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t\tupdatedAt: this.updatedAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tpublic equalTo(input: User): boolean {\n\t\treturn (\n\t\t\tinput instanceof User &&\n\t\t\tthis.createdAt === input.createdAt &&\n\t\t\tthis.updatedAt === input.updatedAt &&\n\t\t\tValueObject.compare(this._id, input.id) &&\n\t\t\tValueObject.compare(this.phoneNumber, input.phoneNumber) &&\n\t\t\tValueObject.compare(this.CPF, input.CPF) &&\n\t\t\tValueObject.compare(this.password, input.password) &&\n\t\t\tValueObject.compare(this.name, input.name) &&\n\t\t\tValueObject.compare(this.email, input.email)\n\t\t);\n\t}\n\n\t// Id\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\t// Name\n\tget name(): Name {\n\t\treturn this.props.name;\n\t}\n\tset name(input: Name) {\n\t\tthis.props.name = input;\n\t}\n\n\t// Email\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tset email(input: Email) {\n\t\tthis.props.email = input;\n\t}\n\n\t// Password\n\tget password(): Password {\n\t\treturn this.props.password;\n\t}\n\tset password(input: Password) {\n\t\tthis.props.password = input;\n\t}\n\n\t// CPF\n\tget CPF(): CPF {\n\t\treturn this.props.CPF;\n\t}\n\tset CPF(input: CPF) {\n\t\tthis.props.CPF = input;\n\t}\n\n\t// PhoneNumber\n\tget phoneNumber(): PhoneNumber {\n\t\treturn this.props.phoneNumber;\n\t}\n\tset phoneNumber(input: PhoneNumber) {\n\t\tthis.props.phoneNumber = input;\n\t}\n\n\t// CreatedAt\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n\n\t// UpdatedAt\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createSimpleUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                launchTFA\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                launchTFAOld\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                oldLogin\n                            \n                            \n                                    Private\n                                    Async\n                                processTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createSimpleUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSimpleUser(req: Request, res: Response, body: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(HmacInviteGuard)@Post('accept')\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            CreateUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAccount(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccount(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get()@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        launchTFA\n                        \n                    \n                \n            \n            \n                \n                        \n                    launchTFA(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(CheckPasswordGuard)@Post('launch-tfa')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        launchTFAOld\n                        \n                    \n                \n            \n            \n                \n                        \n                    launchTFAOld(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(CheckPasswordGuard)@Post('/old/launch-tfa')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(res: Response, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(CheckTFACodeGuard)@Post('login')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        oldLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    oldLogin(res: Response, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(CheckOTPGuard)@Post('/old/login')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        processTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    processTokens(res: Response, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(res: Response, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RefreshTokenGuard)@Get('get-tokens')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateUserService } from '@registry:app/services/createUser.service';\nimport {\n\tBadRequestException,\n\tBody,\n\tController,\n\tDelete,\n\tGet,\n\tHttpCode,\n\tPost,\n\tReq,\n\tRes,\n\tUseGuards,\n} from '@nestjs/common';\nimport { CreateUserDTO } from '../DTO/createUser.DTO';\nimport { UserMapper } from '@registry:app/mapper/user';\nimport { Request, Response } from 'express';\nimport { CreateTokenService } from '@registry:app/services/createToken.service';\nimport { HmacInviteGuard } from '@registry:app/auth/guards/hmac-invite.guard';\nimport { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { CheckPasswordGuard } from '@registry:app/auth/guards/checkPassword.guard';\nimport { User } from '@registry:app/entities/user';\nimport { GenTFAService } from '@registry:app/services/genTFA.service';\nimport { CheckTFACodeGuard } from '@registry:app/auth/guards/checkTFACode.guard';\nimport { Throttle } from '@nestjs/throttler';\nimport { RefreshTokenGuard } from '@registry:app/auth/guards/refreshToken.guard';\nimport { Invite } from '@registry:app/entities/invite';\nimport { ApartmentNumber, Block } from '@registry:app/entities/VO';\nimport { ValueObject } from '@registry:app/entities/entities';\nimport { JwtGuard } from '@registry:app/auth/guards/jwt.guard';\nimport { DeleteUserService } from '@registry:app/services/deleteUser.service';\nimport { GetCondominiumRelUserService } from '@registry:app/services/getCondominiumRel.service';\nimport { GenOldTFASevice } from '@registry:app/services/genTFACode.old.service';\nimport { CheckOTPGuard } from '@registry:app/auth/guards/checkOTP.guard';\n\n@Throttle({\n\tdefault: {\n\t\tlimit: 3,\n\t\tttl: 60000,\n\t},\n})\n@Controller('user')\nexport class UserController {\n\t/** Acesse /api para ver as rotas disponíveis **/\n\tconstructor(\n\t\tprivate readonly getCondominiumRelUserService: GetCondominiumRelUserService,\n\t\tprivate readonly createUser: CreateUserService,\n\t\tprivate readonly createToken: CreateTokenService,\n\t\tprivate readonly deleteUserService: DeleteUserService,\n\t\tprivate readonly genTFA: GenTFAService,\n\t\tprivate readonly oldTFA: GenOldTFASevice,\n\t\tprivate readonly logger: LoggerAdapter,\n\t) {}\n\n\tprivate async processTokens(res: Response, user: User) {\n\t\tconst { accessToken, refreshToken } = await this.createToken.exec({\n\t\t\tuser,\n\t\t});\n\n\t\tconst expires = new Date(\n\t\t\tDate.now() + Number(process.env.REFRESH_TOKEN_EXP),\n\t\t);\n\n\t\tres.cookie('refresh-token', refreshToken, {\n\t\t\texpires,\n\t\t\tmaxAge: parseInt(process.env.REFRESH_TOKEN_EXP as string) * 1000,\n\t\t\tpath: '/',\n\t\t\thttpOnly: true,\n\t\t\tsecure: process.env.NODE_ENV === 'production' && true,\n\t\t\tsameSite: 'strict',\n\t\t\tsigned: true,\n\t\t});\n\n\t\treturn { accessToken };\n\t}\n\n\t@UseGuards(HmacInviteGuard)\n\t@Post('accept')\n\tasync createSimpleUser(\n\t\t@Req() req: Request,\n\t\t@Res({ passthrough: true }) res: Response,\n\t\t@Body() body: CreateUserDTO,\n\t) {\n\t\tconst invite = req.inMemoryData.invite as Invite;\n\t\t// PASSAR PARA OUTRO DOMÍNIO\n\t\tif (\n\t\t\t(!body.apartmentNumber && invite.type.value === 0) ||\n\t\t\t(!body.block && invite.type.value === 0)\n\t\t) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: 'Omissão de campos',\n\t\t\t\tlayer: LayersEnum.dto,\n\t\t\t\tdescription:\n\t\t\t\t\t'apartmentNumber e block não devem ser omitidos em usuários comuns',\n\t\t\t});\n\n\t\t\tthrow new BadRequestException({\n\t\t\t\tmessage: [\n\t\t\t\t\t'apartmentNumber e block não devem ser omitidos em usuários comuns',\n\t\t\t\t],\n\t\t\t\terror: 'Bad Request',\n\t\t\t\tstatusCode: 400,\n\t\t\t});\n\t\t}\n\n\t\tconst { apartmentNumber, block, ...coreInfo } = body;\n\t\tconst user = UserMapper.toClass({ ...coreInfo });\n\t\tawait this.createUser.exec({\n\t\t\tuser,\n\t\t\tinvite,\n\t\t\tapartmentNumber: ValueObject.build(ApartmentNumber, apartmentNumber)\n\t\t\t\t.allowNullish()\n\t\t\t\t.exec(),\n\t\t\tblock: ValueObject.build(Block, block).allowNullish().exec(),\n\t\t});\n\t\treturn await this.processTokens(res, user);\n\t}\n\n\t@UseGuards(CheckPasswordGuard)\n\t@Post('launch-tfa')\n\t@HttpCode(204)\n\tasync launchTFA(@Req() req: Request) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\tawait this.genTFA.exec({\n\t\t\temail: user.email,\n\t\t\tuserId: user.id,\n\t\t});\n\t}\n\n\t@UseGuards(JwtGuard)\n\t@Delete()\n\t@HttpCode(204)\n\tasync deleteAccount(@Req() req: Request) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\tawait this.deleteUserService.exec({ target: user.email });\n\t}\n\n\t@UseGuards(JwtGuard)\n\t@Get()\n\t@HttpCode(200)\n\tasync getAccount(@Req() req: Request) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\tconst { condominiumRels } =\n\t\t\tawait this.getCondominiumRelUserService.exec({ userId: user.id });\n\n\t\t/* eslint-disable @typescript-eslint/no-unused-vars */\n\t\tconst { password: _, ...userAsObject } = UserMapper.toObject(user);\n\t\treturn {\n\t\t\tuser: {\n\t\t\t\t...userAsObject,\n\t\t\t\tcondominiumRels,\n\t\t\t},\n\t\t};\n\t}\n\n\t@UseGuards(CheckPasswordGuard)\n\t@Post('/old/launch-tfa')\n\t@HttpCode(204)\n\tasync launchTFAOld(@Req() req: Request) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\tawait this.oldTFA.exec({\n\t\t\temail: user.email,\n\t\t\tuserId: user.id.value\n\t\t})\n\t}\n\n\t@UseGuards(CheckOTPGuard)\n\t@Post('/old/login')\n\t@HttpCode(200)\n\tasync oldLogin(@Res({ passthrough: true }) res: Response, @Req() req: Request) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\treturn await this.processTokens(res, user);\n\t}\n\n\t@UseGuards(CheckTFACodeGuard)\n\t@Post('login')\n\t@HttpCode(200)\n\tasync login(\n\t\t@Res({ passthrough: true }) res: Response,\n\t\t@Req() req: Request,\n\t) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\treturn await this.processTokens(res, user);\n\t}\n\n\t@UseGuards(RefreshTokenGuard)\n\t@Get('get-tokens')\n\t@HttpCode(200)\n\tasync refreshToken(\n\t\t@Res({ passthrough: true }) res: Response,\n\t\t@Req() req: Request,\n\t) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\tthis.createToken.exec({ user });\n\t\treturn await this.processTokens(res, user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFirestoreMapper.html":{"url":"classes/UserFirestoreMapper.html","title":"class - UserFirestoreMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFirestoreMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/users.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromFirebaseToClass\n                            \n                            \n                                    Static\n                                fromFirebaseToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirebaseToClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirebaseToClass(input: IIncomingFirestoreUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/users.ts:21\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirebaseToObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirebaseToObject(input: IIncomingFirestoreUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/users.ts:36\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TUserClassToObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@registry:app/entities/user';\nimport { TUserClassToObject } from '@registry:app/mapper/user';\nimport { Timestamp } from 'firebase-admin/firestore';\n\nexport interface IIncomingFirestoreUserData {\n\tid: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt: Timestamp;\n\tupdatedAt: Timestamp;\n}\n\nexport class UserFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirebaseToClass(input: IIncomingFirestoreUserData): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirebaseToObject(\n\t\tinput: IIncomingFirestoreUserData,\n\t): TUserClassToObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMapper.html":{"url":"classes/UserMapper.html","title":"class - UserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: IUserInObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/user.ts:30\n                        \n                    \n\n\n            \n                \n                        Método usado para converter um objeto de usuário em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IUserInObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de objeto\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/user.ts:45\n                        \n                    \n\n\n            \n                \n                        Método usado para converter uma classe de usuário em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de classe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TUserClassToObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../entities/user';\n\nexport interface IUserInObject {\n\tid?: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport type TUserClassToObject = {\n\tid: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n};\n\nexport class UserMapper {\n\t/**\n\t * Método usado para converter um objeto de usuário em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IUserInObject): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de usuário em objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: User): TUserClassToObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tname: input.name.value,\n\t\t\temail: input.email.value,\n\t\t\tpassword: input.password.value,\n\t\t\tCPF: input.CPF.value,\n\t\t\tphoneNumber: input.phoneNumber.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPrismaMapper.html":{"url":"classes/UserPrismaMapper.html","title":"class - UserPrismaMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPrismaMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/mapper/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: UserPrisma)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/user.ts:26\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do prisma em classes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserPrisma\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do prisma\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(input: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/user.ts:9\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados inseridos e os adapta para a utilização no prisma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados de entrada do usuário\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserPrisma\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@registry:app/entities/user';\nimport { User as UserPrisma } from '@prisma/client';\n\nexport class UserPrismaMapper {\n\t/**\n\t * Mapeia os dados inseridos e os adapta para a utilização no prisma\n\t * @param input - Deve conter os dados de entrada do usuário\n\t **/\n\tstatic toPrisma(input: User): UserPrisma {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tname: input.name.value,\n\t\t\temail: input.email.value,\n\t\t\tpassword: input.password.value,\n\t\t\tCPF: input.CPF.value,\n\t\t\tphoneNumber: input.phoneNumber.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do prisma em classes\n\t * @param input - Deve conter os dados vindos do prisma\n\t **/\n\tstatic toClass(input: UserPrisma): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\tname: input.name,\n\t\t\t\temail: input.email,\n\t\t\t\tpassword: input.password,\n\t\t\t\tCPF: input.CPF,\n\t\t\t\tphoneNumber: input.phoneNumber,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserPrismaRepo.html":{"url":"injectables/UserPrismaRepo.html","title":"injectable - UserPrismaRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserPrismaRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                getAllCondominiumRelation\n                            \n                            \n                                    Async\n                                getCondominiumRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: UserRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search | UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCondominiumRelation(input: UserRepoInterfaces.getAllCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getAllCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCondominiumRelation(input: UserRepoInterfaces.getCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaService } from '../prisma.service';\nimport { Injectable } from '@nestjs/common';\nimport { UserRepoInterfaces, UserRepo } from '@registry:app/repositories/user';\nimport { UserPrismaMapper } from '../mapper/user';\nimport { User } from '@registry:app/entities/user';\nimport { Email, UUID } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { CondominiumRelUserPrismaMapper } from '../mapper/condominiumRelUser';\nimport {\n\tCondominiumRelUserMapper,\n\tTCondominiumRelUserToObject,\n} from '@registry:app/mapper/condominiumRelUser';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\n@Injectable()\nexport class UserPrismaRepo implements UserRepo {\n\tconstructor(private readonly prisma: PrismaService) {}\n\n\tasync create(): Promise {}\n\n\tasync find(input: UserRepoInterfaces.safeSearch): Promise;\n\tasync find(input: UserRepoInterfaces.search): Promise;\n\n\tasync find(\n\t\tinput: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch,\n\t): Promise {\n\t\tconst query =\n\t\t\tinput.key instanceof UUID\n\t\t\t\t? { id: input.key.value }\n\t\t\t\t: input.key instanceof Email\n\t\t\t\t\t? { email: input.key.value }\n\t\t\t\t\t: { CPF: input.key.value };\n\n\t\tconst unparsedUser = await this.prisma.user.findFirst({\n\t\t\twhere: {\n\t\t\t\tOR: [query],\n\t\t\t},\n\t\t});\n\n\t\tif (!unparsedUser && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tif (!unparsedUser) return undefined;\n\n\t\tconst user = UserPrismaMapper.toClass(unparsedUser);\n\t\treturn user;\n\t}\n\n\tasync getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise {\n\t\tconst unparsedCondominiumRelUser =\n\t\t\tawait this.prisma.condominiumRelUser.findFirst({\n\t\t\t\twhere: {\n\t\t\t\t\tAND: [\n\t\t\t\t\t\t{ userId: input.userId.value },\n\t\t\t\t\t\t{ condominiumId: input.condominiumId.value },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t});\n\n\t\tif (!unparsedCondominiumRelUser) return undefined;\n\n\t\tconst condominiumRelUser = CondominiumRelUserPrismaMapper.toClass(\n\t\t\tunparsedCondominiumRelUser,\n\t\t);\n\t\treturn condominiumRelUser;\n\t}\n\n\tasync getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise {\n\t\tconst unparsedCondominiumRelGroup =\n\t\t\tawait this.prisma.condominiumRelUser.findMany({\n\t\t\t\twhere: {\n\t\t\t\t\tuserId: input.userId.value,\n\t\t\t\t},\n\t\t\t});\n\n\t\tconst condominiumRelGroup = unparsedCondominiumRelGroup.map((item) => {\n\t\t\treturn CondominiumRelUserMapper.toObject(\n\t\t\t\tCondominiumRelUserPrismaMapper.toClass(item),\n\t\t\t);\n\t\t});\n\n\t\treturn condominiumRelGroup;\n\t}\n\n\tasync delete(input: UserRepoInterfaces.remove): Promise {\n\t\tconst query = { id: input.key.value };\n\n\t\tif (input.key instanceof Email) {\n\t\t\tconst user = await this.find({ key: input.key, safeSearch: true });\n\t\t\tquery.id = user.id.value;\n\t\t}\n\n\t\tawait this.prisma.user.delete({ where: query });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepo.html":{"url":"classes/UserRepo.html","title":"class - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                getAllCondominiumRelation\n                            \n                            \n                                    Abstract\n                                getCondominiumRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: UserRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: UserRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:40\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um usuário\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:47\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um usuário\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getAllCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCondominiumRelation(input: UserRepoInterfaces.getAllCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getAllCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCondominiumRelation(input: UserRepoInterfaces.getCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersFirestore.html":{"url":"injectables/UsersFirestore.html","title":"injectable - UsersFirestore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersFirestore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/repositories/users.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                getAllCondominiumRelation\n                            \n                            \n                                    Async\n                                getCondominiumRelation\n                            \n                            \n                                    Private\n                                    Async\n                                searchByField\n                            \n                            \n                                    Private\n                                    Async\n                                searchById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(collectionsRefs: CollectionsRefService, firestore: FirestoreService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionsRefs\n                                                  \n                                                        \n                                                                        CollectionsRefService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                        FirestoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: UserRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search | UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCondominiumRelation(input: UserRepoInterfaces.getAllCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getAllCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCondominiumRelation(input: UserRepoInterfaces.getCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        searchByField\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchByField(collection: CollectionReference, field: string, input: string | number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collection\n                                            \n                                                        CollectionReference\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        searchById\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchById(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserRepo, UserRepoInterfaces } from '@registry:app/repositories/user';\nimport { FirestoreService } from '../firestore.service';\nimport { User } from '@registry:app/entities/user';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\nimport { UserFirestoreMapper } from '../mapper/users';\nimport { Injectable } from '@nestjs/common';\nimport { FirestoreGetUserDTO } from '../DTO/getUser';\nimport { UUID, CPF, Email } from '@registry:app/entities/VO';\nimport { CollectionReference } from 'firebase-admin/firestore';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { FirestoreGetCondominiumRelUserDTO } from '../DTO/getCondominiumRel';\nimport { CondominiumRelUserFirestoreMapper } from '../mapper/condominiumRelUser';\nimport { CollectionsRefService } from '../collectionsRefs.service';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\n@Injectable()\nexport class UsersFirestore implements UserRepo {\n\tconstructor(\n\t\tprivate readonly collectionsRefs: CollectionsRefService,\n\t\tprivate readonly firestore: FirestoreService,\n\t) {}\n\n\tasync create(): Promise {\n\t\tthrow new DatabaseCustomError({\n\t\t\tmessage: 'Esta funcionalidade ainda não foi desenvolvida',\n\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t});\n\t}\n\n\tprivate async searchByField(\n\t\tcollection: CollectionReference,\n\t\tfield: string,\n\t\tinput: string | number,\n\t) {\n\t\tlet data: Record | undefined;\n\t\tconst res = await collection.where(field, '==', input).limit(1).get();\n\n\t\tif (!res.empty)\n\t\t\tres.forEach((item) => {\n\t\t\t\tif (item.exists) data = { id: item.id, ...item.data() };\n\t\t\t});\n\n\t\treturn data;\n\t}\n\n\tprivate async searchById(input: string) {\n\t\tlet data: Record | undefined;\n\t\tconst res = await this.collectionsRefs.user.core.doc(input).get();\n\t\tif (res.exists) data = { id: res.id, ...res.data() };\n\n\t\treturn data;\n\t}\n\n\tasync find(input: UserRepoInterfaces.safeSearch): Promise;\n\tasync find(input: UserRepoInterfaces.search): Promise;\n\n\tasync find(\n\t\tinput: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch,\n\t): Promise {\n\t\tconst queries = [\n\t\t\t{\n\t\t\t\texec: async () => await this.searchById(input.key.value),\n\t\t\t\ttrigger: input.key instanceof UUID,\n\t\t\t},\n\t\t\t{\n\t\t\t\texec: async () =>\n\t\t\t\t\tawait this.searchByField(\n\t\t\t\t\t\tthis.collectionsRefs.user.core,\n\t\t\t\t\t\t'email',\n\t\t\t\t\t\tinput.key.value,\n\t\t\t\t\t),\n\t\t\t\ttrigger: input.key instanceof Email,\n\t\t\t},\n\t\t\t{\n\t\t\t\texec: async () =>\n\t\t\t\t\tawait this.searchByField(\n\t\t\t\t\t\tthis.collectionsRefs.user.core,\n\t\t\t\t\t\t'cpf',\n\t\t\t\t\t\tinput.key.value,\n\t\t\t\t\t),\n\t\t\t\ttrigger: input.key instanceof CPF,\n\t\t\t},\n\t\t];\n\n\t\tlet unparsedUser: Record | undefined;\n\t\tfor await (const query of queries) {\n\t\t\tif (!query.trigger) continue;\n\t\t\tunparsedUser = await query.exec();\n\t\t\tbreak;\n\t\t}\n\n\t\tif (!unparsedUser && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\t});\n\n\t\tif (!unparsedUser) return undefined;\n\n\t\tconst parsedUser = FirestoreGetUserDTO.exec(unparsedUser);\n\t\treturn UserFirestoreMapper.fromFirebaseToClass(parsedUser);\n\t}\n\n\tasync getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise {\n\t\tconst snapshot = await this.collectionsRefs.user\n\t\t\t.condominiumRelUser(input.userId.value)\n\t\t\t.doc(input.condominiumId.value)\n\t\t\t.get();\n\t\tif (!snapshot.exists) return undefined;\n\n\t\tconst unparsedData = {\n\t\t\tid: snapshot.id,\n\t\t\tuserId: input.userId.value,\n\t\t\tcondominiumId: snapshot.id,\n\t\t\t...snapshot.data(),\n\t\t};\n\t\tconst semiparsedData =\n\t\t\tFirestoreGetCondominiumRelUserDTO.exec(unparsedData);\n\t\tconst parsedData =\n\t\t\tCondominiumRelUserFirestoreMapper.fromFirestoreToClass(\n\t\t\t\tsemiparsedData,\n\t\t\t);\n\n\t\treturn parsedData;\n\t}\n\n\tasync getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise {\n\t\tconst snapshot = await this.collectionsRefs.user\n\t\t\t.condominiumRelUser(input.userId.value)\n\t\t\t.get();\n\t\tif (snapshot.empty) return [];\n\n\t\tconst condominiumRelUserArr: TCondominiumRelUserToObject[] = [];\n\t\tsnapshot.forEach((item) => {\n\t\t\tif (!item.exists) return;\n\t\t\tconst unparsedData = {\n\t\t\t\tid: item.id,\n\t\t\t\tuserId: input.userId.value,\n\t\t\t\tcondominiumId: item.id,\n\t\t\t\t...item.data(),\n\t\t\t};\n\t\t\tconst semiparsedData =\n\t\t\t\tFirestoreGetCondominiumRelUserDTO.exec(unparsedData);\n\t\t\tconst parsedData =\n\t\t\t\tCondominiumRelUserFirestoreMapper.fromFirestoreToObject(\n\t\t\t\t\tsemiparsedData,\n\t\t\t\t);\n\n\t\t\tcondominiumRelUserArr.push(parsedData);\n\t\t});\n\n\t\treturn condominiumRelUserArr;\n\t}\n\n\tasync delete(input: UserRepoInterfaces.remove): Promise {\n\t\tconst database = this.firestore.instance;\n\n\t\tconst queries = [\n\t\t\t{\n\t\t\t\texec: async () => await this.searchById(input.key.value),\n\t\t\t\ttrigger: input.key instanceof UUID,\n\t\t\t},\n\t\t\t{\n\t\t\t\texec: async () =>\n\t\t\t\t\tawait this.searchByField(\n\t\t\t\t\t\tthis.collectionsRefs.user.core,\n\t\t\t\t\t\t'email',\n\t\t\t\t\t\tinput.key.value,\n\t\t\t\t\t),\n\t\t\t\ttrigger: input.key instanceof Email,\n\t\t\t},\n\t\t];\n\n\t\tfor await (const query of queries) {\n\t\t\tif (!query.trigger) continue;\n\n\t\t\tconst unparsedUser: Record | undefined =\n\t\t\t\tawait query.exec();\n\n\t\t\tif (unparsedUser) {\n\t\t\t\tconst semiparsedUser = FirestoreGetUserDTO.exec(unparsedUser);\n\t\t\t\tconst parsedUser =\n\t\t\t\t\tUserFirestoreMapper.fromFirebaseToObject(semiparsedUser);\n\n\t\t\t\tawait database.runTransaction(async (transaction) => {\n\t\t\t\t\tconst refs = {\n\t\t\t\t\t\tcondominiumRelUserCollection:\n\t\t\t\t\t\t\tthis.collectionsRefs.user.condominiumRelUser(\n\t\t\t\t\t\t\t\tparsedUser.id,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tcore: this.collectionsRefs.user.core.doc(parsedUser.id),\n\t\t\t\t\t\temailIndex: this.collectionsRefs.user.emailIndex.doc(\n\t\t\t\t\t\t\tparsedUser.email,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcpfIndex: this.collectionsRefs.user.cpfIndex.doc(\n\t\t\t\t\t\t\tparsedUser.CPF,\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\n\t\t\t\t\tawait refs.condominiumRelUserCollection\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tres.forEach((item) => {\n\t\t\t\t\t\t\t\tif (item.exists) {\n\t\t\t\t\t\t\t\t\tconst condominiumRelUser =\n\t\t\t\t\t\t\t\t\t\tthis.collectionsRefs.user\n\t\t\t\t\t\t\t\t\t\t\t.condominiumRelUser(parsedUser.id)\n\t\t\t\t\t\t\t\t\t\t\t.doc(item.id);\n\t\t\t\t\t\t\t\t\ttransaction.delete(condominiumRelUser, {\n\t\t\t\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\ttransaction.delete(refs.core, { exists: true });\n\t\t\t\t\ttransaction.delete(refs.emailIndex, { exists: true });\n\t\t\t\t\ttransaction.delete(refs.cpfIndex, { exists: true });\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValueObject.html":{"url":"classes/ValueObject.html","title":"class - ValueObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValueObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/entities.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para manter um padrão nos Value Objects\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                build\n                            \n                            \n                                    Static\n                                compare\n                            \n                            \n                                    Abstract\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(constructor: IClass, internalValue?: ConstructorParameters> | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:37\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                constructor\n                                            \n                                                            IClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                internalValue\n                                            \n                                                            ConstructorParameters> | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { exec: () => InstanceType>; or: (alternativeValue: T) => { exec: () => any; }; allowNullish: () => { exec: () => any; }; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(c1?: ValueObject | null, c2?: ValueObject | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                c1\n                                            \n                                                            ValueObject | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                c2\n                                            \n                                                            ValueObject | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/entities.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { IClass } from '@registry:utils/class';\n\nexport enum EntitiesEnum {\n\tcondominium = 'Condominium',\n\tuser = 'User',\n\totp = 'OTP',\n\tinvite = 'Invite',\n\tvo = 'Value Object',\n}\n\n/** Usado para manter um padrão nas classes da camada de entidades */\nexport abstract class Entity {\n\tabstract equalTo(input: Entity): boolean;\n\tabstract dereference(): Entity;\n}\n\nexport enum VOEnum {\n\tNullOrUndefined,\n}\n\n/** Usado para manter um padrão nos Value Objects */\nexport abstract class ValueObject {\n\tabstract equalTo(input: T): boolean;\n\tabstract get value(): O;\n\n\tstatic compare(\n\t\tc1?: ValueObject | null,\n\t\tc2?: ValueObject | null,\n\t): boolean {\n\t\tif (c1 !== null && c1 !== undefined && c2 !== null && c2 !== undefined)\n\t\t\treturn c1.equalTo(c2);\n\n\t\treturn c1 === c2;\n\t}\n\n\tstatic build(\n\t\tconstructor: IClass,\n\t\tinternalValue?: ConstructorParameters> | null,\n\t) {\n\t\tconst orStatement = (\n\t\t\talternativeValue: A,\n\t\t): { exec: () => InstanceType> | A } => {\n\t\t\tif (!internalValue) return { exec: () => alternativeValue };\n\t\t\treturn { exec: () => new constructor(internalValue) };\n\t\t};\n\n\t\tconst allowNullish = (): {\n\t\t\texec: () => InstanceType> | null | undefined;\n\t\t} => {\n\t\t\tif (internalValue === null || internalValue === undefined)\n\t\t\t\treturn { exec: () => internalValue };\n\t\t\treturn { exec: () => new constructor(internalValue) };\n\t\t};\n\n\t\treturn {\n\t\t\texec: (): InstanceType> => {\n\t\t\t\tif (!internalValue)\n\t\t\t\t\tthrow new EntitieError({\n\t\t\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t'Valor interno de entidade não pode ser null ou undefined, use \\'or\\' para garantir que seja possível de se usar valores nulos ou valores alternativos ou use \\'allowNullish\\' para lidar diretamente com nullish values',\n\t\t\t\t\t});\n\t\t\t\treturn new constructor(internalValue);\n\t\t\t},\n\t\t\tor: (alternativeValue: T) =>\n\t\t\t\torStatement(alternativeValue),\n\t\t\tallowNullish,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViacepGateway.html":{"url":"injectables/ViacepGateway.html","title":"injectable - ViacepGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ViacepGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/APIs/viacep.gateway.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapter: HttpAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/gateways/APIs/viacep.gateway.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapter\n                                                  \n                                                        \n                                                                        HttpAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/gateways/APIs/viacep.gateway.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpAdapter } from '@registry:app/adapters/http';\nimport { CepGateway, ICheckCep } from '@registry:app/gateways/CEP.gateway';\nimport { Injectable } from '@nestjs/common';\nimport { GatewayErrors, GatewaysErrorsTags } from '../errors';\n\ninterface ISuccess {\n\tcep: string;\n\tlogradouro: string;\n\tcomplemento: string;\n\tbairro: string;\n\tlocalidade: string;\n\tuf: string;\n\tibge: string;\n\tgia: string;\n\tddd: string;\n\tsiafi: string;\n}\n\n@Injectable()\nexport class ViacepGateway implements CepGateway {\n\tconstructor(private readonly httpAdapter: HttpAdapter) {}\n\n\tasync check(input: string): Promise {\n\t\tconst data = await this.httpAdapter.call({\n\t\t\turl: `https://viacep.com.br/ws/${input}/json/`,\n\t\t\tmethod: 'GET',\n\t\t});\n\n\t\tif (data.body?.erro)\n\t\t\tthrow new GatewayErrors({\n\t\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\t\tmessage: `Could not finish the request: https://viacep.com.br/ws/${input}/json/. Received 'erro' field as true!`,\n\t\t\t});\n\n\t\tconst body = data.body as ISuccess;\n\t\treturn {\n\t\t\tuf: body.uf,\n\t\t\tcep: body.cep,\n\t\t\tneighborhood: body.bairro,\n\t\t\tcomplement: body.complemento,\n\t\t\tcity: body.localidade,\n\t\t\tstreet_address: body.logradouro,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/create.html":{"url":"interfaces/create.html","title":"interface - create","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  create\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/condominium.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominium\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominium:         Condominium\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Condominium\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\n\nexport namespace CondominiumInterfaces {\n\texport interface create {\n\t\tcondominium: Condominium;\n\t}\n\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n\texport interface search {\n\t\tsafeSearch: undefined;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n}\n\nexport abstract class CondominiumRepo {\n\t/** @virtual */\n\tabstract create: (input: CondominiumInterfaces.create) => Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.safeSearch,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/create-1.html":{"url":"interfaces/create-1.html","title":"interface - create-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  create\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            invite\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invite:         Invite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/create-2.html":{"url":"interfaces/create-2.html","title":"interface - create-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  create\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumRelUser\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumRelUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumRelUser:         CondominiumRelUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CondominiumRelUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @firebase/rules-unit-testing : ^3.0.1\n        \n            @nestjs/common : ^10.2.10\n        \n            @nestjs/core : ^10.2.10\n        \n            @nestjs/event-emitter : ^2.0.3\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.2.10\n        \n            @nestjs/swagger : ^7.1.17\n        \n            @nestjs/throttler : ^5.1.0\n        \n            @prisma/client : ^5.7.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            concurrently : ^8.2.2\n        \n            cookie-parser : ^1.4.6\n        \n            dotenv : ^16.3.1\n        \n            dotenv-cli : ^7.3.0\n        \n            echoguard : 0.0.7-alpha\n        \n            express : ^4.18.2\n        \n            firebase-admin : ^11.11.1\n        \n            firebase-functions : ^4.5.0\n        \n            ioredis : ^5.3.2\n        \n            nodemailer : ^6.9.7\n        \n            passport-jwt : ^4.0.1\n        \n            prisma : ^5.7.0\n        \n            reflect-metadata : ^0.1.14\n        \n            rxjs : ^7.8.1\n        \n            zod : ^3.22.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DatabaseCustomErrorsTags   (src/.../index.ts)\n                        \n                        \n                            EntitiesEnum   (src/.../entities.ts)\n                        \n                        \n                            FirebaseEnums   (src/.../enums.ts)\n                        \n                        \n                            GatewaysErrorsTags   (src/.../index.ts)\n                        \n                        \n                            LayersEnum   (src/.../logger.ts)\n                        \n                        \n                            RedisEnum   (src/.../redisEnum.ts)\n                        \n                        \n                            RedisErrorsTags   (src/.../index.ts)\n                        \n                        \n                            ServiceErrorsTags   (src/.../services.ts)\n                        \n                        \n                            TokenType   (src/.../tokenTypes.ts)\n                        \n                        \n                            VOEnum   (src/.../entities.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/registryAPI/infra/storages/db/error/index.ts\n    \n        \n            \n                \n                    \n                        \n                        DatabaseCustomErrorsTags\n                    \n                \n                        \n                            \n                                 tooManyEntities\n                            \n                        \n                        \n                            \n                                Value : Too many entities\n                            \n                        \n                        \n                            \n                                 maximumCondominiumRelUser\n                            \n                        \n                        \n                            \n                                Value : Maximum condominiumRelUser\n                            \n                        \n                        \n                            \n                                 wrongInputLevel\n                            \n                        \n                        \n                            \n                                Value : Wrong input level detected\n                            \n                        \n                        \n                            \n                                 contentAlreadyExists\n                            \n                        \n                        \n                            \n                                Value : This content already exists\n                            \n                        \n                        \n                            \n                                 contentDoesntExists\n                            \n                        \n                        \n                            \n                                Value : This content doesn't exists\n                            \n                        \n                        \n                            \n                                 safeSearchEnabled\n                            \n                        \n                        \n                            \n                                Value : Safe search detected\n                            \n                        \n                        \n                            \n                                 dtoFailure\n                            \n                        \n                        \n                            \n                                Value : The DTO found an error\n                            \n                        \n                        \n                            \n                                 refLost\n                            \n                        \n                        \n                            \n                                Value : The reference could not be found\n                            \n                        \n                        \n                            \n                                 malformedRef\n                            \n                        \n                        \n                            \n                                Value : Malformed reference\n                            \n                        \n            \n        \n\n    src/registryAPI/app/entities/entities.ts\n    \n        \n            \n                \n                    \n                        \n                        EntitiesEnum\n                    \n                \n                        \n                            \n                                 condominium\n                            \n                        \n                        \n                            \n                                Value : Condominium\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n                        \n                            \n                                 otp\n                            \n                        \n                        \n                            \n                                Value : OTP\n                            \n                        \n                        \n                            \n                                 invite\n                            \n                        \n                        \n                            \n                                Value : Invite\n                            \n                        \n                        \n                            \n                                 vo\n                            \n                        \n                        \n                            \n                                Value : Value Object\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VOEnum\n                    \n                \n                        \n                            \n                                 NullOrUndefined\n                            \n                        \n            \n        \n\n    src/registryAPI/infra/storages/db/firestore/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        FirebaseEnums\n                    \n                \n                        \n                            \n                                 otp\n                            \n                        \n                        \n                            \n                                Value : [otp]\n                            \n                        \n            \n        \n\n    src/registryAPI/infra/gateways/errors/index.ts\n    \n        \n            \n                \n                    \n                        \n                        GatewaysErrorsTags\n                    \n                \n                        \n                            \n                                 InvalidResult\n                            \n                        \n                        \n                            \n                                Value : Invalid Result\n                            \n                        \n                        \n                            \n                                 PoisonedContent\n                            \n                        \n                        \n                            \n                                Value : Poisoned Content\n                            \n                        \n            \n        \n\n    src/registryAPI/app/adapters/logger.ts\n    \n        \n            \n                \n                    \n                        \n                        LayersEnum\n                    \n                \n                        \n                            \n                                 start\n                            \n                        \n                        \n                            \n                                Value : Start-layer\n                            \n                        \n                        \n                            \n                                 interceptors\n                            \n                        \n                        \n                            \n                                Value : Interceptor-Layer\n                            \n                        \n                        \n                            \n                                 services\n                            \n                        \n                        \n                            \n                                Value : Service-Layer\n                            \n                        \n                        \n                            \n                                 entitie\n                            \n                        \n                        \n                            \n                                Value : Entitie-Layer\n                            \n                        \n                        \n                            \n                                 controller\n                            \n                        \n                        \n                            \n                                Value : Controller-Layer\n                            \n                        \n                        \n                            \n                                 dto\n                            \n                        \n                        \n                            \n                                Value : DTO-Layer\n                            \n                        \n                        \n                            \n                                 auth\n                            \n                        \n                        \n                            \n                                Value : Auth-Layer\n                            \n                        \n                        \n                            \n                                 gateway\n                            \n                        \n                        \n                            \n                                Value : Gateway-Layer\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value : Unknown-Layer\n                            \n                        \n                        \n                            \n                                 adapter\n                            \n                        \n                        \n                            \n                                Value : Adapter-Layer\n                            \n                        \n                        \n                            \n                                 database\n                            \n                        \n                        \n                            \n                                Value : Database-Layer\n                            \n                        \n                        \n                            \n                                 cache\n                            \n                        \n                        \n                            \n                                Value : Cache-Layer\n                            \n                        \n            \n        \n\n    src/registryAPI/infra/storages/cache/redis/redisEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        RedisEnum\n                    \n                \n                        \n                            \n                                 otp\n                            \n                        \n                        \n                            \n                                Value : otp:\n                            \n                        \n            \n        \n\n    src/registryAPI/infra/storages/cache/redis/error/index.ts\n    \n        \n            \n                \n                    \n                        \n                        RedisErrorsTags\n                    \n                \n                        \n                            \n                                 alreadyExist\n                            \n                        \n                        \n                            \n                                Value : Entitie already exists\n                            \n                        \n            \n        \n\n    src/registryAPI/app/errors/services.ts\n    \n        \n            \n                \n                    \n                        \n                        ServiceErrorsTags\n                    \n                \n                        \n                            \n                                 wrongServiceUsage\n                            \n                        \n                        \n                            \n                                Value : WrongServiceUsage\n                            \n                        \n                        \n                            \n                                 unauthorized\n                            \n                        \n                        \n                            \n                                Value : Unauthorized\n                            \n                        \n                        \n                            \n                                 alreadyExist\n                            \n                        \n                        \n                            \n                                Value : Conflict\n                            \n                        \n            \n        \n\n    src/registryAPI/app/auth/tokenTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 accessToken\n                            \n                        \n                        \n                            \n                                Value : Access Token\n                            \n                        \n                        \n                            \n                                 refreshToken\n                            \n                        \n                        \n                            \n                                Value : Refresh Token\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/find.html":{"url":"interfaces/find.html","title":"interface - find","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  find\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkClassValidatorErrors   (src/.../convertValidatorErr.ts)\n                        \n                        \n                            condominiumFactory   (src/.../condominium.ts)\n                        \n                        \n                            condominiumRelUserFactory   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            firestoreCondominiumFactory   (src/.../condominium.ts)\n                        \n                        \n                            firestoreCondominiumRelUserFactory   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            firestoreInviteFactory   (src/.../invite.ts)\n                        \n                        \n                            firestoreUserFactory   (src/.../user.ts)\n                        \n                        \n                            generateStringCodeContent   (src/.../generateStringCodeContent.ts)\n                        \n                        \n                            inviteFactory   (src/.../invite.ts)\n                        \n                        \n                            otpFactory   (src/.../otp.ts)\n                        \n                        \n                            userFactory   (src/.../user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/registryAPI/utils/convertValidatorErr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkClassValidatorErrors\n                        \n                    \n                \n            \n            \n                \ncheckClassValidatorErrors(data: IProps)\n                \n            \n\n\n\n\n            \n                \n                        Usado para aplicar o class validator fora dos controllers\nem forma de decorator, caso a validação não seja um sucesso, um erro do tipo BadRequestException será disparado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter o corpo da requisição a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/condominium.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        condominiumFactory\n                        \n                    \n                \n            \n            \n                \ncondominiumFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/condominiumRelUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        condominiumRelUserFactory\n                        \n                    \n                \n            \n            \n                \ncondominiumRelUserFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/condominium.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firestoreCondominiumFactory\n                        \n                    \n                \n            \n            \n                \nfirestoreCondominiumFactory(input: TOverride)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreCondominiumData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/condominiumRelUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firestoreCondominiumRelUserFactory\n                        \n                    \n                \n            \n            \n                \nfirestoreCondominiumRelUserFactory(input: TOverride)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreCondominiumRelUserData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/invite.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firestoreInviteFactory\n                        \n                    \n                \n            \n            \n                \nfirestoreInviteFactory(input: TOverride)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreInviteData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firestoreUserFactory\n                        \n                    \n                \n            \n            \n                \nfirestoreUserFactory(input: TOverride)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreUserData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/utils/generateStringCodeContent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateStringCodeContent\n                        \n                    \n                \n            \n            \n                \ngenerateStringCodeContent(input: IGenerateInviteKeyProps)\n                \n            \n\n\n\n\n            \n                \n                        Feito para gerar uma string com base nos dados do usuário e sua relação com o condomínio\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IGenerateInviteKeyProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/invite.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inviteFactory\n                        \n                    \n                \n            \n            \n                \ninviteFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/otp.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        otpFactory\n                        \n                    \n                \n            \n            \n                \notpFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n            \n                \nuserFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/getAllCondominiumRelation.html":{"url":"interfaces/getAllCondominiumRelation.html","title":"interface - getAllCondominiumRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  getAllCondominiumRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/getCondominiumRelation.html":{"url":"interfaces/getCondominiumRelation.html","title":"interface - getCondominiumRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  getCondominiumRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMorada App - API\nSobre\nEsta é uma API feita em NestJS e projetada para atender os serviços do projeto Morada APP. Sendo assim, buscamos facilitar a vida dos moradores de condomínio e dos desenvolvedores responsáveis por integrar nosso código em seus sistemas.\nAdiante, nossos servidores back-end devem contar com as seguintes dependências e ferramentas para que esteja em perfeito funcionamento:\n\nMailtrap: em ambiente de desenvolvimento, usamos o Mailtrap para realizar o envio de emails dentro da plataforma;\nPostgres: por hora, em ambiente de desenvolvimento, estamos armazenando nossos dados no Postgres pela provedora Clever Cloud. Caso você faça parte da equipe de desenvolvimento, entre em contato com o time de back-end para a obtenção das credenciais de acesso ao banco de dados focado em desenvolvimento;\nPNPM: para gerenciar nossas dependências estamos usando o Performant Node Package Manager (PNPM). Por quê? A resposta é simples, o pnpm é capaz de gerar links simbólicos de cada dependência utilizada no projeto, como consequência, o mesmo é capaz de reutilizar as bibliotecas que já existem em uma máquina, reduzindo de maneira significativa o espaço consumido pelo nosso sistema;\nDocker: o Docker é uma plataforma de virtualização de contêineres que permite isolar e empacotar aplicativos e seus ambientes de execução em contêineres, facilitando a preparação do ambiente do sistema e viabilizando o deploy da aplicação em inúmeras provedoras de nuvem. Sendo assim, basta executar os comandos que serão passados logo mais, e você já será capaz de possuir todos os servidores prontos para execução rapidamente. Matando assim, a necessidade de se passar horas na frente do computador configurando serviço a serviço para rodar na sua máquina;\nDocker Compose: é um orquestrador de contêineres do Docker, responsável por manter o sistema funcionando em conjunto, podendo configurar redes internas, mapear as portas de cada serviço e entre outras inúmeras funcionalidades essenciais;\nFirebase (em análise): é um provedor de Saas utilizado para conseguirmos acesso serviços previamente prontos e com suas infraestruturas provisionadas.\n\nAVISO: lembre-se de que se você esta no time de back-end, você já possui muitas credenciais relacionadas a estes serviços predefinidas dentro do .env.example, juntamente com as explicações de cada variável usada!\nPreparação\nPrimeiramente, antes de começar a \"levantar\" o sistema, você deve ter instalado em sua máquina todas as dependências citadas acima - sim, você deve ter o Postgres e Redis minimamente configurado em sua máquina, pois você será capaz de se conectar manualmente nestas instâncias em produção, apesar de já não ser uma questão extremamente prioritária - segue abaixo as instruções de instalação para cada sistema operacional:\n\nDocker\n\nLinux\nWindows\n\n\nDocker Compose\n\nLinux\nWindows\n\n\nRedis\n\nLinux && Windows\n\n\nPostgres\n\nLinux\nWindows\n\n\nPNPM: execute npm i pnpm -g\n\nMailtrap [back-end apenas]:\n\nCrie uma conta na plataforma por aqui.\nAcesse o menu da lateral a esquerda\nEntre em Email Testing > Inboxes > [Seu usuário]\nCopie e cole o arquivo .env.example em .env\nAo lado direito, na opção 'Integrations', troque para o nodemailer\nCopie e cole as credenciais no .env para visualizar os dados\nInsira em HOST_SENDER o valor 'sandbox.smtp.mailtrap.io'\nInsira em HOST_PORT_SENDER o valor 2525\nColoque qualquer nome em NAME_SENDER\nInsira auth.user em EMAIL_SENDER\nInsira auth.pass em PASS_SENDER\n\n\n\nComo usar\nDepois de muita configuração, vamos colocar tudo em funcionamento. Primeiramente, execute o docker compose up para levantar o sistema com base no docker-compose.yml definido na pasta root:\nExample :docker compose upCom o sistema ativo, adentre no mesmo usando o bash para entrar na instância app (o contêiner em NodeJS + NestJS):\nExample :docker compose exec app bashDentro do contêiner, execute as migrations do prisma:\nExample :pnpm prisma migrate devPor padrão, o nosso contêiner já tem o pnpm instalado, então você não precisa instalá-lo no contexto do mesmo, sendo assim, basta você realizar o login na sua conta do firebase DENTRO DO CONTÊINER:\nExample :firebase login --no-localhostLogo em seguida, instale os emuladores requisitados para um bom funcionamento da aplicação:\nExample :firebase init emulatorsSe a instalação ocorreu com êxito, abra outro terminal e FORA DO CONTÊINER execute o comando abaixo. Por quê? Ele vai definir os hooks do git necessários para que você consiga automatizar processos de lint, formatação e testes locais toda vez que fazer commit:\nExample :pnpm set-hooksPronto, agora execute somente git commit sempre que quiser salvar suas alterações inseridas pelo git add.\nComandos\nAgora você esta apto a executar a aplicação dentro do contêiner.\n\nPara executar a aplicação em ambiente de desenvolvimento:\nExample :pnpm dev Para escutar as modificações que você fez dentro das functions:\nExample :pnpm build:watch:customPara executar testes unitários na aplicação:\nExample :pnpm testPara fazer o build da aplicação:\nExample :pnpm buildBônus\nJá temos as instâncias ativas, para você consultar os serviços de armazenamento basta executar os seguintes comandos:\nPostgres\nExample :docker compose exec db psql -U default -d mydbDocumentação do Postgres aqui.\nColeções de requisições\nSinta-se a vontade consultando a nossa api tanto pelo Swagger quanto pelo Postman.\n\n\n\nDocumentos extras\n\n\n\n\nPlanos para a sprint 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdaptersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FirestoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdaptersModule\n\n\n\ncluster_AdaptersModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_FirestoreModule\n\n\n\ncluster_FirestoreModule_exports\n\n\n\ncluster_FirestoreModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\ncluster_HttpModule\n\n\n\ncluster_HttpModule_imports\n\n\n\ncluster_HttpModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_RedisModule\n\n\n\ncluster_RedisModule_exports\n\n\n\ncluster_RedisModule_providers\n\n\n\n\nCookieAdapter \n\nCookieAdapter \n\n\n\nCryptAdapter \n\nCryptAdapter \n\n\n\nEmailAdapter \n\nEmailAdapter \n\n\n\nHttpAdapter \n\nHttpAdapter \n\n\n\nLoggerAdapter \n\nLoggerAdapter \n\n\n\nAdaptersModule\n\nAdaptersModule\n\nCookieAdapter  -->\n\nAdaptersModule->CookieAdapter \n\n\n\nCryptAdapter  -->\n\nAdaptersModule->CryptAdapter \n\n\n\nEmailAdapter  -->\n\nAdaptersModule->EmailAdapter \n\n\n\nHttpAdapter  -->\n\nAdaptersModule->HttpAdapter \n\n\n\nLoggerAdapter  -->\n\nAdaptersModule->LoggerAdapter \n\n\n\n\n\nHttpModule\n\nHttpModule\n\nHttpModule -->\n\nAdaptersModule->HttpModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHttpModule->AppModule\n\n\n\n\n\nCondominiumRepo \n\nCondominiumRepo \n\n\n\nInviteRepo \n\nInviteRepo \n\n\n\nUserRepo \n\nUserRepo \n\n\n\nFirestoreModule\n\nFirestoreModule\n\nCondominiumRepo  -->\n\nFirestoreModule->CondominiumRepo \n\n\n\nInviteRepo  -->\n\nFirestoreModule->InviteRepo \n\n\n\nUserRepo  -->\n\nFirestoreModule->UserRepo \n\n\n\n\n\nCollectionsRefService\n\nCollectionsRefService\n\nFirestoreModule -->\n\nCollectionsRefService->FirestoreModule\n\n\n\n\n\nFirestoreService\n\nFirestoreService\n\nFirestoreModule -->\n\nFirestoreService->FirestoreModule\n\n\n\n\n\nCepGateway \n\nCepGateway \n\n\n\nGatewayModule\n\nGatewayModule\n\nHttpModule -->\n\nGatewayModule->HttpModule\n\n\n\nCepGateway  -->\n\nGatewayModule->CepGateway \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nHttpModule -->\n\nPrismaModule->HttpModule\n\n\n\nCondominiumRepo  -->\n\nPrismaModule->CondominiumRepo \n\n\n\nInviteRepo  -->\n\nPrismaModule->InviteRepo \n\n\n\nUserRepo  -->\n\nPrismaModule->UserRepo \n\n\n\n\n\nRedisModule\n\nRedisModule\n\nHttpModule -->\n\nRedisModule->HttpModule\n\n\n\n\n\nOTPRepo \n\nOTPRepo \n\nOTPRepo  -->\n\nRedisModule->OTPRepo \n\n\n\n\n\nCreateCondominiumService\n\nCreateCondominiumService\n\nHttpModule -->\n\nCreateCondominiumService->HttpModule\n\n\n\n\n\nCreateTokenService\n\nCreateTokenService\n\nHttpModule -->\n\nCreateTokenService->HttpModule\n\n\n\n\n\nCreateUserService\n\nCreateUserService\n\nHttpModule -->\n\nCreateUserService->HttpModule\n\n\n\n\n\nDeleteUserService\n\nDeleteUserService\n\nHttpModule -->\n\nDeleteUserService->HttpModule\n\n\n\n\n\nGenInviteService\n\nGenInviteService\n\nHttpModule -->\n\nGenInviteService->HttpModule\n\n\n\n\n\nGenOldTFASevice\n\nGenOldTFASevice\n\nHttpModule -->\n\nGenOldTFASevice->HttpModule\n\n\n\n\n\nGenTFAService\n\nGenTFAService\n\nHttpModule -->\n\nGenTFAService->HttpModule\n\n\n\n\n\nGetCondominiumRelUserService\n\nGetCondominiumRelUserService\n\nHttpModule -->\n\nGetCondominiumRelUserService->HttpModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nRedisService\n\nRedisService\n\nRedisModule -->\n\nRedisService->RedisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    95 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    79 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            License : MIT\n        \n            Author : MoradaAPP\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/remove.html":{"url":"interfaces/remove.html","title":"interface - remove","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  remove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/remove-1.html":{"url":"interfaces/remove-1.html","title":"interface - remove-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  remove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     UUID | Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UUID | Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/safeSearch.html":{"url":"interfaces/safeSearch.html","title":"interface - safeSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  safeSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/condominium.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     UUID | CNPJ | CEP | Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UUID | CNPJ | CEP | Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\n\nexport namespace CondominiumInterfaces {\n\texport interface create {\n\t\tcondominium: Condominium;\n\t}\n\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n\texport interface search {\n\t\tsafeSearch: undefined;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n}\n\nexport abstract class CondominiumRepo {\n\t/** @virtual */\n\tabstract create: (input: CondominiumInterfaces.create) => Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.safeSearch,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/safeSearch-1.html":{"url":"interfaces/safeSearch-1.html","title":"interface - safeSearch-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  safeSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     Email | CPF | UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Email | CPF | UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/safelyFind.html":{"url":"interfaces/safelyFind.html","title":"interface - safelyFind","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  safelyFind\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/search.html":{"url":"interfaces/search.html","title":"interface - search","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  search\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/condominium.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     UUID | CNPJ | CEP | Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UUID | CNPJ | CEP | Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\n\nexport namespace CondominiumInterfaces {\n\texport interface create {\n\t\tcondominium: Condominium;\n\t}\n\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n\texport interface search {\n\t\tsafeSearch: undefined;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n}\n\nexport abstract class CondominiumRepo {\n\t/** @virtual */\n\tabstract create: (input: CondominiumInterfaces.create) => Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.safeSearch,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/search-1.html":{"url":"interfaces/search-1.html","title":"interface - search-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  search\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     Email | CPF | UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Email | CPF | UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/transferToUserResources.html":{"url":"interfaces/transferToUserResources.html","title":"interface - transferToUserResources","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  transferToUserResources\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumRelUser\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumRelUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumRelUser:         CondominiumRelUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CondominiumRelUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TCondominiumInObject   (src/.../condominium.ts)\n                        \n                        \n                            TCondominiumRelUserToObject   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            TECEProps   (src/.../logger.ts)\n                        \n                        \n                            TFirestoreCondominiumRelUserToObject   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            TInputOTPProps   (src/.../index.ts)\n                        \n                        \n                            TInputPropsCondominium   (src/.../index.ts)\n                        \n                        \n                            TInputPropsUser   (src/.../index.ts)\n                        \n                        \n                            TInviteInObject   (src/.../invite.ts)\n                        \n                        \n                            TOverride   (src/.../condominium.ts)\n                        \n                        \n                            TOverride   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            TOverride   (src/.../invite.ts)\n                        \n                        \n                            TOverride   (src/.../otp.ts)\n                        \n                        \n                            TOverride   (src/.../user.ts)\n                        \n                        \n                            TOverride   (src/.../condominium.ts)\n                        \n                        \n                            TOverride   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            TOverride   (src/.../invite.ts)\n                        \n                        \n                            TOverride   (src/.../user.ts)\n                        \n                        \n                            TReplace   (src/.../replace.ts)\n                        \n                        \n                            TServiceExecInput   (src/.../_IService.ts)\n                        \n                        \n                            TServiceExecReturn   (src/.../_IService.ts)\n                        \n                        \n                            TUserClassToObject   (src/.../user.ts)\n                        \n                        \n                            TValidateSignedCookieReturn   (src/.../cookie.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/registryAPI/app/mapper/condominium.ts\n    \n    \n        \n            \n                \n                    \n                    TCondominiumInObject\n                \n            \n            \n                \n                        Required\n\n                \n            \n        \n    \n    src/registryAPI/app/mapper/condominiumRelUser.ts\n    \n    \n        \n            \n                \n                    \n                    TCondominiumRelUserToObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/adapters/logger.ts\n    \n    \n        \n            \n                \n                    \n                    TECEProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts\n    \n    \n        \n            \n                \n                    \n                    TFirestoreCondominiumRelUserToObject\n                \n            \n            \n                \n                            TReplace\n\n                \n            \n        \n    \n    src/registryAPI/app/entities/OTP/index.ts\n    \n    \n        \n            \n                \n                    \n                    TInputOTPProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/entities/condominium/index.ts\n    \n    \n        \n            \n                \n                    \n                    TInputPropsCondominium\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/entities/user/index.ts\n    \n    \n        \n            \n                \n                    \n                    TInputPropsUser\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/mapper/invite.ts\n    \n    \n        \n            \n                \n                    \n                    TInviteInObject\n                \n            \n            \n                \n                        Required\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/condominium.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/condominiumRelUser.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/invite.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/otp.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/user.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/condominium.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/condominiumRelUser.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/invite.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/user.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/utils/replace.ts\n    \n    \n        \n            \n                \n                    \n                    TReplace\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/registryAPI/app/services/_IService.ts\n    \n    \n        \n            \n                \n                    \n                    TServiceExecInput\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TServiceExecReturn\n                \n            \n            \n                \n                        Promise> | Promise | void\n\n                \n            \n        \n    \n    src/registryAPI/app/mapper/user.ts\n    \n    \n        \n            \n                \n                    \n                    TUserClassToObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/adapters/cookie.ts\n    \n    \n        \n            \n                \n                    \n                    TValidateSignedCookieReturn\n                \n            \n            \n                \n                        Promise | string | \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../index.ts)\n                        \n                        \n                            condominiumDTORules   (src/.../index.ts)\n                        \n                        \n                            condominiumRelUserDTORules   (src/.../index.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (jest.e2e.config.ts)\n                        \n                        \n                            createMockExecutionContext   (src/.../executionContextSpy.ts)\n                        \n                        \n                            expressApp   (src/.../index.ts)\n                        \n                        \n                            RegistryAPI   (src/.../index.ts)\n                        \n                        \n                            userDTORules   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/registryAPI/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new RegistryAPIBootstrap()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expressApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RegistryAPI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (req: Request, res: Response) => {\n\tawait bootstrap.runStorageLayer()\n\texpressApp(req, res);\n}\n                    \n                \n\n\n        \n    \n\n    src/registryAPI/app/entities/condominium/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        condominiumDTORules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\tCEP: {\n\t\tminLength: 8,\n\t\tmaxLength: 9,\n\t\ttype: 'string',\n\t},\n\tnum: {\n\t\tminLength: 0,\n\t\tmaxLength: 2147483647,\n\t\ttype: 'number',\n\t},\n\tCNPJ: {\n\t\tminLength: 14,\n\t\tmaxLength: 18,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAy: {\n\t\ttype: Date,\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    src/registryAPI/app/entities/condominiumRelUser/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        condominiumRelUserDTORules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tuserId: {\n\t\ttype: 'string',\n\t},\n\tcondominiumId: {\n\t\ttype: 'string',\n\t},\n\tblock: {\n\t\tmaxLength: 6,\n\t\toption: true,\n\t\ttype: 'string',\n\t},\n\tapartmentNumber: {\n\t\tmaxLength: 2147483647,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tlevel: {\n\t\tmaxLength: 2,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config\n\n                    \n                \n                \n                    \n                        Default value : {\n  moduleFileExtensions: ['js', 'json', 'ts'],\n  testRegex: '.*\\\\.spec\\\\.ts$',\n  transform: {\n    '^.+\\\\.ts$': 'ts-jest',\n  },\n  clearMocks: true,\n  collectCoverageFrom: ['**/*.ts'],\n  coverageDirectory: 'coverage',\n  testEnvironment: 'node',\n\n  setupFilesAfterEnv: ['./.jest/env.ts'],\n  moduleNameMapper: pathsToModuleNameMapper(compilerOptions.paths, {\n    prefix: '/',\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    jest.e2e.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config\n\n                    \n                \n                \n                    \n                        Default value : {\n  moduleFileExtensions: ['js', 'json', 'ts'],\n  testRegex: '.*\\\\.e2e-spec\\\\.ts$',\n  transform: {\n    '^.+\\\\.(t|j)s$': 'ts-jest',\n  },\n  clearMocks: true,\n  collectCoverageFrom: ['**/*.(t|j)s'],\n  coverageDirectory: 'coverage',\n  testEnvironment: 'node',\n\n  setupFilesAfterEnv: ['./.jest/env.ts'],\n  moduleNameMapper: pathsToModuleNameMapper(compilerOptions.paths, {\n    prefix: '/',\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    src/registryAPI/tests/guards/executionContextSpy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMockExecutionContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (request: any): ExecutionContext => {\n\tconst httpArgumentHost = {\n\t\tgetRequest: () => request,\n\t} as HttpArgumentsHost;\n\n\treturn {\n\t\tswitchToHttp: () => httpArgumentHost,\n\t} as ExecutionContext;\n}\n                    \n                \n\n\n        \n    \n\n    src/registryAPI/app/entities/user/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userDTORules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\temail: {\n\t\tmaxLength: 320,\n\t\ttype: 'string',\n\t},\n\tpassword: {\n\t\tmaxLength: 64,\n\t\tminLength: 8,\n\t\ttype: 'string',\n\t},\n\tCPF: {\n\t\tmaxLength: 14,\n\t\tminLength: 11,\n\t\ttype: 'string',\n\t},\n\tphoneNumber: {\n\t\tmaxLength: 30,\n\t\tminLength: 10,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
