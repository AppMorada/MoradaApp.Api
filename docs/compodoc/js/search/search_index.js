var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdapterError.html",[0,0.249,1,3.745]],["body/classes/AdapterError.html",[0,0.289,1,5.631,2,0.977,3,0.055,4,0.055,5,0.055,6,5.28,7,3.933,8,2.742,9,0.079,10,0.924,11,1.407,12,4.733,13,1.235,14,3.088,15,2.483,16,0.885,17,7.64,18,2.758,19,4.362,20,1.561,21,4.243,22,4.029,23,1.666,24,6.85,25,4.029,26,1.755,27,2.838,28,2.623,29,4.362,30,4.362,31,4.362,32,4.362,33,4.362,34,4.362,35,0.798,36,0.005,37,0.558,38,0.127,39,0.576,40,0.872,41,2.223,42,2.434,43,0.073,44,1.284,45,0.642,46,0.055,47,1.37,48,1.407,49,1.388,50,3.362,51,1.904,52,3.971,53,4.58,54,3.031,55,3.185,56,4.341,57,5.28,58,5.28,59,3.185,60,3.185,61,0.004,62,0.004]],["title/classes/AdapterErrorFilter.html",[0,0.249,63,3.951]],["body/classes/AdapterErrorFilter.html",[0,0.284,1,6.573,2,0.961,3,0.054,4,0.054,5,0.054,9,0.078,11,0.961,13,1.215,16,0.875,18,1.718,20,1.545,35,1.024,36,0.005,37,0.797,38,0.125,39,0.739,44,1.263,46,0.054,61,0.004,62,0.004,63,5.878,64,5.793,65,1.411,66,1.339,67,3.801,68,3.486,69,3.35,70,7.559,71,1.305,72,4.231,73,1.068,74,3.658,75,3.308,76,3.604,77,5.793,78,3.286,79,3.986,80,4.136,81,4.484,82,5.793,83,3.405,84,0.818,85,0.365,86,2.618,87,2.672,88,5.194,89,1.331,90,3.559,91,2.187,92,5.793,93,1.846,94,1.505,95,2.519,96,2.913,97,2.913,98,2.848,99,3.217,100,2.618,101,5.793,102,3.405,103,2.728,104,2.982,105,0.796,106,3.134,107,2.618,108,3.134,109,2.982,110,3.134]],["title/modules/AdaptersModule.html",[111,2.822,112,3.745]],["body/modules/AdaptersModule.html",[0,0.262,3,0.05,4,0.05,5,0.05,36,0.005,46,0.05,53,4.148,61,0.003,62,0.003,76,3.889,78,3.111,85,0.407,89,1.225,111,4.485,112,7.184,113,3.341,114,3.341,115,3.597,116,3.597,117,3.462,118,4.826,119,5.446,120,4.782,121,4.782,122,6.489,123,4.731,124,5.656,125,6.028,126,4.826,127,3.597,128,3.597,129,5.334,130,5.929,131,1.178,132,5.929,133,5.334,134,3.233,135,5.929,136,5.334,137,5.929,138,5.334,139,4.644,140,5.929,141,5.334,142,5.929,143,2.511,144,6.635,145,6.635]],["title/controllers/AdminController.html",[146,2.987,147,4.21]],["body/controllers/AdminController.html",[0,0.38,3,0.072,4,0.072,5,0.072,36,0.005,46,0.072,61,0.004,62,0.004,85,0.317,89,1.777,146,4.549,147,7.491,148,5.022,149,7.739,150,5.704,151,5.442,152,7.739]],["title/guards/AdminJwt.html",[153,3.183,154,4.21]],["body/guards/AdminJwt.html",[0,0.219,3,0.042,4,0.042,5,0.042,8,1.443,9,0.06,11,1.05,13,1.327,16,0.851,20,1.293,23,1.38,35,0.996,36,0.005,37,0.696,38,0.122,39,0.719,44,1.603,45,0.802,46,0.042,61,0.003,62,0.003,65,0.833,66,1.121,71,0.77,73,0.894,74,1.94,84,0.894,85,0.37,89,1.025,91,1.685,94,1.835,95,1.94,105,0.613,107,2.017,154,5.243,155,2.624,156,8,157,4.002,158,2.86,159,2.651,160,2.015,161,2.351,162,4.665,163,5.674,164,5.674,165,2.495,166,5.192,167,2.274,168,4.922,169,3.471,170,5.693,171,3.779,172,4.002,173,4.107,174,4.85,175,4.002,176,1.435,177,4.922,178,4.002,179,4.443,180,2.354,181,4.267,182,3.698,183,1.751,184,2.796,185,3.965,186,3.471,187,2.244,188,4.198,189,2.796,190,3.338,191,1.343,192,1.235,193,6.092,194,2.625,195,3.471,196,3.471,197,3.01,198,3.139,199,2.645,200,1.618,201,3.471,202,3.01,203,2.548,204,2.897,205,3.698,206,3.698,207,2.309,208,4.002,209,3.698,210,3.471,211,1.836,212,1.751,213,4.002,214,3.698,215,2.147,216,1.87,217,3.698,218,1.269,219,2.897,220,1.362,221,3.698,222,1.743,223,1.443,224,2.14,225,4.002,226,1.556,227,2.796,228,4.002,229,4.002]],["title/classes/ApartmentNumber.html",[0,0.249,230,2.444]],["body/classes/ApartmentNumber.html",[0,0.301,2,1.016,3,0.057,4,0.057,5,0.057,9,0.082,11,1.016,13,1.284,16,1,35,1.061,36,0.005,37,0.742,38,0.13,39,0.766,40,0.698,41,2.264,46,0.057,47,1.424,51,2.532,61,0.004,62,0.004,65,1.142,71,1.352,73,1.106,84,0.864,85,0.354,93,1.95,230,4.379,231,6.121,232,3.828,233,3.471,234,3.612,235,3.54,236,2.689,237,3.495,238,6.121,239,5.09,240,5.773,241,7.832,242,3.007,243,5.083,244,5.773,245,5.281,246,3.471,247,2.474,248,6.121,249,2.518,250,3.228,251,6.121,252,2.882,253,3.078,254,2.564,255,2.661,256,3.711,257,2.274,258,5.488]],["title/modules/AppModule.html",[111,2.822,259,3.573]],["body/modules/AppModule.html",[0,0.326,3,0.062,4,0.062,5,0.062,36,0.005,46,0.062,61,0.004,62,0.004,85,0.368,89,1.526,111,4.981,113,4.162,114,4.162,115,4.48,116,4.48,117,4.312,118,4.48,119,4.48,126,5.561,127,4.48,128,4.48,223,2.148,259,6.913,260,5.957,261,5.957,262,7.245,263,6.644,264,7.395,265,6.644,266,6.644,267,5.957,268,5.957,269,6.644,270,6.644,271,6.596,272,6.644,273,6.644,274,6.644,275,6.644,276,4.312,277,6.644,278,6.644]],["title/classes/Auth.html",[0,0.249,279,3.573]],["body/classes/Auth.html",[0,0.314,2,1.06,3,0.06,4,0.06,5,0.06,9,0.086,16,1.02,35,1.194,36,0.005,37,0.835,38,0.146,39,0.862,45,0.961,46,0.06,61,0.004,62,0.004,73,1.137,84,1.244,85,0.262,176,2.206,179,3.548,218,2.868,279,5.66,280,6.388,281,3.435,282,8.047,283,8.047,284,5.932,285,8.047,286,6.388,287,8.047,288,6.388,289,8.047,290,6.388,291,2.035]],["title/classes/BcryptAdapter.html",[0,0.249,135,4.21]],["body/classes/BcryptAdapter.html",[0,0.256,2,0.866,3,0.049,4,0.049,5,0.049,7,3.632,9,0.07,10,0.854,16,0.991,35,1.083,36,0.005,37,0.757,38,0.132,39,0.782,40,0.912,45,0.871,46,0.049,61,0.003,62,0.003,73,0.996,74,2.27,84,1.128,85,0.327,94,1.591,105,1.098,123,4.528,134,3.166,135,5.845,165,2.76,167,2.152,176,2.135,194,2.622,200,1,236,1.793,276,3.389,292,5.222,293,7.99,294,5.2,295,6.951,296,5.2,297,2.36,298,5.222,299,5.2,300,6.018,301,7.99,302,5.222,303,5.2,304,5.222,305,2.11,306,5.487,307,6.588,308,5.222,309,5.222,310,4.682,311,6.326,312,5.222,313,5.222,314,4.327,315,5.222,316,2.688,317,5.222,318,5.222,319,5.222,320,5.222,321,4.682,322,5.222,323,5.222,324,5.222,325,5.222,326,4.682]],["title/classes/Block.html",[0,0.249,327,2.444]],["body/classes/Block.html",[0,0.281,2,0.948,3,0.054,4,0.054,5,0.054,9,0.077,11,0.948,13,1.198,16,0.968,23,1.246,35,1.015,36,0.005,37,0.71,38,0.124,39,0.733,40,0.652,44,1.246,45,0.967,46,0.054,47,1.329,48,1.789,51,2.422,61,0.004,62,0.004,65,1.066,71,1.293,73,1.058,84,0.807,85,0.342,93,1.82,105,1.029,199,2.055,200,1.094,232,3.704,233,3.704,234,3.455,235,3.386,236,2.869,237,3.262,239,4.52,242,2.876,244,5.521,246,3.32,247,3.027,249,2.35,250,3.013,252,3.527,253,2.873,254,2.393,255,2.484,256,3.464,257,2.122,327,4.698,328,5.713,329,5.713,330,4.16,331,6.206,332,5.051,333,4.541,334,5.713,335,5.713,336,4.018,337,5.123,338,2.193,339,3.358,340,2.438,341,4.018,342,4.018,343,5.051]],["title/classes/CEP.html",[0,0.249,344,1.984]],["body/classes/CEP.html",[0,0.273,2,0.923,3,0.052,4,0.052,5,0.052,9,0.075,11,0.923,13,1.166,16,0.955,23,1.798,35,0.997,36,0.005,37,0.697,38,0.122,39,0.72,40,0.634,44,1.212,45,0.957,46,0.052,47,1.294,48,1.758,49,1.735,61,0.004,62,0.004,65,1.038,71,1.27,73,1.039,84,0.785,85,0.338,93,1.771,105,1.011,160,1.853,199,2,200,1.065,212,2.036,232,3.655,233,3.655,234,3.393,235,3.326,236,2.831,237,3.175,239,4.46,247,2.974,249,2.287,250,2.933,252,3.464,253,2.796,254,2.329,255,2.417,338,2.135,339,3.268,340,2.372,341,3.91,342,3.91,343,5.56,344,3.875,345,5.56,346,5.56,347,4.961,348,6.096,349,6.096,350,3.027,351,2.647,352,5.423,353,5.56,354,5.56,355,3.608,356,2.513,357,4.985,358,4.324,359,4.607,360,4.985]],["title/classes/CNPJ.html",[0,0.249,361,2.168]],["body/classes/CNPJ.html",[0,0.273,2,0.923,3,0.052,4,0.052,5,0.052,9,0.075,11,0.923,13,1.166,16,0.955,23,1.798,35,0.997,36,0.005,37,0.697,38,0.122,39,0.72,40,0.634,44,1.212,45,0.957,46,0.052,47,1.294,48,1.758,49,1.735,61,0.004,62,0.004,65,1.038,71,1.27,73,1.039,84,0.785,85,0.338,93,1.771,105,1.011,160,1.853,199,2,200,1.065,212,2.036,232,3.655,233,3.655,234,3.393,235,3.326,236,2.831,237,3.175,239,4.46,247,2.974,249,2.287,250,2.933,252,3.464,253,2.796,254,2.329,255,2.417,338,2.135,339,3.268,340,2.372,341,3.91,342,3.91,343,5.56,347,4.961,348,6.096,349,6.096,350,3.027,351,2.647,352,5.423,355,3.608,356,2.513,358,4.324,359,4.607,361,4.234,362,5.56,363,5.56,364,5.56,365,5.56,366,5.56,367,4.985]],["title/classes/CPF.html",[0,0.249,368,2.252]],["body/classes/CPF.html",[0,0.254,2,0.859,3,0.049,4,0.049,5,0.049,9,0.07,11,0.859,13,1.086,16,0.921,23,1.735,26,1.072,27,1.924,35,0.951,36,0.005,37,0.665,38,0.116,39,0.686,40,0.591,45,0.93,46,0.049,47,1.205,48,1.676,49,1.654,61,0.003,62,0.003,65,0.966,66,0.917,71,1.211,73,0.991,84,0.731,85,0.326,93,1.65,94,1.031,158,2.341,212,1.941,232,3.526,233,3.109,234,3.235,235,3.171,236,2.408,237,2.957,239,4.303,246,2.295,247,2.093,249,2.13,250,2.731,252,2.438,253,2.604,254,2.169,255,2.251,291,1.65,343,3.492,347,4.73,348,5.812,349,5.812,350,2.886,351,2.523,352,5.171,357,4.643,358,4.027,359,5.812,368,4.294,369,5.178,370,5.178,371,5.178,372,5.178,373,2.731,374,5.178,375,5.178,376,5.178,377,4.291,378,5.178,379,5.178,380,5.171,381,5.178,382,4.643,383,5.178,384,5.178,385,5.178,386,7.015,387,2.302,388,5.178,389,3.817,390,7.015,391,5.178,392,2.957,393,5.178,394,3.449,395,5.178,396,3.244,397,2.341,398,5.178,399,5.178,400,7.015,401,5.178,402,5.178,403,5.171,404,5.178]],["title/classes/CepGateway.html",[0,0.249,405,3.08]],["body/classes/CepGateway.html",[0,0.342,2,1.155,3,0.065,4,0.065,5,0.065,9,0.094,16,0.806,35,0.943,36,0.005,37,0.659,38,0.115,39,0.681,40,0.794,43,0.086,45,1.116,46,0.08,61,0.004,62,0.004,73,1.199,84,0.983,176,1.924,281,3.223,344,2.717,405,5.145,406,6.24,407,6.6,408,6.255,409,6.96,410,4.894,411,5.13,412,5.13,413,5.13,414,5.13,415,5.13]],["title/classes/CepGatewaySpy.html",[0,0.249,416,4.556]],["body/classes/CepGatewaySpy.html",[0,0.323,2,1.091,3,0.062,4,0.062,5,0.062,9,0.088,10,0.991,16,0.949,36,0.005,38,0.109,46,0.062,61,0.004,62,0.004,71,1.414,73,1.157,84,0.928,85,0.269,105,0.903,165,2.539,176,1.857,215,3.162,236,2.257,246,3.631,297,2.971,344,2.567,405,5.411,407,7.624,410,4.623,411,4.845,412,4.845,413,4.845,414,4.845,415,4.845,416,7.346,417,6.574,418,6.019,419,3.556,420,6.574,421,6.574,422,4.623,423,8.193]],["title/guards/CheckPasswordGuard.html",[153,3.183,424,4.21]],["body/guards/CheckPasswordGuard.html",[0,0.323,3,0.044,4,0.044,5,0.044,9,0.064,11,1.093,13,1.382,16,0.878,20,1.346,35,1.028,36,0.005,37,0.718,38,0.126,39,0.742,44,1.03,45,0.827,46,0.044,61,0.003,62,0.003,65,0.882,66,1.167,71,0.816,73,0.93,84,0.93,85,0.389,89,1.085,90,3.102,91,1.784,94,1.779,95,2.055,105,0.649,123,4.033,131,1.812,134,3.994,155,2.778,158,2.978,165,2.541,166,5.325,167,2.323,171,3.84,173,4.276,174,4.974,176,1.494,183,1.823,187,2.377,188,3.761,189,2.961,190,2.493,192,1.308,194,2.692,199,1.7,200,1.453,203,2.698,204,3.067,218,1.874,219,3.067,220,1.442,222,1.845,223,2.13,284,4.856,295,6.38,305,1.91,350,1.944,397,2.978,424,5.459,425,4.726,426,6.588,427,4.238,428,4.726,429,4.726,430,6.588,431,4.493,432,4.726,433,2.778,434,3.916,435,4.726,436,4.856,437,3.675,438,3.675,439,3.483,440,4.726,441,4.726,442,3.675,443,4.238,444,4.238,445,4.726,446,3.675,447,3.483,448,4.726,449,4.726,450,4.726,451,4.856]],["title/guards/CheckTFACodeGuard.html",[153,3.183,452,4.21]],["body/guards/CheckTFACodeGuard.html",[0,0.295,3,0.039,4,0.039,5,0.039,9,0.056,11,0.996,13,1.258,16,0.817,20,1.226,23,1.686,26,1.601,35,0.956,36,0.005,37,0.668,38,0.117,39,0.69,44,1.308,45,0.843,46,0.039,52,4.046,61,0.003,62,0.003,65,0.773,66,1.063,71,0.715,73,0.847,84,0.847,85,0.388,89,0.952,91,1.565,94,1.862,95,1.802,105,0.824,123,3.802,131,1.325,134,4.276,155,2.436,158,2.712,165,2.434,166,5.018,167,2.21,171,3.584,173,3.894,174,4.688,176,1.36,179,3.332,180,2.185,183,1.66,187,2.084,188,4.027,189,2.596,190,2.185,192,1.147,194,2.537,199,2.158,200,1.351,202,4.046,203,2.366,204,2.689,215,1.993,218,2.51,219,2.689,220,1.831,222,1.618,223,1.94,227,2.596,284,4.423,291,1.32,305,1.675,389,4.423,397,2.712,433,2.436,436,4.423,437,3.223,438,3.223,439,3.054,446,3.223,447,3.054,451,4.423,452,4.972,453,4.144,454,6,455,6,456,4.22,457,6,458,4.423,459,4.666,460,3.433,461,4.144,462,4.144,463,6,464,7.733,465,4.144,466,3.433,467,4.144,468,4.144,469,3.894,470,2.794,471,3.223,472,4.144,473,2.366,474,2.794,475,0.836,476,4.144,477,3.433,478,4.144,479,3.433,480,6,481,4.144,482,4.144,483,4.144,484,4.144,485,3.223,486,4.144,487,3.054,488,4.144,489,4.972,490,4.144]],["title/classes/ClassValidatorErrorFilter.html",[0,0.249,491,3.745]],["body/classes/ClassValidatorErrorFilter.html",[0,0.413,2,0.832,3,0.047,4,0.047,5,0.047,8,2.218,9,0.067,11,0.832,13,1.051,16,0.906,18,1.486,20,1.402,35,1.06,36,0.005,37,0.835,38,0.13,39,0.765,40,1.005,41,1.314,43,0.062,44,1.834,45,0.547,46,0.047,61,0.003,62,0.003,65,1.28,66,1.215,67,3.45,68,3.164,71,1.184,72,3.934,73,0.969,74,3.401,75,2.861,76,3.4,78,2.983,79,3.618,80,3.846,81,4.23,83,2.946,84,0.969,85,0.345,86,2.265,87,2.311,89,1.151,90,3.23,91,1.892,93,1.597,94,1.558,95,2.179,96,2.52,97,2.52,98,2.464,100,2.265,103,2.36,104,2.58,105,1.075,106,2.711,107,3.802,108,2.711,109,2.58,110,2.711,181,5.673,392,4.466,397,2.265,491,5.057,492,4.494,493,6.861,494,5.012,495,5.012,496,6.151,497,5.012,498,6.97,499,4.494,500,3.897,501,3.252,502,4.152,503,4.494,504,4.494,505,4.494,506,4.494,507,4.494,508,4.494,509,5.057,510,6.151,511,4.152,512,4.494,513,3.897,514,3.038,515,4.494]],["title/classes/Code.html",[0,0.249,473,2.901]],["body/classes/Code.html",[0,0.317,2,1.071,3,0.06,4,0.06,5,0.06,9,0.087,11,1.071,13,1.354,16,1.025,35,1.098,36,0.005,37,0.767,38,0.134,39,0.792,40,0.736,45,0.966,46,0.06,61,0.004,62,0.004,71,1.398,73,1.144,84,0.912,85,0.363,93,2.056,232,3.923,233,3.59,234,3.736,235,3.661,236,2.781,237,3.685,239,4.381,247,2.609,249,2.655,250,3.404,252,3.039,253,3.246,254,2.704,255,3.521,336,5.696,473,5.3,516,6.454,517,6.454,518,6.454,519,6.454,520,3.913,521,6.454]],["title/injectables/CollectionsRefService.html",[183,1.406,522,3.426]],["body/injectables/CollectionsRefService.html",[0,0.253,3,0.048,4,0.048,5,0.048,9,0.069,10,0.845,11,0.854,13,1.079,16,0.985,35,0.697,36,0.005,37,0.487,38,0.141,39,0.503,45,0.928,46,0.048,51,2.258,61,0.003,62,0.003,85,0.286,89,1.182,93,1.64,183,1.933,218,2.256,224,2.362,233,4.288,236,2.723,297,3.585,344,2.727,361,2.981,419,4.29,475,1.716,522,4.711,523,2.475,524,5.146,525,3.322,526,2.946,527,5.146,528,5.52,529,5.146,530,6.986,531,6.986,532,4.534,533,6.264,534,6.264,535,4.091,536,8.506,537,9.544,538,6.986,539,6.986,540,6.986,541,5.146,542,6.986,543,6.986,544,6.986,545,5.146,546,5.788,547,6.986,548,6.986,549,6.264,550,6.986,551,6.264,552,6.986,553,5.146,554,3.793]],["title/classes/Condominium.html",[0,0.249,525,2.128]],["body/classes/Condominium.html",[0,0.159,2,0.536,3,0.03,4,0.03,5,0.03,9,0.043,10,0.602,11,1.008,13,0.677,16,1.097,35,1.057,36,0.005,37,0.926,38,0.155,39,0.763,40,1.003,41,1.305,43,0.04,45,0.939,46,0.057,61,0.002,62,0.002,71,0.859,73,0.703,84,1.101,85,0.204,94,0.643,105,1.183,167,2.1,191,2.055,200,1.607,233,3.455,234,2.297,235,2.251,245,2.178,246,1.431,247,2.013,249,2.049,338,2.333,344,3.666,355,2.096,361,4.007,394,1.588,475,1.692,525,3.606,555,2.512,556,3.47,557,3.056,558,3.695,559,5.361,560,3.541,561,3.221,562,4.465,563,5.66,564,4.98,565,1.662,566,2.096,567,3.23,568,5.036,569,3.23,570,3.23,571,2.38,572,3.23,573,2.896,574,3.23,575,2.896,576,3.23,577,4.606,578,3.23,579,3.23,580,3.23,581,3.23,582,3.23,583,3.23,584,3.23,585,3.23,586,3.23,587,3.23,588,3.23,589,3.23,590,2.676,591,3.23,592,2.676,593,3.23,594,1.703,595,1.703,596,3.319,597,4.015,598,3.695,599,2.38,600,2.178,601,2.38,602,2.271,603,2.512,604,2.676,605,1.624,606,2.896,607,2.896,608,2.896,609,2.896,610,2.896,611,2.896,612,2.843,613,2.178,614,2.178,615,2.512,616,2.896,617,2.896,618,2.896,619,2.271,620,2.512,621,2.178,622,1.703,623,2.896,624,2.896,625,2.896,626,2.896,627,2.896,628,3.502,629,1.703,630,3.358,631,1.662,632,3.873,633,4.279,634,2.512,635,2.896,636,2.896,637,2.896,638,4.465,639,2.896,640,4.465,641,2.896]],["title/controllers/CondominiumController.html",[146,2.987,642,4.21]],["body/controllers/CondominiumController.html",[0,0.185,3,0.035,4,0.035,5,0.035,9,0.051,11,1.225,12,1.984,13,0.789,16,0.855,35,1,36,0.005,37,0.699,38,0.122,39,0.722,46,0.035,54,1.936,61,0.003,62,0.003,66,0.666,73,0.789,84,1.043,85,0.393,89,0.864,91,1.42,94,1.751,131,1.985,146,2.211,148,2.441,150,2.773,151,4.691,154,3.117,165,2.671,167,1.988,190,4.822,192,1.041,194,2.589,200,1.583,203,4.887,207,2.094,218,2.244,220,1.705,224,2.894,257,1.397,291,1.198,397,4.395,447,4.916,451,4.12,474,2.537,525,2.794,526,2.076,642,4.631,643,3.762,644,2.11,645,5.589,646,5.589,647,3.762,648,6.117,649,4.791,650,4.497,651,3.762,652,3.762,653,6.31,654,7.383,655,3.762,656,3.762,657,3.762,658,6.117,659,5.589,660,3.762,661,3.762,662,3.762,663,3.762,664,3.762,665,1.892,666,3.373,667,3.931,668,3.373,669,3.762,670,2.773,671,2.925,672,1.375,673,5.192,674,3.373,675,3.117,676,3.762,677,5.589,678,3.762,679,3.762,680,4.497,681,3.117,682,3.762,683,3.762,684,3.117,685,2.773,686,3.373,687,3.373,688,3.373,689,3.762,690,3.762,691,3.762,692,3.762,693,5.589,694,3.762,695,3.762,696,3.762,697,5.589,698,3.286,699,3.762,700,3.373,701,3.373,702,3.373,703,3.117,704,3.762,705,5.589,706,5.98,707,3.762,708,3.762,709,5.589,710,3.117,711,3.762,712,3.373,713,3.373,714,2.925,715,3.117,716,3.762,717,3.762,718,3.762]],["title/classes/CondominiumFirestoreMapper.html",[0,0.249,719,4.21]],["body/classes/CondominiumFirestoreMapper.html",[0,0.24,2,0.81,3,0.046,4,0.046,5,0.046,9,0.066,16,0.78,35,0.913,36,0.005,37,0.788,38,0.112,39,0.659,40,1.055,41,1.28,43,0.061,45,0.908,46,0.063,47,1.568,48,1.988,49,1.962,51,2.69,61,0.003,62,0.003,65,1.258,73,0.952,84,0.952,85,0.316,105,0.926,143,2.299,200,0.935,344,2.631,351,2.993,356,2.207,361,2.876,387,3.236,475,0.985,525,3.486,535,4.534,559,3.848,560,3.175,561,2.963,671,3.798,719,5.584,720,4.379,721,3.465,722,5.688,723,5.427,724,4.046,725,6.819,726,4.884,727,4.751,728,3.502,729,4.438,730,5.4,731,2.987,732,4.046,733,4.884,734,3.313,735,5.688,736,4.406,737,2.514,738,3.6,739,3.6,740,3.6,741,3.06,742,5.241,743,4.74,744,2.252]],["title/classes/CondominiumMapper.html",[0,0.249,670,3.745]],["body/classes/CondominiumMapper.html",[0,0.234,2,0.792,3,0.045,4,0.045,5,0.045,9,0.064,16,0.768,20,1.684,23,2.044,35,0.899,36,0.005,37,0.82,38,0.126,39,0.649,40,0.94,41,1.251,43,0.059,45,0.899,46,0.062,47,1.543,48,1.968,49,1.942,61,0.003,62,0.003,65,1.238,66,1.46,73,0.937,84,0.937,85,0.196,105,0.911,160,2.075,200,0.914,211,3.856,344,2.976,351,3.372,356,2.157,361,3.252,387,2.703,475,1.338,525,3.851,559,4.352,560,3.136,561,2.926,596,2.504,629,3.498,631,3.414,670,4.888,721,3.441,728,3.06,731,3.972,734,4.406,735,5.619,738,3.517,739,3.517,740,3.517,741,2.989,744,2.201,745,3.953,746,4.02,747,4.888,748,3.683,749,4.994,750,4.771,751,3.451,752,5.347,753,4.575,754,3.898,755,4.771,756,2.728,757,3.517,758,2.724,759,3.953,760,3.953,761,3.356,762,3.953]],["title/classes/CondominiumPrismaMapper.html",[0,0.249,763,4.21]],["body/classes/CondominiumPrismaMapper.html",[0,0.251,2,1.312,3,0.048,4,0.048,5,0.048,9,0.069,16,0.805,23,1.517,35,0.943,36,0.005,37,0.804,38,0.115,39,0.681,40,0.968,46,0.048,47,1.619,48,2.027,49,2,51,2.249,61,0.003,62,0.003,65,1.298,66,1.232,73,0.982,84,0.982,85,0.285,105,0.956,200,0.98,211,2.862,344,2.716,351,2.502,356,2.312,361,2.968,387,3.206,475,1.032,525,3.992,559,3.972,560,2.862,561,2.671,629,3.669,631,3.581,721,3.514,727,4.844,728,3.54,729,3.995,738,3.77,739,3.77,740,3.77,741,3.204,744,2.359,746,4.217,748,3.863,758,2.92,759,4.238,760,4.238,761,3.597,762,4.238,763,5.764,764,5.115,765,5.41,766,9.154,767,5.115,768,5.381,769,5.41,770,5.115,771,5.41,772,5.41,773,5.41,774,4.892,775,3.319]],["title/injectables/CondominiumPrismaRepo.html",[183,1.406,776,4.21]],["body/injectables/CondominiumPrismaRepo.html",[0,0.22,3,0.042,4,0.042,5,0.042,8,1.448,9,0.06,11,0.743,13,0.939,16,0.979,35,1.146,36,0.005,37,0.874,38,0.14,39,0.827,40,1.002,42,1.427,44,0.977,46,0.042,61,0.003,62,0.003,71,0.773,73,0.896,84,1.132,85,0.37,89,1.029,93,1.427,94,1.596,105,0.872,161,1.664,165,2.764,176,2.092,183,1.756,192,1.24,194,2.082,199,1.611,200,0.858,212,1.24,305,1.81,316,3.792,344,2.876,356,2.025,361,3.143,475,0.904,523,2.154,525,3.086,622,3.886,644,2.396,763,3.711,768,3.729,776,5.257,777,4.479,778,4.011,779,3.711,780,5.403,781,4.479,782,2.707,783,4.968,784,4.479,785,3.183,786,5.922,787,4.479,788,5.922,789,4.479,790,4.479,791,3.524,792,3.021,793,3.021,794,3.484,795,4.479,796,3.622,797,2.557,798,6.345,799,4.479,800,3.484,801,4.479,802,4.934,803,5.906,804,7.367,805,4.479,806,3.302,807,2.488,808,2.423,809,1.985,810,3.021,811,4.479]],["title/classes/CondominiumRelUser.html",[0,0.249,224,1.718]],["body/classes/CondominiumRelUser.html",[0,0.144,2,0.487,3,0.028,4,0.028,5,0.028,9,0.039,10,0.559,11,0.949,13,0.616,14,1.869,16,1.094,35,1.101,36,0.005,37,0.77,38,0.154,39,0.795,40,1.051,41,1.701,42,2.589,43,0.057,45,0.912,46,0.061,61,0.002,62,0.002,71,0.798,73,0.653,84,1.148,85,0.189,94,0.585,105,1.149,167,2.018,191,2.741,200,0.886,207,2.552,223,0.949,224,2.827,226,2.833,230,4.473,232,1.301,234,2.132,235,2.09,245,1.98,246,2.049,247,1.869,249,1.902,256,1.78,327,4.43,332,1.98,338,2.196,394,1.443,475,1.512,556,3.265,557,2.876,558,3.509,561,3.12,566,1.906,571,2.164,577,5.054,592,2.433,594,1.549,595,1.549,596,3.068,597,2.718,598,3.094,605,1.476,612,2.64,622,3.016,630,4.759,631,1.511,633,4.696,672,3.331,812,2.283,813,5.046,814,4.624,815,2.936,816,4.448,817,2.936,818,2.936,819,2.936,820,2.936,821,2.936,822,2.936,823,2.936,824,2.433,825,2.936,826,2.936,827,2.936,828,2.633,829,2.936,830,2.936,831,2.936,832,2.936,833,2.936,834,2.936,835,5.139,836,2.936,837,2.936,838,2.936,839,2.936,840,2.936,841,2.936,842,2.936,843,2.936,844,2.283,845,4.739,846,2.433,847,2.433,848,3.596,849,2.433,850,2.164,851,1.973,852,2.433,853,3.118,854,2.065,855,2.283,856,2.433,857,2.433,858,2.433,859,2.433,860,5.376,861,2.433,862,5.847,863,2.433,864,2.433,865,2.433,866,3.831,867,3.712,868,1.78,869,2.433,870,1.906,871,2.433,872,2.433,873,1.78,874,2.433,875,3.831,876,2.433,877,2.433,878,3.408,879,2.433,880,2.433,881,2.433]],["title/classes/CondominiumRelUserFirestoreMapper.html",[0,0.249,882,3.951]],["body/classes/CondominiumRelUserFirestoreMapper.html",[0,0.242,2,0.817,3,0.046,4,0.046,5,0.046,9,0.066,16,0.785,35,0.918,36,0.005,37,0.642,38,0.128,39,0.663,40,1.058,41,1.776,43,0.061,45,0.911,46,0.073,47,1.577,48,1.851,49,1.827,51,2.699,61,0.003,62,0.003,65,0.919,73,0.957,84,0.957,85,0.342,105,0.931,143,2.318,200,0.943,207,1.546,224,2.823,226,1.716,230,2.367,257,1.828,327,2.367,351,3.003,387,3.214,475,1.563,535,4.459,561,2.975,672,1.799,721,3.474,722,5.712,723,5.45,727,4.767,728,3.444,729,4.365,730,5.418,731,3.003,732,4.078,734,3.331,736,3.869,737,2.534,743,4.766,835,3.869,882,5.27,883,4.078,884,4.922,885,6.833,886,4.922,887,4.922,888,4.087,889,5.615,890,4.414,891,2.734,892,4.078]],["title/classes/CondominiumRelUserMapper.html",[0,0.249,893,3.573]],["body/classes/CondominiumRelUserMapper.html",[0,0.232,2,0.783,3,0.044,4,0.044,5,0.044,9,0.063,16,0.762,20,1.675,23,1.998,35,0.892,36,0.005,37,0.623,38,0.125,39,0.644,40,0.984,41,2.149,43,0.059,45,1.02,46,0.071,47,1.531,48,1.81,49,1.786,61,0.003,62,0.003,65,0.88,66,1.452,73,0.929,84,0.929,85,0.193,105,0.904,160,2.064,200,0.904,207,2.379,224,3.21,226,2.641,230,3.644,257,1.752,327,3.644,351,3.296,387,2.486,475,1.739,561,2.909,596,2.484,631,2.428,672,2.769,721,3.428,728,2.814,731,3.958,734,4.239,746,4.593,747,4.85,751,3.434,752,5.32,753,4.208,754,3.867,756,2.707,758,2.693,835,4.68,853,4.437,870,4.27,888,3.996,893,4.627,894,3.908,895,4.717,896,6.792,897,4.717,898,4.717,899,3.477,900,2.955,901,3.668,902,3.908,903,3.668]],["title/classes/CondominiumRelUserPrismaMapper.html",[0,0.249,904,3.951]],["body/classes/CondominiumRelUserPrismaMapper.html",[0,0.249,2,1.306,3,0.048,4,0.048,5,0.048,9,0.068,16,0.801,23,1.508,35,0.937,36,0.005,37,0.655,38,0.115,39,0.677,40,0.965,46,0.048,47,1.61,48,2.02,49,1.993,51,2.236,61,0.003,62,0.003,65,1.291,66,1.226,73,0.977,84,0.977,85,0.284,105,0.95,200,0.972,207,2.172,224,3.299,226,2.412,230,2.44,257,1.884,327,3.327,351,2.488,387,3.201,475,1.023,561,2.656,631,3.561,672,2.528,721,3.506,727,4.827,728,3.533,729,3.981,744,2.34,746,4.194,748,3.842,758,2.896,765,5.38,768,5.368,769,5.38,771,5.38,772,5.38,773,5.38,774,4.865,775,3.292,835,3.95,848,3.945,868,3.075,870,3.292,873,3.075,899,3.739,900,3.178,902,4.203,904,5.38,905,5.073,906,9.132,907,5.073,908,5.073,909,5.073,910,5.073,911,5.073,912,5.073]],["title/classes/CondominiumRepo.html",[0,0.249,791,2.822]],["body/classes/CondominiumRepo.html",[0,0.192,2,0.65,3,0.037,4,0.037,5,0.037,9,0.053,10,0.697,16,0.791,18,2.233,20,1.538,26,1.96,27,2.796,28,2.584,35,0.78,36,0.005,37,0.76,38,0.113,39,0.563,40,0.989,42,1.247,43,0.085,46,0.075,47,1.34,48,1.798,49,1.775,61,0.003,62,0.003,65,1.075,66,1.576,73,0.813,84,0.813,85,0.236,159,3.153,160,2.385,176,1.818,191,2.054,192,1.084,211,3.66,212,2.083,216,3.153,220,1.757,222,3.385,223,1.266,242,2.89,281,3.121,330,4.181,340,3.212,344,3.385,350,3.097,356,1.77,361,3.7,475,1.519,487,2.886,525,2.86,644,2.842,751,3.153,778,3.647,783,2.64,785,2.287,786,4.604,788,4.604,791,3.198,792,2.64,913,3.045,914,3.916,915,3.916,916,3.786,917,2.545,918,3.786,919,2.919,920,3.701,921,3.786,922,4.279,923,3.786,924,3.786,925,3.472,926,3.701,927,3.786,928,3.786,929,3.472,930,3.916,931,1.969,932,2.016,933,3.434]],["title/injectables/CondominiumsFirestore.html",[183,1.406,934,4.21]],["body/injectables/CondominiumsFirestore.html",[0,0.233,3,0.044,4,0.044,5,0.044,8,1.534,9,0.102,11,1.096,13,1.385,16,1,35,1.114,36,0.005,37,0.778,38,0.136,39,0.804,40,0.938,46,0.044,61,0.003,62,0.003,71,0.819,73,0.933,84,1.161,85,0.376,89,1.09,94,1.781,165,2.792,167,1.779,176,2.122,183,1.828,194,1.557,199,1.707,200,1.265,356,2.144,475,0.957,522,5.541,523,2.282,525,3.183,528,5.333,535,3.655,554,3.497,644,2.494,670,3.497,671,3.689,778,4.186,782,2.818,783,5.125,785,3.018,786,5.125,788,5.125,791,3.669,792,3.199,793,3.199,800,3.689,934,6.297,935,4.744,936,3.931,937,4.744,938,5.473,939,4.744,940,4.744,941,4.744,942,4.744,943,4.254,944,3.689,945,4.744,946,3.079,947,3.931,948,4.254,949,4.254,950,3.931,951,4.744,952,4.744,953,4.744,954,4.744,955,4.744,956,7.6,957,3.689,958,6.606,959,3.689,960,4.744,961,4.744,962,4.744,963,4.744,964,4.254,965,3.199,966,4.744]],["title/classes/CookieAdapter.html",[0,0.249,122,3.426]],["body/classes/CookieAdapter.html",[0,0.338,2,1.142,3,0.064,4,0.064,5,0.064,9,0.093,16,0.797,35,0.933,36,0.005,37,0.652,38,0.14,39,0.673,43,0.085,45,0.994,46,0.085,61,0.004,62,0.004,73,1.19,84,0.972,122,5.684,139,4.467,176,1.56,220,2.1,271,4.84,281,3.211,305,3.407,967,5.703,968,7.549,969,6.883,970,7.385,971,6.883,972,7.086]],["title/classes/CookieParserAdapter.html",[0,0.249,140,4.21]],["body/classes/CookieParserAdapter.html",[0,0.338,2,1.142,3,0.064,4,0.064,5,0.064,9,0.093,16,0.797,35,0.933,36,0.005,37,0.652,38,0.114,39,0.673,40,0.962,46,0.064,61,0.004,62,0.004,71,1.455,73,1.19,84,0.972,85,0.345,105,0.946,122,6.144,139,5.47,140,6.984,316,3.543,968,7.549,970,7.385,972,7.086,973,8.429,974,6.883,975,6.883,976,6.883,977,5.703,978,5.353,979,6.883]],["title/classes/CreateCondominiumDTO.html",[0,0.249,648,4.21]],["body/classes/CreateCondominiumDTO.html",[0,0.27,2,0.612,3,0.035,4,0.035,5,0.035,9,0.05,10,0.666,16,0.906,20,1.126,23,1.594,26,2.075,36,0.005,37,0.806,38,0.13,41,1.444,42,2.493,44,2.205,45,0.954,46,0.035,49,2.269,61,0.003,62,0.003,65,0.689,66,0.976,85,0.3,131,2.01,158,2.49,160,1.842,211,2.266,240,2.719,291,1.175,333,5.833,344,3.321,350,2.266,355,2.394,356,1.668,360,3.308,361,3.629,367,3.308,373,1.946,392,2.106,396,3.451,500,4.284,501,5.078,532,3.575,559,4.856,597,2.169,598,1.996,648,4.564,649,5.078,919,2.693,980,3.689,981,3.575,982,4.564,983,5.143,984,6.997,985,6.709,986,3.308,987,3.308,988,3.689,989,4.564,990,4.564,991,3.689,992,2.595,993,2.595,994,3.689,995,3.689,996,3.308,997,3.308,998,3.308,999,3.689,1000,5.773,1001,2.311,1002,3.874,1003,3.308,1004,3.308,1005,4.746,1006,2.595,1007,2.595,1008,5.143,1009,2.488,1010,3.689,1011,3.689,1012,3.689,1013,5.463,1014,3.689,1015,3.689,1016,3.689,1017,3.689,1018,3.308,1019,3.308,1020,4.94,1021,3.308,1022,3.308,1023,3.308,1024,3.689,1025,3.689,1026,3.689,1027,3.689]],["title/injectables/CreateCondominiumService.html",[183,1.406,667,3.573]],["body/injectables/CreateCondominiumService.html",[0,0.288,3,0.055,4,0.055,5,0.055,9,0.079,11,1.264,13,1.597,15,2.479,16,0.882,35,1.032,36,0.005,37,0.721,38,0.126,39,0.745,40,0.669,43,0.073,46,0.055,61,0.004,62,0.004,65,1.094,71,1.012,73,1.076,84,0.828,85,0.381,89,1.346,160,1.918,165,2.406,167,2.051,183,2.108,194,2.499,211,3.133,356,2.649,405,5.43,422,4.122,523,2.819,525,3.752,667,5.356,791,5.285,793,3.952,800,4.558,851,3.25,917,2.575,1028,5.256,1029,3.83,1030,3.83,1031,4.772,1032,5.923,1033,5.861,1034,7.586,1035,5.861,1036,4.477,1037,5.861,1038,3.83,1039,3.091,1040,5.256,1041,5.256]],["title/injectables/CreateTokenService.html",[183,1.406,1042,3.426]],["body/injectables/CreateTokenService.html",[0,0.204,3,0.039,4,0.039,5,0.039,9,0.056,11,0.689,13,0.87,15,2.141,16,0.896,23,1.687,26,1.602,35,1.049,36,0.005,37,0.856,38,0.142,39,0.757,43,0.075,45,0.655,46,0.039,51,1.942,61,0.003,62,0.003,65,0.775,71,0.716,73,0.848,84,0.997,85,0.351,89,0.953,93,1.322,94,1.705,105,0.97,131,2.035,165,2.621,167,2.305,169,3.228,170,5.556,179,3.336,180,3.724,183,1.662,184,2.6,185,2.6,191,2.47,192,1.149,194,2.539,197,4.051,198,2.919,218,2.572,226,2.462,227,2.6,230,3.396,291,1.322,327,3.396,475,0.837,523,1.996,560,2.471,561,2.306,565,2.137,596,2.268,672,2.581,851,3.013,917,2.031,1029,3.021,1030,3.021,1038,3.021,1039,2.189,1042,4.051,1043,3.439,1044,3.899,1045,3.43,1046,4.978,1047,6.008,1048,6.008,1049,4.151,1050,4.978,1051,6.386,1052,4.151,1053,4.978,1054,4.151,1055,3.228,1056,4.151,1057,2.799,1058,2.799,1059,3.439,1060,3.891,1061,5.218,1062,3.439,1063,3.439,1064,4.978,1065,4.428,1066,3.228,1067,3.439,1068,3.439,1069,3.439,1070,3.439,1071,3.439,1072,3.439,1073,3.439,1074,4.978,1075,3.228,1076,3.439,1077,3.439,1078,3.439,1079,3.228,1080,3.439,1081,3.228,1082,4.051,1083,3.439,1084,3.899,1085,3.439]],["title/classes/CreateUserDTO.html",[0,0.249,1086,4.21]],["body/classes/CreateUserDTO.html",[0,0.242,2,0.53,3,0.03,4,0.03,5,0.03,9,0.043,10,0.597,16,0.937,20,1.009,23,1.48,26,2.083,36,0.005,37,0.766,38,0.134,41,1.294,42,2.338,44,2.214,45,0.988,46,0.03,49,2.31,61,0.002,62,0.002,65,0.596,66,0.874,85,0.278,131,1.936,158,2.231,160,1.71,161,1.833,230,3.891,240,2.353,256,1.935,257,1.186,258,2.862,291,1.017,327,3.732,333,5.941,337,2.862,350,2.03,368,3.586,373,1.684,392,1.823,396,3.092,431,4.069,500,3.838,501,5.251,532,3.203,597,1.876,598,1.727,649,5.251,919,2.546,981,3.203,982,4.089,983,5.458,984,7.041,985,6.751,986,2.862,987,2.862,989,5.625,990,4.999,992,2.245,993,2.245,996,2.862,997,2.862,998,2.862,1000,5.878,1001,2,1002,3.471,1003,2.862,1004,2.862,1005,5.036,1006,2.245,1007,2.245,1008,5.458,1009,2.153,1013,5.625,1019,2.862,1020,4.425,1023,2.862,1060,4.069,1086,4.089,1087,3.192,1088,4.935,1089,3.192,1090,3.192,1091,3.192,1092,3.192,1093,3.192,1094,3.192,1095,3.192,1096,6.034,1097,3.192,1098,2.862,1099,3.192,1100,3.192,1101,2.862,1102,2.645,1103,2.862,1104,2.862,1105,3.192,1106,3.192,1107,3.192,1108,3.192,1109,3.192,1110,2.862,1111,2.862,1112,3.192,1113,3.192,1114,2.862,1115,3.192,1116,3.192]],["title/injectables/CreateUserService.html",[183,1.406,1117,3.573]],["body/injectables/CreateUserService.html",[0,0.251,3,0.048,4,0.048,5,0.048,9,0.069,11,1.153,13,1.457,15,2.346,16,0.804,35,0.941,36,0.005,37,0.658,38,0.115,39,0.68,40,0.582,42,2.213,43,0.063,46,0.048,61,0.003,62,0.003,65,0.953,71,0.881,73,0.981,84,0.721,85,0.39,89,1.172,94,1.573,123,4.167,134,4.787,160,1.749,161,2.58,165,2.246,167,1.871,183,1.922,192,1.412,194,2.279,200,1.331,207,1.603,218,2.522,224,2.866,226,1.779,230,4.077,257,1.896,291,1.626,327,4.077,431,2.567,433,3,523,2.455,526,2.933,672,1.866,835,3.966,851,3.369,853,3.442,870,3.312,901,3.969,903,3.969,917,2.349,1029,3.493,1030,3.493,1031,4.352,1032,5.402,1038,3.493,1039,2.692,1055,3.969,1117,4.885,1118,4.576,1119,5.104,1120,4.4,1121,5.104,1122,5.104,1123,3,1124,2.219,1125,4.576,1126,4.576,1127,4.576,1128,4.576,1129,4.576,1130,4.576,1131,4.576,1132,4.576,1133,4.576]],["title/classes/CryptAdapter.html",[0,0.249,123,2.498]],["body/classes/CryptAdapter.html",[0,0.304,2,1.026,3,0.058,4,0.058,5,0.058,9,0.083,16,1.005,35,1.176,36,0.005,37,0.822,38,0.144,39,0.849,40,0.899,43,0.098,45,1.07,46,0.081,61,0.004,62,0.004,73,1.113,84,1.226,123,3.875,176,2.188,220,1.886,281,3.417,294,5.809,295,6.13,296,5.809,299,5.809,300,6.427,303,5.809,305,3.507,306,6.13,307,6.736,442,4.807,1134,5.122,1135,6.182,1136,6.182,1137,6.182]],["title/classes/CryptSpy.html",[0,0.249,1138,4.556]],["body/classes/CryptSpy.html",[0,0.275,2,0.931,3,0.053,4,0.053,5,0.053,9,0.075,10,0.895,16,1.02,35,1.003,36,0.005,37,0.701,38,0.137,39,0.724,40,0.64,45,0.903,46,0.053,61,0.004,62,0.004,71,1.277,73,1.045,84,1.17,85,0.23,105,1.138,123,4.072,165,2.8,176,2.131,215,3.984,236,1.926,246,4.167,294,6.491,295,6.849,296,6.93,297,2.536,299,5.455,300,6.194,303,5.455,305,2.991,326,5.03,418,5.585,419,3.035,433,3.298,1138,6.636,1139,5.61,1140,5.61,1141,5.61,1142,5.61,1143,5.61,1144,7.401,1145,5.61,1146,7.401,1147,7.401,1148,5.61]],["title/classes/DatabaseCustomError.html",[0,0.249,796,2.901]],["body/classes/DatabaseCustomError.html",[0,0.241,2,0.813,3,0.046,4,0.046,5,0.046,7,3.479,8,2.695,9,0.066,10,0.818,11,1.283,13,1.028,14,2.731,15,2.306,16,0.783,18,2.68,19,3.858,20,1.703,21,4.629,22,4.396,23,1.971,25,4.396,26,1.725,27,2.51,28,2.32,29,3.858,30,3.858,31,3.858,32,3.858,33,3.858,34,4.759,35,0.664,36,0.005,37,0.464,38,0.112,39,0.48,40,0.882,43,0.061,44,1.069,45,0.535,46,0.063,47,1.141,48,1.614,49,1.593,50,3.858,51,2.185,54,2.524,55,2.652,59,2.652,60,2.652,61,0.003,62,0.003,65,0.915,66,1.197,68,3.117,69,2.995,224,1.658,387,2.735,565,3.479,595,2.586,672,1.792,728,2.51,729,3.182,796,3.858,797,5.16,809,3.694,932,2.524,946,3.182,1149,4.062,1150,6.758,1151,4.981,1152,5.256,1153,4.981,1154,5.256,1155,2.799,1156,4.062,1157,4.062,1158,4.062,1159,4.062,1160,4.062,1161,4.062,1162,5.599,1163,4.062,1164,3.072,1165,4.557,1166,4.062,1167,4.396,1168,4.062,1169,4.062,1170,4.062,1171,3.614,1172,4.557,1173,4.062,1174,4.981,1175,4.062,1176,3.614,1177,4.396,1178,3.448,1179,3.448]],["title/classes/DatabaseCustomErrorFilter.html",[0,0.249,1180,3.745]],["body/classes/DatabaseCustomErrorFilter.html",[0,0.167,2,0.564,3,0.032,4,0.032,5,0.032,8,1.675,9,0.046,10,0.627,11,1.165,12,5.002,13,0.713,16,0.727,18,1.009,20,1.059,23,1.13,26,1.766,35,0.702,36,0.005,37,0.923,38,0.104,39,0.507,41,0.892,43,0.042,44,2.099,45,0.565,46,0.032,61,0.002,62,0.002,65,1.171,66,0.918,67,2.606,68,2.39,71,0.894,72,3.156,73,0.732,74,2.729,75,1.942,76,2.837,78,2.253,79,2.733,80,3.086,81,3.529,83,2,84,0.48,85,0.288,86,1.538,87,1.569,89,0.781,90,2.44,91,1.284,93,1.084,94,1.25,95,1.479,96,1.711,97,1.711,98,2.548,99,2.878,100,2.342,102,2,103,2.44,104,2.668,105,0.862,106,1.84,107,2.342,108,1.84,109,1.751,110,1.84,161,1.925,167,1.69,211,2.132,212,2.735,216,3.334,236,1.168,297,1.538,728,1.925,796,4.007,797,2.959,807,2.878,808,4.822,809,4.203,810,3.494,919,1.7,1045,5.089,1151,3.82,1180,3.82,1181,3.05,1182,4.646,1183,4.074,1184,3.402,1185,5.201,1186,5.619,1187,4.03,1188,7.136,1189,4.678,1190,5.866,1191,4.825,1192,4.294,1193,3.644,1194,5.344,1195,4.646,1196,6.011,1197,4.646,1198,4.294,1199,3.644,1200,4.646,1201,4.03,1202,4.646,1203,3.402,1204,3.402,1205,3.05,1206,3.05,1207,2.208,1208,2.392,1209,2.392,1210,2.062,1211,3.644,1212,3.141,1213,2.062,1214,2.062]],["title/classes/DateFormats.html",[0,0.249,1215,4.21]],["body/classes/DateFormats.html",[0,0.29,2,0.979,3,0.055,4,0.055,5,0.055,9,0.079,16,0.684,35,0.8,36,0.005,37,0.559,38,0.098,39,0.577,45,0.835,46,0.055,47,1.374,48,1.828,49,1.804,61,0.004,62,0.004,65,1.102,66,1.356,73,1.081,84,0.834,94,1.899,105,0.811,305,3.63,351,2.752,596,3.513,601,6.258,721,3.259,917,2.587,919,2.947,1215,6.34,1216,5.903,1217,7.652,1218,7.652,1219,5.903,1220,7.652,1221,7.652,1222,6.861,1223,6.861,1224,7.652,1225,8.49,1226,5.903,1227,8.49,1228,5.903,1229,8.49,1230,5.903,1231,5.903,1232,5.903,1233,5.903,1234,5.903,1235,5.903,1236,5.903,1237,5.903,1238,5.903]],["title/classes/DeleteUserDTO.html",[0,0.249,658,4.21]],["body/classes/DeleteUserDTO.html",[0,0.372,2,0.966,3,0.055,4,0.055,5,0.055,9,0.078,10,0.917,16,0.674,20,1.549,23,1.948,26,2.002,36,0.005,38,0.096,42,1.854,44,2.02,45,0.827,46,0.055,49,1.988,61,0.004,62,0.004,65,1.086,66,1.343,85,0.346,131,2.21,158,3.427,160,1.909,291,1.854,333,5.112,373,3.07,392,3.323,396,4.75,501,4.92,532,4.92,598,3.148,649,3.777,658,6.282,919,2.488,981,4.92,983,4.093,984,6.515,985,6.247,992,4.093,993,4.093,1000,5.332,1001,3.646,1002,5.332,1005,3.777,1006,4.093,1007,4.093,1008,4.093,1009,3.925,1239,5.82,1240,7.582,1241,4.92,1242,5.82]],["title/injectables/DeleteUserService.html",[183,1.406,680,3.426]],["body/injectables/DeleteUserService.html",[0,0.28,3,0.053,4,0.053,5,0.053,9,0.077,11,0.946,13,1.195,15,2.452,16,0.866,23,1.243,35,1.013,36,0.005,37,0.708,38,0.124,39,0.732,43,0.071,44,1.243,46,0.053,61,0.004,62,0.004,65,1.064,71,0.984,73,1.056,84,0.805,85,0.377,89,1.309,93,1.816,131,1.844,160,1.883,161,2.778,165,2.374,171,3.956,183,2.07,187,2.866,192,1.577,194,1.87,199,2.05,200,1.092,212,1.577,220,1.739,387,1.87,460,4.723,523,2.742,680,5.043,714,6.492,715,6.916,809,2.526,851,3.562,917,2.529,1029,3.761,1030,3.761,1038,3.761,1039,3.006,1055,4.433,1243,5.111,1244,6.492,1245,5.7,1246,5.7,1247,5.043,1248,3.844,1249,4.433,1250,5.111,1251,3.255,1252,4.433,1253,4.202,1254,5.111,1255,3.699,1256,5.111,1257,4.433,1258,5.111]],["title/classes/EchoguardAdapter.html",[0,0.249,1259,4.556]],["body/classes/EchoguardAdapter.html",[0,0.195,2,0.66,3,0.065,4,0.037,5,0.037,8,2.228,9,0.053,16,1.035,35,1.211,36,0.005,37,0.846,38,0.148,39,0.874,40,1.119,46,0.037,61,0.003,62,0.003,65,1.574,71,1.005,73,0.823,76,2.785,78,1.73,84,1.262,85,0.239,94,1.372,103,4.292,165,2.884,176,2.224,672,3.266,1259,5.223,1260,3.978,1261,4.826,1262,5.71,1263,4.826,1264,5.71,1265,4.826,1266,4.826,1267,4.53,1268,7.23,1269,3.978,1270,3.567,1271,6.83,1272,3.978,1273,4.53,1274,3.978,1275,3.567,1276,3.978,1277,3.567,1278,3.978,1279,4.53,1280,3.978,1281,4.53,1282,3.978,1283,4.53,1284,3.978,1285,3.978,1286,3.567,1287,8.936,1288,5.825,1289,3.978,1290,3.978,1291,3.978,1292,6.179,1293,6.179,1294,6.179,1295,7.563,1296,6.891]],["title/classes/Email.html",[0,0.249,131,1.122]],["body/classes/Email.html",[0,0.283,2,0.957,3,0.054,4,0.054,5,0.054,9,0.078,11,0.957,13,1.209,16,0.972,23,1.83,35,1.021,36,0.005,37,0.714,38,0.125,39,0.737,40,0.658,44,1.257,45,0.971,46,0.054,47,1.342,48,1.8,49,1.777,61,0.004,62,0.004,65,1.076,71,1.301,73,1.064,84,0.814,85,0.344,93,1.837,105,1.035,131,2.162,199,2.074,200,1.104,232,3.72,233,3.72,234,3.475,235,3.406,236,2.882,237,3.292,239,4.541,242,2.893,247,3.046,249,2.372,250,3.041,252,3.548,253,2.9,254,2.415,255,2.507,291,1.837,333,4.568,336,4.055,338,2.214,339,3.39,340,2.46,341,4.055,342,4.055,343,5.081,373,3.041,1009,3.888,1297,5.766,1298,5.766,1299,7.536,1300,5.86,1301,5.766,1302,5.766]],["title/classes/EmailAdapter.html",[0,0.249,124,2.987]],["body/classes/EmailAdapter.html",[0,0.355,2,1.198,3,0.068,4,0.068,5,0.068,9,0.097,10,1.05,16,0.836,36,0.005,38,0.12,43,0.09,45,1.053,46,0.081,61,0.004,62,0.004,124,5.102,176,1.637,281,3.264,305,2.919,397,3.264,487,5.323,1303,6.476,1304,7.236,1305,7.222,1306,6.749,1307,4.87]],["title/classes/EmailSpy.html",[0,0.249,1308,4.556]],["body/classes/EmailSpy.html",[0,0.332,2,1.12,3,0.063,4,0.063,5,0.063,9,0.091,10,1.008,16,0.965,36,0.005,38,0.112,46,0.063,61,0.004,62,0.004,71,1.438,73,1.177,84,0.954,85,0.277,124,5.31,165,2.57,176,1.888,215,3.247,236,2.318,246,3.692,297,3.052,418,6.092,419,3.652,1304,7.674,1308,7.469,1309,6.752,1310,6.752,1311,6.752,1312,4.977,1313,8.33]],["title/classes/EntitieError.html",[0,0.249,252,2.392]],["body/classes/EntitieError.html",[0,0.271,2,0.916,3,0.052,4,0.052,5,0.052,7,3.771,8,2.83,9,0.074,10,0.886,11,1.364,13,1.158,14,2.96,15,2.422,16,0.848,18,2.776,19,4.182,20,1.497,21,4.068,22,3.863,23,1.597,25,4.616,26,1.516,27,2.721,28,2.515,29,4.182,30,4.182,31,4.182,32,4.182,33,4.182,34,4.182,35,0.748,36,0.005,37,0.523,38,0.121,39,0.54,40,0.836,43,0.069,44,1.204,45,0.602,46,0.052,47,1.285,48,1.75,49,1.727,50,4.182,51,2.368,54,2.843,55,2.988,59,2.988,60,2.988,61,0.004,62,0.004,65,1.031,66,1.298,85,0.226,236,1.896,243,4.754,252,3.449,254,3.921,255,2.401,338,3.496,339,3.247,419,2.988,1314,4.952,1315,7.325,1316,5.399,1317,5.697,1318,6.568,1319,6.069,1320,6.568,1321,5.697,1322,4.295]],["title/classes/EntitieErrorFilter.html",[0,0.249,1323,3.951]],["body/classes/EntitieErrorFilter.html",[0,0.259,2,0.876,3,0.049,4,0.049,5,0.049,9,0.071,11,0.876,13,1.107,16,0.823,18,1.565,20,1.452,23,1.151,26,1.092,35,0.963,36,0.005,37,0.814,38,0.118,39,0.695,44,1.549,46,0.049,61,0.003,62,0.003,65,1.499,66,1.259,67,3.573,68,3.277,69,3.149,71,1.226,72,4.039,73,1.004,74,3.492,75,3.013,76,3.473,78,3.089,79,3.747,80,3.949,81,4.322,83,3.102,84,0.745,85,0.368,86,2.385,87,2.434,89,1.212,90,3.345,91,1.993,93,1.681,94,1.415,95,2.294,96,2.654,97,2.654,98,3.493,99,3.946,100,3.212,102,4.177,103,3.345,104,3.658,105,0.976,106,2.854,107,3.212,108,2.854,109,2.717,110,2.854,159,2.211,236,2.439,242,2.026,252,4.046,253,2.654,254,2.211,255,2.294,339,3.102,347,3.559,513,4.104,514,3.199,756,2.171,1186,3.102,1323,5.526,1324,5.277,1325,5.887,1326,5.277,1327,5.277,1328,5.277,1329,5.277,1330,7.105,1331,5.277,1332,5.277,1333,5.277,1334,5.277,1335,4.372,1336,5.277,1337,3.89]],["title/classes/Entity.html",[0,0.249,338,1.951]],["body/classes/Entity.html",[0,0.29,2,1.156,3,0.038,4,0.038,5,0.038,9,0.055,13,0.851,16,0.684,20,1.424,22,3.116,23,1.669,25,3.116,26,0.84,28,1.392,35,0.55,36,0.005,37,0.384,38,0.067,39,0.397,40,0.463,42,2.592,44,0.884,46,0.072,61,0.003,62,0.003,65,0.757,66,1.442,73,0.834,84,0.834,85,0.242,94,1.176,105,1.234,109,2.088,159,1.699,160,1.755,199,1.459,200,1.466,212,1.122,218,1.68,232,3.088,234,2.725,236,2.392,242,1.557,247,2.816,249,3.149,252,2.782,253,2.04,254,1.699,281,3.147,294,2.99,338,3.449,339,2.384,340,1.731,347,3.984,350,2.867,419,2.194,456,2.852,525,2.475,526,2.194,558,4.141,594,2.139,721,2.268,835,5.13,851,3.741,854,4.901,919,1.331,922,1.951,925,1.871,1155,3.373,1251,2.316,1316,4.355,1317,3.154,1325,3.361,1338,3.361,1339,5.774,1340,5.774,1341,4.895,1342,3.984,1343,4.056,1344,4.056,1345,4.594,1346,3.637,1347,3.196,1348,3.361,1349,3.361,1350,4.895,1351,6.864,1352,6.864,1353,3.637,1354,2.99,1355,7.615,1356,3.637,1357,3.637,1358,6.248,1359,6.248,1360,6.248,1361,3.154,1362,3.637,1363,3.637,1364,3.637,1365,3.637,1366,2.088,1367,3.637,1368,3.637,1369,3.637]],["title/classes/FetchAdapter.html",[0,0.249,137,4.21]],["body/classes/FetchAdapter.html",[0,0.256,1,5.883,2,0.865,3,0.049,4,0.049,5,0.049,9,0.07,12,2.748,16,0.603,18,1.545,23,1.536,26,1.652,35,0.706,36,0.005,37,0.494,38,0.117,39,0.51,40,0.595,41,1.366,42,2.244,44,1.536,46,0.049,52,3.514,53,4.052,61,0.003,62,0.003,71,1.216,73,0.995,84,0.736,85,0.327,88,4.672,89,1.197,94,1.589,105,0.968,107,3.864,125,5,137,5.837,160,1.312,165,2.27,176,1.597,194,2.312,199,2.871,200,1.529,212,1.949,321,4.672,397,3.608,509,5.193,514,3.159,622,2.748,756,2.144,917,1.762,965,3.514,1029,3.543,1030,2.62,1189,3.063,1251,2.975,1366,3.627,1370,5.211,1371,6.317,1372,5.479,1373,6.302,1374,5.211,1375,7.982,1376,3.841,1377,5.211,1378,5.211,1379,6.207,1380,5.211,1381,5.211,1382,5.211,1383,4.052,1384,5.193,1385,8.55,1386,7.045,1387,5.211,1388,5.211,1389,5.211,1390,5.211,1391,5.211,1392,5.211,1393,5.211,1394,5.211,1395,4.955,1396,7.045,1397,4.052,1398,5.211,1399,5.211,1400,5.211,1401,5.211,1402,5.211,1403,5.211]],["title/classes/FirebaseLoggerAdapter.html",[0,0.249,142,4.21]],["body/classes/FirebaseLoggerAdapter.html",[0,0.186,2,0.63,3,0.074,4,0.036,5,0.036,8,2.56,9,0.051,16,1.021,35,1.195,36,0.005,37,0.835,38,0.146,39,0.863,40,1.111,46,0.036,61,0.003,62,0.003,65,1.548,71,0.971,73,0.795,76,2.71,78,1.65,84,1.245,85,0.231,94,1.335,103,4.241,142,4.662,143,1.787,165,2.869,176,2.207,672,3.223,741,5.524,1261,5.556,1262,6.144,1263,6.144,1264,6.144,1265,6.144,1266,6.144,1267,4.376,1268,7.177,1270,3.404,1271,6.754,1273,4.376,1275,3.404,1277,3.404,1279,4.376,1281,4.376,1283,4.376,1292,6.012,1293,6.012,1294,6.012,1295,7.437,1404,9.006,1405,3.796,1406,3.796,1407,3.796,1408,3.796,1409,3.796,1410,3.796,1411,3.796,1412,3.796,1413,3.796,1414,3.796,1415,3.796,1416,3.796,1417,3.796,1418,3.796,1419,3.796,1420,3.796,1421,3.796,1422,3.796]],["title/classes/FirestoreGetCondominiumDTO.html",[0,0.249,1423,4.556]],["body/classes/FirestoreGetCondominiumDTO.html",[0,0.291,2,0.982,3,0.055,4,0.055,5,0.055,9,0.08,16,0.685,26,1.586,35,0.802,36,0.005,37,0.726,38,0.098,39,0.579,40,0.97,41,1.551,45,0.645,46,0.055,47,1.377,48,1.831,49,1.807,61,0.004,62,0.004,65,1.104,69,3.396,73,1.082,84,0.836,85,0.368,94,1.178,105,0.813,143,2.786,344,2.31,355,3.84,356,2.675,361,2.525,387,2.514,475,1.194,535,3.686,559,3.378,560,2.434,561,2.272,721,3.263,725,6.265,728,3.339,729,3.608,736,3.378,737,3.046,851,3.27,919,2.514,1018,5.305,1022,5.305,1036,4.505,1423,6.871,1424,5.917,1425,5.917,1426,5.96,1427,5.648,1428,5.389,1429,5.917,1430,6.61,1431,4.361,1432,4.602,1433,4.602,1434,4.602,1435,5.917,1436,5.917,1437,5.917,1438,5.917,1439,5.96,1440,4.602]],["title/classes/FirestoreGetCondominiumRelUserDTO.html",[0,0.249,1441,4.21]],["body/classes/FirestoreGetCondominiumRelUserDTO.html",[0,0.286,2,0.968,3,0.055,4,0.055,5,0.055,9,0.078,16,0.676,26,1.572,35,0.791,36,0.005,37,0.553,38,0.097,39,0.571,40,0.963,41,1.99,46,0.055,47,1.358,48,1.814,49,1.79,61,0.004,62,0.004,65,1.089,69,3.365,73,1.072,84,0.824,85,0.366,94,1.162,105,0.802,143,2.747,207,1.832,226,2.034,230,2.806,256,3.537,257,2.167,327,2.806,387,2.491,475,1.177,535,3.652,561,2.24,672,2.132,721,3.241,728,3.321,729,3.575,736,3.331,737,3.003,851,3.24,885,6.222,919,2.491,1036,4.463,1110,5.231,1111,5.231,1426,5.905,1427,5.597,1428,5.34,1430,6.565,1431,4.3,1432,4.537,1433,4.537,1434,6.565,1439,4.537,1440,4.537,1441,6.291,1442,5.834,1443,5.834,1444,4.537,1445,8.442,1446,5.834,1447,5.231,1448,5.231]],["title/classes/FirestoreGetInviteDTO.html",[0,0.249,1449,4.21]],["body/classes/FirestoreGetInviteDTO.html",[0,0.291,2,0.982,3,0.055,4,0.055,5,0.055,9,0.08,16,0.685,26,1.586,35,0.802,36,0.005,37,0.561,38,0.127,39,0.579,40,0.97,41,2.009,46,0.055,47,1.377,61,0.004,62,0.004,65,1.104,69,3.396,73,1.082,84,0.836,85,0.368,94,1.178,105,0.813,131,1.307,143,2.786,207,1.858,256,3.587,257,2.198,276,3.84,475,1.194,535,3.686,721,3.263,728,2.847,729,3.608,736,3.378,737,3.046,851,3.27,919,2.514,1036,4.505,1426,5.96,1427,5.648,1428,5.389,1430,6.61,1431,4.361,1432,4.602,1433,4.602,1434,5.96,1439,4.602,1440,4.602,1447,5.305,1448,5.305,1449,6.349,1450,5.917,1451,5.917,1452,5.389,1453,6.265,1454,4.903,1455,2.909,1456,5.917,1457,5.167,1458,4.903,1459,5.917,1460,5.305,1461,3.707]],["title/classes/FirestoreGetUserDTO.html",[0,0.249,1462,4.21]],["body/classes/FirestoreGetUserDTO.html",[0,0.287,2,0.97,3,0.055,4,0.055,5,0.055,9,0.079,16,0.677,26,1.574,35,0.792,36,0.005,37,0.72,38,0.097,39,0.572,40,0.964,45,0.922,46,0.055,47,1.361,48,1.817,49,1.793,61,0.004,62,0.004,65,1.091,69,3.37,73,1.074,84,0.826,85,0.367,94,1.164,105,0.803,131,1.292,143,2.753,291,1.863,368,2.592,373,3.084,387,2.495,431,2.94,475,1.18,535,3.658,560,2.406,561,2.245,721,3.244,728,3.324,729,3.581,736,3.339,737,3.01,851,3.245,919,2.495,1036,4.47,1060,2.94,1426,5.914,1427,5.605,1428,5.348,1430,6.96,1431,4.31,1432,4.548,1433,4.548,1434,4.548,1439,5.914,1440,4.548,1460,5.243,1462,6.301,1463,5.848,1464,5.848,1465,6.229,1466,5.243,1467,5.848,1468,5.848,1469,5.848,1470,5.848,1471,5.848,1472,5.848,1473,5.848]],["title/modules/FirestoreModule.html",[111,2.822,1474,3.745]],["body/modules/FirestoreModule.html",[0,0.276,3,0.053,4,0.053,5,0.053,36,0.005,46,0.053,61,0.004,62,0.004,85,0.404,89,1.291,111,4.605,113,3.523,114,3.523,115,3.792,116,3.792,117,3.649,118,5.591,119,5.591,126,4.998,127,3.792,128,3.792,130,6.141,144,6.112,145,6.112,171,4.078,187,2.828,522,6.344,528,6.106,554,4.145,791,5.407,793,3.792,934,6.141,944,4.373,1120,4.682,1123,3.305,1474,7.386,1475,5.042,1476,5.042,1477,5.042,1478,5.623,1479,6.141,1480,5.623,1481,5.623,1482,6.141,1483,5.623]],["title/injectables/FirestoreService.html",[183,1.406,528,3.297]],["body/injectables/FirestoreService.html",[0,0.291,3,0.055,4,0.055,5,0.055,9,0.08,10,0.927,11,1.41,13,1.782,16,1.078,36,0.005,38,0.098,46,0.055,61,0.004,62,0.004,71,1.021,73,1.082,84,1.082,85,0.368,89,1.359,105,0.813,143,4.002,151,5.389,165,2.713,167,2.289,183,2.121,194,2.514,223,1.913,235,3.464,523,2.846,528,4.973,535,4.324,737,3.046,1484,5.917,1485,8.499,1486,8.061,1487,8.554,1488,8.499,1489,7.663,1490,5.917,1491,5.917,1492,5.917,1493,5.917,1494,7.663,1495,5.917,1496,5.917,1497,5.917,1498,7.663,1499,5.917,1500,5.917,1501,5.917,1502,7.663]],["title/classes/GatewayErrorFilter.html",[0,0.249,1503,3.745]],["body/classes/GatewayErrorFilter.html",[0,0.206,2,0.696,3,0.039,4,0.039,5,0.039,8,1.956,9,0.056,10,0.732,11,0.696,12,4.348,13,0.879,16,0.822,18,1.243,20,1.237,23,1.319,26,1.253,35,0.82,36,0.005,37,0.875,38,0.118,39,0.592,41,1.099,43,0.052,44,1.931,45,0.66,46,0.039,61,0.003,62,0.003,65,1.325,66,1.072,67,3.043,68,2.791,69,2.682,71,1.044,72,3.571,73,0.855,74,3.087,75,2.394,76,3.142,78,2.631,79,3.192,80,3.491,81,3.91,83,2.464,84,0.592,85,0.319,86,1.895,87,1.934,89,0.963,90,2.849,91,1.583,93,1.336,94,1.414,95,1.823,96,2.108,97,2.108,98,2.975,99,3.361,100,2.735,102,2.464,103,2.849,104,3.115,105,0.976,106,2.268,107,2.735,108,3.841,109,2.158,110,3.841,159,2.535,167,1.912,212,1.675,236,1.439,297,1.895,514,3.669,728,2.888,774,5.468,809,3.654,917,2.046,1005,3.927,1183,4.608,1186,3.557,1189,3.557,1207,2.721,1208,2.949,1209,2.949,1210,2.542,1212,4.305,1213,2.542,1214,2.542,1251,3.455,1366,3.115,1503,4.46,1504,3.759,1505,4.706,1506,4.193,1507,5.883,1508,5.426,1509,4.706,1510,5.426,1511,5.426,1512,5.426,1513,5.426,1514,5.426,1515,5.426,1516,4.46,1517,5.426,1518,5.426,1519,5.426,1520,5.426,1521,5.426,1522,5.426,1523,5.014,1524,4.193,1525,5.243,1526,4.193,1527,4.081,1528,3.759,1529,3.759,1530,5.426,1531,5.426]],["title/classes/GatewayErrors.html",[0,0.249,1525,3.426]],["body/classes/GatewayErrors.html",[0,0.26,2,0.877,3,0.05,4,0.05,5,0.05,7,3.663,8,2.6,9,0.071,10,0.861,11,1.534,13,1.109,14,2.876,15,2.38,16,0.931,18,2.742,19,4.063,20,1.454,21,3.952,22,3.753,23,1.875,25,4.536,26,1.914,27,2.643,28,2.443,29,4.063,30,4.063,31,4.063,32,4.063,33,4.063,34,4.911,35,0.717,36,0.005,37,0.501,38,0.133,39,0.517,40,0.812,43,0.066,44,1.153,45,0.577,46,0.067,47,1.231,48,1.7,49,1.678,50,4.063,51,2.3,54,2.722,55,2.861,59,2.861,60,2.861,61,0.003,62,0.003,65,0.987,66,1.261,387,2.335,403,3.898,565,4.621,809,4.097,1155,3.019,1178,3.719,1179,3.719,1186,4.183,1505,5.534,1525,4.798,1527,6.234,1532,4.382,1533,7.116,1534,6.38,1535,5.288,1536,4.382,1537,4.382,1538,4.382,1539,4.382,1540,3.898,1541,4.742,1542,4.742]],["title/modules/GatewayModule.html",[111,2.822,1543,3.745]],["body/modules/GatewayModule.html",[0,0.335,3,0.064,4,0.064,5,0.064,36,0.005,46,0.064,61,0.004,62,0.004,85,0.372,89,1.568,111,5.042,113,4.276,114,4.276,115,4.603,116,4.603,117,4.43,118,5.655,119,6.121,126,5.655,127,4.603,128,4.603,144,5.031,145,5.031,405,6.136,422,4.801,1543,7.164,1544,6.12,1545,6.12,1546,6.826,1547,6.522,1548,6.826]],["title/injectables/GenInviteService.html",[183,1.406,673,3.573]],["body/injectables/GenInviteService.html",[0,0.212,3,0.041,4,0.041,5,0.041,9,0.058,11,1.199,13,1.297,15,2.182,16,0.837,23,0.943,26,1.281,28,1.484,35,0.979,36,0.005,37,0.684,38,0.144,39,0.707,40,0.493,43,0.054,45,0.788,46,0.041,61,0.003,62,0.003,65,0.807,66,1.096,71,0.746,73,0.874,84,0.874,85,0.375,89,0.993,94,1.439,105,0.85,123,4.267,124,5.254,131,1.843,158,1.954,160,1.558,165,2.469,167,2.338,176,1.403,180,2.28,183,1.712,191,1.861,192,1.196,194,2.587,200,0.828,207,2.268,211,1.779,212,1.196,220,2.546,246,1.916,305,1.747,316,2.226,397,1.954,433,2.542,469,4.015,470,2.916,475,0.872,523,2.08,526,3.457,672,2.261,673,4.351,698,3.637,807,2.401,851,2.64,900,2.709,917,2.092,1029,3.111,1030,3.111,1031,3.876,1036,3.637,1038,3.111,1039,2.28,1120,4.299,1123,2.542,1124,1.88,1307,2.916,1312,3.187,1366,2.226,1455,2.126,1457,4.172,1458,3.582,1549,3.877,1550,3.81,1551,6.478,1552,4.324,1553,4.324,1554,4.324,1555,4.324,1556,4.56,1557,4.324,1558,5.547,1559,3.582,1560,3.582,1561,3.877,1562,3.582,1563,3.877,1564,3.751,1565,3.582,1566,2.916,1567,3.363,1568,3.363,1569,3.877,1570,3.363,1571,3.877,1572,3.877,1573,3.363,1574,3.363,1575,3.187,1576,3.187,1577,3.363,1578,3.877,1579,3.363,1580,3.363,1581,3.363,1582,3.363,1583,3.877]],["title/injectables/GenTFAService.html",[183,1.406,1584,3.573]],["body/injectables/GenTFAService.html",[0,0.218,3,0.042,4,0.042,5,0.042,9,0.06,11,1.216,13,1.322,15,2.208,16,0.849,23,1.909,26,1.518,28,1.524,35,0.993,36,0.005,37,0.694,38,0.121,39,0.717,40,0.836,43,0.055,45,0.484,46,0.042,52,2.994,61,0.003,62,0.003,65,0.829,66,0.786,71,0.766,73,0.89,84,0.89,85,0.369,89,1.02,94,1.678,105,0.61,123,3.923,124,4.691,131,1.934,134,4.444,158,2.007,165,2.491,167,2.358,171,3.773,180,2.341,183,1.745,187,2.232,191,2.535,192,1.228,194,2.619,212,1.228,218,1.263,219,2.881,220,2.237,222,1.733,223,1.435,226,1.548,227,2.781,305,1.794,389,4.647,397,2.007,433,2.61,458,4.647,459,4.903,469,4.091,470,2.994,471,3.452,473,4.557,474,2.994,475,0.896,477,3.678,479,3.678,485,4.903,523,2.135,807,2.466,851,2.69,917,2.132,1029,3.17,1030,3.17,1036,3.706,1038,3.17,1039,2.341,1061,2.994,1307,2.994,1312,3.272,1366,2.285,1457,4.251,1564,2.691,1566,2.994,1573,3.452,1574,3.452,1575,3.272,1576,3.272,1577,3.452,1579,3.452,1580,3.452,1581,3.452,1582,3.452,1584,4.434,1585,3.981,1586,5.653,1587,5.223,1588,6.304,1589,4.439,1590,4.439,1591,4.439,1592,5.653,1593,4.439,1594,3.981,1595,3.452,1596,3.452,1597,3.981,1598,3.981,1599,3.981,1600,3.981,1601,3.981,1602,3.981,1603,3.272,1604,3.981]],["title/classes/GenericErrorFilter.html",[0,0.249,1605,3.745]],["body/classes/GenericErrorFilter.html",[0,0.227,2,0.767,3,0.043,4,0.043,5,0.043,8,2.766,9,0.062,10,0.785,11,1.348,12,3.952,13,0.969,16,0.868,18,1.923,20,1.325,26,1.343,35,0.879,36,0.005,37,0.863,38,0.124,39,0.634,41,1.211,43,0.057,44,1.866,45,0.817,46,0.043,61,0.003,62,0.003,65,1.398,66,1.149,67,3.261,68,2.991,71,1.119,72,3.768,73,0.916,74,3.532,75,2.638,76,3.283,78,2.819,79,3.42,80,3.684,81,4.085,83,2.716,84,0.653,85,0.307,86,2.089,87,2.131,89,1.061,90,3.053,91,1.745,93,1.472,94,1.492,95,2.009,96,2.324,97,2.324,98,3.188,99,2.566,100,2.931,103,3.053,104,2.379,105,1.029,106,2.499,107,2.931,108,2.499,109,3.338,110,3.508,167,2.018,220,2.286,236,1.586,297,2.089,338,2.49,808,4.394,919,2.128,1164,4.063,1165,4.373,1186,4.775,1191,4.925,1193,4.561,1194,4.063,1210,2.801,1211,3.25,1212,3.931,1213,2.801,1214,2.801,1605,4.78,1606,4.143,1607,5.815,1608,6.718,1609,4.621,1610,6.208,1611,5.815,1612,4.621,1613,4.621,1614,4.143,1615,4.143,1616,4.143,1617,4.143,1618,4.143,1619,5.815,1620,5.815,1621,4.143]],["title/injectables/GetCondominiumRelUserService.html",[183,1.406,1622,3.573]],["body/injectables/GetCondominiumRelUserService.html",[0,0.284,3,0.054,4,0.054,5,0.054,9,0.078,11,0.959,13,1.212,15,2.465,16,0.874,35,1.023,36,0.005,37,0.715,38,0.125,39,0.738,43,0.072,46,0.054,51,2.44,61,0.004,62,0.004,65,1.079,71,0.998,73,1.066,84,0.816,85,0.365,89,1.327,93,1.841,94,1.151,105,0.794,160,1.901,161,2.803,162,5.563,165,2.39,171,3.971,180,3.048,183,2.088,187,2.906,191,2.27,192,1.599,194,1.896,226,2.93,242,2.897,460,4.789,523,2.78,851,3.586,917,2.552,1029,3.795,1030,3.795,1038,3.795,1039,3.048,1055,4.495,1366,3.885,1516,5.563,1622,5.308,1623,5.182,1624,6.767,1625,6.767,1626,5.869,1627,6.767,1628,5.78,1629,5.78,1630,6.767,1631,5.182,1632,4.789]],["title/classes/GuardErrorFilter.html",[0,0.249,1633,3.951]],["body/classes/GuardErrorFilter.html",[0,0.282,2,0.955,3,0.054,4,0.054,5,0.054,9,0.077,11,0.955,13,1.206,16,0.871,20,1.538,22,3.034,23,1.254,35,1.02,36,0.005,37,0.794,38,0.125,39,0.736,44,1.254,46,0.054,61,0.004,62,0.004,65,1.404,66,1.333,67,3.784,68,3.47,69,3.335,71,1.299,72,4.216,73,1.063,74,3.645,75,3.285,76,3.594,78,3.271,79,3.968,80,4.122,81,4.472,83,3.382,84,0.813,85,0.364,86,2.6,87,2.653,89,1.321,90,3.543,91,2.172,93,1.833,94,1.498,95,2.501,96,2.893,97,2.893,98,2.828,99,3.195,100,2.6,102,3.382,103,2.709,104,2.961,105,0.79,107,2.6,155,4.423,188,5.078,189,3.604,212,1.592,458,4.24,1045,3.285,1194,3.604,1196,3.879,1633,5.852,1634,5.753,1635,5.753,1636,5.753,1637,5.753,1638,5.158,1639,5.753]],["title/classes/GuardErrors.html",[0,0.249,188,2.901]],["body/classes/GuardErrors.html",[0,0.306,2,1.033,3,0.058,4,0.058,5,0.058,7,4.077,8,2.815,13,1.306,14,3.201,15,2.536,16,0.721,18,2.868,19,4.521,20,1.618,21,4.398,22,4.177,23,1.727,25,4.177,26,1.639,27,2.942,28,2.719,29,4.521,30,4.521,31,4.521,32,4.521,33,4.521,34,4.521,35,0.844,36,0.005,37,0.59,38,0.103,39,0.609,40,0.904,43,0.077,44,1.358,45,0.679,46,0.058,47,1.449,48,1.892,49,1.867,50,4.521,54,3.206,55,3.369,59,3.369,60,3.369,61,0.004,62,0.004,65,1.162,153,3.902,155,4.655,188,4.521,1640,5.584,1641,6.228]],["title/guards/HmacInviteGuard.html",[153,3.183,1642,3.951]],["body/guards/HmacInviteGuard.html",[0,0.282,3,0.037,4,0.037,5,0.037,9,0.052,11,0.953,13,1.205,16,0.87,20,1.174,26,0.808,35,1.019,36,0.005,37,0.712,38,0.124,39,0.735,40,0.778,41,1.787,42,2.171,43,0.048,44,1.252,45,0.743,46,0.037,51,1.857,61,0.003,62,0.003,65,0.728,66,1.018,69,2.546,71,0.674,73,0.811,74,1.697,84,0.963,85,0.383,89,0.896,91,1.474,94,1.806,95,1.697,105,1.033,123,3.695,131,1.913,134,3.482,155,2.294,158,2.596,160,0.983,165,2.383,166,4.878,167,2.393,173,3.728,174,4.557,176,1.704,183,1.59,188,3.891,189,2.445,190,2.059,192,1.08,194,2.466,199,2.066,200,1.305,202,2.632,203,2.229,204,2.533,207,1.226,215,1.877,220,2.293,222,1.524,223,1.262,284,4.234,296,2.877,297,1.764,305,1.578,314,3.234,394,1.919,397,2.596,427,3.5,433,2.294,436,4.234,437,3.036,438,3.036,439,2.877,446,3.036,447,2.877,469,3.728,470,2.632,475,0.787,489,4.759,526,3.218,653,2.877,698,2.294,703,3.234,710,3.234,1044,2.533,1120,4.166,1123,2.294,1124,1.697,1337,4.234,1550,3.03,1568,5.3,1570,3.036,1642,4.467,1643,7.183,1644,3.5,1645,5.15,1646,4.759,1647,5.744,1648,3.903,1649,3.903,1650,5.15,1651,3.903,1652,5.15,1653,6.228,1654,3.903,1655,3.5,1656,3.5,1657,5.15,1658,3.5,1659,3.5,1660,2.745,1661,3.5,1662,3.234,1663,5.15,1664,3.5,1665,3.5,1666,2.745,1667,3.5,1668,3.5,1669,3.5,1670,3.5,1671,3.5,1672,3.5,1673,3.5,1674,3.5,1675,3.5]],["title/classes/HttpAdapter.html",[0,0.249,125,3.183]],["body/classes/HttpAdapter.html",[0,0.321,2,1.085,3,0.061,4,0.061,5,0.061,9,0.088,16,0.757,35,0.886,36,0.005,37,0.619,38,0.108,39,0.64,40,0.746,41,1.714,43,0.101,45,1.017,46,0.083,61,0.004,62,0.004,73,1.153,84,0.924,125,5.116,176,1.851,220,1.995,281,3.153,397,3.691,650,4.409,665,3.288,965,4.409,1371,7.322,1372,6.351,1373,6.874,1376,4.82,1379,7.253,1384,4.82,1395,4.599,1676,5.418,1677,6.539,1678,4.82,1679,4.82,1680,5.418,1681,5.418]],["title/modules/HttpModule.html",[111,2.822,262,3.745]],["body/modules/HttpModule.html",[0,0.227,3,0.043,4,0.043,5,0.043,36,0.005,46,0.043,61,0.003,62,0.003,85,0.414,89,1.061,111,4.161,112,6.539,113,2.895,114,2.895,115,3.116,116,3.116,117,2.999,118,5.053,119,3.116,126,4.373,127,3.116,128,3.116,144,3.406,145,3.406,147,6.208,148,4.209,170,4.209,184,2.895,262,7.586,264,5.815,642,6.208,667,6.239,668,4.143,673,6.239,674,4.143,680,5.982,681,3.828,1042,5.982,1117,6.239,1455,2.272,1474,6.539,1543,6.539,1584,6.239,1622,6.239,1682,4.143,1683,4.143,1684,4.621,1685,4.621,1686,6.208,1687,6.208,1688,4.621,1689,4.621,1690,4.143,1691,4.143,1692,4.621,1693,4.621,1694,4.621,1695,4.621,1696,4.621,1697,4.143,1698,6.485,1699,4.621,1700,3.594,1701,6.485,1702,3.594,1703,4.621,1704,4.143,1705,4.621,1706,4.143,1707,4.621,1708,4.621]],["title/interfaces/IAccessTokenBody.html",[43,0.063,185,3.183]],["body/interfaces/IAccessTokenBody.html",[3,0.058,4,0.058,5,0.058,9,0.083,10,0.952,36,0.005,37,0.584,38,0.169,41,2.602,43,0.098,45,1.115,46,0.081,61,0.004,62,0.004,131,1.738,179,4.37,185,4.93,560,2.537,561,2.367,565,4.7,596,2.971,1057,4.158,1058,4.158,1060,3.101,1061,6.36,1065,6.952,1082,4.158,1084,4.002,1155,3.521,1556,5.8,1595,7.335,1709,1.277,1710,5.109,1711,5.109,1712,5.109]],["title/interfaces/IBodyProps.html",[43,0.063,498,4.21]],["body/interfaces/IBodyProps.html",[0,0.398,3,0.05,4,0.05,5,0.05,8,2.917,9,0.072,10,0.87,11,0.891,18,1.592,20,1.097,36,0.005,37,0.681,38,0.134,40,0.987,41,2.124,43,0.067,44,2.068,45,0.884,46,0.05,61,0.003,62,0.003,65,1.002,66,0.951,67,2.699,68,2.476,71,0.927,72,3.614,74,2.334,76,2.905,78,2.334,79,2.831,80,2.639,81,3.614,85,0.355,86,2.426,87,2.476,89,1.233,90,3.384,91,2.027,93,1.71,94,1.613,95,2.334,96,2.699,97,2.699,98,2.639,100,2.426,103,2.528,104,2.763,105,1.113,106,2.904,107,4.286,108,2.904,109,2.763,110,2.904,181,4.847,392,4.104,397,2.426,491,3.957,492,4.813,496,4.813,498,7.17,499,4.813,500,4.175,501,3.484,502,6.713,503,4.813,504,4.813,505,4.813,506,4.813,507,4.813,508,4.813,509,5.298,510,6.445,511,4.448,512,4.813,513,4.175,514,3.254,515,4.813,1709,1.111]],["title/interfaces/ICheckCep.html",[43,0.063,410,3.573]],["body/interfaces/ICheckCep.html",[0,0.32,3,0.061,4,0.061,5,0.061,9,0.088,10,0.986,36,0.005,38,0.162,43,0.081,45,1.146,46,0.076,61,0.004,62,0.004,176,1.479,281,2.757,344,3.638,405,3.954,406,5.848,408,4.807,410,5.734,411,6.868,412,6.868,413,6.868,414,6.868,415,6.868,1709,1.35]],["title/interfaces/IClass.html",[43,0.063,1345,3.951]],["body/interfaces/IClass.html",[3,0.073,4,0.073,5,0.073,36,0.005,43,0.097,46,0.073,61,0.004,62,0.004,200,1.501,1345,7.083,1350,6.493,1709,1.622,1713,7.836,1714,7.836]],["title/interfaces/ICondominiumRelUserInObject.html",[43,0.063,896,4.21]],["body/interfaces/ICondominiumRelUserInObject.html",[0,0.232,3,0.044,4,0.044,5,0.044,9,0.064,10,0.797,20,1.346,23,1.789,36,0.005,38,0.155,39,0.874,40,0.936,41,2.451,43,0.059,45,1.097,46,0.071,47,1.533,48,1.574,49,1.553,61,0.003,62,0.003,66,1.167,85,0.194,105,0.905,160,1.659,200,0.905,207,2.806,224,2.917,226,3.115,230,4.297,257,1.755,327,4.297,351,2.951,387,2.162,475,1.886,561,3.43,596,3.098,631,2.433,672,3.266,721,2.529,728,2.447,731,3.361,734,3.728,746,2.865,751,2.76,752,4.276,753,3.659,754,2.778,756,1.944,758,2.698,835,5.339,853,4.442,870,4.276,888,3.475,893,3.324,894,3.916,896,6.284,899,3.483,900,2.961,901,3.675,902,3.916,903,3.675,1709,0.978]],["title/interfaces/ICondominiumRelUserProps.html",[43,0.063,816,3.951]],["body/interfaces/ICondominiumRelUserProps.html",[0,0.175,3,0.033,4,0.033,5,0.033,9,0.048,10,0.649,11,0.59,14,1.438,36,0.005,38,0.154,39,0.702,40,0.959,41,1.882,42,2.288,43,0.067,45,0.917,46,0.067,61,0.003,62,0.003,71,0.614,85,0.22,94,0.708,105,1.216,167,1.444,191,2.823,200,1.027,207,2.779,223,1.15,224,2.605,226,3.085,230,4.665,232,1.577,245,2.399,246,2.376,247,1.438,249,1.463,256,2.157,327,4.633,332,2.399,338,2.058,394,1.749,475,1.081,556,2.031,557,1.789,558,1.924,561,3.397,594,1.876,595,1.876,596,3.266,597,3.151,598,3.489,605,1.789,612,3.061,622,3.402,630,5.195,631,1.831,633,5.073,672,3.495,812,2.767,813,4.169,816,5.017,835,5.359,844,2.767,845,5.345,846,2.947,847,2.947,848,4.169,849,2.947,850,2.622,851,2.287,852,2.947,853,3.615,854,2.502,855,2.767,856,2.947,857,2.947,858,2.947,859,2.947,860,5.949,861,2.947,862,6.383,863,2.947,864,2.947,865,2.947,866,4.442,867,4.186,868,2.157,869,2.947,870,2.309,871,2.947,872,2.947,873,2.157,874,2.947,875,4.442,876,2.947,877,2.947,878,3.951,879,2.947,880,2.947,881,2.947,1709,0.736]],["title/interfaces/IConvertToObject.html",[43,0.063,749,3.08]],["body/interfaces/IConvertToObject.html",[0,0.245,3,0.047,4,0.047,5,0.047,9,0.067,10,0.827,20,1.396,23,1.83,36,0.005,37,0.86,38,0.157,39,0.888,40,0.779,41,2.044,43,0.062,45,1.079,46,0.064,47,1.59,48,1.632,49,1.611,61,0.003,62,0.003,66,1.21,85,0.204,105,0.939,160,1.721,200,0.954,211,3.452,344,3.546,351,3.018,356,2.252,361,3.875,387,2.242,475,1.774,525,3.515,559,5.185,560,3.736,561,3.487,596,3.429,629,3.603,631,3.517,670,3.672,721,2.623,728,2.538,731,3.456,734,3.834,735,5.036,738,3.672,739,3.672,740,3.672,741,3.121,744,2.297,745,4.127,748,2.767,749,4.727,751,2.862,752,4.434,753,3.794,754,2.928,756,2.049,757,3.672,758,2.844,759,4.127,760,4.127,761,3.503,762,4.127,1709,1.031]],["title/interfaces/IConvertToObject-1.html",[43,0.053,215,2.043,749,2.575]],["body/interfaces/IConvertToObject-1.html",[0,0.259,3,0.049,4,0.049,5,0.049,9,0.071,10,0.858,20,1.45,23,1.872,36,0.005,38,0.165,39,0.84,40,0.916,41,2.42,43,0.065,45,1.06,46,0.066,47,1.651,48,1.695,49,1.673,61,0.003,62,0.003,66,1.257,85,0.216,105,0.975,131,1.98,160,1.326,200,1.009,207,2.814,351,3.089,387,2.328,475,1.808,526,3.189,596,3.03,721,2.724,728,2.636,731,3.556,734,3.945,744,2.429,748,2.925,749,4.865,751,2.972,752,4.605,753,3.94,754,3.095,756,2.166,757,3.882,758,3.007,900,3.299,1124,2.289,1455,4.406,1461,5.615,1550,3.742,1564,3.192,1709,1.09,1715,4.363,1716,5.23,1717,4.095,1718,2.925,1719,3.703,1720,4.363]],["title/interfaces/IConvertToObject-2.html",[43,0.053,394,2.088,749,2.575]],["body/interfaces/IConvertToObject-2.html",[0,0.254,3,0.049,4,0.049,5,0.049,9,0.07,10,0.849,36,0.005,38,0.156,39,0.935,41,2.505,43,0.087,45,1.11,46,0.066,61,0.003,62,0.003,85,0.288,105,0.964,192,1.433,200,1.524,207,2.95,226,3.276,473,5.457,475,1.853,520,4.253,560,3.865,596,3.22,629,3.7,672,1.893,698,5.523,721,2.693,744,3.235,748,2.876,749,4.823,754,3.044,868,4.253,873,4.253,1347,4.613,1455,4.619,1709,1.072,1718,3.896,1721,4.291,1722,3.361,1723,5.456,1724,4.027,1725,4.291,1726,4.291,1727,4.291,1728,4.291]],["title/interfaces/ICreateOTPInput.html",[43,0.063,1729,3.573]],["body/interfaces/ICreateOTPInput.html",[0,0.316,3,0.06,4,0.06,5,0.06,9,0.087,10,0.978,36,0.005,38,0.134,43,0.11,46,0.087,61,0.004,62,0.004,85,0.331,131,2.271,176,2.004,192,1.781,281,3.136,520,5.36,782,2.747,785,2.557,1347,5.414,1709,1.333,1722,4.178,1729,6.218,1730,5.006,1731,5.687,1732,5.687,1733,4.527,1734,2.799]],["title/interfaces/ICryptCompare.html",[43,0.063,300,3.573]],["body/interfaces/ICryptCompare.html",[0,0.337,3,0.064,4,0.064,5,0.064,9,0.092,10,1.018,36,0.005,38,0.139,43,0.105,45,1.114,46,0.085,61,0.004,62,0.004,123,3.374,176,2.063,220,2.094,281,3.208,299,5.059,300,6.4,303,5.059,305,3.934,306,5.338,307,6.202,442,7.378,1134,5.687,1709,1.421]],["title/interfaces/ICryptHmac.html",[43,0.063,307,3.745]],["body/interfaces/ICryptHmac.html",[0,0.337,3,0.064,4,0.064,5,0.064,9,0.092,10,1.018,36,0.005,38,0.139,43,0.105,45,1.114,46,0.085,61,0.004,62,0.004,123,3.374,176,2.063,220,2.894,281,3.208,299,5.059,300,5.918,303,5.059,305,3.934,306,5.338,307,6.708,442,5.338,1134,5.687,1709,1.421]],["title/interfaces/IDeleteOTPInput.html",[43,0.063,1732,3.573]],["body/interfaces/IDeleteOTPInput.html",[0,0.322,3,0.061,4,0.061,5,0.061,9,0.088,10,0.99,36,0.005,38,0.109,43,0.111,46,0.087,61,0.004,62,0.004,85,0.335,131,2.276,176,2.021,192,1.814,281,3.156,520,5.405,782,2.797,785,2.604,1347,4.822,1709,1.357,1722,4.255,1729,5.753,1730,5.099,1731,5.753,1732,6.27,1733,4.611,1734,2.85]],["title/interfaces/IFindOTPInput.html",[43,0.063,1731,3.573]],["body/interfaces/IFindOTPInput.html",[0,0.322,3,0.061,4,0.061,5,0.061,9,0.088,10,0.99,36,0.005,38,0.109,43,0.111,46,0.087,61,0.004,62,0.004,85,0.335,131,2.276,176,2.021,192,1.814,281,3.156,520,5.405,782,2.797,785,2.604,1347,4.822,1709,1.357,1722,4.255,1729,5.753,1730,5.099,1731,6.27,1732,5.753,1733,4.611,1734,2.85]],["title/interfaces/IFirestoreErrors.html",[43,0.063,1185,4.21]],["body/interfaces/IFirestoreErrors.html",[0,0.209,3,0.04,4,0.04,5,0.04,8,1.976,9,0.057,10,0.739,11,1.014,12,5.022,18,1.26,20,0.868,23,0.927,26,1.62,36,0.005,37,0.92,38,0.13,41,1.876,43,0.053,44,2.117,45,0.941,46,0.04,61,0.003,62,0.003,65,1.14,66,0.753,67,2.137,68,1.96,71,0.733,72,3.073,74,1.848,76,2.47,78,1.848,79,2.241,80,2.089,81,3.073,85,0.321,86,1.921,87,1.96,89,0.976,90,2.877,91,1.605,93,1.354,94,1.425,95,1.848,96,2.137,97,2.137,98,3.004,99,3.394,100,2.762,102,2.498,103,2.877,104,3.146,105,0.983,106,2.299,107,2.762,108,2.299,109,2.188,110,2.299,161,1.579,167,1.144,211,1.748,212,2.635,216,2.997,728,1.579,796,3.489,797,4.467,807,2.36,808,4.483,809,4.22,810,2.866,919,1.394,1045,4.732,1151,3.133,1180,3.133,1181,3.811,1182,3.811,1183,2.758,1185,5.929,1186,5.349,1187,3.305,1188,6.416,1189,4.206,1190,5.274,1191,4.338,1192,3.521,1193,2.989,1194,4.902,1195,3.811,1196,5.589,1197,3.811,1198,3.521,1199,2.989,1200,3.811,1201,3.305,1202,3.811,1205,3.811,1206,3.811,1207,2.758,1208,2.989,1209,2.989,1210,2.576,1211,4.298,1212,3.705,1213,2.576,1214,2.576,1709,0.88]],["title/interfaces/IGatewayError.html",[43,0.063,1507,4.21]],["body/interfaces/IGatewayError.html",[0,0.235,3,0.045,4,0.045,5,0.045,8,2.147,9,0.064,10,0.803,11,0.793,12,4.729,18,1.418,20,0.977,23,1.042,26,0.99,36,0.005,37,0.888,38,0.137,41,2,43,0.059,44,2.045,45,0.978,46,0.045,61,0.003,62,0.003,65,1.239,66,0.847,67,2.404,68,2.205,69,2.119,71,0.825,72,3.339,74,2.078,76,2.684,78,2.078,79,2.521,80,2.35,81,3.339,85,0.338,86,2.161,87,2.205,89,1.098,90,3.127,91,1.805,93,1.523,94,1.519,95,2.078,96,2.404,97,2.404,98,3.265,99,3.688,100,3.002,102,2.81,103,3.127,104,3.418,105,1.048,106,2.586,107,3.002,108,3.592,109,2.461,110,3.592,159,2.002,167,1.287,212,1.323,514,2.898,728,2.467,774,4.67,809,3.974,917,1.616,1005,3.102,1183,3.102,1186,2.81,1189,2.81,1207,3.102,1208,3.362,1209,3.362,1210,2.898,1212,4.626,1213,2.898,1214,2.898,1251,2.729,1366,2.461,1503,3.524,1504,4.286,1505,3.718,1507,6.322,1508,4.286,1509,3.718,1510,4.286,1511,4.286,1512,4.286,1513,4.286,1514,4.286,1515,4.286,1516,3.524,1517,4.286,1518,4.286,1519,4.286,1520,4.286,1521,4.286,1522,4.286,1523,3.961,1525,4.478,1527,5.56,1528,4.286,1529,4.286,1530,5.954,1531,5.954,1709,0.99]],["title/interfaces/IGenerateInviteKeyProps.html",[43,0.063,1735,4.21]],["body/interfaces/IGenerateInviteKeyProps.html",[3,0.058,4,0.058,5,0.058,9,0.083,10,0.955,26,1.283,36,0.005,38,0.151,39,0.895,43,0.077,45,0.676,46,0.074,51,2.003,61,0.004,62,0.004,66,1.098,85,0.254,94,1.234,105,0.851,131,2.194,161,2.302,180,4.164,191,2.952,192,1.715,207,2.872,211,2.549,220,2.408,456,4.358,475,1.845,487,4.568,672,3.343,698,5.377,728,2.302,756,2.549,1044,4.022,1366,4.064,1565,5.135,1626,4.819,1709,1.283,1735,7.198,1736,5.556,1737,5.556,1738,5.135,1739,5.135,1740,5.556,1741,6.197,1742,6.197]],["title/interfaces/IHttpClientCall.html",[43,0.063,1373,3.745]],["body/interfaces/IHttpClientCall.html",[0,0.289,3,0.055,4,0.055,5,0.055,9,0.079,10,0.924,36,0.005,38,0.158,39,0.878,41,1.544,43,0.095,45,1.072,46,0.079,61,0.004,62,0.004,125,3.689,176,1.335,220,1.797,281,2.583,397,4.203,650,5.718,665,4.264,965,6.051,1372,4.58,1373,6.25,1376,4.341,1379,7.728,1384,4.341,1395,6.311,1556,5.631,1676,4.879,1678,6.25,1679,6.25,1680,7.026,1681,7.026,1709,1.219]],["title/interfaces/IHttpClientCallReturn.html",[43,0.063,1376,3.745]],["body/interfaces/IHttpClientCallReturn.html",[0,0.32,3,0.061,4,0.061,5,0.061,9,0.088,10,0.986,36,0.005,38,0.147,41,2.331,43,0.101,45,1.016,46,0.083,61,0.004,62,0.004,125,4.086,176,1.479,220,1.99,281,2.757,397,4.336,650,4.398,665,3.28,965,4.398,1372,5.072,1373,6.009,1376,6.009,1379,7.871,1384,6.868,1395,4.587,1676,5.404,1678,4.807,1679,4.807,1680,5.404,1681,5.404,1709,1.35]],["title/interfaces/IInMemoryContainerProps.html",[43,0.063,1743,3.951]],["body/interfaces/IInMemoryContainerProps.html",[0,0.293,3,0.056,4,0.056,5,0.056,9,0.08,10,0.931,36,0.005,38,0.149,43,0.096,46,0.072,61,0.004,62,0.004,85,0.369,218,2.426,224,3.156,257,2.214,291,1.899,356,2.694,525,3.776,526,3.348,557,2.997,565,3.068,605,2.997,1124,2.591,1709,1.234,1743,6.633,1744,4.938,1745,7.92,1746,7.434,1747,7.92,1748,7.92,1749,6.339,1750,4.019,1751,4.019,1752,4.938]],["title/interfaces/IInMemoryUserContainer.html",[43,0.063,1749,3.573]],["body/interfaces/IInMemoryUserContainer.html",[0,0.307,3,0.058,4,0.058,5,0.058,9,0.084,10,0.96,36,0.005,38,0.144,43,0.099,46,0.074,61,0.004,62,0.004,85,0.376,218,2.752,224,2.948,257,2.319,291,1.989,356,2.822,525,3.323,526,2.946,557,3.14,565,3.214,605,3.14,1124,2.715,1556,5.846,1709,1.293,1743,6.169,1744,5.173,1745,7.223,1746,6.78,1747,7.223,1748,7.223,1749,6.131,1750,4.21,1751,4.21,1752,5.173]],["title/interfaces/IIncomingFirestoreCondominiumData.html",[43,0.063,725,3.745]],["body/interfaces/IIncomingFirestoreCondominiumData.html",[0,0.25,3,0.048,4,0.048,5,0.048,9,0.068,10,0.839,36,0.005,37,0.839,38,0.155,40,1.011,41,2.068,43,0.063,45,1.083,46,0.065,47,1.614,48,1.657,49,1.636,51,2.243,61,0.003,62,0.003,85,0.323,105,0.953,143,2.398,200,0.976,344,3.46,351,2.495,356,2.302,361,3.781,387,3,475,1.709,525,3.304,535,4.074,559,5.059,560,3.761,561,3.51,671,3.961,719,4.22,720,4.567,721,2.663,722,3.754,723,3.582,725,6.243,727,3.961,728,3.146,729,3.988,730,4.502,731,2.257,734,2.504,735,5.113,736,5.341,737,2.622,738,3.754,739,3.754,740,3.754,741,3.191,742,5.395,743,4.879,744,2.349,1709,1.054]],["title/interfaces/IIncomingFirestoreCondominiumRelUserData.html",[43,0.063,885,3.745]],["body/interfaces/IIncomingFirestoreCondominiumRelUserData.html",[0,0.244,3,0.047,4,0.047,5,0.047,9,0.067,10,0.825,36,0.005,38,0.157,40,1.036,41,2.379,43,0.062,45,1.079,46,0.073,47,1.588,48,1.63,49,1.609,51,2.206,61,0.003,62,0.003,85,0.344,105,0.937,143,2.341,200,0.952,207,2.633,224,2.634,226,2.923,230,4.032,257,1.847,327,4.032,351,2.454,387,2.978,475,1.831,535,4.032,561,3.484,672,3.064,721,2.619,722,3.664,723,3.496,727,3.896,728,3.114,729,3.948,730,4.428,731,2.203,734,2.444,736,4.787,737,2.559,743,4.798,835,5.182,882,3.866,883,4.119,885,6.18,888,3.598,889,5.653,890,4.458,891,2.761,892,4.119,1709,1.029]],["title/interfaces/IIncomingFirestoreInviteData.html",[43,0.063,1453,3.745]],["body/interfaces/IIncomingFirestoreInviteData.html",[0,0.261,3,0.05,4,0.05,5,0.05,9,0.071,10,0.863,36,0.005,38,0.163,40,1.026,41,2.426,43,0.066,45,1.062,46,0.067,47,1.661,48,1.705,49,1.682,51,2.307,61,0.003,62,0.003,85,0.33,105,0.98,131,1.903,143,2.501,200,1.017,207,2.705,351,2.567,387,3.037,475,1.738,526,2.994,535,4.144,721,2.74,723,3.735,724,4.4,727,4.074,728,3.201,729,4.057,730,4.631,731,2.354,734,2.611,736,4.919,737,2.734,744,2.449,1124,2.309,1453,6.351,1455,4.419,1461,5.799,1709,1.099,1716,5.26,1718,2.95,1753,4.762,1754,4.4,1755,4.13,1756,6.398]],["title/interfaces/IIncomingFirestoreUserData.html",[43,0.063,1465,3.745]],["body/interfaces/IIncomingFirestoreUserData.html",[0,0.25,3,0.048,4,0.048,5,0.048,9,0.068,10,0.839,36,0.005,37,0.802,38,0.158,40,1.011,43,0.063,45,1.115,46,0.065,47,1.614,48,1.657,49,1.636,51,2.243,61,0.003,62,0.003,85,0.323,105,0.953,131,1.871,143,2.398,200,0.976,218,2.244,291,1.623,351,2.495,368,3.754,387,3,431,4.259,475,1.709,535,4.074,560,3.761,561,3.51,721,2.663,727,3.961,728,3.146,729,3.988,730,4.502,731,2.257,734,2.504,736,5.341,737,2.622,742,5.395,743,4.879,744,2.349,1060,4.259,1465,6.243,1709,1.054,1757,4.567,1758,5.113,1759,3.961,1760,3.961,1761,4.567,1762,4.567]],["title/interfaces/IIndexProps.html",[43,0.063,1763,4.21]],["body/interfaces/IIndexProps.html",[0,0.301,3,0.057,4,0.057,5,0.057,8,1.984,9,0.105,10,0.949,11,1.018,14,2.48,20,1.254,26,1.27,36,0.005,38,0.102,40,0.7,43,0.076,44,1.338,46,0.073,51,1.984,61,0.004,62,0.004,66,1.087,69,2.719,85,0.321,105,1.078,143,2.889,158,2.773,160,1.545,167,1.652,199,2.207,200,1.175,351,2.207,535,2.951,557,3.085,605,3.085,622,3.236,734,3.016,737,3.159,796,4.479,797,3.503,809,2.719,957,7.491,959,4.772,1174,4.523,1176,4.523,1337,4.523,1709,1.27,1763,7.803,1764,5.502,1765,8.637,1766,5.502,1767,5.502,1768,5.502,1769,5.502,1770,5.502,1771,5.502,1772,5.502,1773,5.502,1774,5.502]],["title/interfaces/IInputCondominiumRelUser.html",[43,0.063,813,3.951]],["body/interfaces/IInputCondominiumRelUser.html",[0,0.173,3,0.033,4,0.033,5,0.033,9,0.047,10,0.643,11,0.584,14,1.421,36,0.005,38,0.153,39,0.843,40,0.955,41,2.259,42,2.275,43,0.066,45,1.021,46,0.067,61,0.003,62,0.003,71,0.607,85,0.218,94,0.7,105,1.212,167,1.431,191,2.654,200,1.018,207,2.77,223,1.137,224,2.592,226,3.076,230,4.589,232,1.559,245,2.372,246,2.356,247,1.421,249,1.447,256,2.132,327,4.549,332,2.372,338,2.04,394,1.729,475,1.072,556,2.008,557,1.769,558,1.902,561,3.387,594,1.855,595,1.855,596,3.254,597,3.124,598,3.465,605,1.769,612,3.034,622,3.379,630,5.169,631,1.81,633,5.051,672,3.423,812,2.735,813,4.982,816,4.133,835,5.448,844,2.735,845,5.308,846,2.914,847,2.914,848,4.133,849,2.914,850,2.592,851,2.268,852,2.914,853,3.584,854,2.474,855,2.735,856,2.914,857,2.914,858,2.914,859,2.914,860,5.915,861,2.914,862,6.351,863,2.914,864,2.914,865,2.914,866,4.404,867,4.158,868,2.132,869,2.914,870,2.283,871,2.914,872,2.914,873,2.132,874,2.914,875,4.404,876,2.914,877,2.914,878,3.917,879,2.914,880,2.914,881,2.914,1709,0.728]],["title/interfaces/IInputPropsInvite.html",[43,0.063,1775,3.951]],["body/interfaces/IInputPropsInvite.html",[0,0.234,3,0.045,4,0.045,5,0.045,9,0.064,10,0.801,11,1.099,14,1.925,15,1.833,36,0.005,38,0.164,39,0.648,41,2.456,43,0.082,45,1.002,46,0.071,61,0.003,62,0.003,71,0.822,85,0.271,105,1.287,131,2.15,167,1.784,191,2.602,200,1.716,207,2.942,247,1.925,249,1.959,338,2.543,475,1.536,526,3.058,556,2.719,557,2.395,558,2.576,594,2.512,595,2.512,596,3.267,605,2.395,612,3.781,613,3.211,614,3.211,621,3.211,672,2.783,867,3.091,1455,4.606,1461,5.87,1709,0.986,1718,4.229,1719,4.658,1775,5.922,1776,3.946,1777,3.51,1778,3.946,1779,3.946,1780,3.946,1781,3.51,1782,4.882,1783,3.946,1784,3.946,1785,5.488,1786,3.946,1787,3.946,1788,3.946,1789,3.946,1790,3.51,1791,3.51,1792,3.946,1793,3.946]],["title/interfaces/ILoggerDefaultProps.html",[43,0.063,1268,3.745]],["body/interfaces/ILoggerDefaultProps.html",[0,0.274,3,0.052,4,0.052,5,0.052,9,0.075,10,0.893,36,0.005,37,0.833,38,0.146,43,0.069,45,1.045,46,0.082,56,5.439,61,0.004,62,0.004,65,1.641,76,2.257,86,3.974,100,4.639,103,2.63,146,4.338,176,2.204,180,3.892,279,5.19,281,3.326,946,4.789,1155,3.189,1171,5.439,1267,4.343,1268,7.165,1271,6.48,1273,4.343,1279,4.343,1281,4.343,1283,4.343,1540,5.439,1709,1.156,1794,4.343,1795,6.114,1796,4.628,1797,4.628,1798,3.625,1799,4.117,1800,6.114,1801,6.114,1802,5.008,1803,5.008,1804,5.008]],["title/interfaces/IOTPInObject.html",[43,0.063,1723,3.951]],["body/interfaces/IOTPInObject.html",[0,0.257,3,0.049,4,0.049,5,0.049,9,0.071,10,0.856,36,0.005,38,0.156,39,0.692,41,2.513,43,0.088,45,1.111,46,0.066,61,0.003,62,0.003,85,0.29,105,0.972,192,1.451,200,1.534,207,2.96,226,3.286,473,5.473,475,1.86,520,4.289,560,3.878,596,3.237,629,3.731,672,1.917,698,5.541,721,2.716,744,3.263,748,2.912,749,4.289,754,3.082,868,4.289,873,4.289,1347,4.637,1455,4.634,1709,1.086,1718,3.929,1721,4.345,1722,3.403,1723,6.227,1724,4.078,1725,4.345,1726,4.345,1727,4.345,1728,4.345]],["title/interfaces/IOTPProps.html",[43,0.063,1805,4.21]],["body/interfaces/IOTPProps.html",[0,0.219,3,0.042,4,0.042,5,0.042,9,0.06,10,0.765,11,1.049,14,1.801,36,0.005,38,0.149,39,0.618,40,0.508,41,2.212,42,1.419,43,0.055,45,1.068,46,0.059,61,0.003,62,0.003,71,0.769,85,0.301,105,1.288,167,1.702,200,1.617,207,2.831,226,3.143,233,1.975,247,1.801,338,2.426,394,2.19,473,5.588,475,1.482,520,2.701,556,2.544,557,2.24,558,2.41,560,3.79,594,2.35,595,2.35,596,3.31,605,2.24,612,4.194,619,3.133,628,4.445,629,3.333,672,3.204,698,5.416,850,3.284,867,4.102,868,2.701,873,2.701,878,4.659,1347,4.324,1455,4.529,1457,3.004,1566,3.004,1709,0.922,1718,3.51,1782,3.284,1791,4.659,1805,6.086,1806,3.691,1807,4.915,1808,3.691,1809,5.237,1810,3.995,1811,3.995,1812,3.995,1813,3.995,1814,3.995,1815,3.995,1816,3.995,1817,3.995,1818,3.995,1819,3.995,1820,3.995]],["title/interfaces/IPrismaError.html",[43,0.063,1821,4.21]],["body/interfaces/IPrismaError.html",[0,0.229,3,0.044,4,0.044,5,0.044,8,2.108,9,0.063,10,0.789,11,0.772,12,4.914,18,1.933,20,0.951,26,1.35,36,0.005,37,0.909,38,0.135,41,1.972,43,0.058,44,2.091,45,1.033,46,0.044,61,0.003,62,0.003,65,1.217,66,0.825,67,2.341,68,2.147,71,0.803,72,3.278,74,2.834,76,2.635,78,2.024,80,2.289,81,3.278,83,2.736,85,0.334,86,2.104,87,2.147,89,1.069,90,3.069,91,1.758,93,1.483,94,1.498,95,2.024,96,2.341,97,2.341,98,3.205,99,2.585,100,2.947,102,2.736,103,3.069,104,3.356,105,1.034,106,2.518,107,2.947,108,2.518,109,2.396,110,2.518,167,1.254,212,2.526,216,1.95,473,5.319,768,3.832,775,3.021,808,4.409,1031,2.916,1045,3.722,1183,3.021,1189,2.736,1190,4.805,1191,2.822,1194,4.084,1196,4.396,1207,3.021,1210,2.822,1211,4.585,1212,3.952,1213,2.822,1214,2.822,1244,3.62,1251,2.658,1253,3.431,1397,3.62,1452,6.034,1666,3.274,1709,0.964,1821,6.233,1822,4.174,1823,4.174,1824,3.431,1825,4.174,1826,3.857,1827,4.174,1828,4.174,1829,4.174,1830,4.174,1831,4.174,1832,6.745]],["title/interfaces/IProps.html",[15,1.406,43,0.063]],["body/interfaces/IProps.html",[0,0.225,3,0.043,4,0.043,5,0.043,9,0.062,10,0.779,15,2.063,36,0.005,38,0.076,43,0.057,46,0.043,61,0.003,62,0.003,63,3.56,73,0.647,76,2.604,78,1.99,85,0.417,87,2.111,89,1.052,91,3.431,94,1.283,139,2.971,165,1.833,167,2.382,194,2.446,200,1.234,259,4.531,491,3.375,650,3.087,665,2.302,685,4.749,977,3.793,978,3.56,1001,2.868,1180,3.375,1323,3.56,1354,3.375,1503,3.375,1605,3.375,1633,3.56,1678,3.375,1679,3.375,1702,3.56,1709,0.948,1824,3.375,1833,4.105,1834,7.255,1835,4.105,1836,4.105,1837,5.777,1838,3.793,1839,4.105,1840,3.56,1841,4.105,1842,5.777,1843,4.105,1844,3.375,1845,4.105,1846,4.105,1847,4.105,1848,4.105,1849,4.105,1850,4.105,1851,3.56,1852,4.105,1853,3.56,1854,4.105,1855,5.777,1856,4.105,1857,4.105,1858,4.105,1859,3.56,1860,5.338,1861,4.105,1862,4.105,1863,5.777,1864,4.105,1865,4.105,1866,4.105,1867,4.105,1868,4.105,1869,4.105,1870,4.105,1871,4.105,1872,4.105,1873,4.105,1874,5.338,1875,4.105,1876,5.777,1877,4.105,1878,4.105,1879,4.105,1880,5.777,1881,4.105,1882,4.105,1883,4.105,1884,4.105,1885,4.105,1886,4.105,1887,4.105,1888,4.105,1889,8.665,1890,4.105,1891,4.105,1892,4.105,1893,4.105,1894,4.105,1895,4.105,1896,4.105,1897,4.105,1898,4.105,1899,4.105,1900,4.105,1901,4.105,1902,4.105,1903,4.105,1904,4.105,1905,4.105,1906,4.105]],["title/interfaces/IProps-1.html",[15,1.175,43,0.053,215,2.043]],["body/interfaces/IProps-1.html",[0,0.382,3,0.057,4,0.057,5,0.057,8,1.955,9,0.081,10,0.94,15,2.376,18,1.793,20,1.236,23,1.318,26,1.609,27,2.246,28,2.076,36,0.005,38,0.1,43,0.075,44,1.318,46,0.057,47,1.407,48,1.444,49,1.426,61,0.004,62,0.004,66,1.071,69,2.68,85,0.318,89,1.389,94,1.547,107,2.733,148,3.924,160,1.957,165,1.72,181,5.791,182,5.01,190,3.189,194,1.984,199,2.175,200,1.158,209,5.01,210,4.702,212,1.673,246,2.68,284,4.457,305,2.444,351,2.175,392,4.437,396,3.788,397,4.097,487,4.457,509,4.457,753,3.358,919,2.55,1342,4.077,1428,4.252,1709,1.252,1907,5.422,1908,5.422,1909,5.01,1910,5.422,1911,5.422,1912,5.422,1913,5.01,1914,5.422,1915,5.422,1916,5.01,1917,6.047,1918,7.771,1919,6.047,1920,6.047,1921,6.047,1922,6.047]],["title/interfaces/IProps-10.html",[15,1.175,43,0.053,276,2.756]],["body/interfaces/IProps-10.html",[0,0.226,3,0.043,4,0.043,5,0.043,9,0.062,10,0.782,11,1.239,13,0.964,15,2.067,23,1.002,26,1.337,28,1.578,36,0.005,38,0.141,39,0.793,43,0.057,45,0.931,46,0.043,61,0.003,62,0.003,66,1.144,71,0.793,85,0.381,89,1.055,94,1.488,105,0.888,123,3.672,124,4.391,131,2.113,158,2.077,160,1.157,165,1.837,167,2.182,176,1.042,183,1.788,191,2.438,192,1.272,194,2.659,200,0.88,207,2.781,211,1.89,212,1.272,220,2.833,246,2.037,305,1.857,316,2.365,397,2.077,433,2.701,469,4.192,470,3.099,475,0.927,526,3.506,672,2.962,673,3.232,698,5.019,807,2.552,900,2.879,917,1.554,1029,2.311,1030,2.311,1031,2.879,1036,2.701,1038,3.248,1039,2.424,1120,3.593,1123,2.701,1124,1.998,1307,3.099,1312,3.387,1366,2.365,1455,2.259,1457,4.356,1458,3.807,1549,4.12,1550,3.407,1551,4.12,1558,5.792,1559,3.807,1560,3.807,1561,4.12,1562,3.807,1563,4.12,1564,3.916,1565,3.807,1566,3.099,1567,3.574,1568,3.574,1569,4.12,1570,3.574,1571,4.12,1572,4.12,1573,3.574,1574,3.574,1575,3.387,1576,3.387,1577,3.574,1578,4.12,1579,3.574,1580,3.574,1581,3.574,1582,3.574,1583,4.12,1709,0.951]],["title/interfaces/IProps-11.html",[15,1.175,43,0.053,380,3.131]],["body/interfaces/IProps-11.html",[0,0.242,3,0.046,4,0.046,5,0.046,9,0.066,10,0.82,11,1.286,13,1.032,15,2.144,23,1.82,26,1.403,28,1.69,36,0.005,38,0.112,40,0.562,43,0.061,45,0.537,46,0.046,52,3.319,61,0.003,62,0.003,66,0.872,71,0.85,85,0.38,89,1.131,94,1.743,105,0.676,123,3.331,124,3.983,131,2.142,134,2.984,158,2.225,165,1.927,167,2.248,171,3.246,183,1.875,187,2.475,191,2.633,192,1.362,194,2.739,212,1.362,218,1.4,219,3.195,220,2.364,222,1.922,223,1.591,226,2.911,227,3.084,305,1.989,389,3.628,397,2.225,433,2.893,458,3.628,459,3.828,469,4.398,470,3.319,471,3.828,473,4.767,474,3.319,475,0.993,477,4.078,479,4.078,485,5.27,807,2.734,917,1.664,1029,2.475,1030,2.475,1036,2.893,1038,3.408,1039,2.596,1061,3.319,1307,3.319,1312,3.628,1366,2.534,1457,4.569,1564,2.984,1566,3.319,1573,3.828,1574,3.828,1575,3.628,1576,3.628,1577,3.828,1579,3.828,1580,3.828,1581,3.828,1582,3.828,1584,3.462,1585,4.414,1586,4.414,1587,4.078,1592,4.414,1594,4.414,1595,3.828,1596,3.828,1597,4.414,1598,4.414,1599,4.414,1600,4.414,1601,4.414,1602,4.414,1603,3.628,1604,4.414,1709,1.019]],["title/interfaces/IProps-12.html",[15,1.175,43,0.053,1923,4.247]],["body/interfaces/IProps-12.html",[0,0.31,3,0.059,4,0.059,5,0.059,9,0.085,10,0.967,11,1.049,15,2.426,36,0.005,38,0.105,43,0.079,46,0.059,51,2.044,61,0.004,62,0.004,71,1.091,85,0.378,89,1.452,93,2.014,94,1.259,105,0.869,160,1.592,161,2.349,162,4.661,165,1.798,171,3.673,183,2.213,187,3.18,191,2.772,192,1.75,194,2.075,226,3.384,242,2.427,851,2.698,917,2.138,1029,3.18,1030,3.18,1038,4.021,1039,3.335,1366,3.255,1516,4.661,1622,4.447,1623,5.669,1624,5.669,1625,5.669,1626,4.917,1627,5.669,1630,7.169,1631,5.669,1632,5.239,1709,1.309]],["title/interfaces/IProps-13.html",[15,1.175,43,0.053,1924,4.247]],["body/interfaces/IProps-13.html",[0,0.334,3,0.064,4,0.064,5,0.064,7,3.504,8,2.707,9,0.092,10,1.013,11,1.129,14,2.751,15,2.509,36,0.005,38,0.139,43,0.085,44,2.062,45,0.989,46,0.064,54,3.504,55,3.682,59,3.682,60,3.682,61,0.004,62,0.004,85,0.279,254,4.068,255,2.96,338,3.728,1321,6.511,1322,5.294,1709,1.409,1925,6.104,1926,4.59,1927,6.104]],["title/interfaces/IProps-14.html",[15,1.175,43,0.053,602,2.987]],["body/interfaces/IProps-14.html",[0,0.235,3,0.045,4,0.045,5,0.045,9,0.064,10,0.803,11,1.102,14,1.932,15,2.112,36,0.005,38,0.164,41,2.351,43,0.082,45,0.832,46,0.071,61,0.003,62,0.003,71,0.825,85,0.272,105,1.289,131,2.187,167,1.788,191,2.766,200,1.718,207,2.945,247,1.932,249,1.967,338,2.549,475,1.539,526,3.063,556,2.729,557,2.404,558,2.586,594,2.521,595,2.521,596,3.271,605,2.404,612,3.792,613,3.224,614,3.224,621,3.224,672,3.167,867,3.102,1455,4.61,1461,5.875,1709,0.99,1718,4.238,1719,4.67,1775,5.165,1776,3.961,1777,3.524,1778,3.961,1779,3.961,1780,3.961,1781,3.524,1782,4.895,1783,3.961,1784,3.961,1785,5.502,1786,3.961,1787,3.961,1788,3.961,1789,3.961,1790,3.524,1791,3.524,1792,3.961,1793,3.961]],["title/interfaces/IProps-15.html",[15,1.175,43,0.053,1928,4.247]],["body/interfaces/IProps-15.html",[0,0.287,3,0.055,4,0.055,5,0.055,7,3.01,8,2.459,9,0.079,10,0.92,11,1.262,14,2.363,15,2.339,18,2.506,19,3.339,20,1.195,21,3.248,22,3.084,23,1.658,25,4.011,26,1.75,27,2.172,28,2.007,29,3.339,30,3.339,31,3.339,32,3.339,33,3.339,34,4.342,36,0.005,38,0.14,39,0.744,40,0.667,43,0.073,44,1.951,45,0.922,46,0.071,47,1.361,48,1.397,49,1.379,50,3.339,51,1.891,54,3.01,55,3.163,59,3.163,60,3.163,61,0.004,62,0.004,66,1.036,387,1.919,403,4.31,565,4.895,809,4.215,1155,3.339,1178,4.112,1179,4.112,1186,3.437,1505,4.548,1525,3.943,1527,6.413,1532,4.845,1534,5.243,1536,4.845,1537,4.845,1538,4.845,1539,4.845,1540,4.31,1541,5.243,1542,5.243,1709,1.211]],["title/interfaces/IProps-16.html",[15,1.175,43,0.053,1929,4.247]],["body/interfaces/IProps-16.html",[0,0.268,3,0.051,4,0.051,5,0.051,7,2.812,8,2.643,9,0.073,10,0.88,11,0.906,14,2.208,15,2.262,18,2.424,19,3.119,20,1.486,21,4.038,22,3.835,23,1.782,25,3.835,26,1.505,27,2.029,28,1.875,29,3.119,30,3.119,31,3.119,32,3.119,33,3.119,34,4.152,36,0.005,38,0.12,40,0.83,43,0.068,44,1.9,45,0.892,46,0.068,47,1.271,48,1.305,49,1.288,50,3.119,51,1.766,54,2.812,55,2.955,59,2.955,60,2.955,61,0.004,62,0.004,66,0.968,68,2.519,69,2.421,224,1.847,387,2.386,565,3.743,595,2.881,672,1.997,728,2.029,729,2.572,796,3.119,797,5.328,809,4.022,932,2.812,946,3.545,1149,4.526,1151,4.026,1152,4.248,1153,4.026,1154,4.248,1155,3.119,1156,4.526,1157,4.526,1158,4.526,1159,4.526,1160,4.526,1161,4.526,1162,6.025,1163,4.526,1164,3.422,1165,4.903,1166,4.526,1167,4.898,1168,4.526,1169,4.526,1170,4.526,1171,4.026,1172,4.903,1173,4.526,1174,5.36,1175,4.526,1176,4.026,1177,4.898,1178,3.842,1179,3.842,1709,1.131]],["title/interfaces/IProps-2.html",[15,1.175,43,0.053,394,2.088]],["body/interfaces/IProps-2.html",[0,0.309,1,4.637,3,0.059,4,0.059,5,0.059,6,5.641,7,3.238,8,2.577,9,0.085,10,0.964,11,1.044,12,5.005,14,2.543,15,2.421,18,2.595,19,3.592,20,1.286,21,3.494,22,3.318,23,1.372,24,5.641,25,3.318,26,1.65,27,2.337,28,2.16,29,3.592,30,3.592,31,3.592,32,3.592,33,3.592,34,3.592,36,0.005,38,0.132,39,0.78,40,0.718,41,2.411,42,2.004,43,0.078,44,2.005,45,0.954,46,0.059,47,1.464,48,1.503,49,1.483,50,3.592,51,2.034,52,4.242,53,4.892,54,3.238,55,3.403,56,4.637,57,5.641,58,5.641,59,3.403,60,3.403,61,0.004,62,0.004,1709,1.302]],["title/interfaces/IProps-3.html",[15,1.175,43,0.053,1596,3.303]],["body/interfaces/IProps-3.html",[0,0.298,3,0.057,4,0.057,5,0.057,7,3.128,8,2.783,9,0.082,10,0.943,11,1.008,14,2.456,15,2.382,18,2.553,19,3.469,20,1.242,21,3.374,22,3.205,23,1.325,25,4.111,26,1.258,27,2.257,28,2.086,29,3.469,30,3.469,31,3.469,32,3.469,33,3.469,34,3.469,36,0.005,38,0.129,40,0.693,43,0.075,44,1.98,45,0.939,46,0.057,47,1.414,48,1.451,49,1.433,50,3.469,51,1.964,54,3.128,55,3.287,59,3.287,60,3.287,61,0.004,62,0.004,66,1.076,85,0.249,236,2.086,243,3.943,252,2.861,254,4.025,255,2.642,338,3.688,339,3.572,419,3.287,1314,5.448,1316,4.479,1317,4.725,1318,5.448,1319,5.034,1320,5.448,1321,6.062,1322,4.725,1709,1.258]],["title/interfaces/IProps-4.html",[15,1.175,43,0.053,1930,3.808]],["body/interfaces/IProps-4.html",[0,0.328,3,0.063,4,0.063,5,0.063,7,3.438,8,2.675,9,0.09,10,1.001,14,2.7,15,2.488,18,2.666,19,3.814,20,1.365,21,3.71,22,3.523,23,1.456,25,3.523,26,1.383,27,2.481,28,2.293,29,3.814,30,3.814,31,3.814,32,3.814,33,3.814,34,3.814,36,0.005,38,0.111,40,0.762,43,0.083,44,2.049,45,0.981,46,0.063,47,1.554,48,1.596,49,1.575,50,3.814,54,3.438,55,3.613,59,3.613,60,3.613,61,0.004,62,0.004,153,4.185,155,3.926,188,3.814,1640,5.989,1709,1.383]],["title/interfaces/IProps-5.html",[15,1.175,43,0.053,1931,4.247]],["body/interfaces/IProps-5.html",[0,0.288,3,0.055,4,0.055,5,0.055,7,3.024,8,2.466,9,0.079,10,0.923,11,0.975,14,2.375,15,2.344,18,2.512,19,3.354,20,1.559,21,4.236,22,4.023,23,1.847,25,4.023,26,1.579,27,2.182,28,2.017,29,3.354,30,3.354,31,3.354,32,3.354,33,3.354,34,4.355,36,0.005,38,0.126,40,0.67,43,0.073,44,1.955,45,0.924,46,0.071,47,1.367,48,1.403,49,1.385,50,3.354,51,1.899,54,3.024,55,3.178,59,3.178,60,3.178,61,0.004,62,0.004,66,1.041,68,2.71,69,2.604,351,2.113,387,2.503,729,2.766,753,3.263,809,4.22,1152,4.569,1153,4.33,1154,4.569,1155,3.354,1178,4.132,1179,4.132,1247,3.962,1248,6.421,1709,1.216,1798,3.813,1799,4.33,1932,4.868,1933,6.32,1934,6.32,1935,4.868,1936,4.868]],["title/interfaces/IProps-6.html",[15,1.175,43,0.053,332,2.864]],["body/interfaces/IProps-6.html",[0,0.313,3,0.06,4,0.06,5,0.06,9,0.086,10,0.972,11,1.333,13,1.336,15,2.435,36,0.005,38,0.106,43,0.079,46,0.06,61,0.004,62,0.004,71,1.1,85,0.39,89,1.463,160,1.605,165,1.812,167,2.164,183,2.223,194,2.636,211,2.621,356,2.88,405,4.871,422,4.481,525,4.223,667,4.481,791,4.887,793,4.296,800,4.955,917,2.154,1028,5.713,1029,3.204,1030,3.204,1031,3.992,1032,4.955,1034,5.713,1036,3.745,1038,4.04,1039,3.36,1040,5.713,1041,5.713,1709,1.319]],["title/interfaces/IProps-7.html",[15,1.175,43,0.053,1567,3.303]],["body/interfaces/IProps-7.html",[0,0.235,3,0.045,4,0.045,5,0.045,9,0.064,10,0.803,11,0.793,15,2.112,23,1.448,26,1.375,36,0.005,37,0.781,38,0.126,43,0.082,45,0.724,46,0.045,51,1.546,61,0.003,62,0.003,71,0.825,85,0.368,89,1.098,93,1.523,94,1.786,105,1.048,131,1.981,165,2.17,167,1.788,170,4.952,179,2.655,183,1.838,184,2.995,185,2.995,191,2.295,192,1.323,194,2.705,197,4.478,198,3.362,218,2.743,226,1.667,227,2.995,230,3.67,291,1.523,327,3.67,475,0.964,560,2.732,561,2.549,565,2.461,596,2.507,672,2.789,851,2.04,917,1.616,1029,2.404,1030,2.404,1038,3.339,1039,2.521,1042,3.224,1043,3.961,1044,3.102,1045,2.729,1046,3.961,1050,3.961,1051,6.738,1053,3.961,1057,3.224,1058,3.224,1059,3.961,1060,4.146,1061,5.56,1062,3.961,1063,3.961,1064,5.502,1065,4.895,1066,3.718,1067,3.961,1068,3.961,1069,3.961,1070,3.961,1071,3.961,1072,3.961,1073,3.961,1074,5.502,1075,3.718,1076,3.961,1077,3.961,1078,3.961,1079,3.718,1080,3.961,1081,3.718,1082,4.478,1083,3.961,1084,4.31,1085,3.961,1709,0.99]],["title/interfaces/IProps-8.html",[15,1.175,43,0.053,600,2.864]],["body/interfaces/IProps-8.html",[0,0.251,3,0.048,4,0.048,5,0.048,9,0.069,10,0.84,11,1.153,13,1.07,15,2.185,36,0.005,38,0.14,39,0.829,40,0.582,42,2.213,43,0.063,46,0.048,61,0.003,62,0.003,71,0.881,85,0.39,89,1.172,94,1.573,123,3.415,134,3.094,160,1.285,161,1.896,165,1.452,167,1.871,183,1.922,192,1.412,194,2.279,200,1.331,207,1.603,218,2.778,224,2.866,226,1.779,230,4.645,257,1.896,291,1.626,327,4.645,431,2.567,433,3,526,3.538,672,1.866,835,5.223,851,2.178,853,3.442,870,3.312,901,3.969,903,3.969,917,1.726,1029,2.567,1030,2.567,1031,3.198,1032,3.969,1038,3.493,1039,2.692,1117,3.59,1118,4.576,1120,3.798,1123,3,1124,2.219,1125,4.576,1126,4.576,1127,4.576,1128,4.576,1129,4.576,1130,4.576,1131,4.576,1132,4.576,1133,4.576,1709,1.057]],["title/interfaces/IProps-9.html",[15,1.175,43,0.053,601,3.131]],["body/interfaces/IProps-9.html",[0,0.293,3,0.056,4,0.056,5,0.056,9,0.08,10,0.931,11,0.989,15,2.36,23,1.299,36,0.005,38,0.127,39,0.753,43,0.074,44,1.299,46,0.056,61,0.004,62,0.004,71,1.029,85,0.383,89,1.369,93,1.899,131,2.148,160,1.501,161,2.214,165,1.695,171,3.572,183,2.13,187,2.997,192,1.649,194,1.955,199,2.144,200,1.141,212,1.649,220,1.818,387,1.955,680,4.019,714,7.434,715,7.92,809,2.641,851,2.543,917,2.015,1029,2.997,1030,2.997,1038,3.871,1039,3.143,1243,5.344,1244,5.987,1247,5.191,1248,4.019,1249,4.635,1250,5.344,1251,3.403,1252,4.635,1253,4.393,1254,5.344,1255,3.868,1256,5.344,1257,4.635,1258,5.344,1709,1.234]],["title/interfaces/IPropsCondominium.html",[43,0.063,568,4.21]],["body/interfaces/IPropsCondominium.html",[0,0.188,3,0.036,4,0.036,5,0.036,9,0.051,10,0.685,11,0.635,36,0.005,37,0.924,38,0.158,40,0.906,41,1.483,43,0.048,45,0.939,46,0.063,61,0.003,62,0.003,71,0.66,85,0.232,94,0.762,105,1.24,167,1.524,191,2.026,200,1.693,233,2.508,245,2.579,246,1.695,247,1.546,249,1.574,338,2.173,344,3.806,355,2.483,361,4.16,394,1.881,475,1.502,525,3.328,555,2.975,556,2.184,557,1.924,558,2.069,559,5.566,560,3.777,561,3.465,562,3.43,563,4.689,568,5.581,594,2.018,595,2.018,596,3.628,597,4.376,598,4.026,599,2.82,600,2.579,601,2.82,602,2.69,603,2.975,604,3.169,605,1.924,606,3.43,607,3.43,608,3.43,609,3.43,610,3.43,611,3.43,612,3.231,613,2.579,614,2.579,615,2.975,616,3.43,617,3.43,618,3.43,619,2.69,620,2.975,621,2.579,622,2.018,623,3.43,624,3.43,625,3.43,626,3.43,627,3.43,628,3.98,629,2.018,630,3.816,631,1.969,632,4.401,633,4.663,634,2.975,635,3.43,636,3.43,637,3.43,638,5.074,639,3.43,640,5.074,641,3.43,1709,0.792]],["title/interfaces/IPropsUser.html",[43,0.063,1937,4.21]],["body/interfaces/IPropsUser.html",[0,0.175,3,0.033,4,0.033,5,0.033,9,0.048,10,0.649,11,0.59,14,1.438,36,0.005,37,0.913,38,0.158,40,0.924,43,0.044,45,0.999,46,0.06,61,0.003,62,0.003,71,0.614,85,0.22,94,0.708,105,1.239,131,2.128,167,1.444,191,1.94,200,1.695,218,2.191,232,1.577,233,2.376,247,1.438,249,1.463,276,2.309,338,2.058,368,4.27,373,1.876,380,2.622,394,1.749,431,4.844,475,1.448,556,2.031,557,1.789,558,1.924,560,3.71,561,3.462,594,1.876,595,1.876,596,3.579,597,4.221,598,4.167,599,2.622,600,2.399,602,2.502,605,1.789,612,3.061,613,2.399,614,2.399,615,2.767,619,3.77,620,4.169,621,2.399,622,1.876,628,2.502,629,2.827,630,2.399,631,2.759,632,4.169,633,4.826,634,2.767,741,2.229,744,1.641,1060,4.844,1300,2.767,1660,2.502,1709,0.736,1777,2.622,1781,2.622,1790,3.951,1937,5.345,1938,2.767,1939,4.442,1940,2.767,1941,2.767,1942,3.19,1943,3.19,1944,3.19,1945,3.19,1946,3.19,1947,3.19,1948,3.19,1949,3.19,1950,3.19,1951,2.947,1952,3.19,1953,2.947,1954,3.19,1955,2.947,1956,3.19,1957,3.19,1958,3.19,1959,4.807,1960,3.19,1961,4.807,1962,3.19,1963,4.807,1964,3.19]],["title/interfaces/IRefreshTokenBody.html",[43,0.063,1057,3.426]],["body/interfaces/IRefreshTokenBody.html",[3,0.058,4,0.058,5,0.058,9,0.083,10,0.955,36,0.005,37,0.587,38,0.167,41,2.604,43,0.098,45,1.125,46,0.081,61,0.004,62,0.004,131,2.087,179,4.384,185,3.882,560,2.549,561,2.379,565,3.19,596,2.981,1057,5.323,1058,4.179,1060,3.116,1061,6.37,1065,6.963,1082,4.179,1084,4.022,1155,3.538,1595,7.346,1709,1.283,1710,5.135,1711,5.135,1712,5.135]],["title/interfaces/ISendMailContent.html",[43,0.063,1306,3.951]],["body/interfaces/ISendMailContent.html",[0,0.342,3,0.065,4,0.065,5,0.065,9,0.094,10,1.027,36,0.005,38,0.158,43,0.086,45,1.133,46,0.08,61,0.004,62,0.004,124,4.091,176,1.578,281,2.869,305,2.813,397,4.308,1303,6.24,1304,5.412,1306,7.121,1307,6.428,1709,1.441]],["title/classes/IService.html",[0,0.249,1038,2.555]],["body/classes/IService.html",[0,0.308,2,1.041,3,0.059,4,0.059,5,0.059,9,0.084,16,0.727,20,1.626,23,2.003,26,1.647,35,0.85,36,0.005,37,0.594,38,0.145,39,0.614,40,0.716,46,0.059,61,0.004,62,0.004,65,1.171,66,1.41,73,1.124,84,0.886,176,1.804,281,3.107,350,3.274,456,5.596,566,4.073,577,5.892,756,3.274,851,3.395,917,2.69,1036,4.677,1038,4.001,1222,7.135,1361,6.188,1366,4.096,1427,5.865,1750,4.231,1798,5.164,1965,5.627,1966,7.957,1967,7.957,1968,7.957,1969,7.957,1970,7.957,1971,8.239,1972,6.275,1973,7.835]],["title/interfaces/IServiceErrors.html",[43,0.063,1974,4.21]],["body/interfaces/IServiceErrors.html",[0,0.235,3,0.045,4,0.045,5,0.045,8,2.147,9,0.064,10,0.803,11,0.793,12,4.851,18,1.418,20,0.977,23,1.042,26,0.99,36,0.005,37,0.902,38,0.137,41,2,43,0.059,44,2.076,45,0.978,46,0.045,61,0.003,62,0.003,65,1.239,66,1.177,67,2.404,68,2.205,69,2.119,71,0.825,72,3.339,74,2.078,76,2.684,78,2.078,79,2.521,80,2.35,81,3.339,85,0.338,86,2.161,87,2.205,89,1.098,90,3.127,91,1.805,93,1.523,94,1.519,95,2.078,96,2.404,97,2.404,98,3.265,99,3.688,100,3.002,102,2.81,103,3.127,104,3.418,105,1.048,106,2.586,107,3.002,108,2.586,109,2.461,110,2.586,167,1.287,212,1.838,341,3.362,514,2.898,807,2.655,808,3.592,809,4.076,919,1.569,1045,2.729,1183,3.102,1186,2.81,1191,4.026,1193,3.362,1194,2.995,1196,3.224,1199,3.362,1207,3.102,1208,3.362,1209,3.362,1210,2.898,1212,4.026,1213,2.898,1214,2.898,1247,4.478,1248,5.56,1249,3.718,1251,2.729,1257,3.718,1452,3.362,1709,0.99,1798,3.102,1844,3.524,1974,6.322,1975,4.286,1976,4.286,1977,3.961,1978,4.286,1979,4.286,1980,4.286,1981,4.286,1982,4.286,1983,4.286,1984,4.286,1985,3.961,1986,3.718,1987,4.286,1988,5.954]],["title/interfaces/ISuccess.html",[43,0.063,1989,4.21]],["body/interfaces/ISuccess.html",[0,0.249,3,0.047,4,0.047,5,0.047,9,0.068,10,0.836,11,0.84,18,1.501,36,0.005,38,0.161,43,0.063,44,1.104,45,1.143,46,0.047,61,0.003,62,0.003,71,0.874,85,0.346,89,1.163,93,1.613,94,1.376,105,0.696,125,4.926,165,1.44,176,1.148,183,1.912,190,2.67,194,1.661,199,1.821,200,0.97,223,1.637,305,2.046,344,3.452,397,2.288,405,4.188,408,3.731,410,3.56,411,3.731,412,3.731,413,3.731,414,3.731,415,6.517,422,3.56,809,2.244,965,3.414,1395,3.56,1509,3.937,1525,4.658,1527,3.414,1547,3.937,1709,1.048,1916,4.195,1989,6.515,1990,4.539,1991,7.575,1992,7.575,1993,7.575,1994,7.575,1995,7.575,1996,7.575,1997,7.575,1998,7.575,1999,4.539,2000,4.539,2001,6.194,2002,4.539,2003,4.539,2004,4.539,2005,4.195,2006,4.195,2007,4.539,2008,4.539,2009,4.539,2010,4.539,2011,4.539,2012,4.539]],["title/interfaces/IUntrackableErrors.html",[43,0.063,1610,4.21]],["body/interfaces/IUntrackableErrors.html",[0,0.25,3,0.048,4,0.048,5,0.048,8,2.548,9,0.068,10,0.838,11,1.149,12,4.67,18,2.054,20,1.039,26,1.052,36,0.005,37,0.886,38,0.14,41,2.066,43,0.063,44,2.039,45,1.053,46,0.048,61,0.003,62,0.003,65,1.293,66,0.901,67,2.556,68,2.344,71,0.877,72,3.483,74,3.012,76,2.8,78,2.21,79,2.681,80,2.499,81,3.483,85,0.323,86,2.298,87,2.344,89,1.168,90,3.262,91,1.919,93,1.619,94,1.569,95,2.21,96,2.556,97,2.556,98,3.406,99,2.823,100,3.131,103,3.262,104,2.617,105,1.083,106,2.75,107,3.131,108,2.75,109,3.566,110,3.747,167,1.369,220,2.702,338,1.951,808,3.747,919,1.668,1164,3.185,1165,3.428,1186,4.072,1191,4.2,1193,3.575,1194,3.185,1210,3.082,1211,3.575,1212,4.2,1213,3.082,1214,3.082,1605,3.747,1606,4.558,1607,4.558,1608,4.558,1610,6.529,1611,4.558,1614,4.558,1615,4.558,1616,4.558,1617,4.558,1618,4.558,1619,6.211,1620,6.211,1621,4.558,1709,1.052]],["title/interfaces/IUserDataCore.html",[43,0.063,1051,3.951]],["body/interfaces/IUserDataCore.html",[0,0.212,3,0.04,4,0.04,5,0.04,9,0.058,10,0.748,11,0.716,15,1.71,23,1.347,26,1.279,36,0.005,37,0.881,38,0.158,39,0.771,43,0.077,45,0.674,46,0.04,51,1.395,61,0.003,62,0.003,71,0.745,85,0.356,89,0.991,93,1.375,94,1.728,105,0.992,131,2.11,165,2.053,167,1.664,170,4.684,179,2.397,183,1.71,184,2.704,185,2.704,191,2.508,192,1.194,194,2.585,197,4.167,198,3.035,218,2.372,226,1.505,227,2.704,230,4.394,291,1.375,327,4.394,475,1.59,560,3.43,561,3.201,565,2.222,596,3.276,672,3.34,851,1.842,917,1.459,1029,2.17,1030,2.17,1038,3.107,1039,2.276,1042,2.91,1043,3.576,1044,2.801,1045,2.464,1046,3.576,1050,3.576,1051,6.128,1053,3.576,1057,2.91,1058,2.91,1059,3.576,1060,4.677,1061,5.313,1062,3.576,1063,3.576,1064,5.12,1065,4.555,1066,3.357,1067,3.576,1068,3.576,1069,3.576,1070,3.576,1071,3.576,1072,3.576,1073,3.576,1074,5.12,1075,3.357,1076,3.576,1077,3.576,1078,3.576,1079,3.357,1080,3.576,1081,3.357,1082,4.167,1083,3.576,1084,4.01,1085,3.576,1709,0.894]],["title/interfaces/IUserInObject.html",[43,0.063,2013,4.21]],["body/interfaces/IUserInObject.html",[0,0.236,3,0.045,4,0.045,5,0.045,9,0.065,10,0.806,20,1.361,23,1.801,36,0.005,37,0.85,38,0.158,39,0.878,40,0.872,43,0.06,45,1.126,46,0.072,47,1.549,48,1.591,49,1.57,61,0.003,62,0.003,66,1.18,85,0.197,105,0.915,131,1.983,160,1.209,161,2.473,200,0.919,218,2.349,351,2.971,368,3.979,387,2.185,431,4.515,475,1.811,560,3.788,561,3.535,596,3.544,629,3.512,631,3.428,721,2.556,728,2.473,731,3.389,734,3.759,744,2.213,748,2.665,751,2.789,752,4.321,753,3.698,754,2.821,756,1.974,758,2.74,761,3.375,1060,4.515,1564,2.909,1709,0.993,1758,4.908,2013,6.335,2014,3.976,2015,4.303,2016,3.537,2017,3.976,2018,3.976,2019,3.976]],["title/interfaces/IValidate.html",[43,0.063,1653,4.21]],["body/interfaces/IValidate.html",[0,0.306,3,0.041,4,0.041,5,0.041,9,0.059,10,0.753,11,1.033,13,0.915,20,0.891,26,0.903,36,0.005,38,0.12,40,0.498,41,1.143,42,1.39,43,0.054,44,1.357,45,0.913,46,0.041,51,1.41,61,0.003,62,0.003,66,0.773,69,1.933,71,0.753,74,1.896,85,0.392,89,1.002,91,1.647,94,1.857,105,1.088,123,3.061,131,2.136,134,2.644,158,1.971,160,1.098,165,1.771,166,4.04,167,2.132,173,2.831,174,3.774,176,1.411,183,1.723,188,4.145,189,2.732,190,2.3,192,1.207,194,2.598,199,2.239,200,1.391,202,2.941,203,2.49,204,2.831,207,1.37,215,2.098,220,2.416,222,1.703,223,1.41,296,3.215,297,1.971,305,1.763,314,3.614,394,2.144,397,2.814,433,2.564,436,4.589,437,3.392,438,3.392,439,3.215,446,3.392,447,3.215,469,4.04,470,2.941,475,0.88,489,5.158,526,3.592,653,3.215,698,2.564,703,3.614,710,3.614,1044,2.831,1120,3.492,1123,2.564,1124,1.896,1337,3.215,1550,3.283,1568,6.77,1570,3.392,1642,3.392,1643,3.911,1644,3.911,1645,3.911,1646,3.614,1650,3.911,1652,3.911,1653,6.015,1655,3.911,1656,3.911,1657,5.582,1658,3.911,1659,3.911,1660,3.067,1661,3.911,1662,3.614,1663,5.582,1664,3.911,1665,3.911,1666,3.067,1667,3.911,1668,3.911,1669,3.911,1670,3.911,1671,3.911,1672,3.911,1673,3.911,1674,3.911,1675,3.911,1709,0.903]],["title/interfaces/IValidateSignedCookie.html",[43,0.063,970,3.951]],["body/interfaces/IValidateSignedCookie.html",[0,0.342,3,0.065,4,0.065,5,0.065,9,0.094,10,1.027,36,0.005,38,0.152,43,0.086,45,1.098,46,0.086,61,0.004,62,0.004,122,4.693,139,6.186,176,1.578,220,2.908,271,4.894,281,2.869,305,2.813,967,5.766,968,5.766,970,7.121,972,6.6,1709,1.441]],["title/classes/InMemoryCondominium.html",[0,0.249,2020,4.556]],["body/classes/InMemoryCondominium.html",[0,0.209,2,0.705,3,0.04,4,0.04,5,0.04,9,0.057,10,0.739,13,0.891,16,1.03,35,1.123,36,0.005,37,0.842,38,0.147,39,0.811,40,0.985,44,1.332,46,0.04,61,0.003,62,0.003,71,1.055,73,0.863,84,1.105,85,0.354,94,1.217,105,0.84,165,2.737,176,2.063,191,1.838,192,1.176,199,2.198,200,1.17,233,4.265,236,1.459,246,3.468,254,1.78,255,1.848,297,1.921,316,4.027,338,2.346,344,2.386,356,1.921,361,2.607,418,4.825,419,2.299,525,3.472,622,4.126,644,2.954,778,4.089,782,2.607,783,4.825,785,3.108,786,4.825,788,5.82,791,3.974,792,2.866,793,2.866,1164,2.662,1172,2.866,1751,5.589,1926,4.825,2020,5.479,2021,4.25,2022,7.155,2023,5.063,2024,6.111,2025,3.521,2026,4.25,2027,4.25,2028,4.25,2029,4.25,2030,4.25,2031,3.305,2032,4.25,2033,4.25,2034,3.305,2035,6.868,2036,6.111,2037,4.25,2038,6.111,2039,3.305,2040,4.25,2041,3.305,2042,4.25,2043,4.25,2044,4.25,2045,3.811,2046,3.521]],["title/classes/InMemoryContainer.html",[0,0.249,1751,3.426]],["body/classes/InMemoryContainer.html",[0,0.291,2,0.984,3,0.056,4,0.056,5,0.056,9,0.08,10,0.929,16,0.889,36,0.005,38,0.098,43,0.095,46,0.072,61,0.004,62,0.004,73,1.084,84,0.838,85,0.369,218,2.42,224,2.877,236,2.036,257,2.203,291,1.89,297,2.681,356,2.681,525,3.215,526,2.851,557,4.279,565,3.053,577,4,605,2.983,1124,2.579,1743,6.617,1744,4.914,1745,7.455,1746,6.998,1747,7.455,1748,7.455,1749,5.398,1750,4,1751,5.175,1752,7.455,2047,5.931,2048,5.931]],["title/classes/InMemoryError.html",[0,0.249,1926,3.426]],["body/classes/InMemoryError.html",[0,0.326,2,1.102,3,0.062,4,0.062,5,0.062,7,4.245,8,2.9,9,0.089,10,0.998,11,1.488,13,1.393,14,3.333,15,2.595,16,0.955,35,0.9,36,0.005,37,0.629,38,0.137,39,0.65,40,0.758,43,0.083,44,1.449,45,0.725,46,0.062,54,3.42,55,3.594,59,3.594,60,3.594,61,0.004,62,0.004,85,0.272,254,3.929,255,2.888,338,3.601,1321,6.414,1322,5.167,1925,5.957,1926,5.561,1927,5.957,2049,8.247]],["title/classes/InMemoryInvite.html",[0,0.249,2050,4.556]],["body/classes/InMemoryInvite.html",[0,0.186,2,0.627,3,0.035,4,0.035,5,0.035,9,0.051,10,0.678,13,0.792,16,1.06,35,1.162,36,0.005,37,0.812,38,0.152,39,0.839,40,1.005,44,1.458,46,0.035,61,0.003,62,0.003,71,0.968,73,0.792,84,1.17,85,0.324,94,1.574,105,0.519,165,2.785,176,2.105,199,2.406,200,1.281,218,1.075,233,3.987,236,1.297,246,3.903,254,1.583,255,1.643,297,1.708,338,2.567,418,4.509,419,2.044,525,1.583,526,2.936,644,2.794,665,3.721,778,3.911,782,2.393,785,3.139,929,2.587,1120,3.216,1123,2.221,1124,1.643,1164,3.513,1172,2.548,1662,3.131,1734,1.643,1749,4.703,1751,5.33,1926,4.99,2023,4.647,2025,3.131,2031,2.939,2034,2.939,2039,2.939,2041,2.939,2045,3.388,2046,3.131,2050,5.029,2051,3.779,2052,6.688,2053,5.996,2054,4.792,2055,5.608,2056,3.779,2057,3.779,2058,4.19,2059,3.779,2060,3.513,2061,3.779,2062,5.188,2063,3.779,2064,5.188,2065,3.779,2066,3.779,2067,2.939,2068,4.19,2069,3.779,2070,2.367,2071,3.779,2072,3.779,2073,3.388,2074,3.388,2075,7.904,2076,3.779,2077,3.131,2078,6.688,2079,5.608,2080,3.388,2081,3.779,2082,3.779,2083,3.779,2084,3.779,2085,3.779,2086,3.779,2087,3.779,2088,7.399,2089,5.608,2090,3.779,2091,3.131]],["title/classes/InMemoryOTP.html",[0,0.249,2092,4.556]],["body/classes/InMemoryOTP.html",[0,0.226,2,0.765,3,0.043,4,0.043,5,0.043,9,0.062,10,0.784,16,0.99,35,1.014,36,0.005,37,0.709,38,0.142,39,0.732,40,0.854,44,1.006,46,0.043,61,0.003,62,0.003,71,1.118,73,0.915,84,1.057,85,0.333,94,1.491,105,0.634,165,2.687,176,2.01,199,1.659,200,0.883,215,3.6,220,1.407,233,4.418,236,2.57,246,3.929,254,1.932,255,2.005,297,2.927,338,1.771,418,5.047,419,2.495,502,5.366,644,3.065,665,4.082,778,3.529,782,2.763,785,2.572,929,3.452,1164,2.889,1347,3.503,1722,2.993,1729,5.709,1731,5.709,1732,5.709,1733,5.264,1734,2.816,1926,4.367,2031,3.587,2034,5.037,2035,6.202,2039,3.587,2041,5.037,2091,5.366,2092,5.807,2093,4.612,2094,7.485,2095,4.612,2096,4.612,2097,4.612,2098,4.612,2099,4.612,2100,4.612,2101,6.477,2102,8.117,2103,7.485,2104,4.612,2105,4.612,2106,4.612,2107,4.612,2108,5.807,2109,4.612]],["title/classes/InMemoryUser.html",[0,0.249,2110,4.556]],["body/classes/InMemoryUser.html",[0,0.159,2,0.539,3,0.03,4,0.03,5,0.03,9,0.044,10,0.605,13,0.681,16,1.019,35,1.139,36,0.005,37,0.796,38,0.146,39,0.822,40,1.004,42,1.034,44,1.09,46,0.03,61,0.002,62,0.002,71,0.863,73,0.706,84,1.15,85,0.344,94,1.621,105,1.118,131,1.347,165,2.781,171,2.554,176,2.111,187,1.632,191,1.834,192,0.898,199,1.799,200,0.958,218,1.948,220,0.99,224,2.316,233,4.166,236,1.115,246,3.902,254,1.36,255,1.411,257,1.206,291,1.034,297,1.467,316,3.808,338,1.919,368,2.216,418,4.112,419,1.756,565,1.671,622,3.901,644,2.586,665,3.444,778,3.748,782,2.133,785,2.938,873,1.968,888,2.637,891,1.803,893,2.283,929,2.306,1164,2.034,1172,2.189,1734,2.174,1749,4.288,1751,4.988,1926,4.112,2023,4.143,2025,2.69,2031,2.525,2034,2.525,2035,6.473,2039,2.525,2041,2.525,2046,2.69,2053,5.467,2073,2.911,2074,2.911,2080,4.483,2091,2.69,2108,4.483,2110,4.483,2111,3.246,2112,4.348,2113,4.348,2114,5,2115,3.246,2116,3.957,2117,3.246,2118,3.697,2119,3.246,2120,4.736,2121,3.246,2122,4.736,2123,3.246,2124,3.246,2125,2.525,2126,3.697,2127,3.246,2128,2.525,2129,3.697,2130,3.246,2131,1.968,2132,3.246,2133,3.246,2134,3.246,2135,5,2136,3.246,2137,3.246,2138,3.246,2139,2.911,2140,5,2141,5,2142,3.246,2143,5,2144,3.246,2145,3.246,2146,3.246,2147,3.246,2148,3.246,2149,3.246,2150,5,2151,3.246,2152,3.246,2153,3.246,2154,2.911,2155,3.246,2156,3.246]],["title/classes/Index.html",[0,0.249,9,0.068]],["body/classes/Index.html",[0,0.269,2,0.908,3,0.051,4,0.051,5,0.051,8,1.77,9,0.11,10,0.881,11,1.358,13,1.148,14,2.943,16,1.01,20,1.488,26,1.507,35,0.742,36,0.005,37,0.519,38,0.121,39,0.536,40,0.831,43,0.068,44,1.194,46,0.068,51,2.354,61,0.004,62,0.004,66,1.29,69,3.227,73,1.028,84,0.773,85,0.298,105,1.001,143,2.578,158,3.291,160,1.834,167,2.204,199,1.969,200,1.049,235,3.291,351,2.619,535,3.502,557,4.115,605,2.753,622,2.887,734,3.58,737,2.818,796,4.158,797,3.126,809,2.426,957,7.062,959,6.783,1174,4.035,1176,4.035,1337,5.367,1763,8.019,1764,4.909,1765,7.82,1766,4.909,1767,6.529,1768,6.529,1769,4.909,1770,4.909,1771,4.909,1772,6.529,1773,6.529,1774,4.909,2157,7.282,2158,4.909,2159,5.475,2160,5.475,2161,5.475]],["title/classes/Invite.html",[0,0.249,526,1.887]],["body/classes/Invite.html",[0,0.209,2,0.706,3,0.04,4,0.04,5,0.04,9,0.057,10,0.74,11,1.433,13,0.893,14,2.473,15,1.982,16,1.103,35,0.829,36,0.005,37,0.58,38,0.158,39,0.599,40,0.698,41,2.052,43,0.076,45,0.905,46,0.067,61,0.003,62,0.003,71,1.056,73,0.864,84,0.864,85,0.251,105,1.251,131,2.078,167,2.325,191,2.597,200,1.654,207,2.794,234,2.822,235,2.766,247,2.473,249,2.517,338,2.75,475,1.795,526,3.382,556,4.089,557,3.602,558,4.235,566,2.763,571,3.138,594,2.245,595,2.245,596,2.704,605,2.141,612,3.493,613,2.871,614,2.871,621,2.871,672,2.618,824,3.527,867,2.763,1455,4.374,1461,5.574,1718,3.978,1719,4.303,1775,6.089,1776,3.527,1777,3.138,1778,3.527,1779,3.527,1780,3.527,1781,3.138,1782,4.51,1783,3.527,1784,3.527,1785,5.069,1786,3.527,1787,3.527,1788,3.527,1789,3.527,1790,3.138,1791,3.138,1792,3.527,1793,3.527,2162,6.118,2163,4.257,2164,4.257,2165,4.257,2166,3.817,2167,4.257,2168,3.817,2169,4.257,2170,4.257,2171,4.257,2172,4.257,2173,4.257,2174,4.257,2175,4.257]],["title/injectables/InviteFirestore.html",[183,1.406,1482,4.21]],["body/injectables/InviteFirestore.html",[0,0.145,3,0.028,4,0.028,5,0.028,8,0.955,9,0.077,11,0.771,13,0.974,16,0.91,35,1.065,36,0.005,37,0.745,38,0.13,39,0.769,40,0.929,42,2.074,44,1.419,45,0.507,46,0.028,61,0.002,62,0.002,71,0.51,73,0.656,84,1.061,85,0.364,89,0.678,94,1.854,105,0.894,131,0.652,160,0.744,161,2.133,165,2.691,167,1.251,176,2.015,183,1.285,194,2.672,199,2.341,200,1.356,207,1.459,211,1.215,212,1.285,215,1.421,218,1.321,223,0.955,224,1.941,226,2.467,243,1.917,246,2.059,351,1.062,368,1.309,474,1.992,475,1.313,522,4.389,523,1.421,526,2.418,528,4.224,535,2.761,546,2.447,554,2.177,644,1.754,665,2.887,702,2.648,778,3.418,782,1.982,785,2.811,796,4.041,797,1.686,802,2.297,803,2.177,806,2.177,807,2.58,808,2.513,809,2.885,810,1.992,891,1.64,893,2.077,936,2.447,938,3.849,943,2.648,944,2.297,946,3.015,947,3.849,948,2.648,949,2.648,950,2.447,957,2.297,959,2.297,964,2.648,1120,2.234,1123,1.736,1124,1.284,1165,1.992,1187,2.297,1189,1.736,1191,2.816,1192,2.447,1198,2.447,1449,2.447,1454,2.447,1482,3.849,1550,1.558,1560,3.849,1562,2.447,1717,2.297,1734,2.02,1750,1.992,1754,2.447,1755,2.297,1759,2.297,2016,2.177,2054,3.481,2058,3.597,2060,3.597,2062,4.708,2064,4.708,2067,2.297,2068,3.597,2070,1.85,2077,3.849,2176,2.954,2177,2.954,2178,2.954,2179,2.954,2180,2.954,2181,2.954,2182,2.954,2183,2.954,2184,2.954,2185,2.954,2186,2.648,2187,2.648,2188,2.954,2189,2.648,2190,6.509,2191,5.741,2192,2.954,2193,2.648,2194,4.165,2195,4.165,2196,2.954,2197,4.165,2198,4.645,2199,4.645,2200,5.741,2201,2.954,2202,2.954,2203,2.954,2204,5.741,2205,4.645,2206,2.954,2207,2.954,2208,2.954,2209,2.954,2210,2.954,2211,2.954,2212,2.954,2213,2.648,2214,2.648,2215,2.648,2216,2.648,2217,2.648,2218,2.648,2219,2.954,2220,2.447,2221,2.954,2222,5.741,2223,2.648,2224,2.954,2225,2.954,2226,2.954,2227,2.954,2228,2.954,2229,2.954,2230,5.741,2231,2.954,2232,2.954,2233,2.954,2234,2.954,2235,2.954,2236,2.954,2237,2.954,2238,5.836,2239,2.954,2240,2.954,2241,2.954,2242,2.954,2243,2.954,2244,4.645,2245,2.954]],["title/classes/InviteFirestoreMapper.html",[0,0.249,1755,3.951]],["body/classes/InviteFirestoreMapper.html",[0,0.246,2,0.832,3,0.047,4,0.047,5,0.047,9,0.067,16,0.794,35,0.93,36,0.005,37,0.65,38,0.13,39,0.671,40,1.063,41,1.798,43,0.062,45,0.853,46,0.064,47,1.596,48,2.01,49,1.983,51,2.72,61,0.003,62,0.003,65,1.28,73,0.969,84,0.969,85,0.321,105,0.943,131,1.107,143,2.36,200,0.96,207,1.574,351,3.026,387,3.25,475,1.011,526,3.125,535,4.562,721,3.493,722,5.057,723,5.501,724,5.684,727,4.803,728,3.523,729,4.466,730,5.46,731,3.041,732,4.152,734,3.373,736,3.917,737,2.58,744,2.311,1124,2.179,1453,6.866,1455,3.373,1461,4.901,1716,5.766,1718,2.783,1753,4.494,1754,4.152,1755,5.335,1756,6.151,2246,5.012,2247,5.012]],["title/classes/InviteMapper.html",[0,0.249,1717,3.951]],["body/classes/InviteMapper.html",[0,0.244,2,0.825,3,0.047,4,0.047,5,0.047,9,0.067,16,0.79,20,1.713,23,2.064,35,0.925,36,0.005,37,0.646,38,0.145,39,0.667,40,1.002,41,1.788,43,0.062,45,0.85,46,0.064,47,1.588,48,2.003,49,1.977,61,0.003,62,0.003,65,1.273,66,1.485,73,0.964,84,0.964,85,0.204,105,0.937,131,1.507,160,1.718,200,0.952,207,2.142,351,3.405,387,2.751,475,1.376,526,3.453,596,1.877,721,3.484,728,3.114,731,4.023,734,4.462,744,2.293,746,4.136,747,5.029,748,3.789,749,5.083,751,3.512,752,5.441,753,4.656,754,4.011,756,2.807,757,3.664,758,2.838,900,3.115,1124,2.161,1455,3.354,1461,4.274,1550,4.422,1564,3.014,1715,4.119,1716,5.742,1717,5.306,1718,2.761,1719,3.496,1720,4.119,2248,4.972,2249,4.972]],["title/classes/InvitePrismaMapper.html",[0,0.249,2250,4.21]],["body/classes/InvitePrismaMapper.html",[0,0.253,2,1.317,3,0.048,4,0.048,5,0.048,9,0.069,16,0.81,23,1.525,35,0.948,36,0.005,37,0.663,38,0.141,39,0.684,40,0.971,46,0.048,47,1.628,48,2.034,49,2.007,51,2.262,61,0.003,62,0.003,65,1.306,66,1.239,73,0.988,84,0.988,85,0.287,105,0.961,131,1.545,200,0.988,207,2.197,351,2.516,387,3.211,475,1.04,526,3.547,721,3.523,727,4.861,728,3.547,729,4.008,744,2.378,746,4.241,748,3.885,758,2.944,765,5.44,768,5.394,769,5.44,771,5.44,772,5.44,773,5.44,774,4.92,775,3.347,868,3.126,900,3.231,1124,2.242,1455,3.439,1461,4.383,1550,3.69,1564,3.126,1660,3.627,1718,3.885,1719,4.92,1720,4.273,2250,5.796,2251,5.157,2252,9.177,2253,5.157,2254,5.157,2255,5.157]],["title/injectables/InvitePrismaRepo.html",[183,1.406,2256,4.21]],["body/injectables/InvitePrismaRepo.html",[0,0.194,3,0.037,4,0.037,5,0.037,8,1.28,9,0.053,11,0.657,13,0.83,16,1.008,35,1.179,36,0.005,37,0.824,38,0.144,39,0.851,40,1.018,42,1.261,44,1.266,46,0.037,61,0.003,62,0.003,71,0.683,73,0.82,84,1.189,85,0.366,89,0.909,93,1.261,94,1.677,105,0.798,131,1.282,160,0.997,161,1.471,165,2.819,176,2.152,183,1.606,194,2.644,199,2.088,200,1.112,212,1.606,218,1.651,224,1.963,305,3.059,474,2.67,475,1.171,523,1.904,526,2.993,644,2.192,665,2.919,768,3.412,778,3.783,779,3.28,780,5.103,782,2.477,785,3.2,794,3.079,796,3.924,797,2.26,803,4.278,806,2.918,807,2.199,808,2.142,809,2.573,810,3.914,904,3.079,1031,2.48,1120,2.792,1123,2.327,1124,1.721,1189,2.327,1251,2.26,1444,3.079,1454,3.28,1550,2.088,1559,3.28,1734,2.524,2054,4.166,2058,4.305,2060,4.305,2062,5.276,2064,5.276,2067,3.079,2068,4.305,2070,2.48,2139,3.55,2238,6.162,2250,3.28,2256,4.809,2257,3.959,2258,3.959,2259,3.959,2260,3.959,2261,3.959,2262,3.959,2263,3.959,2264,3.959,2265,3.079,2266,3.55,2267,3.959,2268,3.959,2269,5.805,2270,3.959,2271,3.959,2272,3.959,2273,3.959,2274,5.805,2275,3.959,2276,3.959]],["title/classes/InviteRepo.html",[0,0.249,1120,2.444]],["body/classes/InviteRepo.html",[0,0.17,2,0.573,3,0.032,4,0.032,5,0.032,9,0.046,16,0.881,18,2.098,20,1.636,23,1.143,26,1.853,27,2.627,28,2.428,35,1.03,36,0.005,37,0.72,38,0.126,39,0.744,40,1.001,42,1.1,43,0.094,46,0.078,47,1.22,48,1.912,49,1.668,61,0.003,62,0.003,65,0.978,66,1.634,73,0.74,84,1.074,85,0.29,131,1.68,159,2.963,160,2.322,176,2.029,191,1.577,192,0.956,211,2.157,212,1.957,216,2.963,218,1.802,220,1.933,222,3.126,223,1.117,224,2.142,242,2.716,257,1.283,281,3.241,291,1.1,330,2.911,340,3.018,344,2.047,350,2.157,361,2.237,387,1.72,475,1.057,526,2.353,644,2.392,665,2.636,731,2.323,751,3.353,756,3.293,778,3.481,782,2.237,785,2.516,916,3.557,917,2.392,918,3.557,919,2.812,920,3.477,921,3.557,922,3.85,923,3.557,924,3.557,925,3.262,926,3.477,927,3.557,928,3.557,929,3.262,931,1.737,933,3.824,1120,2.521,1124,1.502,1241,3.402,1255,3.402,1550,4.222,1734,2.279,2054,4.288,2058,3.969,2060,3.969,2062,3.969,2064,3.969,2067,2.686,2068,3.969,2070,2.164,2277,2.429,2278,3.454,2279,3.454,2280,3.454,2281,3.454,2282,3.454,2283,3.687,2284,2.329,2285,1.822]],["title/classes/InviteUserDTO.html",[0,0.249,653,3.745]],["body/classes/InviteUserDTO.html",[0,0.372,2,0.966,3,0.055,4,0.055,5,0.055,9,0.078,10,0.917,16,0.674,20,1.549,23,1.948,26,2.002,36,0.005,38,0.096,42,1.854,44,2.02,45,0.827,46,0.055,49,1.988,61,0.004,62,0.004,65,1.086,66,1.343,85,0.346,131,2.21,158,3.427,160,1.909,291,1.854,333,5.112,373,3.07,392,3.323,396,4.75,501,4.92,532,4.92,598,3.148,649,3.777,653,5.588,919,2.488,981,4.92,982,6.282,983,4.093,984,6.515,985,6.247,992,4.093,993,4.093,1000,5.332,1001,3.646,1002,5.332,1005,3.777,1006,4.093,1007,4.093,1008,4.093,1009,3.925,1646,6.282,2286,5.82,2287,5.82]],["title/guards/JwtGuard.html",[153,3.183,2288,4.21]],["body/guards/JwtGuard.html",[0,0.233,3,0.044,4,0.044,5,0.044,9,0.064,11,1.096,13,1.385,16,0.88,20,1.35,35,1.03,36,0.005,37,0.72,38,0.126,39,0.743,44,1.44,45,0.829,46,0.044,61,0.003,62,0.003,65,0.885,66,1.17,71,0.819,73,0.933,74,2.063,84,0.933,85,0.376,89,1.09,91,1.791,94,1.781,95,2.063,105,0.908,155,2.789,158,2.986,160,1.664,165,2.544,166,5.333,167,2.327,168,5.137,169,3.689,170,5.806,171,3.845,173,4.287,174,4.982,176,1.498,177,5.137,179,4.564,180,2.502,183,1.828,184,2.972,185,4.761,186,3.689,187,2.386,188,4.339,189,2.972,190,2.502,191,1.427,192,1.313,193,6.297,194,2.494,195,3.689,196,3.689,197,3.199,198,3.336,199,2.376,200,1.456,201,5.91,202,3.199,203,2.709,204,3.079,205,3.931,206,3.931,212,1.313,214,3.931,215,2.282,216,1.987,217,3.931,218,1.879,219,3.079,220,1.447,221,3.931,222,1.852,223,2.136,451,4.869,1576,4.869,2288,5.473,2289,4.744,2290,6.606,2291,6.606,2292,4.744,2293,4.744,2294,4.744]],["title/classes/LaunchTFADTO.html",[0,0.249,466,4.21]],["body/classes/LaunchTFADTO.html",[0,0.367,2,0.944,3,0.053,4,0.053,5,0.053,9,0.076,10,0.903,16,0.659,20,1.526,23,2.058,26,1.991,36,0.005,38,0.094,42,1.812,44,2.005,45,0.815,46,0.053,49,1.966,61,0.004,62,0.004,65,1.061,66,1.323,85,0.342,131,2.201,158,3.375,160,1.881,291,1.812,333,5.055,373,3,389,5.504,392,3.247,396,4.678,458,5.504,459,5.808,466,6.187,501,4.847,532,4.847,598,3.076,649,3.691,919,2.45,981,4.847,983,4,984,6.467,985,6.2,992,4,993,4,1000,5.252,1001,3.563,1002,5.252,1005,3.691,1006,4,1007,4,1008,4,1009,3.835,1587,6.187,2295,7.468,2296,5.687,2297,7.468,2298,5.687]],["title/classes/Level.html",[0,0.249,672,1.857]],["body/classes/Level.html",[0,0.292,2,0.986,3,0.056,4,0.056,5,0.056,9,0.08,11,0.986,13,1.247,16,0.986,26,1.591,35,1.042,36,0.005,37,0.728,38,0.127,39,0.752,40,0.678,41,2.233,46,0.056,47,1.383,48,1.836,61,0.004,62,0.004,65,1.11,71,1.327,73,1.086,84,0.84,85,0.349,93,1.894,161,3.345,164,6.892,215,3.697,232,3.775,233,3.407,234,3.545,235,3.474,236,2.639,237,3.394,239,5.045,242,2.951,246,3.407,247,2.403,249,2.446,250,3.136,252,2.799,253,2.99,254,2.49,255,2.585,256,3.604,257,2.208,350,3.162,394,3.779,672,3.292,919,2.522,2299,5.945,2300,5.945,2301,7.687,2302,7.687,2303,6.892,2304,5.945,2305,5.945,2306,5.945]],["title/injectables/LogInterceptor.html",[183,1.406,1840,3.951]],["body/injectables/LogInterceptor.html",[0,0.249,3,0.047,4,0.047,5,0.047,9,0.068,11,0.84,13,1.062,16,0.8,20,1.412,26,1.43,35,0.936,36,0.005,37,0.8,38,0.114,39,0.676,46,0.047,51,2.542,61,0.003,62,0.003,65,1.468,66,1.224,71,0.874,73,0.976,75,2.89,76,3.414,78,3.003,84,0.715,85,0.383,86,2.288,87,2.335,89,1.163,91,1.912,93,1.613,94,1.566,100,3.122,105,0.696,160,1.275,161,1.88,174,5.121,183,1.912,190,2.67,200,0.97,203,2.89,212,1.401,243,3.286,377,4.195,387,2.267,475,1.021,523,2.435,565,2.606,596,2.969,751,2.121,917,1.712,1045,3.944,1215,4.195,1223,6.194,1342,4.658,1575,3.731,1807,5.372,1808,4.195,1840,5.372,1986,5.372,2307,5.063,2308,6.908,2309,6.194,2310,6.908,2311,5.063,2312,6.908,2313,7.864,2314,8.448,2315,5.063,2316,7.864,2317,6.908,2318,5.063,2319,4.539,2320,6.908,2321,5.063,2322,5.063,2323,7.864,2324,6.908,2325,7.864,2326,5.063,2327,5.063,2328,5.063,2329,5.063,2330,5.063,2331,5.063,2332,5.063,2333,5.063,2334,6.908,2335,5.063,2336,5.063,2337,5.063]],["title/classes/LoggerAdapter.html",[0,0.249,76,2.053]],["body/classes/LoggerAdapter.html",[0,0.215,2,0.726,3,0.068,4,0.041,5,0.041,8,2.018,9,0.059,16,1.062,35,1.243,36,0.005,37,0.884,38,0.155,39,0.897,40,1.046,43,0.054,45,0.793,46,0.074,56,4.6,61,0.003,62,0.003,65,0.817,73,0.881,76,2.522,84,1.295,86,2.821,100,4.41,103,2.061,146,3.669,176,2.255,180,3.292,279,4.389,281,3.47,946,4.05,1155,2.499,1171,4.6,1261,5.171,1262,5.171,1263,5.171,1264,5.171,1265,5.171,1266,5.171,1267,4.854,1268,7.37,1271,6.978,1273,4.854,1279,4.854,1281,4.854,1283,4.854,1540,4.6,1794,3.404,1795,5.171,1796,3.627,1797,3.627,1798,2.841,1799,3.226,1800,5.171,1801,5.171,1802,5.596,1803,5.596,1804,5.596,2338,4.377,2339,4.377,2340,4.377,2341,4.377,2342,4.377,2343,4.377,2344,4.377,2345,4.377]],["title/classes/LoginDTO.html",[0,0.249,434,4.21]],["body/classes/LoginDTO.html",[0,0.343,2,0.856,3,0.048,4,0.048,5,0.048,9,0.069,10,0.846,16,0.81,20,1.43,23,1.525,26,2.045,36,0.005,38,0.116,42,2.229,44,2.134,45,0.929,46,0.048,49,2.213,61,0.003,62,0.003,65,0.962,66,1.239,85,0.325,131,2.162,158,3.162,160,1.762,291,1.643,333,5.69,373,2.72,392,2.944,396,4.383,431,4.72,434,5.796,501,5.152,532,4.54,597,3.031,598,2.789,649,4.54,919,2.295,981,4.54,983,4.92,984,6.807,985,6.527,989,4.273,990,4.273,992,3.627,993,3.627,1000,5.583,1001,3.231,1002,4.92,1005,4.54,1006,3.627,1007,3.627,1008,4.92,1009,3.477,1013,4.273,1101,4.624,1102,4.273,1103,4.624,1104,4.624,1603,5.156,2346,5.157,2347,5.157,2348,5.157]],["title/classes/Name.html",[0,0.249,37,0.481]],["body/classes/Name.html",[0,0.309,2,1.044,3,0.059,4,0.059,5,0.059,9,0.085,11,1.044,13,1.319,16,1.013,35,1.08,36,0.005,37,0.918,38,0.132,39,0.78,40,0.718,45,0.954,46,0.059,61,0.004,62,0.004,65,1.174,71,1.376,73,1.126,84,0.889,85,0.359,93,2.004,232,3.877,233,3.532,234,3.676,235,3.602,236,2.736,237,3.592,239,4.311,247,2.543,249,2.588,250,3.318,252,2.962,253,3.163,254,2.635,255,2.735,291,2.004,330,4.426,336,5.605,373,3.318,1098,5.641,1316,5.875,1341,6.604,2349,6.291,2350,7.146,2351,6.291,2352,6.291,2353,6.291]],["title/classes/NodemailerAdapter.html",[0,0.249,132,4.21]],["body/classes/NodemailerAdapter.html",[0,0.317,2,1.071,3,0.06,4,0.06,5,0.06,9,0.087,16,0.747,35,0.875,36,0.005,37,0.611,38,0.107,39,0.631,45,0.883,46,0.06,61,0.004,62,0.004,71,1.398,73,1.144,80,3.173,84,0.912,85,0.332,94,1.285,105,0.887,124,5.203,131,1.426,132,6.711,165,2.518,176,1.836,194,2.118,218,1.836,279,4.539,305,2.609,1304,6.299,1306,7.219,1307,4.352,2006,5.348,2354,6.454,2355,8.1,2356,6.454,2357,8.1,2358,5.348,2359,6.454,2360,6.454,2361,6.454,2362,6.454,2363,6.454,2364,6.454,2365,6.454,2366,6.454,2367,6.454,2368,6.454,2369,6.454,2370,6.454,2371,6.454]],["title/classes/NotFoundFilter.html",[0,0.249,1853,3.951]],["body/classes/NotFoundFilter.html",[0,0.278,2,0.939,3,0.053,4,0.053,5,0.053,9,0.076,11,0.939,13,1.187,16,0.862,20,1.521,23,1.623,26,1.541,35,1.009,36,0.005,37,0.837,38,0.123,39,0.728,44,1.234,46,0.053,61,0.004,62,0.004,65,1.39,66,1.319,67,3.744,68,3.434,71,1.285,72,4.183,73,1.052,74,3.617,75,3.232,76,3.572,78,3.237,80,4.09,81,4.444,84,0.8,85,0.341,86,2.559,87,2.611,89,1.3,90,3.506,91,2.138,93,1.804,94,1.483,95,2.461,96,2.847,97,2.847,98,2.783,100,2.559,105,0.778,107,2.559,212,2.446,216,3.119,242,2.858,808,4.027,1172,5.021,1190,4.173,1199,5.236,1252,5.79,1853,5.79,1985,6.169,2220,4.691,2372,5.661,2373,5.661,2374,7.446,2375,8.838,2376,5.661,2377,5.661,2378,5.661,2379,7.446,2380,5.661]],["title/classes/Num.html",[0,0.249,559,2.901]],["body/classes/Num.html",[0,0.294,2,0.994,3,0.056,4,0.056,5,0.056,9,0.081,11,0.994,13,1.256,16,0.99,26,1.869,35,1.046,36,0.005,37,0.732,38,0.128,39,0.755,40,0.683,41,2.241,46,0.056,47,1.393,61,0.004,62,0.004,65,1.118,71,1.333,73,1.091,84,0.846,85,0.35,93,1.908,159,3.235,211,3.177,232,3.788,233,3.423,234,3.562,235,3.491,236,2.651,237,3.419,239,5.056,240,6.656,247,2.42,249,2.464,250,3.158,252,2.82,253,3.011,254,2.508,255,2.604,351,2.778,352,5.692,355,3.886,356,2.707,559,5.156,1021,5.369,1342,5.208,2381,5.988,2382,5.988,2383,7.723,2384,7.723,2385,7.723,2386,5.988,2387,5.988]],["title/classes/OTP.html",[0,0.249,1347,2.748]],["body/classes/OTP.html",[0,0.197,2,0.665,3,0.038,4,0.038,5,0.038,9,0.054,10,0.709,11,1.404,13,0.841,14,2.368,16,1.102,35,0.794,36,0.005,37,0.555,38,0.134,39,0.573,40,0.79,41,1.815,42,1.278,43,0.05,45,1.038,46,0.055,61,0.003,62,0.003,71,1.011,73,0.828,84,0.828,85,0.284,105,1.255,167,2.278,200,1.551,207,2.656,226,2.949,233,3.068,234,2.702,235,2.648,247,2.368,249,1.65,338,2.658,394,1.971,473,5.3,475,1.762,520,2.431,556,3.953,557,3.481,558,4.119,560,3.594,566,2.603,571,2.956,590,3.323,594,2.115,595,2.115,596,2.875,605,2.017,612,3.953,619,2.82,628,4.121,629,3.09,672,2.783,698,5.135,824,3.323,828,3.596,850,2.956,867,3.803,868,2.431,873,2.431,878,4.319,1347,4.844,1455,4.295,1457,2.704,1566,2.704,1718,3.254,1782,2.956,1791,4.319,1805,5.736,1806,3.323,1807,4.557,1808,3.323,1809,6.309,1810,3.596,1811,3.596,1812,3.596,1813,3.596,1814,3.596,1815,3.596,1816,3.596,1817,3.596,1818,3.596,1819,3.596,1820,3.596,2168,3.596,2388,5.859,2389,4.01,2390,4.01,2391,4.01,2392,4.01,2393,4.01,2394,4.01,2395,4.01,2396,4.01,2397,4.01,2398,4.01,2399,4.01,2400,4.01]],["title/classes/OTPMapper.html",[0,0.249,1724,3.951]],["body/classes/OTPMapper.html",[0,0.266,2,0.898,3,0.051,4,0.051,5,0.051,9,0.073,16,0.837,35,0.98,36,0.005,37,0.685,38,0.12,39,0.707,40,0.825,41,2.276,43,0.09,45,1.053,46,0.068,61,0.003,62,0.003,73,1.021,84,1.021,85,0.296,105,0.993,192,1.498,200,1.559,207,2.727,226,3.027,473,5.166,475,1.642,520,4.383,560,3.572,596,2.73,629,3.813,672,1.979,698,5.105,721,3.574,744,3.334,746,4.383,747,5.329,748,4.015,749,5.264,754,4.249,868,4.383,873,4.383,1347,5.141,1455,4.269,1718,4.015,1721,4.487,1722,3.514,1723,6.329,1724,5.622,1725,4.487,1726,4.487,1727,4.487,1728,4.487,2401,5.415,2402,5.415]],["title/classes/OTPRepo.html",[0,0.249,1733,3.573]],["body/classes/OTPRepo.html",[0,0.286,2,0.968,3,0.055,4,0.055,5,0.055,9,0.078,16,0.977,35,1.144,36,0.005,37,0.8,38,0.14,39,0.826,40,0.963,43,0.105,46,0.084,61,0.004,62,0.004,73,1.072,84,1.192,85,0.311,131,2.138,176,2.155,192,1.614,281,3.384,520,5.118,644,2.867,665,3.818,778,3.301,782,3.24,785,3.016,1347,4.566,1722,3.786,1729,6.288,1730,4.537,1731,6.288,1732,6.288,1733,5.34,1734,3.301,2403,5.834,2404,5.834,2405,5.834]],["title/classes/Password.html",[0,0.249,431,2.555]],["body/classes/Password.html",[0,0.298,2,1.006,3,0.057,4,0.057,5,0.057,9,0.081,11,1.006,13,1.271,16,0.995,35,1.055,36,0.005,37,0.737,38,0.129,39,0.761,40,0.692,45,0.938,46,0.057,47,1.41,48,1.859,51,2.516,61,0.004,62,0.004,65,1.131,71,1.343,73,1.099,84,0.856,85,0.352,93,1.931,161,2.891,232,3.81,233,3.449,234,3.59,235,3.518,236,2.672,237,3.461,239,4.65,242,2.988,244,5.737,247,2.45,249,2.494,250,3.197,252,2.854,253,3.048,254,2.539,255,2.635,291,1.931,331,6.449,333,4.718,336,5.474,373,3.197,431,4.562,443,6.979,600,5.248,1102,5.022,1940,6.053,2406,6.061,2407,6.061,2408,6.061,2409,6.061]],["title/classes/PhoneNumber.html",[0,0.249,1060,2.555]],["body/classes/PhoneNumber.html",[0,0.296,2,1.001,3,0.057,4,0.057,5,0.057,9,0.081,11,1.001,13,1.265,16,0.993,35,1.051,36,0.005,37,0.735,38,0.128,39,0.759,40,0.688,45,0.936,46,0.057,47,1.404,48,1.853,51,2.508,61,0.004,62,0.004,65,1.126,71,1.339,73,1.096,84,0.852,85,0.352,93,1.922,161,2.882,232,3.802,233,3.439,234,3.578,235,3.507,236,2.664,237,3.444,239,4.64,240,5.719,242,2.979,244,5.719,247,2.438,249,2.481,250,3.181,252,2.84,253,3.033,254,2.527,255,2.622,276,5.035,291,1.922,331,6.429,333,4.704,336,5.457,373,3.181,1060,4.553,1114,5.408,1941,6.034,2410,6.032,2411,6.032,2412,7.759,2413,6.032,2414,6.032]],["title/classes/PrismaErrorFilter.html",[0,0.249,1824,3.745]],["body/classes/PrismaErrorFilter.html",[0,0.195,2,0.659,3,0.037,4,0.037,5,0.037,8,1.881,9,0.053,10,0.704,11,0.659,12,4.806,13,0.833,16,0.797,18,2.042,20,1.189,26,1.569,35,0.788,36,0.005,37,0.908,38,0.114,39,0.569,41,1.041,43,0.049,44,2.047,45,0.751,46,0.037,61,0.003,62,0.003,65,1.285,66,1.031,67,2.926,68,2.683,71,1.004,72,3.462,73,0.822,74,3.295,75,2.268,76,3.063,78,2.529,79,2.095,80,3.385,81,3.811,83,3.42,84,0.561,85,0.311,86,1.795,87,1.832,89,0.912,90,2.739,91,1.5,93,1.265,94,1.371,95,1.727,96,1.997,97,1.997,98,2.86,99,2.206,100,2.63,102,2.335,103,2.739,104,2.995,105,0.946,106,2.148,107,2.63,108,2.148,109,2.045,110,2.148,167,1.854,212,2.676,216,2.437,236,1.364,297,1.795,473,5.203,768,4.047,775,2.578,808,4.831,1031,3.645,1045,4.328,1183,4.468,1189,3.42,1190,5.587,1191,3.527,1194,4.749,1196,5.111,1207,2.578,1210,2.408,1211,4.092,1212,3.527,1213,2.408,1214,2.408,1244,4.525,1251,3.322,1253,4.288,1397,4.525,1452,6.514,1666,4.092,1821,5.704,1822,3.561,1823,3.561,1824,4.288,1825,5.217,1826,4.821,1827,5.217,1828,5.217,1829,5.217,1830,6.173,1831,3.561,1832,6.173,2415,3.972,2416,3.972,2417,3.972]],["title/modules/PrismaModule.html",[111,2.822,2418,3.951]],["body/modules/PrismaModule.html",[0,0.284,3,0.054,4,0.054,5,0.054,36,0.005,46,0.054,61,0.004,62,0.004,85,0.402,89,1.331,111,4.672,113,3.629,114,3.629,115,3.906,116,3.906,117,3.76,118,5.673,119,5.673,126,5.097,127,3.906,128,3.906,130,6.263,144,6.201,145,6.201,171,4.104,187,2.913,776,6.263,780,6.396,791,5.441,793,3.906,794,4.505,1120,4.712,1123,3.405,2256,6.263,2418,7.704,2419,5.194,2420,5.793,2421,5.194,2422,5.793,2423,5.793,2424,6.263,2425,5.793,2426,5.793]],["title/injectables/PrismaService.html",[183,1.406,780,3.426]],["body/injectables/PrismaService.html",[0,0.282,3,0.054,4,0.054,5,0.054,7,3.867,9,0.077,10,0.909,16,1.068,36,0.005,46,0.054,61,0.004,62,0.004,71,0.991,73,1.061,84,1.255,85,0.308,89,1.318,165,2.878,167,2.255,183,2.079,194,2.915,223,1.856,236,1.97,271,6.486,297,2.594,523,2.761,775,3.725,780,5.066,1384,6.173,1486,7.967,1487,8.484,2427,5.74,2428,8.375,2429,7.967,2430,9.462,2431,5.74,2432,5.74,2433,5.74,2434,5.74,2435,5.74,2436,9.779,2437,5.74,2438,8.375]],["title/guards/RefreshTokenGuard.html",[153,3.183,2439,4.21]],["body/guards/RefreshTokenGuard.html",[0,0.201,3,0.038,4,0.038,5,0.038,9,0.055,11,1.164,13,1.249,16,0.891,20,1.217,35,1.043,36,0.005,37,0.729,38,0.127,39,0.753,44,1.678,45,0.93,46,0.038,61,0.003,62,0.003,65,0.766,66,1.055,71,0.708,73,0.841,74,1.784,84,0.991,85,0.369,89,0.942,91,1.549,94,1.795,95,1.784,105,0.964,122,5.75,131,0.906,139,5.305,155,2.412,158,2.693,165,2.613,166,4.995,167,2.474,168,4.633,170,5.71,171,3.685,173,3.866,174,4.666,176,1.351,177,4.633,179,5.005,180,3.142,183,1.648,184,2.57,186,3.191,187,2.063,188,4.667,189,2.57,190,2.164,192,1.135,194,2.682,195,3.191,196,3.191,197,2.767,199,2.769,200,1.566,202,4.017,203,2.342,204,2.663,216,2.495,218,1.694,219,2.663,220,1.818,222,1.602,223,1.926,305,3.111,387,1.955,451,4.391,1057,4.017,1058,2.767,1079,5.455,1081,3.191,1084,3.866,1189,3.502,1452,2.885,1913,6.377,2439,4.936,2440,4.103,2441,5.342,2442,5.957,2443,4.103,2444,4.103,2445,4.103,2446,5.957,2447,4.103,2448,4.103,2449,4.103,2450,4.103,2451,4.103,2452,4.103,2453,4.103,2454,4.103,2455,5.342,2456,4.103,2457,4.103,2458,4.103,2459,4.103,2460,4.103,2461,4.103,2462,4.103]],["title/classes/RegistryAPIBootstrap.html",[0,0.249,1859,3.951]],["body/classes/RegistryAPIBootstrap.html",[0,0.196,2,0.663,3,0.037,4,0.037,5,0.037,9,0.054,10,0.707,15,2.104,16,1.011,35,0.792,36,0.005,37,0.554,38,0.126,39,0.572,40,0.456,43,0.05,46,0.037,61,0.003,62,0.003,63,3.109,73,0.976,76,2.793,78,3.004,84,1.142,85,0.41,87,1.844,89,0.918,91,3.054,94,1.164,139,2.594,165,2.403,167,2.672,194,2.267,200,1.12,259,4.111,491,2.946,577,4.66,650,2.695,665,2.01,685,4.309,977,3.312,978,3.109,1001,2.504,1180,2.946,1323,3.109,1354,5.093,1503,2.946,1605,2.946,1633,3.109,1678,2.946,1679,2.946,1702,3.109,1824,2.946,1833,3.584,1834,5.241,1835,3.584,1836,3.584,1837,6.196,1838,3.312,1839,3.584,1840,3.109,1841,3.584,1842,5.241,1843,3.584,1844,2.946,1845,3.584,1846,3.584,1847,3.584,1848,3.584,1849,3.584,1850,3.584,1851,3.109,1852,3.584,1853,3.109,1854,3.584,1855,5.241,1856,3.584,1857,3.584,1858,3.584,1859,4.546,1860,6.299,1861,5.241,1862,6.196,1863,5.241,1864,3.584,1865,3.584,1866,3.584,1867,3.584,1868,3.584,1869,3.584,1870,3.584,1871,3.584,1872,3.584,1873,3.584,1874,4.843,1875,3.584,1876,5.241,1877,3.584,1878,3.584,1879,3.584,1880,5.241,1881,3.584,1882,3.584,1883,6.817,1884,3.584,1885,3.584,1886,6.817,1887,3.584,1888,6.817,1889,8.43,1890,3.584,1891,3.584,1892,3.584,1893,3.584,1894,3.584,1895,3.584,1896,3.584,1897,3.584,1898,3.584,1899,3.584,1900,3.584,1901,5.241,1902,3.584,1903,3.584,1904,3.584,1905,3.584,1906,3.584,2463,5.845,2464,3.997,2465,3.997,2466,3.997,2467,3.997,2468,3.997,2469,3.997,2470,3.997]],["title/classes/ServiceErrorFilter.html",[0,0.249,1844,3.745]],["body/classes/ServiceErrorFilter.html",[0,0.203,2,0.688,3,0.039,4,0.039,5,0.039,8,1.94,9,0.056,10,0.726,11,0.688,12,4.654,13,0.869,16,0.817,18,1.229,20,1.226,23,1.308,26,1.242,35,0.813,36,0.005,37,0.897,38,0.117,39,0.587,41,1.086,43,0.051,44,2.008,45,0.654,46,0.039,61,0.003,62,0.003,65,1.316,66,1.37,67,3.017,68,2.767,69,2.659,71,1.036,72,3.547,73,0.847,74,3.067,75,2.366,76,3.125,78,2.609,79,3.165,80,3.468,81,3.888,83,2.436,84,0.585,85,0.317,86,1.873,87,1.911,89,0.952,90,2.825,91,1.565,93,1.32,94,1.405,95,1.802,96,2.084,97,2.084,98,2.95,99,3.332,100,2.712,102,2.436,103,2.825,104,3.089,105,0.969,106,2.241,107,2.712,108,2.241,109,2.133,110,2.241,167,1.9,212,2.14,236,1.423,297,1.873,341,4.22,514,3.638,807,3.332,808,4.183,809,3.911,919,1.969,1045,3.426,1183,4.578,1186,3.527,1191,4.688,1193,4.22,1194,3.759,1196,4.046,1199,4.22,1207,2.689,1208,2.914,1209,2.914,1210,2.512,1212,3.638,1213,2.512,1214,2.512,1247,5.214,1248,4.046,1249,3.223,1251,3.426,1257,4.666,1452,4.22,1798,3.894,1844,4.423,1974,5.845,1975,3.715,1976,3.715,1977,4.972,1978,5.38,1979,5.38,1980,5.38,1981,5.38,1982,5.38,1983,5.38,1984,5.38,1985,4.972,1986,4.666,1987,5.38,1988,5.38,2471,4.144,2472,4.144,2473,4.144]],["title/classes/ServiceErrors.html",[0,0.249,1247,3.426]],["body/classes/ServiceErrors.html",[0,0.256,2,0.865,3,0.049,4,0.049,5,0.049,7,3.627,8,2.58,9,0.07,10,0.852,11,1.324,13,1.093,14,2.847,15,2.366,16,0.816,18,2.73,19,4.022,20,1.747,21,4.748,22,4.509,23,2.007,25,4.509,26,1.77,27,2.617,28,2.419,29,4.022,30,4.022,31,4.022,32,4.022,33,4.022,34,4.881,35,0.706,36,0.005,37,0.494,38,0.117,39,0.51,40,0.804,43,0.065,44,1.136,45,0.568,46,0.066,47,1.213,48,1.683,49,1.661,50,4.022,51,2.278,54,2.682,55,2.819,59,2.819,60,2.819,61,0.003,62,0.003,65,0.973,66,1.248,68,3.249,69,3.122,351,2.534,387,2.805,729,3.317,753,3.913,809,4.08,1152,5.479,1153,5.193,1154,5.479,1155,2.975,1178,3.665,1179,3.665,1247,4.751,1248,6.207,1798,4.572,1799,3.841,1932,4.317,1933,5.837,1934,5.837,1935,4.317,1936,4.317,2474,7.045]],["title/controllers/SuperAdminController.html",[146,2.987,1687,4.21]],["body/controllers/SuperAdminController.html",[0,0.376,3,0.072,4,0.072,5,0.072,36,0.005,46,0.072,54,3.947,61,0.004,62,0.004,85,0.314,89,1.761,146,4.507,148,4.976,150,5.651,151,6.324,1687,7.451,2475,7.667,2476,7.667,2477,7.667]],["title/guards/SuperAdminJwt.html",[153,3.183,675,4.21]],["body/guards/SuperAdminJwt.html",[0,0.217,3,0.041,4,0.041,5,0.041,8,1.43,9,0.059,11,1.043,13,1.319,16,0.847,20,1.285,23,1.371,35,0.991,36,0.005,37,0.693,38,0.121,39,0.716,44,1.595,45,0.798,46,0.041,61,0.003,62,0.003,65,0.826,66,1.114,71,0.763,73,0.888,74,1.923,84,0.888,85,0.369,89,1.016,91,1.67,94,1.831,95,1.923,105,0.608,107,1.999,151,5.604,155,2.6,157,3.966,158,2.842,159,2.634,160,2.007,161,2.336,162,4.635,163,5.638,165,2.488,166,5.171,167,2.267,168,4.89,169,3.44,170,5.676,171,3.769,172,3.966,173,4.081,174,4.83,175,3.966,176,1.426,177,4.89,178,3.966,179,4.425,180,2.333,181,4.24,182,3.665,183,1.74,184,2.771,185,4.584,186,3.44,187,2.224,188,4.177,189,2.771,190,3.317,191,1.331,192,1.224,193,6.062,194,2.614,195,3.44,196,3.44,197,2.983,198,3.111,199,2.632,200,1.612,201,3.44,202,2.983,203,2.526,204,2.871,205,3.665,206,3.665,207,2.297,208,3.966,209,3.665,210,3.44,211,1.82,212,1.74,213,3.966,214,3.665,215,2.128,216,1.853,217,3.665,218,1.258,219,2.871,220,1.35,221,3.665,222,1.727,223,1.43,224,2.126,225,3.966,226,1.542,227,2.771,228,3.966,229,3.966,675,5.21,2303,5.638,2478,7.968]],["title/classes/ThrottlerErrorFilter.html",[0,0.249,1851,3.951]],["body/classes/ThrottlerErrorFilter.html",[0,0.281,2,0.948,3,0.054,4,0.054,5,0.054,9,0.077,11,0.948,13,1.198,16,0.867,20,1.531,35,1.015,36,0.005,37,0.84,38,0.124,39,0.733,44,1.246,46,0.054,61,0.004,62,0.004,65,1.398,66,1.327,67,3.767,68,3.455,69,3.32,71,1.293,72,4.202,73,1.058,74,3.633,75,3.262,76,3.585,78,3.257,79,3.95,80,4.108,81,4.46,83,3.358,84,0.807,85,0.364,86,2.582,87,2.635,89,1.312,90,3.527,91,2.157,93,1.82,94,1.492,95,2.484,96,2.873,97,2.873,98,2.809,100,2.582,103,2.69,104,2.941,105,0.785,107,2.582,513,4.443,514,3.464,981,5.756,1638,5.123,1700,4.443,1851,5.825,2479,5.713,2480,7.49,2481,5.713,2482,8.87,2483,5.713,2484,5.713,2485,7.953,2486,7.49]],["title/classes/UUID.html",[0,0.249,191,1.528]],["body/classes/UUID.html",[0,0.238,2,0.806,3,0.045,4,0.045,5,0.045,9,0.065,10,0.812,11,1.277,13,1.018,14,2.713,16,1.043,35,1.043,36,0.005,37,0.729,38,0.137,39,0.753,40,0.947,44,1.059,45,1.042,46,0.045,61,0.003,62,0.003,71,1.159,73,0.948,84,1.087,85,0.315,94,1.532,105,1.197,167,2.072,191,2.831,199,1.746,200,1.286,212,1.343,215,3.228,223,1.57,232,3.41,234,3.096,235,3.034,236,2.641,239,4.162,246,3.993,247,2.713,249,3.415,250,2.561,252,3.16,253,2.441,254,2.034,255,2.111,271,3.414,310,4.353,338,1.864,339,2.854,342,3.414,343,5.188,407,5.22,408,4.948,721,3.459,1199,3.414,1807,5.22,2487,4.855,2488,8.3,2489,6.713,2490,4.855,2491,4.855,2492,4.855,2493,4.855,2494,6.713,2495,9.673,2496,6.713,2497,6.713,2498,6.713,2499,8.3,2500,6.713,2501,6.713,2502,6.713,2503,4.855,2504,4.855,2505,4.855]],["title/classes/UUIDGroup.html",[0,0.249,2506,4.556]],["body/classes/UUIDGroup.html",[0,0.198,2,0.67,3,0.038,4,0.038,5,0.038,9,0.079,10,0.712,13,0.846,14,2.379,16,0.982,23,1.995,25,3.105,28,2.021,35,1.035,36,0.005,37,0.724,38,0.134,39,0.747,40,0.871,44,0.88,45,0.833,46,0.038,47,0.939,51,1.903,61,0.003,62,0.003,66,1.043,71,1.016,73,0.831,84,0.981,85,0.285,94,1.384,105,1.203,158,2.661,160,1.483,167,2.464,191,2.297,199,1.452,200,1.128,223,2.247,232,3.08,234,2.715,235,2.661,236,3.005,239,4.131,242,2.26,243,3.82,247,2.379,249,3.488,250,2.129,252,2.772,253,2.03,254,1.691,255,1.755,271,4.887,305,2.379,338,1.55,339,2.373,340,1.722,342,4.14,343,3.97,347,2.722,351,1.452,403,4.339,444,3.619,475,1.188,633,5.902,731,2.609,753,2.242,778,2.559,785,2.338,925,2.715,929,2.715,1335,5.757,1361,4.578,1366,3.03,1666,4.14,1826,4.878,2455,5.278,2506,7.849,2507,4.036,2508,6.949,2509,7.638,2510,5.887,2511,5.887,2512,5.887,2513,5.887,2514,5.887,2515,5.887,2516,5.887,2517,5.278,2518,5.887,2519,4.036,2520,6.949,2521,4.036,2522,5.887,2523,4.036,2524,4.036,2525,4.036,2526,4.036,2527,4.036,2528,4.036,2529,4.036,2530,4.036,2531,4.036,2532,6.949,2533,4.036,2534,4.036,2535,4.036,2536,5.887,2537,4.036,2538,5.887,2539,4.036,2540,4.036,2541,4.036,2542,4.036,2543,4.036]],["title/classes/User.html",[0,0.249,218,1.445]],["body/classes/User.html",[0,0.147,2,0.497,3,0.028,4,0.028,5,0.028,9,0.04,10,0.568,11,0.961,13,0.628,14,1.897,16,1.098,35,1.071,36,0.005,37,0.92,38,0.156,39,0.773,40,1.031,43,0.037,45,0.986,46,0.054,61,0.002,62,0.002,71,0.81,73,0.663,84,1.116,85,0.192,94,0.596,105,1.182,131,2.043,167,2.035,191,1.972,200,1.611,218,2.392,232,1.326,233,3.349,234,2.165,235,2.121,247,1.897,249,1.931,276,1.942,338,2.223,368,4.099,373,1.578,380,2.206,394,1.471,431,4.651,475,1.65,556,3.306,557,2.912,558,3.546,560,3.46,561,3.229,566,1.942,571,2.206,573,2.683,575,2.683,577,4.802,590,2.48,592,2.48,594,1.578,595,1.578,596,3.249,597,3.854,598,3.852,599,2.206,600,2.018,602,2.105,605,1.505,612,2.68,613,2.018,614,2.018,615,2.327,619,3.301,620,3.65,621,2.018,622,1.578,628,2.105,629,2.475,630,2.018,631,2.416,632,3.65,633,4.462,634,2.327,741,1.875,744,1.38,1060,4.651,1300,2.327,1660,2.105,1777,2.206,1781,2.206,1790,3.459,1937,4.797,1938,2.327,1939,5.432,1940,2.327,1941,2.327,1942,2.683,1943,2.683,1944,2.683,1945,2.683,1946,2.683,1947,2.683,1948,2.683,1949,2.683,1950,2.683,1951,2.48,1952,2.683,1953,2.48,1954,2.683,1955,2.48,1956,2.683,1957,2.683,1958,2.683,1959,4.208,1960,2.683,1961,4.208,1962,2.683,1963,4.208,1964,2.683,2166,2.683,2544,4.693,2545,2.993,2546,2.993,2547,2.993,2548,2.993,2549,2.993,2550,2.993,2551,2.993,2552,2.993,2553,2.993,2554,2.993,2555,2.993,2556,2.993,2557,2.993,2558,2.993,2559,2.993,2560,2.993,2561,2.993,2562,2.993,2563,2.993,2564,2.993,2565,2.993,2566,2.993,2567,2.993]],["title/controllers/UserController.html",[146,2.987,1686,4.21]],["body/controllers/UserController.html",[0,0.127,3,0.024,4,0.024,5,0.024,8,0.839,9,0.035,11,1.178,12,1.369,13,0.544,16,0.865,23,0.566,35,1.012,36,0.005,37,0.736,38,0.124,39,0.731,44,0.566,45,0.283,46,0.024,51,1.355,61,0.002,62,0.002,65,0.485,66,0.743,73,0.592,76,1.694,78,1.129,84,1.055,85,0.384,86,1.173,87,1.197,89,0.596,90,4.111,91,0.98,94,1.71,98,1.276,100,1.173,105,0.912,107,1.173,131,0.573,146,1.526,148,1.685,150,1.914,165,2.685,167,2.162,179,1.442,180,3.502,181,2.826,190,4.946,192,0.718,194,2.551,199,0.934,200,0.803,203,5.273,210,2.019,212,1.16,218,2.754,223,2.295,226,1.461,227,2.626,230,3.415,232,1.151,246,1.858,255,1.129,291,0.827,297,1.173,327,3.193,351,1.508,397,3.209,424,2.151,431,1.306,452,2.151,474,2.826,485,2.019,511,2.151,514,1.574,526,2.247,596,0.98,649,4.608,650,1.751,665,2.108,666,2.328,680,3.554,681,2.151,684,2.151,685,1.914,686,2.328,687,2.328,688,2.328,706,3.758,712,5.953,713,2.328,714,2.019,851,1.108,854,1.826,855,2.019,919,1.375,1042,2.826,1075,2.019,1082,2.826,1084,4.309,1086,5.013,1117,2.948,1124,1.129,1201,2.019,1241,2.72,1383,6.68,1455,1.276,1566,1.751,1584,2.948,1596,2.019,1603,3.885,1622,3.707,1632,3.473,1642,2.019,1686,3.473,1690,2.328,1691,2.328,1697,2.328,1700,2.019,1704,2.328,1706,2.328,1759,2.019,2016,1.914,2213,2.328,2214,2.328,2215,2.328,2216,2.328,2217,2.328,2218,2.328,2220,2.151,2288,2.151,2439,2.151,2441,2.328,2568,2.596,2569,5.271,2570,4.191,2571,4.191,2572,4.191,2573,4.191,2574,2.596,2575,2.596,2576,2.596,2577,2.596,2578,2.596,2579,2.596,2580,2.596,2581,2.596,2582,2.596,2583,2.596,2584,2.596,2585,2.596,2586,2.596,2587,2.596,2588,2.596,2589,2.596,2590,4.191,2591,2.596,2592,2.596,2593,2.596,2594,2.596,2595,2.596,2596,2.596,2597,2.596,2598,2.596,2599,2.596,2600,2.596,2601,4.191,2602,2.596,2603,2.596,2604,2.596,2605,2.596,2606,2.596,2607,2.596,2608,2.596,2609,4.191,2610,4.191,2611,2.596,2612,2.596,2613,2.596,2614,2.596,2615,2.596,2616,2.596,2617,2.596,2618,2.596,2619,2.596,2620,2.596,2621,2.596,2622,2.596,2623,2.596,2624,5.271,2625,2.596,2626,2.328,2627,2.596,2628,2.596,2629,4.191,2630,2.596,2631,2.596,2632,2.596,2633,3.758,2634,4.191,2635,4.191,2636,4.191,2637,2.596,2638,2.596,2639,2.596,2640,2.596,2641,5.271,2642,2.596,2643,2.596,2644,2.596,2645,2.596,2646,2.596,2647,4.191,2648,2.596,2649,5.271,2650,2.596,2651,2.596,2652,4.191,2653,2.596,2654,2.596,2655,2.596,2656,2.596,2657,2.596]],["title/classes/UserFirestoreMapper.html",[0,0.249,1760,3.951]],["body/classes/UserFirestoreMapper.html",[0,0.243,2,0.822,3,0.046,4,0.046,5,0.046,9,0.067,16,0.788,35,0.922,36,0.005,37,0.736,38,0.113,39,0.666,40,1.059,43,0.061,45,0.989,46,0.064,47,1.583,48,1.999,49,1.973,51,2.706,61,0.003,62,0.003,65,1.27,73,0.961,84,0.961,85,0.319,105,0.935,131,1.094,143,2.331,200,0.948,218,2.381,291,1.578,351,3.011,368,2.195,387,3.244,431,2.49,475,0.999,535,4.549,560,3.198,561,2.984,721,3.48,727,4.779,728,3.513,729,4.453,730,5.432,731,3.016,734,3.345,736,4.438,737,2.549,742,5.292,743,4.785,744,2.284,1060,2.49,1465,6.844,1757,4.44,1758,5.73,1759,3.851,1760,5.292,1761,6.101,1762,6.97,2658,6.804,2659,4.952,2660,4.952,2661,4.952]],["title/classes/UserMapper.html",[0,0.249,2016,3.745]],["body/classes/UserMapper.html",[0,0.23,2,0.778,3,0.044,4,0.044,5,0.044,9,0.063,16,0.759,20,1.671,23,2.035,35,0.888,36,0.005,37,0.815,38,0.125,39,0.641,40,0.982,43,0.058,45,1.068,46,0.071,47,1.525,48,1.953,49,1.928,61,0.003,62,0.003,65,1.223,66,1.449,73,0.926,84,0.926,85,0.192,105,0.9,131,1.668,160,1.65,161,3.038,200,0.898,218,2.602,351,3.358,368,3.348,387,2.683,431,3.798,475,1.524,560,3.364,561,3.139,596,3.088,629,3.456,631,3.373,721,3.422,728,3.038,731,3.951,734,4.382,744,2.163,746,3.973,747,4.83,748,3.64,751,3.425,752,5.307,753,4.542,754,3.852,756,2.696,758,2.678,761,3.299,1060,3.798,1564,2.843,1758,5.568,2013,6.775,2014,3.886,2015,4.206,2016,4.83,2017,3.886,2018,3.886,2019,3.886,2662,4.69,2663,4.69]],["title/classes/UserPrismaMapper.html",[0,0.249,2265,3.951]],["body/classes/UserPrismaMapper.html",[0,0.249,2,1.306,3,0.048,4,0.048,5,0.048,9,0.068,16,0.801,23,1.508,35,0.937,36,0.005,37,0.801,38,0.115,39,0.677,40,0.965,46,0.048,47,1.61,48,2.02,49,1.993,51,2.236,61,0.003,62,0.003,65,1.291,66,1.226,73,0.977,84,0.977,85,0.284,105,0.95,131,1.528,161,2.57,200,0.972,218,2.706,291,1.616,351,2.488,368,3.066,387,3.201,431,3.479,475,1.023,560,2.846,561,2.656,629,3.649,631,3.561,721,3.506,727,4.827,728,3.533,729,3.981,741,3.178,744,2.34,746,4.194,748,3.842,758,2.896,761,3.568,765,5.38,768,5.368,769,5.38,771,5.38,772,5.38,773,5.38,774,4.865,775,3.292,1060,3.479,1564,3.075,1660,3.568,1951,4.203,1953,4.203,1955,4.203,2017,4.203,2018,4.203,2019,4.203,2265,5.38,2664,5.073,2665,9.132,2666,5.073,2667,5.073]],["title/injectables/UserPrismaRepo.html",[183,1.406,2424,4.21]],["body/injectables/UserPrismaRepo.html",[0,0.176,3,0.034,4,0.034,5,0.034,8,1.157,9,0.048,11,0.594,13,0.75,16,1.003,35,1.141,36,0.005,37,0.798,38,0.139,39,0.824,40,1.011,42,1.715,44,0.78,46,0.034,61,0.003,62,0.003,71,0.617,73,0.76,84,1.189,85,0.37,89,0.822,93,1.14,94,1.765,105,1.115,131,1.591,161,1.329,165,2.819,171,2.255,176,2.151,183,1.49,187,1.799,191,1.619,192,0.99,194,2.534,199,1.287,200,0.685,207,1.123,212,0.99,218,2.048,220,1.092,222,1.397,223,1.157,224,2.189,226,1.877,257,1.329,291,1.14,316,3.707,368,1.586,475,1.086,523,1.721,622,3.414,644,2.719,665,2.707,768,3.165,778,3.661,779,2.964,780,4.856,785,3.067,794,2.782,796,3.074,797,2.043,802,5.6,803,5.308,806,2.637,807,1.987,808,1.935,809,1.586,810,2.413,888,1.887,891,1.987,893,2.516,899,3.968,900,2.241,904,2.782,1066,2.782,1444,2.782,1734,2.341,2112,3.805,2113,3.805,2118,3.924,2120,4.919,2122,4.919,2125,2.782,2126,3.924,2128,2.782,2129,3.924,2131,2.169,2154,3.208,2265,2.782,2266,3.208,2424,4.461,2668,3.578,2669,3.578,2670,3.578,2671,3.578,2672,3.578,2673,3.578,2674,3.578,2675,3.578,2676,3.578,2677,5.804,2678,3.578,2679,3.578,2680,6.473,2681,3.578,2682,3.578,2683,3.578,2684,3.578,2685,5.384,2686,3.578,2687,3.578,2688,3.578,2689,3.578,2690,3.578]],["title/classes/UserRepo.html",[0,0.249,171,2.128]],["body/classes/UserRepo.html",[0,0.173,2,0.584,3,0.033,4,0.033,5,0.033,9,0.047,16,0.934,18,1.9,20,1.459,26,1.826,27,2.38,28,2.199,35,1.092,36,0.005,37,0.764,38,0.134,39,0.789,40,1.006,42,1.121,43,0.1,46,0.081,47,1.237,48,1.53,49,1.51,61,0.003,62,0.003,65,0.656,66,1.483,73,0.751,84,1.139,85,0.293,131,1.986,159,2.684,160,2.264,161,3.109,171,2.226,176,2.099,191,2.518,192,0.973,207,1.104,212,1.773,216,2.684,218,1.822,220,1.955,222,3.148,223,1.137,224,2.166,226,1.853,242,2.459,257,1.306,281,3.311,291,1.121,316,1.81,340,2.733,350,2.635,368,2.839,475,1.292,644,2.419,665,2.673,751,2.991,756,1.447,778,3.104,782,2.268,785,2.836,888,1.855,891,1.953,916,3.59,917,2.414,918,3.221,919,2.645,920,3.149,921,3.221,922,3.877,923,3.221,924,3.221,925,2.955,926,3.149,927,3.221,928,3.221,929,2.955,931,1.769,932,1.81,933,4.054,1734,2.311,2112,4.197,2113,4.197,2116,4.158,2118,3.884,2120,3.884,2122,3.884,2125,2.735,2126,3.884,2128,2.735,2129,3.884,2131,2.132,2285,1.855,2691,2.372,2692,3.517,2693,3.517,2694,3.517,2695,3.517,2696,3.517,2697,3.517]],["title/injectables/UsersFirestore.html",[183,1.406,1479,4.21]],["body/injectables/UsersFirestore.html",[0,0.119,3,0.023,4,0.023,5,0.023,8,0.784,9,0.033,11,0.658,13,0.831,16,0.934,35,1.062,36,0.005,37,0.742,38,0.13,39,0.767,40,0.978,41,1.318,42,2.191,44,1.097,45,0.855,46,0.023,61,0.002,62,0.002,71,0.418,73,0.56,84,1.107,85,0.357,89,0.557,94,1.869,105,1.077,131,1.415,143,1.141,161,1.473,165,2.789,167,2.039,171,1.661,176,1.973,180,2.091,183,1.097,187,1.219,191,1.513,192,0.671,194,2.895,199,1.809,200,0.963,207,1.245,212,1.392,218,0.69,223,1.878,224,1.34,226,1.382,243,1.573,257,0.9,291,0.772,305,2.78,316,3.298,368,2.229,475,1.172,522,3.918,523,1.166,528,3.771,535,2.419,546,2.009,549,2.174,551,2.174,554,1.787,622,3.379,644,2.194,665,1.994,737,1.248,778,3.156,785,2.545,796,3.317,797,1.384,802,3.083,803,3.707,806,1.787,807,1.346,808,2.144,809,2.229,810,2.673,851,2.734,882,1.885,888,2.091,891,1.346,899,2.922,936,2.009,938,3.285,944,1.885,946,1.573,947,2.009,950,2.009,1165,3.918,1187,1.885,1189,1.425,1383,3.083,1441,2.009,1444,1.885,1462,2.009,1466,2.174,1479,3.285,1734,1.724,1746,3.083,1750,3.918,1760,1.885,2005,4.167,2077,4.167,2112,2.956,2113,2.956,2118,3.049,2120,4.169,2122,4.169,2125,1.885,2126,3.049,2128,1.885,2129,3.049,2131,1.47,2186,2.174,2187,2.174,2189,4.51,2193,2.174,2194,3.555,2195,4.51,2197,4.51,2223,2.174,2677,6.167,2698,2.424,2699,5.03,2700,3.964,2701,2.424,2702,2.424,2703,2.424,2704,2.424,2705,2.424,2706,2.424,2707,2.424,2708,2.424,2709,2.424,2710,5.81,2711,2.424,2712,3.964,2713,3.964,2714,2.424,2715,2.424,2716,2.424,2717,2.424,2718,2.424,2719,2.424,2720,2.424,2721,2.424,2722,3.964,2723,2.424,2724,2.424,2725,2.424,2726,2.424,2727,5.81,2728,3.964,2729,6.407,2730,5.03,2731,3.964,2732,3.964,2733,3.964,2734,3.964,2735,3.964,2736,3.964,2737,2.424,2738,3.964,2739,3.964,2740,2.424,2741,2.424,2742,3.964,2743,3.964,2744,2.424,2745,5.81,2746,3.964,2747,5.03,2748,2.424,2749,2.424,2750,2.424,2751,2.424,2752,2.424,2753,2.424,2754,2.424,2755,2.424,2756,2.424,2757,2.424,2758,2.424,2759,2.424,2760,2.424,2761,2.424,2762,2.424,2763,2.424,2764,2.424,2765,2.424,2766,2.424,2767,2.424,2768,2.424,2769,2.424]],["title/classes/ValueObject.html",[0,0.249,232,2.252]],["body/classes/ValueObject.html",[0,0.266,2,0.897,3,0.034,4,0.034,5,0.034,9,0.048,13,1.134,16,0.836,20,1.327,22,1.898,23,1.416,25,2.852,26,0.745,28,1.235,35,0.979,36,0.005,37,0.615,38,0.12,39,0.635,40,0.411,42,2.467,44,0.785,46,0.068,61,0.003,62,0.003,65,0.672,66,1.372,73,0.764,84,0.917,85,0.222,94,1.077,105,1.192,109,1.852,159,1.507,160,1.636,199,1.294,200,1.383,212,0.996,218,1.538,232,3.846,234,2.494,235,2.444,236,2.792,242,1.381,247,2.625,249,3.185,250,1.898,252,2.546,253,1.81,254,1.507,281,2.934,294,4.788,338,2.773,339,2.115,340,1.535,347,3.646,350,2.672,419,1.946,456,3.803,525,2.265,526,2.009,558,1.946,566,4.215,594,1.898,721,3.122,835,5.424,851,3.859,854,5.079,919,1.181,922,1.731,925,1.66,1155,3.087,1251,2.055,1316,2.652,1317,2.799,1325,4.48,1338,2.982,1339,5.382,1340,5.382,1341,2.982,1342,2.427,1345,5.617,1346,3.227,1347,2.925,1348,2.982,1349,2.982,1350,6.738,1351,6.942,1352,7.292,1353,3.227,1354,4.788,1355,7.782,1356,5.824,1357,3.227,1358,6.476,1359,6.476,1360,5.824,1361,2.799,1362,3.227,1363,3.227,1364,3.227,1365,3.227,1366,1.852,1367,3.227,1368,3.227,1369,3.227,2770,3.599,2771,3.599,2772,3.599,2773,3.599,2774,3.599,2775,3.599]],["title/injectables/ViacepGateway.html",[183,1.406,1547,3.951]],["body/injectables/ViacepGateway.html",[0,0.271,3,0.052,4,0.052,5,0.052,9,0.074,11,0.914,13,1.156,16,0.847,18,1.634,35,0.991,36,0.005,37,0.693,38,0.121,39,0.716,40,0.629,43,0.068,44,1.202,45,1.103,46,0.052,61,0.004,62,0.004,71,0.951,73,1.033,84,0.778,85,0.358,89,1.266,93,1.756,94,1.456,105,0.757,125,5.861,165,2.335,176,1.658,183,2.024,190,2.907,194,1.808,199,1.982,200,1.056,223,1.782,305,2.227,344,2.856,397,2.491,405,4.434,407,5.688,408,5.391,410,3.876,411,4.062,412,4.062,413,4.062,414,4.062,415,5.391,422,3.876,523,2.651,809,2.442,965,3.716,1395,3.876,1509,4.286,1525,4.932,1527,3.716,1547,5.688,1916,4.566,1989,6.06,1990,4.941,1991,4.941,1992,4.941,1993,4.941,1994,4.941,1995,4.941,1996,4.941,1997,4.941,1998,4.941,1999,4.941,2000,4.941,2001,6.558,2002,4.941,2003,4.941,2004,4.941,2005,4.566,2006,4.566,2007,4.941,2008,4.941,2009,4.941,2010,4.941,2011,4.941,2012,4.941,2776,5.511,2777,5.511,2778,5.511]],["title/interfaces/create.html",[43,0.063,644,1.918]],["body/interfaces/create.html",[0,0.242,3,0.046,4,0.046,5,0.046,9,0.066,10,0.82,18,2.01,20,1.385,26,1.873,27,2.517,28,2.326,36,0.005,37,0.734,38,0.082,40,0.999,42,1.568,43,0.096,46,0.082,47,1.577,48,1.619,49,1.598,61,0.003,62,0.003,66,1.479,85,0.278,159,2.839,160,2.279,176,1.757,191,2.331,192,1.362,211,3.435,212,1.875,216,2.839,220,2.067,222,3.418,223,1.591,242,2.602,281,2.823,330,3.763,340,2.891,344,3.418,350,2.788,356,2.225,361,3.736,475,1.367,525,3.956,644,2.926,751,2.839,778,2.946,783,3.319,786,3.319,788,3.319,791,2.734,792,3.319,913,3.828,916,3.408,917,2.291,918,3.408,919,2.739,920,3.331,921,3.408,922,4.015,923,3.408,924,3.408,925,3.125,926,3.331,927,3.408,928,3.408,929,3.125,931,2.475,932,2.534,933,3.897,1709,1.019]],["title/interfaces/create-1.html",[43,0.053,215,2.043,644,1.604]],["body/interfaces/create-1.html",[0,0.226,3,0.043,4,0.043,5,0.043,9,0.062,10,0.784,18,1.921,20,1.53,23,1.006,26,1.77,27,2.406,28,2.223,36,0.005,38,0.076,40,0.926,42,1.469,43,0.106,46,0.085,47,1.507,48,1.788,49,1.527,61,0.003,62,0.003,66,1.571,85,0.333,131,1.793,159,2.713,160,2.233,176,1.938,191,1.948,192,1.276,211,1.897,212,1.792,216,2.713,218,2.129,220,2.284,222,3.169,223,1.491,224,2.531,242,2.486,257,1.713,281,2.998,291,1.469,330,2.561,340,2.763,344,1.801,350,1.897,361,1.968,387,1.513,475,0.93,526,3.453,644,2.445,731,2.044,751,3.135,756,3.079,778,2.816,782,1.968,785,1.832,916,3.257,917,2.19,918,3.257,919,2.663,920,3.184,921,3.257,922,3.6,923,3.257,924,3.257,925,2.987,926,3.184,927,3.257,928,3.257,929,2.987,931,2.319,933,4.3,1120,2.218,1124,2.005,1241,2.993,1255,2.993,1550,3.948,1709,0.955,1734,2.005,2054,3.926,2058,2.889,2060,2.889,2062,2.889,2064,2.889,2068,2.889,2070,2.889,2277,3.244,2283,3.244,2284,3.11,2285,2.433]],["title/interfaces/create-2.html",[43,0.053,394,2.088,644,1.604]],["body/interfaces/create-2.html",[0,0.217,3,0.041,4,0.041,5,0.041,9,0.059,10,0.761,18,1.865,20,1.285,26,1.811,27,2.336,28,2.159,36,0.005,38,0.104,40,0.835,42,1.409,43,0.109,46,0.086,47,1.463,48,1.502,49,1.483,61,0.003,62,0.003,66,1.412,85,0.327,131,2.031,159,2.634,160,2.203,161,2.96,171,1.853,176,1.983,191,2.706,192,1.224,207,1.389,212,1.74,216,2.634,218,2.616,220,2.232,222,3.287,223,1.43,224,3.109,226,2.192,242,2.414,257,1.643,281,3.042,291,1.409,316,2.277,340,2.683,350,2.587,368,3.243,475,1.269,644,2.374,751,2.634,756,1.82,782,1.887,785,2.498,888,2.333,891,2.457,916,3.162,917,2.126,918,3.162,919,2.614,920,3.091,921,3.162,922,3.832,923,3.162,924,3.162,925,2.9,926,3.091,927,3.162,928,3.162,929,2.9,931,2.224,932,2.277,933,4.398,1709,0.916,1734,1.923,2112,3.696,2113,3.696,2116,2.871,2118,2.682,2120,2.682,2122,2.682,2126,2.682,2129,2.682,2131,2.682,2285,2.333,2691,2.983]],["title/dependencies.html",[114,3.827,2779,3.519]],["body/dependencies.html",[0,0.386,36,0.005,61,0.004,62,0.004,89,1.413,91,2.967,114,3.854,139,3.992,143,3.699,151,4.326,184,3.854,201,4.784,267,5.515,268,5.515,311,5.515,392,3.512,439,4.534,471,4.784,768,3.616,775,3.992,978,4.784,1001,3.854,1286,5.515,1431,4.534,1700,4.784,1702,4.784,1838,5.096,2319,5.515,2358,5.096,2780,6.151,2781,6.151,2782,6.151,2783,6.151,2784,5.515,2785,6.151,2786,8.657,2787,6.151,2788,6.151,2789,6.151,2790,6.151,2791,6.151,2792,6.151,2793,7.857,2794,6.151,2795,6.151,2796,6.151,2797,6.151,2798,6.151,2799,6.151,2800,7.857,2801,6.151,2802,6.151,2803,6.151,2804,6.151,2805,6.151,2806,6.151,2807,6.151,2808,4.784,2809,6.151,2810,6.151,2811,6.151,2812,6.151,2813,6.151,2814,6.151,2815,6.151,2816,6.151,2817,6.151,2818,6.151]],["title/miscellaneous/enumerations.html",[2819,2.756,2820,5.477]],["body/miscellaneous/enumerations.html",[8,1.588,9,0.066,36,0.005,40,0.56,56,4.988,61,0.003,62,0.003,86,3.059,100,4.463,146,3.978,179,3.758,180,3.569,218,1.925,224,1.661,236,3.607,254,2.835,279,4.759,403,3.621,419,2.657,525,2.835,526,2.514,565,3.985,594,2.591,595,2.591,672,1.796,797,3.864,932,2.529,946,4.392,1058,4.563,1082,3.313,1084,3.188,1149,4.07,1156,4.07,1157,4.07,1158,4.07,1159,4.07,1160,4.07,1161,4.07,1162,5.607,1163,4.07,1164,3.078,1165,4.563,1166,4.07,1168,4.07,1169,4.07,1170,4.07,1171,5.706,1172,4.563,1173,4.07,1174,4.988,1175,4.07,1176,3.621,1248,4.563,1338,4.07,1347,4.512,1348,5.607,1349,4.07,1527,4.563,1532,4.07,1536,4.07,1537,4.07,1538,4.07,1539,4.07,1540,4.988,1710,4.07,1711,4.07,1712,4.07,1794,3.82,1795,5.607,1796,4.07,1797,4.07,1798,3.188,1799,3.621,1800,5.607,1801,5.607,1932,4.07,1933,5.607,1934,5.607,1935,4.07,1936,4.07,2819,3.188,2820,4.405,2821,5.607,2822,6.767,2823,6.767,2824,4.913,2825,4.405,2826,4.913,2827,4.913,2828,4.913,2829,4.913]],["title/interfaces/find.html",[43,0.063,778,2.209]],["body/interfaces/find.html",[0,0.224,3,0.043,4,0.043,5,0.043,9,0.061,10,0.776,18,1.903,20,1.519,23,0.993,26,1.762,27,2.384,28,2.203,36,0.005,38,0.106,40,0.921,42,2.368,43,0.106,46,0.085,47,1.494,48,1.776,49,1.513,61,0.003,62,0.003,66,1.564,85,0.331,131,1.95,159,2.688,160,2.224,176,1.929,191,1.931,192,1.26,211,1.873,212,1.776,216,2.688,218,2.114,220,2.694,222,3.542,223,1.472,224,2.513,242,2.464,257,1.691,281,2.985,291,1.451,330,2.529,340,2.738,344,1.778,350,1.873,361,1.943,387,1.494,475,0.918,526,2.761,644,1.719,731,2.018,751,3.114,756,3.058,778,3.232,782,1.943,785,1.808,916,3.227,917,2.17,918,3.227,919,2.648,920,3.155,921,3.227,922,3.575,923,3.227,924,3.227,925,2.96,926,3.155,927,3.227,928,3.227,929,2.96,931,2.29,933,4.279,1120,2.19,1124,1.98,1241,2.955,1255,2.955,1550,3.92,1709,0.943,1734,1.98,2054,3.891,2058,2.852,2060,2.852,2062,2.852,2064,2.852,2068,2.852,2070,2.852,2277,3.202,2283,3.202,2284,3.07,2285,2.401]],["title/miscellaneous/functions.html",[2808,4.75,2819,2.756]],["body/miscellaneous/functions.html",[0,0.217,9,0.059,15,1.738,18,1.31,20,0.902,23,0.963,26,1.513,27,1.64,28,1.516,35,1.3,36,0.005,37,0.909,38,0.159,39,0.939,40,1.082,45,1.047,48,1.055,49,1.041,51,1.428,61,0.003,62,0.003,65,0.824,66,1.113,69,1.957,84,1.124,148,2.866,160,1.582,161,1.64,181,2.978,211,1.817,212,1.222,236,3.211,297,4.227,305,1.785,351,1.588,392,2.521,396,2.766,436,4.629,456,3.106,469,4.076,475,1.913,509,3.255,566,5.459,725,3.255,728,1.64,753,2.452,756,1.817,885,3.255,919,2.061,1044,2.866,1342,2.978,1366,3.233,1428,3.106,1453,3.255,1465,3.255,1626,3.434,1735,5.204,1736,3.959,1737,3.959,1738,3.659,1739,3.659,1740,3.959,1907,3.959,1908,3.959,1909,3.659,1910,3.959,1911,3.959,1912,3.959,1913,3.659,1914,3.959,1915,3.959,2808,3.434,2819,2.866,2830,4.416,2831,6.281,2832,5.631,2833,6.281,2834,5.631,2835,6.281,2836,6.281,2837,6.281,2838,5.631,2839,6.281,2840,5.631,2841,4.416,2842,6.281,2843,6.281,2844,3.959,2845,6.281,2846,3.959,2847,4.416,2848,9.016,2849,3.959,2850,4.416,2851,3.959,2852,4.416,2853,3.959,2854,4.416,2855,3.959,2856,4.416,2857,3.959,2858,4.416,2859,3.959,2860,4.416,2861,3.959,2862,4.416,2863,3.959,2864,4.416]],["title/interfaces/getAllCondominiumRelation.html",[43,0.063,2112,2.987]],["body/interfaces/getAllCondominiumRelation.html",[0,0.22,3,0.042,4,0.042,5,0.042,9,0.06,10,0.768,18,1.882,20,1.297,26,1.818,27,2.357,28,2.178,36,0.005,38,0.074,40,0.841,42,1.427,43,0.109,46,0.086,47,1.476,48,1.516,49,1.496,61,0.003,62,0.003,66,1.42,85,0.328,131,2.038,159,2.658,160,2.212,161,2.976,171,1.876,176,1.991,191,2.822,192,1.24,207,1.406,212,1.756,216,2.658,218,2.095,220,2.248,222,3.302,223,1.448,224,2.491,226,2.949,242,2.436,257,1.664,281,3.053,291,1.427,316,2.306,340,2.707,350,2.61,368,3.265,475,1.28,644,1.691,751,2.658,756,1.843,782,1.911,785,2.52,888,2.362,891,2.488,916,3.19,917,2.145,918,3.19,919,2.629,920,3.119,921,3.19,922,3.854,923,3.19,924,3.19,925,2.926,926,3.119,927,3.19,928,3.19,929,2.926,931,2.252,932,2.306,933,4.416,1709,0.927,1734,1.947,2112,4.331,2113,3.729,2116,2.907,2118,2.716,2120,2.716,2122,2.716,2126,2.716,2129,2.716,2131,2.716,2285,2.362,2691,3.021]],["title/interfaces/getCondominiumRelation.html",[43,0.063,2113,2.987]],["body/interfaces/getCondominiumRelation.html",[0,0.217,3,0.041,4,0.041,5,0.041,9,0.059,10,0.761,18,1.865,20,1.285,26,1.811,27,2.336,28,2.159,36,0.005,38,0.104,40,0.835,42,1.409,43,0.109,46,0.086,47,1.463,48,1.502,49,1.483,61,0.003,62,0.003,66,1.412,85,0.327,131,2.031,159,2.634,160,2.203,161,2.96,171,1.853,176,1.983,191,2.887,192,1.224,207,2.502,212,1.74,216,2.634,218,2.081,220,2.232,222,3.287,223,1.43,224,2.474,226,2.935,242,2.414,257,1.643,281,3.042,291,1.409,316,2.277,340,2.683,350,2.587,368,3.243,475,1.269,644,1.67,751,2.634,756,1.82,782,1.887,785,2.498,888,2.333,891,2.457,916,3.162,917,2.126,918,3.162,919,2.614,920,3.091,921,3.162,922,3.832,923,3.162,924,3.162,925,2.9,926,3.091,927,3.162,928,3.162,929,2.9,931,2.224,932,2.277,933,4.398,1709,0.916,1734,1.923,2112,3.696,2113,4.301,2116,2.871,2118,2.682,2120,2.682,2122,2.682,2126,2.682,2129,2.682,2131,2.682,2285,2.333,2691,2.983]],["title/index.html",[9,0.057,2865,4.247,2866,4.247]],["body/index.html",[21,4.13,23,2.132,26,1.98,27,0.86,36,0.004,48,0.912,51,2.781,52,1.562,61,0.002,62,0.002,66,1.613,69,1.692,131,0.512,143,2.661,159,2.619,160,1.227,161,0.86,162,1.707,211,0.953,212,1.057,242,2.959,243,3.162,244,3.591,297,1.047,330,1.286,340,1.629,351,3.424,352,1.707,358,1.801,377,3.164,382,3.424,387,2.44,394,1.139,532,2.478,533,2.077,534,2.077,633,1.451,684,1.919,685,3.591,700,2.077,701,4.368,728,1.81,756,2.572,768,2.245,851,1.629,917,2.275,919,1.599,920,1.139,925,1.068,926,1.877,981,1.503,985,1.562,1029,2.45,1030,1.165,1044,1.503,1045,2.18,1151,1.707,1153,1.707,1191,4.079,1201,1.801,1252,6.584,1253,3.591,1319,3.164,1335,1.919,1339,1.919,1340,1.919,1342,4.537,1354,1.707,1366,3.464,1397,1.801,1516,2.815,1523,4.683,1603,2.815,1666,2.685,1738,1.919,1739,4.683,1860,4.683,1909,1.919,1977,4.037,1986,2.97,2158,7.297,2309,6.033,2350,2.077,2358,1.919,2429,2.077,2485,2.077,2517,2.077,2626,2.077,2633,2.077,2779,1.919,2784,2.077,2808,1.801,2867,3.818,2868,2.316,2869,2.316,2870,3.818,2871,2.316,2872,2.316,2873,5.652,2874,3.818,2875,5.652,2876,2.316,2877,2.316,2878,2.316,2879,2.316,2880,2.316,2881,2.316,2882,2.316,2883,4.872,2884,2.316,2885,2.316,2886,3.818,2887,3.818,2888,5.652,2889,5.652,2890,2.316,2891,3.818,2892,4.872,2893,2.316,2894,2.316,2895,2.316,2896,4.872,2897,4.872,2898,5.652,2899,6.252,2900,2.316,2901,2.316,2902,2.316,2903,6.252,2904,4.872,2905,6.729,2906,2.316,2907,3.818,2908,2.316,2909,2.316,2910,2.316,2911,2.316,2912,2.316,2913,2.316,2914,2.316,2915,2.316,2916,2.316,2917,3.818,2918,2.316,2919,2.316,2920,8.313,2921,2.316,2922,2.316,2923,2.316,2924,2.077,2925,2.316,2926,3.818,2927,2.316,2928,2.316,2929,5.652,2930,2.316,2931,2.316,2932,5.652,2933,2.316,2934,2.316,2935,2.316,2936,2.316,2937,2.316,2938,5.652,2939,2.316,2940,2.316,2941,2.316,2942,2.316,2943,2.316,2944,7.116,2945,8.138,2946,2.316,2947,4.872,2948,2.316,2949,2.316,2950,2.316,2951,2.316,2952,2.316,2953,3.818,2954,2.316,2955,3.818,2956,2.316,2957,2.316,2958,3.818,2959,2.316,2960,2.316,2961,4.872,2962,6.252,2963,4.872,2964,2.316,2965,2.316,2966,2.316,2967,2.316,2968,2.316,2969,2.316,2970,3.818,2971,2.316,2972,2.316,2973,2.316,2974,2.316,2975,2.316,2976,2.316,2977,2.316,2978,2.316,2979,6.729,2980,2.316,2981,2.316,2982,2.316,2983,2.316,2984,2.316,2985,2.316,2986,2.316,2987,2.316,2988,2.316,2989,2.316,2990,2.316,2991,2.316,2992,2.316,2993,2.316,2994,2.316,2995,2.316,2996,3.818,2997,2.316,2998,2.316,2999,2.316,3000,2.316,3001,2.316,3002,2.316,3003,3.818,3004,2.316,3005,2.316,3006,2.316,3007,2.316,3008,3.818,3009,2.316,3010,2.316,3011,3.818,3012,3.818,3013,3.818,3014,2.316,3015,2.316,3016,2.316,3017,2.316,3018,3.818,3019,2.316,3020,2.316,3021,2.316,3022,2.316,3023,2.316,3024,3.818,3025,2.316,3026,2.316,3027,2.316,3028,2.316,3029,2.316,3030,2.316,3031,3.818,3032,2.316,3033,5.652,3034,5.652,3035,6.252,3036,2.316,3037,2.316,3038,3.818,3039,3.818,3040,2.316,3041,2.316,3042,2.316,3043,2.316,3044,2.316,3045,3.818,3046,3.818,3047,2.316,3048,3.818,3049,2.316,3050,2.316,3051,2.316,3052,2.316,3053,2.316,3054,2.316,3055,5.652,3056,2.316,3057,2.316,3058,2.316,3059,2.316,3060,2.316,3061,2.316,3062,2.316,3063,2.316,3064,2.316,3065,2.316,3066,2.316,3067,2.316,3068,2.316,3069,2.316,3070,2.316,3071,2.316,3072,2.316,3073,2.316,3074,2.316,3075,2.316,3076,2.316,3077,2.316,3078,2.316,3079,2.316,3080,2.316,3081,2.316,3082,2.316,3083,2.316,3084,6.729,3085,2.316,3086,2.316,3087,2.316,3088,2.316,3089,2.316,3090,2.316,3091,2.316,3092,2.316,3093,2.316,3094,2.316,3095,2.316,3096,2.316,3097,2.316,3098,2.316,3099,2.316,3100,2.316,3101,2.316,3102,2.316,3103,2.316,3104,2.316,3105,2.316,3106,2.316,3107,2.316,3108,2.316,3109,2.316,3110,4.872,3111,2.316,3112,2.316,3113,2.316,3114,2.316,3115,2.316,3116,2.316,3117,3.818,3118,2.316,3119,2.316,3120,2.316,3121,3.818,3122,2.316,3123,3.818,3124,2.316,3125,2.316,3126,2.316,3127,2.316,3128,2.316,3129,2.316,3130,2.316,3131,2.316,3132,2.316,3133,2.316,3134,2.316,3135,2.316,3136,2.316,3137,2.316,3138,2.316,3139,2.316,3140,2.316,3141,2.316,3142,2.316,3143,2.316,3144,2.316,3145,2.316,3146,2.316,3147,2.316,3148,2.316,3149,2.316,3150,2.316,3151,2.316,3152,2.316,3153,2.316,3154,2.316,3155,2.316,3156,2.316,3157,2.316,3158,2.316,3159,2.316]],["title/modules.html",[113,4.338]],["body/modules.html",[36,0.004,61,0.004,62,0.004,112,5.482,113,4.66,259,5.231,262,5.482,1474,5.482,1543,5.482,2418,5.784,3160,10.095,3161,10.095,3162,10.095,3163,10.095]],["title/overview.html",[3164,6.209]],["body/overview.html",[2,0.835,36,0.005,61,0.003,62,0.003,76,3.406,111,2.795,112,6.998,113,3.152,114,3.152,115,3.393,116,3.393,117,3.266,118,3.393,119,3.393,120,4.512,121,4.512,122,5.682,123,4.143,124,4.953,125,5.279,126,4.639,127,3.393,128,3.393,148,3.266,155,2.958,171,3.816,259,5.926,260,4.512,261,4.512,262,7.628,332,3.393,405,5.108,522,5.286,523,2.42,528,5.087,603,3.913,667,5.513,673,5.513,680,5.286,780,5.286,791,5.059,1042,5.286,1117,5.513,1120,4.381,1474,7.18,1475,4.512,1476,4.512,1477,4.512,1543,6.211,1544,4.512,1545,4.512,1567,3.913,1584,5.513,1622,5.513,1682,4.512,1683,4.512,1709,1.042,1930,4.512,2418,7.252,2419,4.512,2421,4.512,3164,4.512,3165,5.032,3166,5.032]],["title/properties.html",[10,0.739,2779,3.519]],["body/properties.html",[10,0.969,36,0.005,61,0.004,62,0.004,3167,8.013,3168,8.013,3169,8.013,3170,8.013]],["title/interfaces/remove.html",[43,0.063,2285,2.68]],["body/interfaces/remove.html",[0,0.226,3,0.043,4,0.043,5,0.043,9,0.062,10,0.784,18,1.921,20,1.53,23,1.006,26,1.77,27,2.406,28,2.223,36,0.005,38,0.076,40,0.926,42,1.469,43,0.106,46,0.085,47,1.507,48,1.788,49,1.527,61,0.003,62,0.003,66,1.571,85,0.333,131,1.793,159,2.713,160,2.233,176,1.938,191,2.442,192,1.276,211,1.897,212,1.792,216,2.713,218,2.129,220,2.705,222,3.169,223,1.491,224,2.531,242,2.486,257,1.713,281,2.998,291,1.469,330,2.561,340,2.763,344,1.801,350,1.897,361,1.968,387,1.513,475,0.93,526,2.78,644,1.741,731,2.044,751,3.135,756,3.079,778,2.816,782,1.968,785,1.832,916,3.257,917,2.19,918,3.257,919,2.663,920,3.184,921,3.257,922,3.6,923,3.257,924,3.257,925,2.987,926,3.184,927,3.257,928,3.257,929,2.987,931,2.319,933,4.3,1120,2.218,1124,2.005,1241,2.993,1255,2.993,1550,3.948,1709,0.955,1734,2.005,2054,3.926,2058,2.889,2060,2.889,2062,2.889,2064,2.889,2068,2.889,2070,2.889,2277,3.244,2283,3.244,2284,3.11,2285,3.416]],["title/interfaces/remove-1.html",[43,0.053,215,2.043,2285,2.24]],["body/interfaces/remove-1.html",[0,0.218,3,0.042,4,0.042,5,0.042,9,0.06,10,0.764,18,1.872,20,1.29,26,1.814,27,2.345,28,2.167,36,0.005,38,0.074,40,0.837,42,1.417,43,0.109,46,0.086,47,1.469,48,1.508,49,1.488,61,0.003,62,0.003,66,1.415,85,0.327,131,2.098,159,2.644,160,2.207,161,2.967,171,1.863,176,1.986,191,2.818,192,1.231,207,1.396,212,1.747,216,2.644,218,2.087,220,2.673,222,3.293,223,1.438,224,2.481,226,2.201,242,2.423,257,1.652,281,3.047,291,1.417,316,2.289,340,2.693,350,2.597,368,3.252,475,1.273,644,1.679,751,2.644,756,1.83,782,1.898,785,2.507,888,2.346,891,2.47,916,3.174,917,2.134,918,3.174,919,2.621,920,3.103,921,3.174,922,3.841,923,3.174,924,3.174,925,2.911,926,3.103,927,3.174,928,3.174,929,2.911,931,2.236,932,2.289,933,4.406,1709,0.921,1734,1.934,2112,3.711,2113,3.711,2116,2.886,2118,2.696,2120,2.696,2122,2.696,2126,2.696,2129,2.696,2131,2.696,2285,3.329,2691,2.999]],["title/interfaces/safeSearch.html",[43,0.063,222,1.984]],["body/interfaces/safeSearch.html",[0,0.234,3,0.045,4,0.045,5,0.045,9,0.064,10,0.801,18,1.964,20,1.353,26,1.854,27,2.46,28,2.274,36,0.005,37,0.82,38,0.079,39,0.648,40,0.987,42,1.517,43,0.095,46,0.081,47,1.541,48,1.582,49,1.562,61,0.003,62,0.003,66,1.458,85,0.271,159,2.774,160,2.256,176,1.726,191,2.602,192,1.318,211,3.386,212,1.833,216,2.774,220,2.64,222,3.715,223,1.54,242,2.543,281,2.783,330,3.678,340,2.826,344,3.587,350,2.725,356,2.153,361,3.92,475,1.336,525,3.19,644,2.501,751,2.774,778,2.88,783,3.211,786,3.211,788,3.211,791,2.645,792,3.211,913,3.704,916,3.33,917,2.239,918,3.33,919,2.701,920,3.256,921,3.33,922,3.959,923,3.33,924,3.33,925,3.055,926,3.256,927,3.33,928,3.33,929,3.055,931,2.395,932,2.451,933,3.829,1709,0.986]],["title/interfaces/safeSearch-1.html",[43,0.053,215,2.043,222,1.658]],["body/interfaces/safeSearch-1.html",[0,0.215,3,0.041,4,0.041,5,0.041,9,0.059,10,0.755,18,1.851,20,1.275,26,1.804,27,2.318,28,2.143,36,0.005,38,0.072,39,0.611,40,0.83,42,1.394,43,0.108,46,0.086,47,1.452,48,1.491,49,1.471,61,0.003,62,0.003,66,1.405,85,0.325,131,2.091,159,2.614,160,2.195,161,2.946,171,1.833,176,1.976,191,2.807,192,1.211,207,1.374,212,1.727,216,2.614,218,2.069,220,2.659,222,3.644,223,1.415,224,2.459,226,2.176,242,2.396,257,1.626,281,3.033,291,1.394,316,2.253,340,2.663,350,2.568,368,3.716,475,1.259,644,1.653,751,2.614,756,1.801,782,1.868,785,2.479,888,2.308,891,2.431,916,3.138,917,2.11,918,3.138,919,2.602,920,3.068,921,3.138,922,3.814,923,3.138,924,3.138,925,2.878,926,3.068,927,3.138,928,3.138,929,2.878,931,2.201,932,2.253,933,4.383,1709,0.906,1734,1.903,2112,3.669,2113,3.669,2116,2.841,2118,2.653,2120,2.653,2122,2.653,2126,2.653,2129,2.653,2131,2.653,2285,2.308,2691,2.951]],["title/interfaces/safelyFind.html",[43,0.063,2284,3.426]],["body/interfaces/safelyFind.html",[0,0.224,3,0.043,4,0.043,5,0.043,9,0.061,10,0.778,18,1.908,20,1.522,23,0.996,26,1.764,27,2.39,28,2.209,36,0.005,38,0.076,39,0.63,40,0.922,42,1.456,43,0.106,46,0.085,47,1.497,48,1.779,49,1.517,61,0.003,62,0.003,66,1.566,85,0.331,131,1.953,159,2.695,160,2.226,176,1.932,191,1.936,192,1.265,211,1.88,212,1.781,216,2.695,218,2.118,220,2.697,222,3.546,223,1.477,224,2.518,242,2.47,257,1.697,281,2.989,291,1.456,330,2.538,340,2.746,344,1.784,350,1.88,361,1.95,387,1.499,475,0.922,526,2.767,644,1.725,731,2.025,751,3.12,756,3.064,778,2.798,782,1.95,785,1.815,916,3.236,917,2.176,918,3.236,919,2.653,920,3.163,921,3.236,922,3.582,923,3.236,924,3.236,925,2.968,926,3.163,927,3.236,928,3.236,929,2.968,931,2.298,933,4.285,1120,2.198,1124,1.987,1241,2.966,1255,2.966,1550,3.928,1709,0.946,1734,1.987,2054,3.901,2058,2.863,2060,2.863,2062,2.863,2064,2.863,2068,2.863,2070,2.863,2277,3.214,2283,3.214,2284,4.339,2285,2.41]],["title/interfaces/search.html",[43,0.063,932,2.615]],["body/interfaces/search.html",[0,0.233,3,0.044,4,0.044,5,0.044,9,0.064,10,0.799,18,1.959,20,1.35,26,1.852,27,2.454,28,2.268,36,0.005,37,0.818,38,0.109,40,0.986,42,2.421,43,0.094,46,0.081,47,1.537,48,1.578,49,1.557,61,0.003,62,0.003,66,1.456,85,0.271,159,2.767,160,2.253,176,1.723,191,2.599,192,1.313,211,3.381,212,1.828,216,2.767,220,2.636,222,3.655,223,1.534,242,2.536,281,2.779,330,3.669,340,2.818,344,3.583,350,2.717,356,2.144,361,3.916,475,1.332,525,3.183,644,2.494,751,2.767,778,2.872,783,3.199,786,3.199,788,3.199,791,2.635,792,3.199,913,3.689,916,3.322,917,2.233,918,3.322,919,2.696,920,3.247,921,3.322,922,3.952,923,3.322,924,3.322,925,3.046,926,3.247,927,3.322,928,3.322,929,3.046,931,2.386,932,3.4,933,3.821,1709,0.982]],["title/interfaces/search-1.html",[43,0.053,215,2.043,932,2.186]],["body/interfaces/search-1.html",[0,0.213,3,0.041,4,0.041,5,0.041,9,0.058,10,0.751,18,1.842,20,1.269,26,1.8,27,2.307,28,2.132,36,0.005,38,0.103,39,0.608,40,0.827,42,2.308,43,0.108,46,0.086,47,1.445,48,1.483,49,1.464,61,0.003,62,0.003,66,1.4,85,0.324,131,2.088,159,2.601,160,2.19,161,2.936,171,1.821,176,1.971,191,2.803,192,1.203,207,1.365,212,1.718,216,2.601,218,2.061,220,2.653,222,3.574,223,1.405,224,2.45,226,2.165,242,2.384,257,1.614,281,3.027,291,1.385,316,2.237,340,2.65,350,2.555,368,3.706,475,1.253,644,1.641,751,2.601,756,1.788,782,1.854,785,2.467,888,2.292,891,2.414,916,3.123,917,2.1,918,3.123,919,2.594,920,3.053,921,3.123,922,3.802,923,3.123,924,3.123,925,2.864,926,3.053,927,3.123,928,3.123,929,2.864,931,2.186,932,3.197,933,4.373,1709,0.9,1734,1.89,2112,3.65,2113,3.65,2116,2.821,2118,2.635,2120,2.635,2122,2.635,2126,2.635,2129,2.635,2131,2.635,2285,2.292,2691,2.931]],["title/interfaces/transferToUserResources.html",[43,0.063,2054,3.08]],["body/interfaces/transferToUserResources.html",[0,0.224,3,0.043,4,0.043,5,0.043,9,0.061,10,0.776,18,1.903,20,1.519,23,0.993,26,1.762,27,2.384,28,2.203,36,0.005,38,0.106,40,0.921,42,1.451,43,0.106,46,0.085,47,1.494,48,1.776,49,1.513,61,0.003,62,0.003,66,1.564,85,0.331,131,1.783,159,2.688,160,2.224,176,1.929,191,1.931,192,1.26,211,1.873,212,1.776,216,2.688,218,2.635,220,2.268,222,3.151,223,1.472,224,3.132,242,2.464,257,1.691,281,2.985,291,1.451,330,2.529,340,2.738,344,1.778,350,1.873,361,1.943,387,1.494,475,0.918,526,2.761,644,1.719,731,2.018,751,3.114,756,3.058,778,2.79,782,1.943,785,1.808,916,3.227,917,2.17,918,3.227,919,2.648,920,3.155,921,3.227,922,3.575,923,3.227,924,3.227,925,2.96,926,3.155,927,3.227,928,3.227,929,2.96,931,2.29,933,4.279,1120,2.19,1124,1.98,1241,2.955,1255,2.955,1550,3.92,1709,0.943,1734,1.98,2054,4.506,2058,2.852,2060,2.852,2062,2.852,2064,2.852,2068,2.852,2070,2.852,2277,3.202,2283,3.202,2284,3.07,2285,2.401]],["title/miscellaneous/typealiases.html",[2819,2.756,3171,6.108]],["body/miscellaneous/typealiases.html",[9,0.078,36,0.005,38,0.157,45,0.636,61,0.004,62,0.004,176,1.914,555,4.537,563,6.291,577,3.934,735,5.597,745,4.834,757,5.597,883,4.834,888,4.005,889,6.994,892,6.291,894,4.834,967,4.834,972,5.905,1271,5.597,1556,6.833,1715,4.834,1716,5.597,1750,3.934,1758,5.597,1794,4.537,1806,4.834,1809,6.291,1938,4.537,1939,6.291,1965,5.231,1971,6.808,1973,6.808,2014,4.834,2819,3.786,2821,6.994,2825,5.231,2832,7.569,2834,8.017,2838,7.569,2840,7.569,2844,5.231,2846,5.231,2848,9.302,2849,5.231,2851,5.231,2853,5.231,2855,5.231,2857,5.231,2859,5.231,2861,5.231,2863,5.231,3172,5.834,3173,5.834,3174,7.593,3175,5.834,3176,9.92,3177,5.834]],["title/miscellaneous/variables.html",[2819,2.756,3178,5.477]],["body/miscellaneous/variables.html",[9,0.053,36,0.005,37,0.551,38,0.168,41,1.805,45,1.024,61,0.003,62,0.003,90,1.87,91,1.5,94,0.791,105,0.546,117,3.776,131,0.877,150,4.288,165,1.13,174,3.527,190,3.631,200,0.761,203,2.268,207,1.247,223,2.226,226,1.385,230,1.91,236,3.128,245,3.923,246,3.051,256,3.527,276,2.578,297,4.119,327,1.91,332,2.678,344,1.551,355,3.776,361,1.695,368,1.76,373,3.069,380,2.928,394,3.385,419,3.724,431,1.997,555,3.089,559,2.268,560,2.393,561,2.234,596,3.046,597,5.445,598,5.137,599,4.288,600,3.923,601,2.928,602,4.092,603,3.089,604,3.291,672,1.452,812,3.089,844,3.089,1060,1.997,1300,3.089,1383,4.525,1859,3.089,1874,6.985,1938,3.089,1940,3.089,1941,3.089,2819,2.578,2821,6.985,2924,5.217,3178,3.561,3179,5.818,3180,5.818,3181,5.818,3182,3.972,3183,5.818,3184,5.818,3185,3.972,3186,3.972,3187,5.818,3188,5.818,3189,5.818,3190,8.431,3191,5.818,3192,5.818,3193,5.818,3194,5.818,3195,5.818,3196,5.818,3197,5.818,3198,5.818,3199,5.818,3200,5.818,3201,5.818,3202,5.818,3203,5.818,3204,3.972,3205,5.818,3206,3.972,3207,5.818,3208,3.972,3209,3.972,3210,3.972]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":246,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CPF.html":{},"classes/CepGatewaySpy.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CryptSpy.html":{},"classes/EmailSpy.html":{},"injectables/GenInviteService.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IPropsCondominium.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"classes/Level.html":{},"classes/UUID.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["0${rawhours",{"_index":1236,"title":{},"body":{"classes/DateFormats.html":{}}}],["0${rawminutes",{"_index":1234,"title":{},"body":{"classes/DateFormats.html":{}}}],["0${rawseconds",{"_index":1232,"title":{},"body":{"classes/DateFormats.html":{}}}],["0.0.7",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["0.1.14",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":215,"title":{"interfaces/IConvertToObject-1.html":{},"interfaces/IProps-1.html":{},"interfaces/create-1.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}},"body":{"guards/AdminJwt.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CryptSpy.html":{},"classes/EmailSpy.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InMemoryOTP.html":{},"injectables/InviteFirestore.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{}}}],["1.1.23",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":276,"title":{"interfaces/IProps-10.html":{}},"body":{"modules/AppModule.html":{},"classes/BcryptAdapter.html":{},"classes/FirestoreGetInviteDTO.html":{},"interfaces/IPropsUser.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["10.0.3",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["10.2.10",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":521,"title":{},"body":{"classes/Code.html":{}}}],["1000",{"_index":1566,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"classes/OTP.html":{},"controllers/UserController.html":{}}}],["11",{"_index":380,"title":{"interfaces/IProps-11.html":{}},"body":{"classes/CPF.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["11.11.1",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1923,"title":{"interfaces/IProps-12.html":{}},"body":{}}],["120",{"_index":599,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":1924,"title":{"interfaces/IProps-13.html":{}},"body":{}}],["14",{"_index":602,"title":{"interfaces/IProps-14.html":{}},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":1928,"title":{"interfaces/IProps-15.html":{}},"body":{}}],["16",{"_index":1929,"title":{"interfaces/IProps-16.html":{}},"body":{}}],["16.3.1",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":603,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":394,"title":{"interfaces/IConvertToObject-2.html":{},"interfaces/IProps-2.html":{},"interfaces/create-2.html":{}},"body":{"classes/CPF.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IValidate.html":{},"classes/Level.html":{},"classes/OTP.html":{},"classes/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0.3",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["2147483647",{"_index":245,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/variables.html":{}}}],["24",{"_index":1458,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["2525",{"_index":3059,"title":{},"body":{"index.html":{}}}],["3",{"_index":1596,"title":{"interfaces/IProps-3.html":{}},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"controllers/UserController.html":{}}}],["3.0.1",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["3.22.4",{"_index":2818,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1941,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["30000",{"_index":1708,"title":{},"body":{"modules/HttpModule.html":{}}}],["320",{"_index":1300,"title":{},"body":{"classes/Email.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":1930,"title":{"interfaces/IProps-4.html":{}},"body":{"overview.html":{}}}],["4.0.1",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":514,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IGatewayError.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["401",{"_index":1194,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["404",{"_index":1190,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{}}}],["409",{"_index":1981,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["45",{"_index":1707,"title":{},"body":{"modules/HttpModule.html":{}}}],["5",{"_index":1931,"title":{"interfaces/IProps-5.html":{}},"body":{}}],["5.1.0",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["5.3.2",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["5.7.0",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":108,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["5][0",{"_index":2498,"title":{},"body":{"classes/UUID.html":{}}}],["6",{"_index":332,"title":{"interfaces/IProps-6.html":{}},"body":{"classes/Block.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["6.9.7",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1457,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"classes/OTP.html":{}}}],["60000",{"_index":2604,"title":{},"body":{"controllers/UserController.html":{}}}],["64",{"_index":1940,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/Password.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":1567,"title":{"interfaces/IProps-7.html":{}},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{},"overview.html":{}}}],["7.1.17",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["74",{"_index":3166,"title":{},"body":{"overview.html":{}}}],["8",{"_index":600,"title":{"interfaces/IProps-8.html":{}},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Password.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["8.2.2",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["89ab][0",{"_index":2500,"title":{},"body":{"classes/UUID.html":{}}}],["9",{"_index":601,"title":{"interfaces/IProps-9.html":{}},"body":{"classes/Condominium.html":{},"classes/DateFormats.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/variables.html":{}}}],["91",{"_index":3165,"title":{},"body":{"overview.html":{}}}],["9a",{"_index":2495,"title":{},"body":{"classes/UUID.html":{}}}],["_",{"_index":2220,"title":{},"body":{"injectables/InviteFirestore.html":{},"classes/NotFoundFilter.html":{},"controllers/UserController.html":{}}}],["__",{"_index":2219,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["_id",{"_index":556,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["_instance",{"_index":1485,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["_iservice",{"_index":1039,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserDataCore.html":{}}}],["_value",{"_index":239,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{}}}],["_value.length",{"_index":336,"title":{},"body":{"classes/Block.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/Name.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{}}}],["_value.replace",{"_index":357,"title":{},"body":{"classes/CEP.html":{},"classes/CPF.html":{}}}],["_value.replaceall",{"_index":366,"title":{},"body":{"classes/CNPJ.html":{}}}],["abaixo",{"_index":382,"title":{},"body":{"classes/CPF.html":{},"index.html":{}}}],["abra",{"_index":3103,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":281,"title":{},"body":{"classes/Auth.html":{},"classes/CepGateway.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"classes/CryptAdapter.html":{},"classes/EmailAdapter.html":{},"classes/Entity.html":{},"classes/HttpAdapter.html":{},"interfaces/ICheckCep.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InviteRepo.html":{},"classes/LoggerAdapter.html":{},"classes/OTPRepo.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["access",{"_index":1711,"title":{},"body":{"interfaces/IAccessTokenBody.html":{},"interfaces/IRefreshTokenBody.html":{},"miscellaneous/enumerations.html":{}}}],["accessjwtbody",{"_index":1063,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["accessors",{"_index":235,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"injectables/FirestoreService.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["accesstoken",{"_index":1082,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-7.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["acessado",{"_index":2326,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["acessando",{"_index":2328,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["acesse",{"_index":684,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["acesso",{"_index":1045,"title":{},"body":{"injectables/CreateTokenService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-7.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUserDataCore.html":{},"injectables/LogInterceptor.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"index.html":{}}}],["acima",{"_index":3016,"title":{},"body":{"index.html":{}}}],["actualuser",{"_index":715,"title":{},"body":{"controllers/CondominiumController.html":{},"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{}}}],["adapta",{"_index":772,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["adaptador",{"_index":1398,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["adaptadores",{"_index":24,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/IProps-2.html":{}}}],["adapter",{"_index":56,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-2.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["adaptererror",{"_index":1,"title":{"classes/AdapterError.html":{}},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"classes/FetchAdapter.html":{},"interfaces/IProps-2.html":{}}}],["adaptererrorfilter",{"_index":63,"title":{"classes/AdapterErrorFilter.html":{}},"body":{"classes/AdapterErrorFilter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["adaptererrorfilter(this.logger",{"_index":1897,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["adapters",{"_index":70,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["adaptersmodule",{"_index":112,"title":{"modules/AdaptersModule.html":{}},"body":{"modules/AdaptersModule.html":{},"modules/HttpModule.html":{},"modules.html":{},"overview.html":{}}}],["add",{"_index":3130,"title":{},"body":{"index.html":{}}}],["addtag('moradaapp",{"_index":1879,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["adentre",{"_index":3080,"title":{},"body":{"index.html":{}}}],["adiante",{"_index":2885,"title":{},"body":{"index.html":{}}}],["admin",{"_index":151,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"injectables/FirestoreService.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"dependencies.html":{}}}],["admin')@useguards(superadminjwt)@httpcode(204",{"_index":655,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["admin.controller",{"_index":1695,"title":{},"body":{"modules/HttpModule.html":{}}}],["admin.controller.ts",{"_index":2476,"title":{},"body":{"controllers/SuperAdminController.html":{}}}],["admin.firestore",{"_index":1499,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["admin/app",{"_index":1495,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["admin/firestore",{"_index":737,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{},"injectables/UsersFirestore.html":{}}}],["admincontroller",{"_index":147,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/HttpModule.html":{}}}],["administrador",{"_index":2303,"title":{},"body":{"classes/Level.html":{},"guards/SuperAdminJwt.html":{}}}],["administradores",{"_index":1256,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{}}}],["adminjwt",{"_index":154,"title":{"guards/AdminJwt.html":{}},"body":{"guards/AdminJwt.html":{},"controllers/CondominiumController.html":{}}}],["agora",{"_index":3123,"title":{},"body":{"index.html":{}}}],["ainda",{"_index":2718,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["alert",{"_index":1261,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["alert(input",{"_index":1267,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["algoritmo",{"_index":378,"title":{},"body":{"classes/CPF.html":{}}}],["algum",{"_index":31,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["aliases",{"_index":3172,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allownullish",{"_index":854,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"controllers/UserController.html":{},"classes/ValueObject.html":{}}}],["alpha",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":1164,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IProps-16.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"miscellaneous/enumerations.html":{}}}],["already_exists",{"_index":1611,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["alreadyexist",{"_index":1935,"title":{},"body":{"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["alterações",{"_index":3128,"title":{},"body":{"index.html":{}}}],["alternativevalue",{"_index":1358,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["alternativos",{"_index":1363,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["além",{"_index":923,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["ambiente",{"_index":2898,"title":{},"body":{"index.html":{}}}],["ambientes",{"_index":2952,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":2323,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["antes",{"_index":3009,"title":{},"body":{"index.html":{}}}],["análise",{"_index":2991,"title":{},"body":{"index.html":{}}}],["ao",{"_index":1666,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IPrismaError.html":{},"interfaces/IValidate.html":{},"classes/PrismaErrorFilter.html":{},"classes/UUIDGroup.html":{},"index.html":{}}}],["apartamento",{"_index":241,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["apartment_number",{"_index":910,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["apartmentnumber",{"_index":230,"title":{"classes/ApartmentNumber.html":{}},"body":{"classes/ApartmentNumber.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["apartmentnumber(input",{"_index":880,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["apenas",{"_index":2517,"title":{},"body":{"classes/UUIDGroup.html":{},"index.html":{}}}],["apesar",{"_index":3026,"title":{},"body":{"index.html":{}}}],["api",{"_index":685,"title":{},"body":{"controllers/CondominiumController.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"controllers/UserController.html":{},"index.html":{}}}],["apiproperty",{"_index":1000,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["apiproperty()@isnumber",{"_index":996,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["apiproperty()@isstring({message",{"_index":983,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["apis/viacep.gateway",{"_index":1548,"title":{},"body":{"modules/GatewayModule.html":{}}}],["aplicar",{"_index":1908,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["aplicativos",{"_index":2951,"title":{},"body":{"index.html":{}}}],["aplicação",{"_index":2309,"title":{},"body":{"injectables/LogInterceptor.html":{},"index.html":{}}}],["app",{"_index":1860,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"index.html":{}}}],["app.module",{"_index":1839,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["app_guard",{"_index":1701,"title":{},"body":{"modules/HttpModule.html":{}}}],["appmodule",{"_index":259,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"modules.html":{},"overview.html":{}}}],["apto",{"_index":3131,"title":{},"body":{"index.html":{}}}],["aqui",{"_index":3039,"title":{},"body":{"index.html":{}}}],["args",{"_index":1714,"title":{},"body":{"interfaces/IClass.html":{}}}],["argumentshost",{"_index":81,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["armazenado",{"_index":2453,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["armazenamento",{"_index":3143,"title":{},"body":{"index.html":{}}}],["armazenando",{"_index":2908,"title":{},"body":{"index.html":{}}}],["arquivo",{"_index":3047,"title":{},"body":{"index.html":{}}}],["array",{"_index":502,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{},"classes/InMemoryOTP.html":{}}}],["assim",{"_index":2875,"title":{},"body":{"index.html":{}}}],["async",{"_index":165,"title":{},"body":{"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/CryptSpy.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/EmailSpy.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/ISuccess.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/NodemailerAdapter.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["atender",{"_index":2872,"title":{},"body":{"index.html":{}}}],["atingir",{"_index":1510,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["ativas",{"_index":3141,"title":{},"body":{"index.html":{}}}],["ativo",{"_index":3079,"title":{},"body":{"index.html":{}}}],["autenticação",{"_index":458,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IProps-11.html":{},"classes/LaunchTFADTO.html":{}}}],["auth",{"_index":279,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"classes/NodemailerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["auth.pass",{"_index":3065,"title":{},"body":{"index.html":{}}}],["auth.user",{"_index":3063,"title":{},"body":{"index.html":{}}}],["author",{"_index":3169,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":2290,"title":{},"body":{"guards/JwtGuard.html":{}}}],["automatizar",{"_index":3113,"title":{},"body":{"index.html":{}}}],["autorizado",{"_index":1196,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["aviso",{"_index":700,"title":{},"body":{"controllers/CondominiumController.html":{},"index.html":{}}}],["await",{"_index":194,"title":{},"body":{"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"classes/FetchAdapter.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/ISuccess.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/NodemailerAdapter.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["ação",{"_index":1987,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["back",{"_index":2888,"title":{},"body":{"index.html":{}}}],["bad",{"_index":210,"title":{},"body":{"guards/AdminJwt.html":{},"interfaces/IProps-1.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{}}}],["badrequestexception",{"_index":181,"title":{},"body":{"guards/AdminJwt.html":{},"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IProps-1.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["bairro",{"_index":1991,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["banco",{"_index":1151,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IProps-16.html":{},"index.html":{}}}],["base",{"_index":1738,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bash",{"_index":3081,"title":{},"body":{"index.html":{}}}],["bashdentro",{"_index":3086,"title":{},"body":{"index.html":{}}}],["basta",{"_index":2961,"title":{},"body":{"index.html":{}}}],["batch",{"_index":948,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{}}}],["batch.commit",{"_index":964,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{}}}],["batch.create(entityref",{"_index":963,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["batch.create(refs.cepindex",{"_index":961,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["batch.create(refs.cnpjindex",{"_index":960,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["batch.create(refs.condominiumreluser",{"_index":2235,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["batch.create(refs.core",{"_index":2234,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["batch.create(refs.cpf",{"_index":2232,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["batch.create(refs.email",{"_index":2233,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["batch.delete(refs.invite",{"_index":2229,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["bcrypt",{"_index":311,"title":{},"body":{"classes/BcryptAdapter.html":{},"dependencies.html":{}}}],["bcrypt.compare(input.data",{"_index":325,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["bcrypt.hash(data",{"_index":324,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["bcrypt/bcryptadapter",{"_index":136,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["bcryptadapter",{"_index":135,"title":{"classes/BcryptAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/BcryptAdapter.html":{}}}],["bem",{"_index":1575,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"injectables/LogInterceptor.html":{}}}],["bibliotecas",{"_index":2936,"title":{},"body":{"index.html":{}}}],["block",{"_index":327,"title":{"classes/Block.html":{}},"body":{"classes/Block.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["block(input",{"_index":879,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["block).allownullish().exec",{"_index":2640,"title":{},"body":{"controllers/UserController.html":{}}}],["boa",{"_index":1336,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["body",{"_index":397,"title":{},"body":{"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"controllers/CondominiumController.html":{},"classes/EmailAdapter.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/ISendMailContent.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"controllers/UserController.html":{},"injectables/ViacepGateway.html":{}}}],["body.apartmentnumber",{"_index":2628,"title":{},"body":{"controllers/UserController.html":{}}}],["body.bairro",{"_index":2009,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.block",{"_index":2630,"title":{},"body":{"controllers/UserController.html":{}}}],["body.cep",{"_index":2008,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.complemento",{"_index":2010,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.localidade",{"_index":2011,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.logradouro",{"_index":2012,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["body.message",{"_index":515,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["body.uf",{"_index":2007,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["bodyinit",{"_index":1681,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["bom",{"_index":3099,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":249,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["bootstrap",{"_index":117,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":2734,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["browse",{"_index":3163,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3160,"title":{},"body":{"modules.html":{}}}],["btoa(metadata)}.${btoa(code",{"_index":1597,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["btoa(metadata)}.${btoa(invitesignature",{"_index":1599,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["build",{"_index":1354,"title":{},"body":{"classes/Entity.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ValueObject.html":{},"index.html":{}}}],["build(constructor",{"_index":2770,"title":{},"body":{"classes/ValueObject.html":{}}}],["build(requestlistener",{"_index":1861,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["build:watchpara",{"_index":3136,"title":{},"body":{"index.html":{}}}],["buildaccesstoken",{"_index":1047,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["buildaccesstoken(user",{"_index":1050,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["buildbônus",{"_index":3139,"title":{},"body":{"index.html":{}}}],["buildrefreshtoken",{"_index":1048,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["buildrefreshtoken(email",{"_index":1053,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["buscamos",{"_index":2876,"title":{},"body":{"index.html":{}}}],["c1",{"_index":1351,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["c1.equalto(c2",{"_index":1353,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["c2",{"_index":1352,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["cache",{"_index":1801,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["cada",{"_index":2932,"title":{},"body":{"index.html":{}}}],["call",{"_index":1371,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{}}}],["call(input",{"_index":1372,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["callhandler",{"_index":2314,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["calls",{"_index":418,"title":{},"body":{"classes/CepGatewaySpy.html":{},"classes/CryptSpy.html":{},"classes/EmailSpy.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["camada",{"_index":22,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{},"classes/ValueObject.html":{}}}],["campo",{"_index":984,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["campos",{"_index":2632,"title":{},"body":{"controllers/UserController.html":{}}}],["canactivate",{"_index":166,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["canactivate(context",{"_index":173,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["capacidade",{"_index":2514,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["capaz",{"_index":2929,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":333,"title":{},"body":{"classes/Block.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{}}}],["case",{"_index":1657,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["caso",{"_index":27,"title":{},"body":{"classes/AdapterError.html":{},"classes/CPF.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/InviteRepo.html":{},"classes/ServiceErrors.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["catch",{"_index":74,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["catch((err",{"_index":1392,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["catch(_",{"_index":2374,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["catch(adaptererror",{"_index":92,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["catch(badrequestexception",{"_index":503,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["catch(databasecustomerror",{"_index":1206,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["catch(entitieerror",{"_index":1328,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["catch(exception",{"_index":79,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["catch(gatewayerrors",{"_index":1529,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["catch(guarderrors",{"_index":1637,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["catch(notfoundexception",{"_index":2377,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["catch(prisma.prismaclientknownrequesterror",{"_index":1823,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["catch(serviceerrors",{"_index":1976,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["catch(throttlerexception",{"_index":2484,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["causa",{"_index":1619,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["cep",{"_index":344,"title":{"classes/CEP.html":{}},"body":{"classes/CEP.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/ICheckCep.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/ISuccess.html":{},"classes/InMemoryCondominium.html":{},"classes/InviteRepo.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/variables.html":{}}}],["cep(content.cep",{"_index":607,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["cep(input",{"_index":636,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["cepgate",{"_index":1034,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"interfaces/IProps-6.html":{}}}],["cepgateway",{"_index":405,"title":{"classes/CepGateway.html":{}},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"injectables/CreateCondominiumService.html":{},"modules/GatewayModule.html":{},"interfaces/ICheckCep.html":{},"interfaces/IProps-6.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{},"overview.html":{}}}],["cepgatewayspy",{"_index":416,"title":{"classes/CepGatewaySpy.html":{}},"body":{"classes/CepGatewaySpy.html":{}}}],["cepindex",{"_index":954,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["certifique",{"_index":1334,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["chave",{"_index":918,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["check",{"_index":407,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"classes/UUID.html":{},"injectables/ViacepGateway.html":{}}}],["check(input",{"_index":408,"title":{},"body":{"classes/CepGateway.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"classes/UUID.html":{},"injectables/ViacepGateway.html":{}}}],["checkclassvalidatorerrors",{"_index":436,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"miscellaneous/functions.html":{}}}],["checkclassvalidatorerrors(data",{"_index":1915,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["checkcookie",{"_index":2442,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["checkcookie(cookie",{"_index":2446,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["checkpasswordguard",{"_index":424,"title":{"guards/CheckPasswordGuard.html":{}},"body":{"guards/CheckPasswordGuard.html":{},"controllers/UserController.html":{}}}],["checktfacodeguard",{"_index":452,"title":{"guards/CheckTFACodeGuard.html":{}},"body":{"guards/CheckTFACodeGuard.html":{},"controllers/UserController.html":{}}}],["checktoken",{"_index":168,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["checktoken(token",{"_index":177,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["citadas",{"_index":3015,"title":{},"body":{"index.html":{}}}],["city",{"_index":414,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["class",{"_index":0,"title":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{}},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"dependencies.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["classe",{"_index":731,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"classes/UUIDGroup.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"overview.html":{}}}],["classvalidatorerrorfilter",{"_index":491,"title":{"classes/ClassValidatorErrorFilter.html":{}},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["classvalidatorerrorfilter(this.logger",{"_index":1898,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["clearmocks",{"_index":3195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clever",{"_index":2911,"title":{},"body":{"index.html":{}}}],["cli",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":1486,"title":{},"body":{"injectables/FirestoreService.html":{},"injectables/PrismaService.html":{}}}],["cloud",{"_index":2912,"title":{},"body":{"index.html":{}}}],["cluster_adaptersmodule",{"_index":120,"title":{},"body":{"modules/AdaptersModule.html":{},"overview.html":{}}}],["cluster_adaptersmodule_exports",{"_index":121,"title":{},"body":{"modules/AdaptersModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_firestoremodule",{"_index":1475,"title":{},"body":{"modules/FirestoreModule.html":{},"overview.html":{}}}],["cluster_firestoremodule_exports",{"_index":1477,"title":{},"body":{"modules/FirestoreModule.html":{},"overview.html":{}}}],["cluster_firestoremodule_providers",{"_index":1476,"title":{},"body":{"modules/FirestoreModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":1544,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_exports",{"_index":1545,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_httpmodule",{"_index":1682,"title":{},"body":{"modules/HttpModule.html":{},"overview.html":{}}}],["cluster_httpmodule_imports",{"_index":1684,"title":{},"body":{"modules/HttpModule.html":{}}}],["cluster_httpmodule_providers",{"_index":1683,"title":{},"body":{"modules/HttpModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":2419,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":2420,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_prismamodule_providers",{"_index":2421,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cnpj",{"_index":361,"title":{"classes/CNPJ.html":{}},"body":{"classes/CNPJ.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IPropsCondominium.html":{},"classes/InMemoryCondominium.html":{},"classes/InviteRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/variables.html":{}}}],["cnpj(content.cnpj",{"_index":609,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["cnpj(input",{"_index":641,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["cnpjindex",{"_index":951,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["code",{"_index":473,"title":{"classes/Code.html":{}},"body":{"guards/CheckTFACodeGuard.html":{},"classes/Code.html":{},"injectables/GenTFAService.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-11.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/PrismaErrorFilter.html":{}}}],["code(input.code",{"_index":1726,"title":{},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["code(this.code.value",{"_index":1814,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["codeforvalidation",{"_index":480,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["codeusedoninput",{"_index":464,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["codeusedoninput.split('.')[0",{"_index":472,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["cole",{"_index":3046,"title":{},"body":{"index.html":{}}}],["coleção",{"_index":2529,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["coleções",{"_index":533,"title":{},"body":{"injectables/CollectionsRefService.html":{},"index.html":{}}}],["collectcoveragefrom",{"_index":3196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":2712,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["collection.where(field",{"_index":2720,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["collectionreference",{"_index":2710,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["collectionsrefs",{"_index":938,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["collectionsrefs.service",{"_index":944,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["collectionsrefservice",{"_index":522,"title":{"injectables/CollectionsRefService.html":{}},"body":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{},"overview.html":{}}}],["colocar",{"_index":3071,"title":{},"body":{"index.html":{}}}],["coloque",{"_index":3060,"title":{},"body":{"index.html":{}}}],["com",{"_index":1366,"title":{},"body":{"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"classes/IService.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["comando",{"_index":3105,"title":{},"body":{"index.html":{}}}],["comandos",{"_index":2963,"title":{},"body":{"index.html":{}}}],["começar",{"_index":3010,"title":{},"body":{"index.html":{}}}],["commit",{"_index":3121,"title":{},"body":{"index.html":{}}}],["como",{"_index":926,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["comparator",{"_index":2508,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["comparator(tobeiterated",{"_index":2519,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["compare",{"_index":294,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["compare(c1",{"_index":2772,"title":{},"body":{"classes/ValueObject.html":{}}}],["compare(input",{"_index":299,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["compartilhe",{"_index":1577,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{}}}],["complement",{"_index":412,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["complemento",{"_index":1992,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["compodoc/compodoc",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["compose",{"_index":2979,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":3074,"title":{},"body":{"index.html":{}}}],["computador",{"_index":2976,"title":{},"body":{"index.html":{}}}],["comum",{"_index":2302,"title":{},"body":{"classes/Level.html":{}}}],["comuns",{"_index":2635,"title":{},"body":{"controllers/UserController.html":{}}}],["concurrently",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["condominios",{"_index":1627,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-12.html":{}}}],["condominium",{"_index":525,"title":{"classes/Condominium.html":{}},"body":{"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"classes/Entity.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IProps-6.html":{},"interfaces/IPropsCondominium.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"miscellaneous/enumerations.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominium.cnpj",{"_index":953,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["condominium.id",{"_index":704,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["condominiumarr",{"_index":1745,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["condominiumcontroller",{"_index":642,"title":{"controllers/CondominiumController.html":{}},"body":{"controllers/CondominiumController.html":{},"modules/HttpModule.html":{}}}],["condominiumdata",{"_index":693,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["condominiumdtorules",{"_index":355,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Condominium.html":{},"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IPropsCondominium.html":{},"classes/Num.html":{},"miscellaneous/variables.html":{}}}],["condominiumdtorules.cep.maxlength",{"_index":1017,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.cep.minlength",{"_index":360,"title":{},"body":{"classes/CEP.html":{},"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.cnpj.maxlength",{"_index":1026,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.cnpj.minlength",{"_index":367,"title":{},"body":{"classes/CNPJ.html":{},"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.name.maxlength",{"_index":1011,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.name.minlength",{"_index":1014,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumdtorules.num.maxlength",{"_index":1021,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/Num.html":{}}}],["condominiumdtorules.num.minlength",{"_index":1024,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["condominiumfactory",{"_index":2831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condominiumfactory(input",{"_index":2847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condominiumfirestoremapper",{"_index":719,"title":{"classes/CondominiumFirestoreMapper.html":{}},"body":{"classes/CondominiumFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["condominiumid",{"_index":207,"title":{},"body":{"guards/AdminJwt.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateUserService.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{},"miscellaneous/variables.html":{}}}],["condominiumid(${input.condominiumid?.value",{"_index":1742,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{}}}],["condominiumid(input",{"_index":876,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["condominiumindexref",{"_index":956,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["condominiuminprisma",{"_index":798,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["condominiuminterfaces",{"_index":792,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiuminterfaces.create",{"_index":783,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiuminterfaces.safesearch",{"_index":786,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiuminterfaces.search",{"_index":788,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiumlinkedwiththisuser",{"_index":2200,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["condominiummapper",{"_index":670,"title":{"classes/CondominiumMapper.html":{}},"body":{"controllers/CondominiumController.html":{},"classes/CondominiumMapper.html":{},"injectables/CondominiumsFirestore.html":{},"interfaces/IConvertToObject.html":{}}}],["condominiummapper.toclass",{"_index":694,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["condominiummapper.toobject",{"_index":945,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["condominiumprisma",{"_index":766,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{}}}],["condominiumprismamapper",{"_index":763,"title":{"classes/CondominiumPrismaMapper.html":{}},"body":{"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{}}}],["condominiumprismamapper.toclass(unparsedcondominium",{"_index":811,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["condominiumprismamapper.toprisma",{"_index":799,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["condominiumprismarepo",{"_index":776,"title":{"injectables/CondominiumPrismaRepo.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"modules/PrismaModule.html":{}}}],["condominiumrelgroup",{"_index":2685,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["condominiumrels",{"_index":1632,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-12.html":{},"controllers/UserController.html":{}}}],["condominiumreluser",{"_index":224,"title":{"classes/CondominiumRelUser.html":{}},"body":{"guards/AdminJwt.html":{},"injectables/CollectionsRefService.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomError.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-8.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["condominiumreluser(input.userid.value",{"_index":2739,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumreluser(parseduser.id",{"_index":2764,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumreluser(userid",{"_index":2198,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["condominiumreluser.condominiumid",{"_index":709,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["condominiumreluser.level.value",{"_index":229,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["condominiumreluser.push",{"_index":2153,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["condominiumreluserarr",{"_index":1746,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{},"injectables/UsersFirestore.html":{}}}],["condominiumreluserarr.push(parseddata",{"_index":2752,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumrelusercollection",{"_index":2755,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumreluserdtorules",{"_index":256,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CondominiumRelUser.html":{},"classes/CreateUserDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"classes/Level.html":{},"miscellaneous/variables.html":{}}}],["condominiumreluserdtorules.apartmentnumber.maxlength",{"_index":258,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/CreateUserDTO.html":{}}}],["condominiumreluserdtorules.apartmentnumber.minlength",{"_index":1112,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["condominiumreluserdtorules.block.maxlength",{"_index":337,"title":{},"body":{"classes/Block.html":{},"classes/CreateUserDTO.html":{}}}],["condominiumreluserdtorules.level.maxlength",{"_index":2306,"title":{},"body":{"classes/Level.html":{}}}],["condominiumreluserfactory",{"_index":2833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condominiumreluserfactory(input",{"_index":2850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["condominiumreluserfirestoremapper",{"_index":882,"title":{"classes/CondominiumRelUserFirestoreMapper.html":{}},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"injectables/UsersFirestore.html":{}}}],["condominiumreluserfirestoremapper.fromfirestoretoclass",{"_index":2748,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumreluserfirestoremapper.fromfirestoretoobject",{"_index":2751,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["condominiumrelusergroup",{"_index":1630,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-12.html":{}}}],["condominiumrelusermapper",{"_index":893,"title":{"classes/CondominiumRelUserMapper.html":{}},"body":{"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/UserPrismaRepo.html":{}}}],["condominiumrelusermapper.toobject",{"_index":2154,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{}}}],["condominiumrelusermapper.toobject(input.condominiumreluser",{"_index":2221,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["condominiumreluserprisma",{"_index":906,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["condominiumreluserprismamapper",{"_index":904,"title":{"classes/CondominiumRelUserPrismaMapper.html":{}},"body":{"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{}}}],["condominiumreluserprismamapper.toclass",{"_index":2682,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["condominiumreluserprismamapper.toclass(item",{"_index":2687,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["condominiumreluserprismamapper.toprisma",{"_index":2272,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["condominiumreluserquery",{"_index":2196,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["condominiumrepo",{"_index":791,"title":{"classes/CondominiumRepo.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"modules/FirestoreModule.html":{},"interfaces/IProps-6.html":{},"classes/InMemoryCondominium.html":{},"modules/PrismaModule.html":{},"interfaces/create.html":{},"overview.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["condominiums",{"_index":2022,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["condominiumsfirestore",{"_index":934,"title":{"injectables/CondominiumsFirestore.html":{}},"body":{"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{}}}],["condomínio",{"_index":211,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/GenInviteService.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-6.html":{},"injectables/InviteFirestore.html":{},"classes/InviteRepo.html":{},"classes/Num.html":{},"guards/SuperAdminJwt.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{}}}],["conectar",{"_index":3021,"title":{},"body":{"index.html":{}}}],["conexão",{"_index":1394,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["config",{"_index":1874,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"miscellaneous/variables.html":{}}}],["configurado",{"_index":3020,"title":{},"body":{"index.html":{}}}],["configurando",{"_index":2977,"title":{},"body":{"index.html":{}}}],["configurar",{"_index":2984,"title":{},"body":{"index.html":{}}}],["configuração",{"_index":3069,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":1936,"title":{},"body":{"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["conjunto",{"_index":2982,"title":{},"body":{"index.html":{}}}],["conseguirmos",{"_index":2994,"title":{},"body":{"index.html":{}}}],["consequência",{"_index":2934,"title":{},"body":{"index.html":{}}}],["consiga",{"_index":3112,"title":{},"body":{"index.html":{}}}],["const",{"_index":94,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":1920,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Name.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["constructor(_value",{"_index":237,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{}}}],["constructor(collectionsrefs",{"_index":936,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["constructor(condominiumrepo",{"_index":1033,"title":{},"body":{"injectables/CreateCondominiumService.html":{}}}],["constructor(container",{"_index":2023,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["constructor(content",{"_index":562,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["constructor(cookieadapter",{"_index":2443,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["constructor(crypt",{"_index":427,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/HmacInviteGuard.html":{}}}],["constructor(cryptadapter",{"_index":1552,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["constructor(email",{"_index":1589,"title":{},"body":{"injectables/GenTFAService.html":{}}}],["constructor(firestore",{"_index":527,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["constructor(httpadapter",{"_index":2776,"title":{},"body":{"injectables/ViacepGateway.html":{}}}],["constructor(input",{"_index":14,"title":{},"body":{"classes/AdapterError.html":{},"classes/CondominiumRelUser.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryError.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/ServiceErrors.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{}}}],["constructor(internalvalue",{"_index":1360,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["constructor(inviterepo",{"_index":1119,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["constructor(jwtservice",{"_index":169,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["constructor(logger",{"_index":75,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["constructor(prisma",{"_index":779,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{}}}],["constructor(private",{"_index":93,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CreateTokenService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Name.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"injectables/UserPrismaRepo.html":{},"injectables/ViacepGateway.html":{}}}],["constructor(userrepo",{"_index":460,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/DeleteUserService.html":{},"injectables/GetCondominiumRelUserService.html":{}}}],["constructorparameters",{"_index":1356,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["consultando",{"_index":3151,"title":{},"body":{"index.html":{}}}],["consultar",{"_index":3142,"title":{},"body":{"index.html":{}}}],["consumido",{"_index":2943,"title":{},"body":{"index.html":{}}}],["conta",{"_index":3038,"title":{},"body":{"index.html":{}}}],["container",{"_index":2025,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["container.props.condominiumarr",{"_index":2033,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["container.props.invitearr",{"_index":2072,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["container.props.userarr",{"_index":2074,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["contar",{"_index":2890,"title":{},"body":{"index.html":{}}}],["contato",{"_index":2916,"title":{},"body":{"index.html":{}}}],["content",{"_index":565,"title":{},"body":{"classes/Condominium.html":{},"injectables/CreateTokenService.html":{},"classes/DatabaseCustomError.html":{},"classes/GatewayErrors.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-7.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryUser.html":{},"injectables/LogInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["content.createdat",{"_index":610,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["content.switchtohttp().getrequest",{"_index":2322,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["content.updatedat",{"_index":611,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["contentalreadyexists",{"_index":1163,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["contentdoesntexists",{"_index":1166,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["contentofindexthatpointstouser",{"_index":2230,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["conter",{"_index":49,"title":{},"body":{"classes/AdapterError.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/ServiceErrors.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["context",{"_index":95,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"guards/JwtGuard.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["context.getresponse",{"_index":97,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["context.switchtohttp().getrequest",{"_index":204,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["contexto",{"_index":3093,"title":{},"body":{"index.html":{}}}],["conteúdo",{"_index":1186,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-15.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["continue",{"_index":2732,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["controller",{"_index":146,"title":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"controllers/SuperAdminController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"controllers/SuperAdminController.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["controller('/condominium",{"_index":683,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["controller('admin",{"_index":152,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('super",{"_index":2477,"title":{},"body":{"controllers/SuperAdminController.html":{}}}],["controller('user",{"_index":2605,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":148,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"modules/HttpModule.html":{},"interfaces/IProps-1.html":{},"controllers/SuperAdminController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["controllers/admin.controller",{"_index":1693,"title":{},"body":{"modules/HttpModule.html":{}}}],["controllers/condominium.controller",{"_index":1688,"title":{},"body":{"modules/HttpModule.html":{}}}],["controllers/super",{"_index":1694,"title":{},"body":{"modules/HttpModule.html":{}}}],["controllers/user.controller",{"_index":1692,"title":{},"body":{"modules/HttpModule.html":{}}}],["contêiner",{"_index":3084,"title":{},"body":{"index.html":{}}}],["contêineres",{"_index":2947,"title":{},"body":{"index.html":{}}}],["converte",{"_index":1772,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["converter",{"_index":752,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/UserMapper.html":{}}}],["convidado",{"_index":702,"title":{},"body":{"controllers/CondominiumController.html":{},"injectables/InviteFirestore.html":{}}}],["convite",{"_index":1550,"title":{},"body":{"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["convite]/${inviteashash",{"_index":1583,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["convites",{"_index":1646,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InviteUserDTO.html":{}}}],["cookie",{"_index":139,"title":{},"body":{"modules/AdaptersModule.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IProps.html":{},"interfaces/IValidateSignedCookie.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["cookie.split('refresh",{"_index":2456,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["cookieadapter",{"_index":122,"title":{"classes/CookieAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IValidateSignedCookie.html":{},"guards/RefreshTokenGuard.html":{},"overview.html":{}}}],["cookieparser",{"_index":977,"title":{},"body":{"classes/CookieParserAdapter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["cookieparser.signedcookie(input.cookie",{"_index":979,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["cookieparseradapter",{"_index":140,"title":{"classes/CookieParserAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/CookieParserAdapter.html":{}}}],["copie",{"_index":3045,"title":{},"body":{"index.html":{}}}],["core",{"_index":546,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["coreinfo",{"_index":2636,"title":{},"body":{"controllers/UserController.html":{}}}],["corpo",{"_index":396,"title":{},"body":{"classes/CPF.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/IProps-1.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"miscellaneous/functions.html":{}}}],["corretamente",{"_index":2504,"title":{},"body":{"classes/UUID.html":{}}}],["count",{"_index":2199,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["coverage",{"_index":3198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragedirectory",{"_index":3197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cpf",{"_index":368,"title":{"classes/CPF.html":{}},"body":{"classes/CPF.html":{},"classes/CreateUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{},"miscellaneous/variables.html":{}}}],["cpf(input",{"_index":1962,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["cpf(input.cpf",{"_index":1944,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["cpfindex",{"_index":551,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/UsersFirestore.html":{}}}],["cpfs",{"_index":376,"title":{},"body":{"classes/CPF.html":{}}}],["create",{"_index":644,"title":{"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{}},"body":{"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/OTPRepo.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["create(@body",{"_index":691,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["create(body",{"_index":647,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["create(input",{"_index":782,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/OTPRepo.html":{},"classes/UserRepo.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["createadmin",{"_index":645,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["createadmin(@req",{"_index":707,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["createadmin(req",{"_index":652,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["createcondominium",{"_index":689,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["createcondominiumdto",{"_index":648,"title":{"classes/CreateCondominiumDTO.html":{}},"body":{"controllers/CondominiumController.html":{},"classes/CreateCondominiumDTO.html":{}}}],["createcondominiumservice",{"_index":667,"title":{"injectables/CreateCondominiumService.html":{}},"body":{"controllers/CondominiumController.html":{},"injectables/CreateCondominiumService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-6.html":{},"overview.html":{}}}],["createdat",{"_index":560,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/variables.html":{}}}],["createhmac",{"_index":309,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["createhmac('sha256",{"_index":315,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["createmockexecutioncontext",{"_index":3181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createsimpleuser",{"_index":2569,"title":{},"body":{"controllers/UserController.html":{}}}],["createsimpleuser(req",{"_index":2574,"title":{},"body":{"controllers/UserController.html":{}}}],["createtoken",{"_index":2607,"title":{},"body":{"controllers/UserController.html":{}}}],["createtokenservice",{"_index":1042,"title":{"injectables/CreateTokenService.html":{}},"body":{"injectables/CreateTokenService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["createtransport",{"_index":2357,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["createuser",{"_index":2606,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":1086,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"controllers/UserController.html":{}}}],["createuserservice",{"_index":1117,"title":{"injectables/CreateUserService.html":{}},"body":{"injectables/CreateUserService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-8.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["credenciais",{"_index":1977,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{},"index.html":{}}}],["criada",{"_index":375,"title":{},"body":{"classes/CPF.html":{}}}],["criado",{"_index":1193,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["criar",{"_index":1031,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateUserService.html":{},"injectables/GenInviteService.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-8.html":{},"injectables/InvitePrismaRepo.html":{},"classes/PrismaErrorFilter.html":{}}}],["criação",{"_index":982,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/InviteUserDTO.html":{}}}],["crie",{"_index":3037,"title":{},"body":{"index.html":{}}}],["critical",{"_index":1262,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["critical(input",{"_index":1803,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["critical(undefined",{"_index":1270,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["crypt",{"_index":134,"title":{},"body":{"modules/AdaptersModule.html":{},"classes/BcryptAdapter.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateUserService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{}}}],["cryptadapter",{"_index":123,"title":{"classes/CryptAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/BcryptAdapter.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{},"overview.html":{}}}],["cryptadapter:19",{"_index":308,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["cryptadapter:24",{"_index":304,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["cryptadapter:28",{"_index":302,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["crypto",{"_index":1808,"title":{},"body":{"interfaces/IOTPProps.html":{},"injectables/LogInterceptor.html":{},"classes/OTP.html":{}}}],["cryptspy",{"_index":1138,"title":{"classes/CryptSpy.html":{}},"body":{"classes/CryptSpy.html":{}}}],["current",{"_index":402,"title":{},"body":{"classes/CPF.html":{}}}],["custom",{"_index":1177,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{}}}],["customizado",{"_index":19,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["customizados",{"_index":1182,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["código",{"_index":52,"title":{},"body":{"classes/AdapterError.html":{},"guards/CheckTFACodeGuard.html":{},"classes/FetchAdapter.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-2.html":{},"index.html":{}}}],["código]/${code",{"_index":1604,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["códigos",{"_index":454,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["d",{"_index":3147,"title":{},"body":{"index.html":{}}}],["da",{"_index":1342,"title":{},"body":{"classes/Entity.html":{},"interfaces/IProps-1.html":{},"injectables/LogInterceptor.html":{},"classes/Num.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dada",{"_index":1518,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["dado",{"_index":1452,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{}}}],["dados",{"_index":728,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-16.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["das",{"_index":532,"title":{},"body":{"injectables/CollectionsRefService.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"index.html":{}}}],["data",{"_index":305,"title":{},"body":{"classes/BcryptAdapter.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CookieAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DateFormats.html":{},"classes/EmailAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/ISendMailContent.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"injectables/InvitePrismaRepo.html":{},"classes/NodemailerAdapter.html":{},"guards/RefreshTokenGuard.html":{},"classes/UUIDGroup.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{}}}],["data.body",{"_index":2006,"title":{},"body":{"interfaces/ISuccess.html":{},"classes/NodemailerAdapter.html":{},"injectables/ViacepGateway.html":{}}}],["data.body?.erro",{"_index":2002,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["data.done",{"_index":2537,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["data.from",{"_index":2368,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["data.subject",{"_index":2370,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["data.to",{"_index":2369,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["data.value",{"_index":2538,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["database",{"_index":946,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"classes/DatabaseCustomError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-16.html":{},"injectables/InviteFirestore.html":{},"classes/LoggerAdapter.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["database.batch",{"_index":949,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{}}}],["database.runtransaction(async",{"_index":2186,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["databasecustomerror",{"_index":796,"title":{"classes/DatabaseCustomError.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-16.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["databasecustomerrorfilter",{"_index":1180,"title":{"classes/DatabaseCustomErrorFilter.html":{}},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["databasecustomerrorfilter(this.logger",{"_index":1892,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["databasecustomerrorstags",{"_index":797,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-16.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["databasecustomerrorstags.contentalreadyexists",{"_index":1192,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"injectables/InviteFirestore.html":{}}}],["databasecustomerrorstags.contentdoesntexists",{"_index":810,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["databasecustomerrorstags.malformedref",{"_index":1770,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["databasecustomerrorstags.maximumcondominiumreluser",{"_index":1198,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"injectables/InviteFirestore.html":{}}}],["databasecustomerrorstags.reflost",{"_index":1195,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["databasecustomerrorstags.safesearchenabled",{"_index":1187,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["databasecustomerrorstags.toomanyentities",{"_index":1197,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["databasecustomerrorstags.wronginputlevel",{"_index":1202,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["date",{"_index":596,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserMapper.html":{},"injectables/CreateTokenService.html":{},"classes/DateFormats.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/Invite.html":{},"classes/InviteMapper.html":{},"injectables/LogInterceptor.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserMapper.html":{},"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":1780,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["date.getutchours",{"_index":1230,"title":{},"body":{"classes/DateFormats.html":{}}}],["date.getutcminutes",{"_index":1228,"title":{},"body":{"classes/DateFormats.html":{}}}],["date.getutcseconds",{"_index":1226,"title":{},"body":{"classes/DateFormats.html":{}}}],["date.now",{"_index":485,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"controllers/UserController.html":{}}}],["dateformats",{"_index":1215,"title":{"classes/DateFormats.html":{}},"body":{"classes/DateFormats.html":{},"injectables/LogInterceptor.html":{}}}],["dateformats.prettify",{"_index":2331,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["db",{"_index":3144,"title":{},"body":{"index.html":{}}}],["ddd",{"_index":1993,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["de",{"_index":23,"title":{},"body":{"classes/AdapterError.html":{},"guards/AdminJwt.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-9.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/ValueObject.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["debug",{"_index":1263,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["debug(`debug",{"_index":1417,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["debug(input",{"_index":1273,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["declarations",{"_index":116,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["decodeuricomponent(cookie",{"_index":2451,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["decorator",{"_index":1910,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["decorators",{"_index":649,"title":{},"body":{"controllers/CondominiumController.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"controllers/UserController.html":{}}}],["default",{"_index":297,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CepGatewaySpy.html":{},"injectables/CollectionsRefService.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EmailSpy.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceErrorFilter.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["definido",{"_index":3075,"title":{},"body":{"index.html":{}}}],["definir",{"_index":3108,"title":{},"body":{"index.html":{}}}],["deletar",{"_index":1244,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-9.html":{},"classes/PrismaErrorFilter.html":{}}}],["delete",{"_index":665,"title":{},"body":{"controllers/CondominiumController.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/OTPRepo.html":{},"classes/RegistryAPIBootstrap.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{}}}],["delete('dev/:condominiumid/delete",{"_index":659,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["delete(input",{"_index":1734,"title":{},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/OTPRepo.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["deleteaccount",{"_index":2570,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteaccount(@req",{"_index":2648,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteaccount(req",{"_index":2577,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuser",{"_index":646,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["deleteuser(@req",{"_index":711,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["deleteuser(req",{"_index":657,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["deleteuserdto",{"_index":658,"title":{"classes/DeleteUserDTO.html":{}},"body":{"controllers/CondominiumController.html":{},"classes/DeleteUserDTO.html":{}}}],["deleteuserservice",{"_index":680,"title":{"injectables/DeleteUserService.html":{}},"body":{"controllers/CondominiumController.html":{},"injectables/DeleteUserService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-9.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["deleção",{"_index":1240,"title":{},"body":{"classes/DeleteUserDTO.html":{}}}],["delimiter",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["dentro",{"_index":2903,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependência",{"_index":2933,"title":{},"body":{"index.html":{}}}],["dependências",{"_index":2892,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":2957,"title":{},"body":{"index.html":{}}}],["depois",{"_index":3067,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":520,"title":{},"body":{"classes/Code.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{}}}],["dereference",{"_index":558,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["desconhecida",{"_index":1620,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["description",{"_index":65,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["desenvolvedores",{"_index":2880,"title":{},"body":{"index.html":{}}}],["desenvolvida",{"_index":2719,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["desenvolvimento",{"_index":2899,"title":{},"body":{"index.html":{}}}],["detectados",{"_index":1333,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["detected",{"_index":1162,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["dev",{"_index":3132,"title":{},"body":{"index.html":{}}}],["deve",{"_index":48,"title":{},"body":{"classes/AdapterError.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DateFormats.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/ServiceErrors.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["devem",{"_index":2633,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["devpor",{"_index":3089,"title":{},"body":{"index.html":{}}}],["digitos",{"_index":390,"title":{},"body":{"classes/CPF.html":{}}}],["direito",{"_index":3050,"title":{},"body":{"index.html":{}}}],["diretamente",{"_index":1365,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["disable",{"_index":2214,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["disparado",{"_index":1914,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["disparar",{"_index":30,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["disparou",{"_index":1401,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["disponíveis",{"_index":688,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["disso",{"_index":924,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["doc(condominiumid",{"_index":2228,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["doc(input.condominiumid.value",{"_index":2740,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["doc(item.id",{"_index":2765,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["doc.data",{"_index":2241,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["doc.id",{"_index":2240,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["docker",{"_index":2945,"title":{},"body":{"index.html":{}}}],["document",{"_index":1880,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["documentbuilder",{"_index":1855,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["documentdata",{"_index":1766,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["documentos",{"_index":534,"title":{},"body":{"injectables/CollectionsRefService.html":{},"index.html":{}}}],["documentreference",{"_index":1765,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["doesn't",{"_index":2828,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["doesn\\'t",{"_index":1167,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{}}}],["dois",{"_index":389,"title":{},"body":{"classes/CPF.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"classes/LaunchTFADTO.html":{}}}],["domínio",{"_index":2627,"title":{},"body":{"controllers/UserController.html":{}}}],["domínio]/[página",{"_index":1581,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{}}}],["dos",{"_index":69,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieErrorFilter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/ThrottlerErrorFilter.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["dotenv",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":1171,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-16.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["dto/createcondominium.dto",{"_index":669,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["dto/createuser.dto",{"_index":2596,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/deleteadminuser.dto",{"_index":679,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["dto/getcondominiumrel",{"_index":2716,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["dto/getinvite",{"_index":2184,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["dto/getuser",{"_index":2715,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["dto/inviteuser.dto",{"_index":678,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["dtofailure",{"_index":1170,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["e",{"_index":51,"title":{},"body":{"classes/AdapterError.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"injectables/CollectionsRefService.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/LogInterceptor.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["e187f1f266a145c2f8649b2324d0bb54a7cf62e3c9abfce5a7f2ff8bbbd59d44b",{"_index":1145,"title":{},"body":{"classes/CryptSpy.html":{}}}],["e2e",{"_index":3204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["echo",{"_index":1285,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.create",{"_index":1287,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.alert",{"_index":1291,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.debug",{"_index":1289,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.error",{"_index":1296,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.info",{"_index":1288,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echo.logslevelenum.warn",{"_index":1290,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["echoguard",{"_index":1286,"title":{},"body":{"classes/EchoguardAdapter.html":{},"dependencies.html":{}}}],["echoguardadapter",{"_index":1259,"title":{"classes/EchoguardAdapter.html":{}},"body":{"classes/EchoguardAdapter.html":{}}}],["ele",{"_index":3106,"title":{},"body":{"index.html":{}}}],["em",{"_index":351,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DateFormats.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-5.html":{},"interfaces/IUserInObject.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/Num.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["email",{"_index":131,"title":{"classes/Email.html":{}},"body":{"modules/AdaptersModule.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryUser.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/NodemailerAdapter.html":{},"classes/OTPRepo.html":{},"guards/RefreshTokenGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/variables.html":{}}}],["email(body.email",{"_index":447,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["email(data.email",{"_index":2461,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["email(input",{"_index":1958,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["email(input.email",{"_index":1777,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["email(rawemail",{"_index":696,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["email.value",{"_index":1078,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["email_sender",{"_index":3064,"title":{},"body":{"index.html":{}}}],["emailadapter",{"_index":124,"title":{"classes/EmailAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/ISendMailContent.html":{},"classes/NodemailerAdapter.html":{},"overview.html":{}}}],["emailindex",{"_index":549,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/UsersFirestore.html":{}}}],["emails",{"_index":2902,"title":{},"body":{"index.html":{}}}],["emailspy",{"_index":1308,"title":{"classes/EmailSpy.html":{}},"body":{"classes/EmailSpy.html":{}}}],["emergencial",{"_index":1264,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["emergencial(input",{"_index":1804,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["emergencial(undefined",{"_index":1275,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["emitter",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["empacotar",{"_index":2950,"title":{},"body":{"index.html":{}}}],["emuladores",{"_index":3097,"title":{},"body":{"index.html":{}}}],["emulatorsse",{"_index":3100,"title":{},"body":{"index.html":{}}}],["encontra",{"_index":2385,"title":{},"body":{"classes/Num.html":{}}}],["encontrado",{"_index":216,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["end",{"_index":2889,"title":{},"body":{"index.html":{}}}],["entidade",{"_index":1317,"title":{},"body":{"classes/EntitieError.html":{},"classes/Entity.html":{},"interfaces/IProps-3.html":{},"classes/ValueObject.html":{}}}],["entidades",{"_index":1316,"title":{},"body":{"classes/EntitieError.html":{},"classes/Entity.html":{},"interfaces/IProps-3.html":{},"classes/Name.html":{},"classes/ValueObject.html":{}}}],["entitie",{"_index":1800,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["entitieerror",{"_index":252,"title":{"classes/EntitieError.html":{}},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"interfaces/IProps-3.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["entitieerrorfilter",{"_index":1323,"title":{"classes/EntitieErrorFilter.html":{}},"body":{"classes/EntitieErrorFilter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["entitieerrorfilter(this.logger",{"_index":1894,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["entities",{"_index":595,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/DatabaseCustomError.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-16.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["entities/condominiumsdocuments/condominiums",{"_index":538,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["entities/indexes",{"_index":943,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{}}}],["entities/user",{"_index":2015,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{}}}],["entities/usersdocuments/core",{"_index":547,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["entities/usersdocuments/core/${id}/condominiumreluser",{"_index":548,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["entities/usersdocuments/invites",{"_index":542,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["entitiesenum",{"_index":254,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-3.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["entitiesenum.condominium",{"_index":2038,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["entitiesenum.invite",{"_index":2078,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["entitiesenum.otp",{"_index":2104,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["entitiesenum.user",{"_index":2135,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["entitiesenum.vo",{"_index":339,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"interfaces/IProps-3.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["entity",{"_index":338,"title":{"classes/Entity.html":{}},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/GenericErrorFilter.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-3.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["entityref",{"_index":962,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["entrada",{"_index":774,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["entrar",{"_index":3082,"title":{},"body":{"index.html":{}}}],["entre",{"_index":244,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"index.html":{}}}],["então",{"_index":3090,"title":{},"body":{"index.html":{}}}],["enum",{"_index":1155,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/Entity.html":{},"classes/GatewayErrors.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"interfaces/IRefreshTokenBody.html":{},"classes/LoggerAdapter.html":{},"classes/ServiceErrors.html":{},"classes/ValueObject.html":{}}}],["enumerations",{"_index":2820,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1154,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["env",{"_index":3048,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":3003,"title":{},"body":{"index.html":{}}}],["envenenado",{"_index":1519,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["envio",{"_index":2901,"title":{},"body":{"index.html":{}}}],["envolvida",{"_index":1318,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-3.html":{}}}],["equalto",{"_index":234,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/Entity.html":{},"classes/Invite.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["equalto(input",{"_index":247,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/ValueObject.html":{}}}],["equipe",{"_index":2915,"title":{},"body":{"index.html":{}}}],["erase",{"_index":1752,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["err",{"_index":321,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/FetchAdapter.html":{}}}],["erro",{"_index":18,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrors.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InviteRepo.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/UserRepo.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["error",{"_index":8,"title":{},"body":{"classes/AdapterError.html":{},"guards/AdminJwt.html":{},"classes/ClassValidatorErrorFilter.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieError.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrors.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InMemoryError.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/LoggerAdapter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["error(`critical",{"_index":1421,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["error(`emergencial",{"_index":1422,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["error(`error",{"_index":1420,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["error(input",{"_index":1802,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["error(undefined",{"_index":1277,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["error.httpcode",{"_index":1214,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["error.message",{"_index":1212,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["error.name",{"_index":1210,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["errormessages",{"_index":1918,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["errormessages.length",{"_index":1922,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["errors",{"_index":1916,"title":{},"body":{"interfaces/IProps-1.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["errors.flatmap",{"_index":1919,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["erros",{"_index":68,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["escutar",{"_index":3133,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":2213,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["eslint/no",{"_index":2216,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["espaço",{"_index":2942,"title":{},"body":{"index.html":{}}}],["especificado",{"_index":213,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["esperado",{"_index":1512,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["esquerda",{"_index":3042,"title":{},"body":{"index.html":{}}}],["essenciais",{"_index":2990,"title":{},"body":{"index.html":{}}}],["est",{"_index":1199,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IServiceErrors.html":{},"classes/NotFoundFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/UUID.html":{}}}],["esta",{"_index":243,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/EntitieError.html":{},"interfaces/IProps-3.html":{},"injectables/InviteFirestore.html":{},"injectables/LogInterceptor.html":{},"classes/UUIDGroup.html":{},"injectables/UsersFirestore.html":{},"index.html":{}}}],["estabelecer",{"_index":1393,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["estamos",{"_index":2907,"title":{},"body":{"index.html":{}}}],["estar",{"_index":331,"title":{},"body":{"classes/Block.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{}}}],["este",{"_index":807,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IServiceErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/ServiceErrorFilter.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["esteja",{"_index":2894,"title":{},"body":{"index.html":{}}}],["estes",{"_index":3001,"title":{},"body":{"index.html":{}}}],["eventemittermodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":2158,"title":{},"body":{"classes/Index.html":{},"index.html":{}}}],["exception",{"_index":83,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["exception.code",{"_index":1832,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["exception.content",{"_index":1531,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["exception.entity",{"_index":1329,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["exception.getresponse",{"_index":507,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["exception.message",{"_index":102,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["exception.name",{"_index":99,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["exception.stack",{"_index":104,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["exception.tag",{"_index":1209,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["exception?.message",{"_index":1618,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["exception?.message?.includes(item.key",{"_index":1615,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["exception?.name",{"_index":1616,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["exception?.stack",{"_index":1621,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["exceptionfilter",{"_index":72,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["exec",{"_index":851,"title":{},"body":{"classes/CondominiumRelUser.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"classes/Entity.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"classes/IService.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"index.html":{}}}],["exec(input",{"_index":1036,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-6.html":{},"classes/IService.html":{}}}],["exec(undefined",{"_index":1055,"title":{},"body":{"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"injectables/GetCondominiumRelUserService.html":{}}}],["executar",{"_index":2962,"title":{},"body":{"index.html":{}}}],["execute",{"_index":3035,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":174,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"miscellaneous/variables.html":{}}}],["execução",{"_index":2953,"title":{},"body":{"index.html":{}}}],["exemplo",{"_index":1222,"title":{},"body":{"classes/DateFormats.html":{},"classes/IService.html":{}}}],["exist",{"_index":2039,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["existe",{"_index":808,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["existem",{"_index":2937,"title":{},"body":{"index.html":{}}}],["existentdata",{"_index":2035,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["existentdata.user.condominiumreluser[input.condominiumid.value",{"_index":2148,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["existentdata?.user.content",{"_index":2144,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["existentdata?.value",{"_index":2107,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["existentdataindex",{"_index":2108,"title":{},"body":{"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["existentnumberofinvites",{"_index":2203,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["existentnumberofinvites.data().count",{"_index":2206,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["existentuser",{"_index":2150,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["existentuser.user.condominiumreluser",{"_index":2152,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["existentuser.user.condominiumreluser[key",{"_index":2155,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["exists",{"_index":1165,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IProps-16.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["existência",{"_index":1968,"title":{},"body":{"classes/IService.html":{}}}],["exp",{"_index":1061,"title":{},"body":{"injectables/CreateTokenService.html":{},"injectables/GenTFAService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-7.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{}}}],["expires",{"_index":2610,"title":{},"body":{"controllers/UserController.html":{}}}],["expiresat",{"_index":1461,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{}}}],["expiresin",{"_index":1074,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["explicações",{"_index":3005,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["exports",{"_index":119,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["express",{"_index":91,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"controllers/CondominiumController.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["express.express",{"_index":1862,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["expressadapter",{"_index":1836,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["expressadapter(requestlistener",{"_index":1865,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["expressapp",{"_index":3183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expressapp(req",{"_index":3186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AdapterError.html":{},"classes/BcryptAdapter.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/InMemoryError.html":{},"injectables/PrismaService.html":{},"classes/ServiceErrors.html":{}}}],["extras",{"_index":3157,"title":{},"body":{"index.html":{}}}],["extremamente",{"_index":3027,"title":{},"body":{"index.html":{}}}],["f]{12}$/i",{"_index":2501,"title":{},"body":{"classes/UUID.html":{}}}],["f]{3",{"_index":2499,"title":{},"body":{"classes/UUID.html":{}}}],["f]{4",{"_index":2497,"title":{},"body":{"classes/UUID.html":{}}}],["f]{8",{"_index":2496,"title":{},"body":{"classes/UUID.html":{}}}],["facilitando",{"_index":2954,"title":{},"body":{"index.html":{}}}],["facilitar",{"_index":2877,"title":{},"body":{"index.html":{}}}],["falha",{"_index":1665,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["falhou",{"_index":1403,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["false",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"classes/CookieAdapter.html":{},"interfaces/IValidateSignedCookie.html":{},"injectables/PrismaService.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{}}}],["fatores",{"_index":459,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"classes/LaunchTFADTO.html":{}}}],["favor",{"_index":1514,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["fazer",{"_index":1319,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-3.html":{},"index.html":{}}}],["faça",{"_index":2913,"title":{},"body":{"index.html":{}}}],["feita",{"_index":2869,"title":{},"body":{"index.html":{}}}],["feito",{"_index":1737,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{}}}],["ferramentas",{"_index":2893,"title":{},"body":{"index.html":{}}}],["fetch(input.url",{"_index":1377,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["fetch/fetchadapter",{"_index":138,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["fetchadapter",{"_index":137,"title":{"classes/FetchAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/FetchAdapter.html":{}}}],["fez",{"_index":3135,"title":{},"body":{"index.html":{}}}],["field",{"_index":2005,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["filters",{"_index":34,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["filtrar",{"_index":67,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["finalizado",{"_index":2336,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["find",{"_index":778,"title":{"interfaces/find.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/OTPRepo.html":{},"classes/UUIDGroup.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{}}}],["find(input",{"_index":785,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/OTPRepo.html":{},"classes/UUIDGroup.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["finish",{"_index":2003,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["firebase",{"_index":143,"title":{},"body":{"modules/AdaptersModule.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{},"injectables/UsersFirestore.html":{},"dependencies.html":{},"index.html":{}}}],["firebase/rules",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["firebaseenums",{"_index":2823,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["firebaseloggeradapter",{"_index":142,"title":{"classes/FirebaseLoggerAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["firestore",{"_index":535,"title":{},"body":{"injectables/CollectionsRefService.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"injectables/CondominiumsFirestore.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{},"injectables/UsersFirestore.html":{}}}],["firestore.service",{"_index":554,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["firestorecondominiumfactory",{"_index":2835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestorecondominiumfactory(input",{"_index":2852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestorecondominiumreluserfactory",{"_index":2836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestorecondominiumreluserfactory(input",{"_index":2854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestoregetcondominiumdto",{"_index":1423,"title":{"classes/FirestoreGetCondominiumDTO.html":{}},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["firestoregetcondominiumreluserdto",{"_index":1441,"title":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{},"injectables/UsersFirestore.html":{}}}],["firestoregetcondominiumreluserdto.exec(unparseddata",{"_index":2746,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["firestoregetinvitedto",{"_index":1449,"title":{"classes/FirestoreGetInviteDTO.html":{}},"body":{"classes/FirestoreGetInviteDTO.html":{},"injectables/InviteFirestore.html":{}}}],["firestoregetinvitedto.exec(unparsedinvite",{"_index":2243,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["firestoregetuserdto",{"_index":1462,"title":{"classes/FirestoreGetUserDTO.html":{}},"body":{"classes/FirestoreGetUserDTO.html":{},"injectables/UsersFirestore.html":{}}}],["firestoregetuserdto.exec(unparseduser",{"_index":2736,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["firestoreinvitefactory",{"_index":2837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestoreinvitefactory(input",{"_index":2856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestoremodule",{"_index":1474,"title":{"modules/FirestoreModule.html":{}},"body":{"modules/FirestoreModule.html":{},"modules/HttpModule.html":{},"modules.html":{},"overview.html":{}}}],["firestoreservice",{"_index":528,"title":{"injectables/FirestoreService.html":{}},"body":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumsFirestore.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{},"overview.html":{}}}],["firestoreuserfactory",{"_index":2839,"title":{},"body":{"miscellaneous/functions.html":{}}}],["firestoreuserfactory(input",{"_index":2858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flat",{"_index":959,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{}}}],["fluxos",{"_index":457,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["focado",{"_index":2919,"title":{},"body":{"index.html":{}}}],["foi",{"_index":1189,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"injectables/UsersFirestore.html":{}}}],["fora",{"_index":1909,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["foram",{"_index":1332,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["forma",{"_index":753,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-5.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"classes/UserMapper.html":{},"miscellaneous/functions.html":{}}}],["formado",{"_index":1522,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["formata",{"_index":1220,"title":{},"body":{"classes/DateFormats.html":{}}}],["formatada",{"_index":1224,"title":{},"body":{"classes/DateFormats.html":{}}}],["formatado",{"_index":2503,"title":{},"body":{"classes/UUID.html":{}}}],["formatados",{"_index":349,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{}}}],["formatação",{"_index":3116,"title":{},"body":{"index.html":{}}}],["formdata",{"_index":1680,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["fornecida",{"_index":1513,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["força",{"_index":928,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["found",{"_index":1172,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{},"classes/NotFoundFilter.html":{},"miscellaneous/enumerations.html":{}}}],["frente",{"_index":2975,"title":{},"body":{"index.html":{}}}],["fromfirebasetoclass",{"_index":2658,"title":{},"body":{"classes/UserFirestoreMapper.html":{}}}],["fromfirebasetoclass(input",{"_index":1761,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["fromfirebasetoobject",{"_index":1762,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["fromfirebasetoobject(input",{"_index":2660,"title":{},"body":{"classes/UserFirestoreMapper.html":{}}}],["fromfirestoretoclass",{"_index":722,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["fromfirestoretoclass(input",{"_index":724,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["fromfirestoretoclass(undefined",{"_index":884,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{}}}],["fromfirestoretoobject",{"_index":723,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["fromfirestoretoobject(input",{"_index":732,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/InviteFirestoreMapper.html":{}}}],["front",{"_index":1582,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{}}}],["funcionalidade",{"_index":2717,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["funcionalidades",{"_index":2989,"title":{},"body":{"index.html":{}}}],["funcionamento",{"_index":2896,"title":{},"body":{"index.html":{}}}],["funcionando",{"_index":2981,"title":{},"body":{"index.html":{}}}],["funcionário",{"_index":164,"title":{},"body":{"guards/AdminJwt.html":{},"classes/Level.html":{}}}],["function",{"_index":487,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"classes/CondominiumRepo.html":{},"classes/EmailAdapter.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-1.html":{}}}],["functions",{"_index":2808,"title":{"miscellaneous/functions.html":{}},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["functions/logger",{"_index":1414,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["função",{"_index":374,"title":{},"body":{"classes/CPF.html":{}}}],["funções",{"_index":1969,"title":{},"body":{"classes/IService.html":{}}}],["futuro",{"_index":1871,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["g",{"_index":358,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"index.html":{}}}],["garantir",{"_index":1361,"title":{},"body":{"classes/Entity.html":{},"classes/IService.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["gateway",{"_index":1540,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-15.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["gatewayerrorfilter",{"_index":1503,"title":{"classes/GatewayErrorFilter.html":{}},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["gatewayerrorfilter(this.logger",{"_index":1895,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["gatewayerrors",{"_index":1525,"title":{"classes/GatewayErrors.html":{}},"body":{"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-15.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["gatewaymodule",{"_index":1543,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules.html":{},"overview.html":{}}}],["gateways",{"_index":1505,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-15.html":{}}}],["gateways/gateway.module",{"_index":1696,"title":{},"body":{"modules/HttpModule.html":{}}}],["gatewayserrorstags",{"_index":1527,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-15.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/enumerations.html":{}}}],["gatewayserrorstags.invalidresult",{"_index":1509,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["gatewayserrorstags.poisonedcontent",{"_index":1520,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["gencode",{"_index":1588,"title":{},"body":{"injectables/GenTFAService.html":{}}}],["gencode(input",{"_index":1592,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["generateinvite",{"_index":1551,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["generateinvite(undefined",{"_index":1555,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["generatestringcodecontent",{"_index":469,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IValidate.html":{},"miscellaneous/functions.html":{}}}],["generatestringcodecontent(input",{"_index":1740,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{}}}],["genericerrorfilter",{"_index":1605,"title":{"classes/GenericErrorFilter.html":{}},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IProps.html":{},"interfaces/IUntrackableErrors.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["genericerrorfilter(this.logger",{"_index":1890,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["genhmacdata",{"_index":293,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["geninvite",{"_index":690,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["geninviteservice",{"_index":673,"title":{"injectables/GenInviteService.html":{}},"body":{"controllers/CondominiumController.html":{},"injectables/GenInviteService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-10.html":{},"overview.html":{}}}],["gentfa",{"_index":2608,"title":{},"body":{"controllers/UserController.html":{}}}],["gentfaservice",{"_index":1584,"title":{"injectables/GenTFAService.html":{}},"body":{"injectables/GenTFAService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-11.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["gentoken",{"_index":282,"title":{},"body":{"classes/Auth.html":{}}}],["gentoken(user",{"_index":285,"title":{},"body":{"classes/Auth.html":{}}}],["genv4",{"_index":2488,"title":{},"body":{"classes/UUID.html":{}}}],["genéricos",{"_index":1607,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["gerados",{"_index":455,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["gerar",{"_index":1044,"title":{},"body":{"injectables/CreateTokenService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["gerenciar",{"_index":2921,"title":{},"body":{"index.html":{}}}],["get('content",{"_index":1387,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["get('get",{"_index":2657,"title":{},"body":{"controllers/UserController.html":{}}}],["getaccount",{"_index":2571,"title":{},"body":{"controllers/UserController.html":{}}}],["getaccount(@req",{"_index":2650,"title":{},"body":{"controllers/UserController.html":{}}}],["getaccount(req",{"_index":2580,"title":{},"body":{"controllers/UserController.html":{}}}],["getallcondominiumrelation",{"_index":2112,"title":{"interfaces/getAllCondominiumRelation.html":{}},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["getallcondominiumrelation(input",{"_index":2125,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{}}}],["getapartmentnumber",{"_index":837,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["getblock",{"_index":832,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["getcep",{"_index":578,"title":{},"body":{"classes/Condominium.html":{}}}],["getcnpj",{"_index":586,"title":{},"body":{"classes/Condominium.html":{}}}],["getcode",{"_index":2398,"title":{},"body":{"classes/OTP.html":{}}}],["getcondominiumid",{"_index":824,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{}}}],["getcondominiumrelation",{"_index":2113,"title":{"interfaces/getCondominiumRelation.html":{}},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["getcondominiumrelation(input",{"_index":2128,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{}}}],["getcondominiumreluserservice",{"_index":1622,"title":{"injectables/GetCondominiumRelUserService.html":{}},"body":{"injectables/GetCondominiumRelUserService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-12.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["getcpf",{"_index":2558,"title":{},"body":{"classes/User.html":{}}}],["getcreatedat",{"_index":590,"title":{},"body":{"classes/Condominium.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["getemail",{"_index":2166,"title":{},"body":{"classes/Invite.html":{},"classes/User.html":{}}}],["getexpiresat",{"_index":2170,"title":{},"body":{"classes/Invite.html":{}}}],["getid",{"_index":571,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["getinstance",{"_index":1492,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["getinvitedoc",{"_index":543,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["getinvitedoc(input.key.value",{"_index":2211,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["getlevel",{"_index":820,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["getname",{"_index":573,"title":{},"body":{"classes/Condominium.html":{},"classes/User.html":{}}}],["getnum",{"_index":582,"title":{},"body":{"classes/Condominium.html":{}}}],["getpassword",{"_index":2554,"title":{},"body":{"classes/User.html":{}}}],["getphonenumber",{"_index":2562,"title":{},"body":{"classes/User.html":{}}}],["getref",{"_index":2160,"title":{},"body":{"classes/Index.html":{}}}],["getrequest",{"_index":3208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrequiredlevel",{"_index":2392,"title":{},"body":{"classes/OTP.html":{}}}],["getting",{"_index":2865,"title":{"index.html":{}},"body":{}}],["getttl",{"_index":2168,"title":{},"body":{"classes/Invite.html":{},"classes/OTP.html":{}}}],["gettype",{"_index":2172,"title":{},"body":{"classes/Invite.html":{}}}],["getupdatedat",{"_index":592,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/User.html":{}}}],["getuserid",{"_index":828,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/OTP.html":{}}}],["getuserquery",{"_index":2188,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["getvalue",{"_index":250,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["gia",{"_index":1994,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["git",{"_index":3110,"title":{},"body":{"index.html":{}}}],["global",{"_index":130,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/FirestoreModule.html":{},"modules/PrismaModule.html":{}}}],["guard",{"_index":153,"title":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}},"body":{"classes/GuardErrors.html":{},"interfaces/IProps-4.html":{}}}],["guarderrorfilter",{"_index":1633,"title":{"classes/GuardErrorFilter.html":{}},"body":{"classes/GuardErrorFilter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["guarderrorfilter(this.logger",{"_index":1896,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["guarderrors",{"_index":188,"title":{"classes/GuardErrors.html":{}},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-4.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["guards",{"_index":155,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-4.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"overview.html":{}}}],["hash",{"_index":295,"title":{},"body":{"classes/BcryptAdapter.html":{},"guards/CheckPasswordGuard.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{}}}],["hash(data",{"_index":303,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["hasheddata",{"_index":442,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"classes/CryptAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["hashedinvite",{"_index":1663,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["hashpass",{"_index":1125,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["hashwithhmac",{"_index":296,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["hashwithhmac(input",{"_index":306,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["header",{"_index":2291,"title":{},"body":{"guards/JwtGuard.html":{}}}],["headers",{"_index":1379,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["hmac",{"_index":314,"title":{},"body":{"classes/BcryptAdapter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["hmac.digest('hex",{"_index":319,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["hmac.update(input.data",{"_index":317,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["hmacinviteguard",{"_index":1642,"title":{"guards/HmacInviteGuard.html":{}},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"controllers/UserController.html":{}}}],["hooks",{"_index":3109,"title":{},"body":{"index.html":{}}}],["hookspronto",{"_index":3122,"title":{},"body":{"index.html":{}}}],["hora",{"_index":2906,"title":{},"body":{"index.html":{}}}],["horas",{"_index":2974,"title":{},"body":{"index.html":{}}}],["host",{"_index":80,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["host.switchtohttp",{"_index":96,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["host_port_sender",{"_index":3058,"title":{},"body":{"index.html":{}}}],["host_sender",{"_index":3056,"title":{},"body":{"index.html":{}}}],["hours",{"_index":1235,"title":{},"body":{"classes/DateFormats.html":{}}}],["hours}:${minutes}:${seconds",{"_index":1237,"title":{},"body":{"classes/DateFormats.html":{}}}],["html",{"_index":2371,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["http",{"_index":53,"title":{},"body":{"classes/AdapterError.html":{},"modules/AdaptersModule.html":{},"classes/FetchAdapter.html":{},"interfaces/IProps-2.html":{}}}],["httpadapter",{"_index":125,"title":{"classes/HttpAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{},"overview.html":{}}}],["httpargumenthost",{"_index":3207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpargumentshost",{"_index":3209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":12,"title":{},"body":{"classes/AdapterError.html":{},"controllers/CondominiumController.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-2.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"controllers/UserController.html":{}}}],["httpcode(200",{"_index":2649,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(204",{"_index":706,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["httpexception",{"_index":1375,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["httpmodule",{"_index":262,"title":{"modules/HttpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HttpModule.html":{},"modules.html":{},"overview.html":{}}}],["httponly",{"_index":2615,"title":{},"body":{"controllers/UserController.html":{}}}],["https://[exemplo",{"_index":1580,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{}}}],["https://viacep.com.br/ws/${input}/json",{"_index":2001,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["https://www.youtube.com/watch?v=15bw0duulmq&themerefresh=1",{"_index":385,"title":{},"body":{"classes/CPF.html":{}}}],["httpstatus",{"_index":182,"title":{},"body":{"guards/AdminJwt.html":{},"interfaces/IProps-1.html":{},"guards/SuperAdminJwt.html":{}}}],["httpstatus.bad_request",{"_index":209,"title":{},"body":{"guards/AdminJwt.html":{},"interfaces/IProps-1.html":{},"guards/SuperAdminJwt.html":{}}}],["iaccesstokenbody",{"_index":185,"title":{"interfaces/IAccessTokenBody.html":{}},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-7.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["iat",{"_index":1595,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-11.html":{},"interfaces/IRefreshTokenBody.html":{}}}],["ibge",{"_index":1995,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["ibodyprops",{"_index":498,"title":{"interfaces/IBodyProps.html":{}},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["icheckcep",{"_index":410,"title":{"interfaces/ICheckCep.html":{}},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["iclass",{"_index":1345,"title":{"interfaces/IClass.html":{}},"body":{"classes/Entity.html":{},"interfaces/IClass.html":{},"classes/ValueObject.html":{}}}],["icondominiumreluserinobject",{"_index":896,"title":{"interfaces/ICondominiumRelUserInObject.html":{}},"body":{"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{}}}],["icondominiumreluserprops",{"_index":816,"title":{"interfaces/ICondominiumRelUserProps.html":{}},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["iconverttoobject",{"_index":749,"title":{"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{}},"body":{"classes/CondominiumMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/InviteMapper.html":{},"classes/OTPMapper.html":{}}}],["icreateotpinput",{"_index":1729,"title":{"interfaces/ICreateOTPInput.html":{}},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryOTP.html":{},"classes/OTPRepo.html":{}}}],["icryptcompare",{"_index":300,"title":{"interfaces/ICryptCompare.html":{}},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["icrypthmac",{"_index":307,"title":{"interfaces/ICryptHmac.html":{}},"body":{"classes/BcryptAdapter.html":{},"classes/CryptAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["id",{"_index":475,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateTokenService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"injectables/LogInterceptor.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["id(${input.id.value})].[email(${input.email.value})].[level",{"_index":1741,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{}}}],["id).or(uuid.genv4()).exec",{"_index":846,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["ideleteotpinput",{"_index":1732,"title":{"interfaces/IDeleteOTPInput.html":{}},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryOTP.html":{},"classes/OTPRepo.html":{}}}],["identificado",{"_index":2327,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["identificador",{"_index":1152,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["ifindotpinput",{"_index":1731,"title":{"interfaces/IFindOTPInput.html":{}},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryOTP.html":{},"classes/OTPRepo.html":{}}}],["ifirestoreerrors",{"_index":1185,"title":{"interfaces/IFirestoreErrors.html":{}},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["igatewayerror",{"_index":1507,"title":{"interfaces/IGatewayError.html":{}},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["igenerateinvitekeyprops",{"_index":1735,"title":{"interfaces/IGenerateInviteKeyProps.html":{}},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{}}}],["ignoreerrors",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["ignoreundefinedproperties",{"_index":1501,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["igual",{"_index":1020,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["ihttpclientcall",{"_index":1373,"title":{"interfaces/IHttpClientCall.html":{}},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["ihttpclientcallreturn",{"_index":1376,"title":{"interfaces/IHttpClientCallReturn.html":{}},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["iincomingfirestorecondominiumdata",{"_index":725,"title":{"interfaces/IIncomingFirestoreCondominiumData.html":{}},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"miscellaneous/functions.html":{}}}],["iincomingfirestorecondominiumreluserdata",{"_index":885,"title":{"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{}},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"miscellaneous/functions.html":{}}}],["iincomingfirestoreinvitedata",{"_index":1453,"title":{"interfaces/IIncomingFirestoreInviteData.html":{}},"body":{"classes/FirestoreGetInviteDTO.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{},"miscellaneous/functions.html":{}}}],["iincomingfirestoreuserdata",{"_index":1465,"title":{"interfaces/IIncomingFirestoreUserData.html":{}},"body":{"classes/FirestoreGetUserDTO.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{},"miscellaneous/functions.html":{}}}],["iindexprops",{"_index":1763,"title":{"interfaces/IIndexProps.html":{}},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["iinmemorycontainerprops",{"_index":1743,"title":{"interfaces/IInMemoryContainerProps.html":{}},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["iinmemoryusercontainer",{"_index":1749,"title":{"interfaces/IInMemoryUserContainer.html":{}},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["iinputcondominiumreluser",{"_index":813,"title":{"interfaces/IInputCondominiumRelUser.html":{}},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["iinputpropsinvite",{"_index":1775,"title":{"interfaces/IInputPropsInvite.html":{}},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["iloggerdefaultprops",{"_index":1268,"title":{"interfaces/ILoggerDefaultProps.html":{}},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["implemented",{"_index":966,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["implements",{"_index":71,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["import",{"_index":85,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"modules/HttpModule.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["imports",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/HttpModule.html":{}}}],["inboxes",{"_index":3043,"title":{},"body":{"index.html":{}}}],["includes('application/json",{"_index":1388,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["incorreto",{"_index":341,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Email.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["incorretos",{"_index":444,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"classes/UUIDGroup.html":{}}}],["index",{"_index":9,"title":{"classes/Index.html":{},"index.html":{}},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicação",{"_index":1320,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-3.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["info(`info",{"_index":1416,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["info(input",{"_index":1279,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["infra/http/http.module",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["infraestruturas",{"_index":2997,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":301,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["inicialização",{"_index":2297,"title":{},"body":{"classes/LaunchTFADTO.html":{}}}],["iniciar",{"_index":1586,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["init",{"_index":2429,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["initializeapp",{"_index":1494,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["injectable",{"_index":183,"title":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/LogInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CollectionsRefService.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/ISuccess.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["injectables",{"_index":523,"title":{},"body":{"injectables/CollectionsRefService.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"injectables/FirestoreService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/LogInterceptor.html":{},"injectables/PrismaService.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"overview.html":{}}}],["inmemorycondominium",{"_index":2020,"title":{"classes/InMemoryCondominium.html":{}},"body":{"classes/InMemoryCondominium.html":{}}}],["inmemorycontainer",{"_index":1751,"title":{"classes/InMemoryContainer.html":{}},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["inmemoryerror",{"_index":1926,"title":{"classes/InMemoryError.html":{}},"body":{"interfaces/IProps-13.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["inmemoryinvite",{"_index":2050,"title":{"classes/InMemoryInvite.html":{}},"body":{"classes/InMemoryInvite.html":{}}}],["inmemoryotp",{"_index":2092,"title":{"classes/InMemoryOTP.html":{}},"body":{"classes/InMemoryOTP.html":{}}}],["inmemoryuser",{"_index":2110,"title":{"classes/InMemoryUser.html":{}},"body":{"classes/InMemoryUser.html":{}}}],["input",{"_index":40,"title":{},"body":{"classes/AdapterError.html":{},"classes/ApartmentNumber.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/IService.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrors.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["input).limit(1).get",{"_index":2721,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["input._id",{"_index":1816,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["input.apartment_number",{"_index":912,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["input.apartmentnumber",{"_index":853,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserMapper.html":{},"injectables/CreateUserService.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-8.html":{}}}],["input.apartmentnumber.value",{"_index":903,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"injectables/CreateUserService.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IProps-8.html":{}}}],["input.apartmentnumber?.value",{"_index":911,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["input.block",{"_index":870,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateUserService.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-8.html":{}}}],["input.block).allownullish().exec",{"_index":856,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["input.block.value",{"_index":901,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"injectables/CreateUserService.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IProps-8.html":{}}}],["input.block?.value",{"_index":909,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["input.body",{"_index":1381,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["input.cep",{"_index":738,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["input.cep.value",{"_index":760,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{}}}],["input.cnpj",{"_index":739,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["input.cnpj.value",{"_index":762,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{}}}],["input.code.value",{"_index":1728,"title":{},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["input.condominium",{"_index":800,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"interfaces/IProps-6.html":{}}}],["input.condominium.equalto(item",{"_index":2037,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["input.condominiumid",{"_index":868,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{}}}],["input.condominiumid).exec",{"_index":857,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["input.condominiumid.equalto(this.condominiumid",{"_index":1789,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["input.condominiumid.value",{"_index":900,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/GenInviteService.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IProps-10.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/UserPrismaRepo.html":{}}}],["input.condominiumreluser",{"_index":2139,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/InvitePrismaRepo.html":{}}}],["input.condominiumreluser.condominiumid.value",{"_index":2138,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.content",{"_index":1542,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{}}}],["input.cpf",{"_index":1953,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.cpf.value",{"_index":2018,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.createdat",{"_index":629,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/User.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.createdat.todate",{"_index":742,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["input.data",{"_index":1148,"title":{},"body":{"classes/CryptSpy.html":{}}}],["input.description",{"_index":1295,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["input.email",{"_index":1660,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IPropsUser.html":{},"interfaces/IValidate.html":{},"classes/InvitePrismaMapper.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.email.equalto(this.email",{"_index":1788,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["input.email.value",{"_index":1564,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.entity",{"_index":1321,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-3.html":{},"classes/InMemoryError.html":{}}}],["input.expiresat",{"_index":1719,"title":{},"body":{"interfaces/IConvertToObject-1.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{}}}],["input.expiresat.todate",{"_index":1756,"title":{},"body":{"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["input.foreach((item",{"_index":2533,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["input.hasheddata",{"_index":326,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/CryptSpy.html":{}}}],["input.headers",{"_index":1380,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["input.httpcode",{"_index":58,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/IProps-2.html":{}}}],["input.id",{"_index":744,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.id.equalto(this.id",{"_index":1786,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["input.id.value",{"_index":758,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.invite.condominiumid",{"_index":1659,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["input.invite.condominiumid.value",{"_index":1131,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["input.invite.id",{"_index":1662,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InMemoryInvite.html":{}}}],["input.invite.type",{"_index":1661,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["input.invite.type.value",{"_index":1130,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["input.inviteashash",{"_index":1668,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["input.key",{"_index":316,"title":{},"body":{"classes/BcryptAdapter.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CookieParserAdapter.html":{},"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["input.key.value",{"_index":803,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["input.level",{"_index":848,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["input.level.value",{"_index":902,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{}}}],["input.match(regexp",{"_index":2502,"title":{},"body":{"classes/UUID.html":{}}}],["input.message",{"_index":60,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/InMemoryError.html":{},"classes/ServiceErrors.html":{}}}],["input.method",{"_index":1378,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["input.name",{"_index":741,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.name.value",{"_index":761,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.num",{"_index":740,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["input.num.value",{"_index":759,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"interfaces/IConvertToObject.html":{}}}],["input.otp",{"_index":2106,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["input.password",{"_index":1955,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.password.value",{"_index":2017,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.phonenumber",{"_index":1951,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"classes/UserPrismaMapper.html":{}}}],["input.phonenumber.value",{"_index":2019,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.ref",{"_index":1769,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["input.requiredlevel",{"_index":1810,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["input.requiredlevel.value",{"_index":1727,"title":{},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["input.requiredlevel?.value",{"_index":1565,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-10.html":{}}}],["input.safesearch",{"_index":2046,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["input.tag",{"_index":1179,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["input.ttl",{"_index":1718,"title":{},"body":{"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{}}}],["input.type",{"_index":2255,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["input.type.equalto(this.type",{"_index":1787,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["input.type.value",{"_index":1720,"title":{},"body":{"interfaces/IConvertToObject-1.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{}}}],["input.updatedat",{"_index":631,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/User.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["input.updatedat.todate",{"_index":743,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["input.url",{"_index":1396,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["input.user",{"_index":2137,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.user.cpf.equalto(item.user.content.cpf",{"_index":2134,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.user.dereference",{"_index":1127,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["input.user.email.equalto(item.user.content.email",{"_index":2133,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.user.id.equalto(item.user.content.id",{"_index":2132,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["input.user.id.value",{"_index":1132,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["input.userid",{"_index":873,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"classes/InMemoryUser.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{}}}],["input.userid).exec",{"_index":858,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["input.userid.value",{"_index":899,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["input.value",{"_index":342,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/Email.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{}}}],["input.value.size",{"_index":2542,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["input?.safesearch",{"_index":806,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["inputdata",{"_index":1558,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["inseridas",{"_index":3129,"title":{},"body":{"index.html":{}}}],["inseridos",{"_index":771,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["insira",{"_index":3055,"title":{},"body":{"index.html":{}}}],["instal",{"_index":3091,"title":{},"body":{"index.html":{}}}],["instalado",{"_index":3013,"title":{},"body":{"index.html":{}}}],["instalação",{"_index":3031,"title":{},"body":{"index.html":{}}}],["instale",{"_index":3096,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1488,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["instanceof",{"_index":622,"title":{},"body":{"classes/Condominium.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/FetchAdapter.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/User.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["instancetype",{"_index":1359,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["instruções",{"_index":3030,"title":{},"body":{"index.html":{}}}],["instância",{"_index":3083,"title":{},"body":{"index.html":{}}}],["instâncias",{"_index":3024,"title":{},"body":{"index.html":{}}}],["integrar",{"_index":2882,"title":{},"body":{"index.html":{}}}],["integrations",{"_index":3052,"title":{},"body":{"index.html":{}}}],["integridade",{"_index":1337,"title":{},"body":{"classes/EntitieErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IIndexProps.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{}}}],["inteiras",{"_index":2516,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["intercept",{"_index":2310,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["intercept(content",{"_index":2312,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["interceptar",{"_index":2308,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["interceptor",{"_index":1797,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["interceptors",{"_index":1796,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["interesse",{"_index":384,"title":{},"body":{"classes/CPF.html":{}}}],["interface",{"_index":43,"title":{"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}},"body":{"classes/AdapterError.html":{},"classes/CepGateway.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/EmailAdapter.html":{},"classes/EntitieError.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"classes/LoggerAdapter.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/PrismaErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["interfaces",{"_index":1709,"title":{},"body":{"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"overview.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["internalvalue",{"_index":1355,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["internas",{"_index":2986,"title":{},"body":{"index.html":{}}}],["interno",{"_index":109,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ValueObject.html":{}}}],["invalid",{"_index":1537,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{},"miscellaneous/enumerations.html":{}}}],["invalidresult",{"_index":1536,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{},"miscellaneous/enumerations.html":{}}}],["invite",{"_index":526,"title":{"classes/Invite.html":{}},"body":{"injectables/CollectionsRefService.html":{},"controllers/CondominiumController.html":{},"injectables/CreateUserService.html":{},"classes/Entity.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"controllers/UserController.html":{},"classes/ValueObject.html":{},"interfaces/create-1.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["invite(@req",{"_index":717,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["invite(req",{"_index":662,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["invite.condominiumid",{"_index":1562,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{},"injectables/InviteFirestore.html":{}}}],["invite.email",{"_index":1560,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{},"injectables/InviteFirestore.html":{}}}],["invite.expiresat.gettime",{"_index":1675,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["invite.guard",{"_index":2598,"title":{},"body":{"controllers/UserController.html":{}}}],["invite.guard.ts",{"_index":1644,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["invite.guard.ts:21",{"_index":1648,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["invite.guard.ts:27",{"_index":1651,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["invite.guard.ts:38",{"_index":1654,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["invite.guard.ts:58",{"_index":1649,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["invite.id",{"_index":1559,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{},"injectables/InvitePrismaRepo.html":{}}}],["invite.type",{"_index":1561,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["invite.type.value",{"_index":2629,"title":{},"body":{"controllers/UserController.html":{}}}],["invitearr",{"_index":1747,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["inviteashash",{"_index":1568,"title":{},"body":{"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IValidate.html":{}}}],["invitefactory",{"_index":2842,"title":{},"body":{"miscellaneous/functions.html":{}}}],["invitefactory(input",{"_index":2860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["invitefirestore",{"_index":1482,"title":{"injectables/InviteFirestore.html":{}},"body":{"modules/FirestoreModule.html":{},"injectables/InviteFirestore.html":{}}}],["invitefirestoremapper",{"_index":1755,"title":{"classes/InviteFirestoreMapper.html":{}},"body":{"interfaces/IIncomingFirestoreInviteData.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{}}}],["invitefirestoremapper.fromfirestoretoclass(semiparsedinvite",{"_index":2245,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["inviteid",{"_index":2222,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["invitemapper",{"_index":1717,"title":{"classes/InviteMapper.html":{}},"body":{"interfaces/IConvertToObject-1.html":{},"injectables/InviteFirestore.html":{},"classes/InviteMapper.html":{}}}],["invitemapper.toobject(input.invite",{"_index":2185,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["inviteprisma",{"_index":2252,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["inviteprismamapper",{"_index":2250,"title":{"classes/InvitePrismaMapper.html":{}},"body":{"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{}}}],["inviteprismamapper.toclass(unparsedinvite",{"_index":2270,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["inviteprismamapper.toprisma(input.invite",{"_index":2267,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["inviteprismarepo",{"_index":2256,"title":{"injectables/InvitePrismaRepo.html":{}},"body":{"injectables/InvitePrismaRepo.html":{},"modules/PrismaModule.html":{}}}],["inviteref",{"_index":2207,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["inviterepo",{"_index":1120,"title":{"classes/InviteRepo.html":{}},"body":{"injectables/CreateUserService.html":{},"modules/FirestoreModule.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{},"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"modules/PrismaModule.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"overview.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces",{"_index":2070,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.create",{"_index":2058,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.find",{"_index":2064,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.remove",{"_index":2060,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.safelyfind",{"_index":2062,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["inviterepointerfaces.transfertouserresources",{"_index":2068,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["invites",{"_index":2052,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["invitesignature",{"_index":1598,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["inviteuserdto",{"_index":653,"title":{"classes/InviteUserDTO.html":{}},"body":{"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"classes/InviteUserDTO.html":{}}}],["inválida",{"_index":1508,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["inválidas",{"_index":1978,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["inválido",{"_index":202,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["invés",{"_index":2511,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["inúmeras",{"_index":2958,"title":{},"body":{"index.html":{}}}],["ioredis",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["iotpinobject",{"_index":1723,"title":{"interfaces/IOTPInObject.html":{}},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["iotpprops",{"_index":1805,"title":{"interfaces/IOTPProps.html":{}},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["iprismaerror",{"_index":1821,"title":{"interfaces/IPrismaError.html":{}},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["iprops",{"_index":15,"title":{"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{}},"body":{"classes/AdapterError.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomError.html":{},"injectables/DeleteUserService.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrors.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserDataCore.html":{},"classes/InMemoryError.html":{},"classes/Invite.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrors.html":{},"miscellaneous/functions.html":{}}}],["ipropscondominium",{"_index":568,"title":{"interfaces/IPropsCondominium.html":{}},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["ipropsuser",{"_index":1937,"title":{"interfaces/IPropsUser.html":{}},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["irefreshtokenbody",{"_index":1057,"title":{"interfaces/IRefreshTokenBody.html":{}},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-7.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{}}}],["isarray",{"_index":499,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["isarray(input['message",{"_index":504,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["isemail",{"_index":1002,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["isendmailcontent",{"_index":1306,"title":{"interfaces/ISendMailContent.html":{}},"body":{"classes/EmailAdapter.html":{},"interfaces/ISendMailContent.html":{},"classes/NodemailerAdapter.html":{}}}],["iservice",{"_index":1038,"title":{"classes/IService.html":{}},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"classes/IService.html":{},"interfaces/IUserDataCore.html":{}}}],["iserviceerrors",{"_index":1974,"title":{"interfaces/IServiceErrors.html":{}},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["isnumber",{"_index":500,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"interfaces/IBodyProps.html":{}}}],["isnumber(input['statuscode",{"_index":506,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["isolar",{"_index":2949,"title":{},"body":{"index.html":{}}}],["isoptional",{"_index":1096,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring",{"_index":501,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/IBodyProps.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["isstring(input['error",{"_index":505,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["isuccess",{"_index":1989,"title":{"interfaces/ISuccess.html":{}},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["item",{"_index":929,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["item.cep.equalto(input.key",{"_index":2043,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["item.cnpj.equalto(input.key",{"_index":2042,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["item.code",{"_index":1831,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["item.data",{"_index":2722,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["item.email.equalto(input.key",{"_index":2086,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["item.email.equalto(input.user.email",{"_index":2090,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["item.exists",{"_index":2195,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["item.id",{"_index":2077,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["item.id.equalto(input.key",{"_index":2045,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{}}}],["item.key",{"_index":2103,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["item.name.equalto(input.key",{"_index":2044,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["item.tag",{"_index":1208,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["item.user.condominiumreluser[input.condominiumid.value",{"_index":2147,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.condominiumreluser[input.invite.condominiumid.value",{"_index":2081,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["item.user.content.cpf.equalto(input.key",{"_index":2142,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.content.email.equalto(input.key",{"_index":2141,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.content.id",{"_index":2146,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.content.id.equalto(input.key",{"_index":2143,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["item.user.content.id.equalto(input.userid",{"_index":2151,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["iterable",{"_index":2509,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["iterable.next",{"_index":2536,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["iteratorresult",{"_index":2535,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["iterável",{"_index":2526,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["itself",{"_index":536,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["iuntrackableerrors",{"_index":1610,"title":{"interfaces/IUntrackableErrors.html":{}},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["iuserdatacore",{"_index":1051,"title":{"interfaces/IUserDataCore.html":{}},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["iuserinobject",{"_index":2013,"title":{"interfaces/IUserInObject.html":{}},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{}}}],["ivalidate",{"_index":1653,"title":{"interfaces/IValidate.html":{}},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["ivalidatesignedcookie",{"_index":970,"title":{"interfaces/IValidateSignedCookie.html":{}},"body":{"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IValidateSignedCookie.html":{}}}],["j",{"_index":1191,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/InviteFirestore.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"index.html":{}}}],["jest",{"_index":3194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest.config.ts",{"_index":3179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest.e2e.config.ts",{"_index":3180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest/env.ts",{"_index":3201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":3188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":3189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(atob(metadata",{"_index":483,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["json.stringify",{"_index":1594,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["json.stringify(body.message",{"_index":512,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["juntamente",{"_index":3004,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":201,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{},"dependencies.html":{}}}],["jwt.guard",{"_index":677,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["jwt.guard.ts",{"_index":157,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["jwt.guard.ts:17",{"_index":172,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["jwt.guard.ts:23",{"_index":178,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["jwt.guard.ts:35",{"_index":175,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["jwtguard",{"_index":2288,"title":{"guards/JwtGuard.html":{}},"body":{"guards/JwtGuard.html":{},"controllers/UserController.html":{}}}],["jwtservice",{"_index":170,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["key",{"_index":220,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRepo.html":{},"classes/CookieAdapter.html":{},"classes/CryptAdapter.html":{},"injectables/DeleteUserService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-9.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["lado",{"_index":3049,"title":{},"body":{"index.html":{}}}],["lateral",{"_index":3041,"title":{},"body":{"index.html":{}}}],["launchtfa",{"_index":2572,"title":{},"body":{"controllers/UserController.html":{}}}],["launchtfa(@req",{"_index":2645,"title":{},"body":{"controllers/UserController.html":{}}}],["launchtfa(req",{"_index":2583,"title":{},"body":{"controllers/UserController.html":{}}}],["launchtfadto",{"_index":466,"title":{"classes/LaunchTFADTO.html":{}},"body":{"guards/CheckTFACodeGuard.html":{},"classes/LaunchTFADTO.html":{}}}],["layer",{"_index":100,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["layersenum",{"_index":86,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["layersenum.adapter",{"_index":101,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["layersenum.auth",{"_index":1638,"title":{},"body":{"classes/GuardErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["layersenum.controller",{"_index":2378,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["layersenum.database",{"_index":1211,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IPrismaError.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{}}}],["layersenum.dto",{"_index":511,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{},"controllers/UserController.html":{}}}],["layersenum.entitie",{"_index":1330,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["layersenum.gateway",{"_index":1530,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["layersenum.interceptors",{"_index":2334,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["layersenum.services",{"_index":1988,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["layersenum.unknown",{"_index":1617,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["legend",{"_index":115,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["lembre",{"_index":2999,"title":{},"body":{"index.html":{}}}],["ler",{"_index":1624,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-12.html":{}}}],["levantar",{"_index":3011,"title":{},"body":{"index.html":{}}}],["level",{"_index":672,"title":{"classes/Level.html":{}},"body":{"controllers/CondominiumController.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomError.html":{},"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"injectables/GenInviteService.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"classes/Invite.html":{},"classes/Level.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["level(0",{"_index":850,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["level(1",{"_index":708,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["level(2",{"_index":699,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["level(input",{"_index":874,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["level(input.requiredlevel",{"_index":1725,"title":{},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["level(input.type",{"_index":1778,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["level(this.requiredlevel.value",{"_index":1812,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["license",{"_index":3167,"title":{},"body":{"properties.html":{}}}],["lidar",{"_index":1364,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["limit",{"_index":1706,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["limit(1",{"_index":2191,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["link",{"_index":1578,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["linked",{"_index":2082,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["links",{"_index":2930,"title":{},"body":{"index.html":{}}}],["lint",{"_index":3115,"title":{},"body":{"index.html":{}}}],["linux",{"_index":3033,"title":{},"body":{"index.html":{}}}],["listas",{"_index":2515,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["literal",{"_index":1556,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IInMemoryUserContainer.html":{},"miscellaneous/typealiases.html":{}}}],["lo",{"_index":3092,"title":{},"body":{"index.html":{}}}],["locais",{"_index":3118,"title":{},"body":{"index.html":{}}}],["localhostlogo",{"_index":3094,"title":{},"body":{"index.html":{}}}],["localidade",{"_index":1996,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["log",{"_index":1265,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["log(`log",{"_index":1415,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["log(input",{"_index":1281,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["logger",{"_index":78,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["logger/index.ts",{"_index":1405,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:16",{"_index":1408,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:23",{"_index":1413,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:30",{"_index":1406,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:37",{"_index":1410,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:5",{"_index":1412,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:50",{"_index":1407,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:63",{"_index":1409,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["logger/index.ts:9",{"_index":1411,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["loggeradapter",{"_index":76,"title":{"classes/LoggerAdapter.html":{}},"body":{"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["login",{"_index":1603,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"classes/LoginDTO.html":{},"controllers/UserController.html":{},"index.html":{}}}],["login(res",{"_index":2587,"title":{},"body":{"controllers/UserController.html":{}}}],["logindto",{"_index":434,"title":{"classes/LoginDTO.html":{}},"body":{"guards/CheckPasswordGuard.html":{},"classes/LoginDTO.html":{}}}],["loginterceptor",{"_index":1840,"title":{"injectables/LogInterceptor.html":{}},"body":{"interfaces/IProps.html":{},"injectables/LogInterceptor.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["loginterceptor(this.logger",{"_index":1885,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["logo",{"_index":2966,"title":{},"body":{"index.html":{}}}],["logradouro",{"_index":1997,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["logs",{"_index":1223,"title":{},"body":{"classes/DateFormats.html":{},"injectables/LogInterceptor.html":{}}}],["loop",{"_index":400,"title":{},"body":{"classes/CPF.html":{}}}],["ltimos",{"_index":388,"title":{},"body":{"classes/CPF.html":{}}}],["mailtrap",{"_index":2897,"title":{},"body":{"index.html":{}}}],["maior",{"_index":1023,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["mais",{"_index":2967,"title":{},"body":{"index.html":{}}}],["mal",{"_index":1390,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["malformados",{"_index":1331,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["malformed",{"_index":1176,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-16.html":{},"classes/Index.html":{},"miscellaneous/enumerations.html":{}}}],["malformedref",{"_index":1175,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["manager",{"_index":2925,"title":{},"body":{"index.html":{}}}],["maneira",{"_index":2940,"title":{},"body":{"index.html":{}}}],["manipular",{"_index":1767,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["manter",{"_index":1339,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"index.html":{}}}],["manualmente",{"_index":3022,"title":{},"body":{"index.html":{}}}],["many",{"_index":1157,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["mapear",{"_index":1153,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{},"index.html":{}}}],["mapeia",{"_index":727,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["mapkeybasedonlevel",{"_index":1647,"title":{},"body":{"guards/HmacInviteGuard.html":{}}}],["mapkeybasedonlevel(input",{"_index":1650,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["mapper/condominium",{"_index":795,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["mapper/condominiumreluser",{"_index":1444,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{},"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["mapper/condominiums",{"_index":1429,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["mapper/invite",{"_index":1454,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{}}}],["mapper/user",{"_index":2266,"title":{},"body":{"injectables/InvitePrismaRepo.html":{},"injectables/UserPrismaRepo.html":{}}}],["mapper/users",{"_index":1466,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{},"injectables/UsersFirestore.html":{}}}],["matando",{"_index":2972,"title":{},"body":{"index.html":{}}}],["matching",{"_index":62,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":381,"title":{},"body":{"classes/CPF.html":{}}}],["mau",{"_index":1521,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["max",{"_index":1003,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["max(1000",{"_index":1456,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{}}}],["max(condominiumdtorules.name.maxlength",{"_index":1436,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["max(condominiumdtorules.num.maxlength",{"_index":1018,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{}}}],["max(condominiumreluserdtorules.apartmentnumber.maxlength",{"_index":1110,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["max(condominiumreluserdtorules.level.maxlength",{"_index":1448,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{}}}],["max(userdtorules.name.maxlength",{"_index":1468,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["max(userdtorules.password.maxlength",{"_index":1470,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["max(userdtorules.phonenumber.maxlength",{"_index":1473,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["maxage",{"_index":2613,"title":{},"body":{"controllers/UserController.html":{}}}],["maximum",{"_index":1159,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["maximumcondominiumreluser",{"_index":1158,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["maxlength",{"_index":598,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["maxlength(condominiumdtorules.cep.maxlength",{"_index":1016,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["maxlength(condominiumdtorules.cnpj.maxlength",{"_index":1025,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["maxlength(condominiumdtorules.name.maxlength",{"_index":1010,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["maxlength(condominiumreluserdtorules.block.maxlength",{"_index":1109,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlength(userdtorules.cpf.maxlength",{"_index":1107,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlength(userdtorules.email.maxlength",{"_index":1007,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["maxlength(userdtorules.name.maxlength",{"_index":1097,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlength(userdtorules.password.maxlength",{"_index":1101,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["maxlength(userdtorules.phonenumber.maxlength",{"_index":1113,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlisteners",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["memory",{"_index":1927,"title":{},"body":{"interfaces/IProps-13.html":{},"classes/InMemoryError.html":{}}}],["menor",{"_index":1019,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["menos",{"_index":1299,"title":{},"body":{"classes/Email.html":{}}}],["mensagem",{"_index":50,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["menu",{"_index":3040,"title":{},"body":{"index.html":{}}}],["mesmo",{"_index":1253,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-9.html":{},"classes/PrismaErrorFilter.html":{},"index.html":{}}}],["message",{"_index":44,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["metadata",{"_index":471,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"dependencies.html":{}}}],["metadata}.${btoa(code",{"_index":478,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["metadata}.${btoa(signature",{"_index":481,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["method",{"_index":965,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["methods",{"_index":73,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IProps.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["metódo",{"_index":2518,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["migrate",{"_index":3088,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":3087,"title":{},"body":{"index.html":{}}}],["min",{"_index":1004,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["min(0",{"_index":1459,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{}}}],["min(condominiumdtorules.name.minlength",{"_index":1435,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["min(condominiumdtorules.num.minlength",{"_index":1022,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{}}}],["min(condominiumreluserdtorules.apartmentnumber.minlength",{"_index":1111,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["min(condominiumreluserdtorules.level.minlength",{"_index":1447,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{}}}],["min(userdtorules.name.minlength",{"_index":1467,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["min(userdtorules.password.minlength",{"_index":1469,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["min(userdtorules.phonenumber.minlength",{"_index":1472,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["minimamente",{"_index":3019,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":597,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/LoginDTO.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["minlength(condominiumdtorules.cep.minlength",{"_index":1015,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["minlength(condominiumdtorules.cnpj.minlength",{"_index":1027,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["minlength(condominiumdtorules.name.minlength",{"_index":1012,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["minlength(userdtorules.cpf.minlength",{"_index":1105,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength(userdtorules.name.minlength",{"_index":1099,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength(userdtorules.password.minlength",{"_index":1103,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["minlength(userdtorules.phonenumber.minlength",{"_index":1115,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minutes",{"_index":1233,"title":{},"body":{"classes/DateFormats.html":{}}}],["miscellaneous",{"_index":2819,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3168,"title":{},"body":{"properties.html":{}}}],["mockotp:${input.email.value",{"_index":2102,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["modificações",{"_index":3134,"title":{},"body":{"index.html":{}}}],["module",{"_index":111,"title":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{}},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["modulefileextensions",{"_index":3187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["morada",{"_index":2867,"title":{},"body":{"index.html":{}}}],["moradaapp",{"_index":3170,"title":{},"body":{"properties.html":{}}}],["moradores",{"_index":2879,"title":{},"body":{"index.html":{}}}],["mostrado",{"_index":1221,"title":{},"body":{"classes/DateFormats.html":{}}}],["mudar",{"_index":1870,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["muita",{"_index":3068,"title":{},"body":{"index.html":{}}}],["muitas",{"_index":2485,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{},"index.html":{}}}],["mydbdocumentação",{"_index":3148,"title":{},"body":{"index.html":{}}}],["máquina",{"_index":2938,"title":{},"body":{"index.html":{}}}],["máximo",{"_index":1008,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["método",{"_index":751,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRepo.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"injectables/LogInterceptor.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["mínimo",{"_index":1013,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["módulo",{"_index":379,"title":{},"body":{"classes/CPF.html":{}}}],["n[stack",{"_index":1294,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["na",{"_index":21,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{},"index.html":{}}}],["name",{"_index":37,"title":{"classes/Name.html":{}},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"miscellaneous/functions.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{},"miscellaneous/variables.html":{}}}],["name(content.name",{"_index":606,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["name(input",{"_index":634,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["name(input.name",{"_index":1942,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["name_sender",{"_index":3062,"title":{},"body":{"index.html":{}}}],["namespace",{"_index":931,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["nas",{"_index":1341,"title":{},"body":{"classes/Entity.html":{},"classes/Name.html":{},"classes/ValueObject.html":{}}}],["ndice",{"_index":1773,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["ndices",{"_index":1768,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["necessidade",{"_index":2973,"title":{},"body":{"index.html":{}}}],["necessário",{"_index":29,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["necessários",{"_index":3111,"title":{},"body":{"index.html":{}}}],["neighborhood",{"_index":413,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["nenhum",{"_index":2455,"title":{},"body":{"guards/RefreshTokenGuard.html":{},"classes/UUIDGroup.html":{}}}],["nestas",{"_index":3023,"title":{},"body":{"index.html":{}}}],["nestexpressapplication",{"_index":1837,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["nestfactory",{"_index":1835,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["nestfactory.create",{"_index":1864,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["nestinterceptor",{"_index":2317,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["nestjs",{"_index":2870,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":89,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"modules/AppModule.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"injectables/CollectionsRefService.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"modules/HttpModule.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1702,"title":{},"body":{"modules/HttpModule.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":184,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"modules/HttpModule.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1838,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":1001,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/IProps.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":1700,"title":{},"body":{"modules/HttpModule.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":200,"title":{},"body":{"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/ISuccess.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["newlistener",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["next",{"_index":2313,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["next.handle().pipe",{"_index":2335,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["ninguém",{"_index":1579,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{}}}],["node",{"_index":2924,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["node:crypto",{"_index":310,"title":{},"body":{"classes/BcryptAdapter.html":{},"classes/UUID.html":{}}}],["nodejs",{"_index":3085,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":2358,"title":{},"body":{"classes/NodemailerAdapter.html":{},"dependencies.html":{},"index.html":{}}}],["nodemailer/nodemaileradapter",{"_index":133,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["nodemaileradapter",{"_index":132,"title":{"classes/NodemailerAdapter.html":{}},"body":{"modules/AdaptersModule.html":{},"classes/NodemailerAdapter.html":{}}}],["nome",{"_index":330,"title":{},"body":{"classes/Block.html":{},"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/Name.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/safeSearch.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/transferToUserResources.html":{}}}],["nos",{"_index":456,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"classes/Entity.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"classes/IService.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["nossa",{"_index":3152,"title":{},"body":{"index.html":{}}}],["nossas",{"_index":2922,"title":{},"body":{"index.html":{}}}],["nosso",{"_index":2883,"title":{},"body":{"index.html":{}}}],["nossos",{"_index":2886,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":2375,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["notfoundfilter",{"_index":1853,"title":{"classes/NotFoundFilter.html":{}},"body":{"interfaces/IProps.html":{},"classes/NotFoundFilter.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["notfoundfilter(this.logger",{"_index":1900,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["novo",{"_index":1032,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateUserService.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-8.html":{}}}],["npm",{"_index":3036,"title":{},"body":{"index.html":{}}}],["null",{"_index":835,"title":{},"body":{"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateUserService.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-8.html":{},"classes/ValueObject.html":{}}}],["nullish",{"_index":1367,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["nullorundefined",{"_index":1349,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["nulos",{"_index":1362,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["num",{"_index":559,"title":{"classes/Num.html":{}},"body":{"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CreateCondominiumDTO.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IPropsCondominium.html":{},"classes/Num.html":{},"miscellaneous/variables.html":{}}}],["num(content.num",{"_index":608,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["num(input",{"_index":639,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AdapterError.html":{},"classes/ApartmentNumber.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-2.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IValidate.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/Level.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/variables.html":{}}}],["number(process.env.refresh_token_exp",{"_index":2611,"title":{},"body":{"controllers/UserController.html":{}}}],["nuvem",{"_index":2960,"title":{},"body":{"index.html":{}}}],["não",{"_index":212,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["nível",{"_index":2301,"title":{},"body":{"classes/Level.html":{}}}],["número",{"_index":240,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Num.html":{},"classes/PhoneNumber.html":{}}}],["número'})@max(undefined.maxlength",{"_index":997,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["números",{"_index":395,"title":{},"body":{"classes/CPF.html":{}}}],["o",{"_index":26,"title":{},"body":{"classes/AdapterError.html":{},"classes/CPF.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIndexProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-7.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["object",{"_index":419,"title":{},"body":{"classes/CepGatewaySpy.html":{},"injectables/CollectionsRefService.html":{},"classes/CryptSpy.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"interfaces/IProps-3.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["object.values(constraints",{"_index":1921,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["objects",{"_index":1325,"title":{},"body":{"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["objeto",{"_index":734,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IUserInObject.html":{},"classes/Index.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{}}}],["objetos",{"_index":1970,"title":{},"body":{"classes/IService.html":{}}}],["obrigando",{"_index":1967,"title":{},"body":{"classes/IService.html":{}}}],["observable",{"_index":2316,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["obtenção",{"_index":2918,"title":{},"body":{"index.html":{}}}],["ocorreu",{"_index":3101,"title":{},"body":{"index.html":{}}}],["omissão",{"_index":2631,"title":{},"body":{"controllers/UserController.html":{}}}],["omit",{"_index":1064,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["omitidos",{"_index":2634,"title":{},"body":{"controllers/UserController.html":{}}}],["onapplicationshutdown",{"_index":1487,"title":{},"body":{"injectables/FirestoreService.html":{},"injectables/PrismaService.html":{}}}],["onde",{"_index":2384,"title":{},"body":{"classes/Num.html":{}}}],["one",{"_index":2083,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["onmoduledestroy",{"_index":2430,"title":{},"body":{"injectables/PrismaService.html":{}}}],["opcional",{"_index":927,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["operacional",{"_index":3032,"title":{},"body":{"index.html":{}}}],["option",{"_index":844,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":39,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"classes/IService.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{}}}],["opção",{"_index":3051,"title":{},"body":{"index.html":{}}}],["or(new",{"_index":849,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["origin",{"_index":1869,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["orquestrador",{"_index":2980,"title":{},"body":{"index.html":{}}}],["orstatement",{"_index":1357,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["orstatement(alternativevalue",{"_index":1369,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["os",{"_index":387,"title":{},"body":{"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DatabaseCustomError.html":{},"injectables/DeleteUserService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"injectables/LogInterceptor.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrors.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["otp",{"_index":1347,"title":{"classes/OTP.html":{}},"body":{"classes/Entity.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"classes/InMemoryOTP.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["otpfactory",{"_index":2843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otpfactory(input",{"_index":2862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otpmapper",{"_index":1724,"title":{"classes/OTPMapper.html":{}},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["otprepo",{"_index":1733,"title":{"classes/OTPRepo.html":{}},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/InMemoryOTP.html":{},"classes/OTPRepo.html":{}}}],["otps",{"_index":2094,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["ou",{"_index":350,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/Entity.html":{},"classes/IService.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["out",{"_index":128,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["outras",{"_index":2988,"title":{},"body":{"index.html":{}}}],["outro",{"_index":1201,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"controllers/UserController.html":{},"index.html":{}}}],["overview",{"_index":3164,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p1003",{"_index":1829,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["p1009",{"_index":1828,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["p2002",{"_index":1827,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["p2025",{"_index":1825,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["package",{"_index":2779,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padronização",{"_index":1966,"title":{},"body":{"classes/IService.html":{}}}],["padrão",{"_index":1340,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"index.html":{}}}],["para",{"_index":66,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIndexProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-5.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["param",{"_index":47,"title":{},"body":{"classes/AdapterError.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DateFormats.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{}}}],["parseddata",{"_index":2747,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parsedinvite",{"_index":2244,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["parsedmetadata",{"_index":482,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["parsedmetadata?.exp",{"_index":484,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["parsedtoken",{"_index":2458,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["parseduser",{"_index":2735,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parseduser.cpf",{"_index":2762,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parseduser.email",{"_index":2760,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parseduser.id",{"_index":2757,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["parseint(process.env.access_token_exp",{"_index":1062,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["parseint(process.env.host_port_sender",{"_index":2363,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["parseint(process.env.refresh_token_exp",{"_index":1075,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"controllers/UserController.html":{}}}],["parser",{"_index":978,"title":{},"body":{"classes/CookieParserAdapter.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"dependencies.html":{}}}],["parser/cookieparseradapter",{"_index":141,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["parser/cookieparseradapter.ts",{"_index":974,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["parser/cookieparseradapter.ts:9",{"_index":976,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["parte",{"_index":2914,"title":{},"body":{"index.html":{}}}],["partial",{"_index":3176,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pass",{"_index":2365,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["pass_sender",{"_index":3066,"title":{},"body":{"index.html":{}}}],["passados",{"_index":2965,"title":{},"body":{"index.html":{}}}],["passar",{"_index":2626,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["passport",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["passthrough",{"_index":2624,"title":{},"body":{"controllers/UserController.html":{}}}],["password",{"_index":431,"title":{"classes/Password.html":{}},"body":{"guards/CheckPasswordGuard.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserInObject.html":{},"classes/LoginDTO.html":{},"classes/Password.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/variables.html":{}}}],["password(body.password",{"_index":448,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["password(hashpass",{"_index":1129,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["password(input",{"_index":1960,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["password(input.password",{"_index":1943,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["password.value",{"_index":441,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["pasta",{"_index":3076,"title":{},"body":{"index.html":{}}}],["patch",{"_index":1678,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["path",{"_index":2614,"title":{},"body":{"controllers/UserController.html":{}}}],["pathstomodulenamemapper(compileroptions.paths",{"_index":3203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pegando",{"_index":386,"title":{},"body":{"classes/CPF.html":{}}}],["pela",{"_index":2909,"title":{},"body":{"index.html":{}}}],["pelo",{"_index":1523,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"index.html":{}}}],["pelos",{"_index":33,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["perfeito",{"_index":2895,"title":{},"body":{"index.html":{}}}],["performant",{"_index":2923,"title":{},"body":{"index.html":{}}}],["permissões",{"_index":163,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["permite",{"_index":2948,"title":{},"body":{"index.html":{}}}],["pesquisa",{"_index":921,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["pesquisar",{"_index":916,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["phonenumber",{"_index":1060,"title":{"classes/PhoneNumber.html":{}},"body":{"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/variables.html":{}}}],["phonenumber(input",{"_index":1964,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["phonenumber(input.phonenumber",{"_index":1945,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["plaintoclass",{"_index":438,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["plaintoclass(inviteuserdto",{"_index":1669,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["plaintoclass(launchtfadto",{"_index":488,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["plaintoclass(logindto",{"_index":445,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["planos",{"_index":3158,"title":{},"body":{"index.html":{}}}],["plataforma",{"_index":2904,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":2920,"title":{},"body":{"index.html":{}}}],["pode",{"_index":922,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/Entity.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["podendo",{"_index":2983,"title":{},"body":{"index.html":{}}}],["pois",{"_index":1397,"title":{},"body":{"classes/FetchAdapter.html":{},"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{},"index.html":{}}}],["poisoned",{"_index":1539,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{},"miscellaneous/enumerations.html":{}}}],["poisonedcontent",{"_index":1538,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{},"miscellaneous/enumerations.html":{}}}],["por",{"_index":917,"title":{},"body":{"classes/CondominiumRepo.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"classes/IService.html":{},"interfaces/IUserDataCore.html":{},"classes/InviteRepo.html":{},"injectables/LogInterceptor.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["port",{"_index":2362,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["portas",{"_index":2987,"title":{},"body":{"index.html":{}}}],["possibleerrors",{"_index":1183,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["possui",{"_index":1335,"title":{},"body":{"classes/EntitieErrorFilter.html":{},"classes/UUIDGroup.html":{},"index.html":{}}}],["possuir",{"_index":2968,"title":{},"body":{"index.html":{}}}],["possível",{"_index":1251,"title":{},"body":{"injectables/DeleteUserService.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"injectables/InvitePrismaRepo.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ValueObject.html":{}}}],["post",{"_index":650,"title":{},"body":{"controllers/CondominiumController.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"controllers/UserController.html":{}}}],["post(':condominiumid/invite",{"_index":654,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["post('accept",{"_index":2623,"title":{},"body":{"controllers/UserController.html":{}}}],["post('launch",{"_index":2643,"title":{},"body":{"controllers/UserController.html":{}}}],["post('login",{"_index":2655,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres",{"_index":2905,"title":{},"body":{"index.html":{}}}],["postman",{"_index":3156,"title":{},"body":{"index.html":{}}}],["precisa",{"_index":985,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"index.html":{}}}],["predefinidas",{"_index":3002,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":150,"title":{},"body":{"controllers/AdminController.html":{},"controllers/CondominiumController.html":{},"controllers/SuperAdminController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["preparação",{"_index":2955,"title":{},"body":{"index.html":{}}}],["prettify",{"_index":1217,"title":{},"body":{"classes/DateFormats.html":{}}}],["prettify(date",{"_index":1218,"title":{},"body":{"classes/DateFormats.html":{}}}],["prev",{"_index":401,"title":{},"body":{"classes/CPF.html":{}}}],["previamente",{"_index":2995,"title":{},"body":{"index.html":{}}}],["primeiramente",{"_index":3008,"title":{},"body":{"index.html":{}}}],["prioritária",{"_index":3028,"title":{},"body":{"index.html":{}}}],["prisma",{"_index":768,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IPrismaError.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/PrismaErrorFilter.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":1830,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["prisma.service",{"_index":794,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InvitePrismaRepo.html":{},"modules/PrismaModule.html":{},"injectables/UserPrismaRepo.html":{}}}],["prisma/client",{"_index":775,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IPrismaError.html":{},"classes/InvitePrismaMapper.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/UserPrismaMapper.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":2428,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaerrorfilter",{"_index":1824,"title":{"classes/PrismaErrorFilter.html":{}},"body":{"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"classes/PrismaErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["prismaerrorfilter(this.logger",{"_index":1891,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["prismamodule",{"_index":2418,"title":{"modules/PrismaModule.html":{}},"body":{"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":780,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InvitePrismaRepo.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserPrismaRepo.html":{},"overview.html":{}}}],["private",{"_index":167,"title":{},"body":{"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"guards/JwtGuard.html":{},"classes/OTP.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UsersFirestore.html":{}}}],["process.env.access_token_key",{"_index":198,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["process.env.email_sender",{"_index":2364,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["process.env.gcp_project",{"_index":1497,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["process.env.host_sender",{"_index":2361,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["process.env.invite_admin_token_key",{"_index":710,"title":{},"body":{"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["process.env.invite_super_admin_token_key",{"_index":703,"title":{},"body":{"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["process.env.invite_token_key",{"_index":1570,"title":{},"body":{"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IValidate.html":{}}}],["process.env.logs",{"_index":1292,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["process.env.name_sender",{"_index":1573,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{}}}],["process.env.node_env",{"_index":2617,"title":{},"body":{"controllers/UserController.html":{}}}],["process.env.not_send_emails",{"_index":2359,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["process.env.pass_sender",{"_index":2366,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["process.env.project_name",{"_index":1574,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{}}}],["process.env.refresh_token_key",{"_index":1081,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{}}}],["process.env.tfa_token_key",{"_index":479,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["processo",{"_index":1587,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"classes/LaunchTFADTO.html":{}}}],["processos",{"_index":3114,"title":{},"body":{"index.html":{}}}],["processtokens",{"_index":2573,"title":{},"body":{"controllers/UserController.html":{}}}],["processtokens(res",{"_index":2590,"title":{},"body":{"controllers/UserController.html":{}}}],["procurando",{"_index":2379,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["production",{"_index":2618,"title":{},"body":{"controllers/UserController.html":{}}}],["produção",{"_index":3025,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1496,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["projetada",{"_index":2871,"title":{},"body":{"index.html":{}}}],["projeto",{"_index":2874,"title":{},"body":{"index.html":{}}}],["promise",{"_index":176,"title":{},"body":{"guards/AdminJwt.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/EchoguardAdapter.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/ICheckCep.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-10.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/LoggerAdapter.html":{},"classes/NodemailerAdapter.html":{},"classes/OTPRepo.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{}}}],["promise((resolve",{"_index":312,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["prontos",{"_index":2970,"title":{},"body":{"index.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AdapterError.html":{},"classes/BcryptAdapter.html":{},"classes/CepGatewaySpy.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/OTP.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"properties.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["props",{"_index":557,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryContainer.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["prove",{"_index":530,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["provedor",{"_index":2992,"title":{},"body":{"index.html":{}}}],["provedora",{"_index":2910,"title":{},"body":{"index.html":{}}}],["provedoras",{"_index":2959,"title":{},"body":{"index.html":{}}}],["provide",{"_index":144,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{}}}],["providers",{"_index":118,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["provisionadas",{"_index":2998,"title":{},"body":{"index.html":{}}}],["psql",{"_index":3145,"title":{},"body":{"index.html":{}}}],["public",{"_index":233,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/Email.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{}}}],["put",{"_index":1679,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["qu",{"_index":2926,"title":{},"body":{"index.html":{}}}],["qualquer",{"_index":3061,"title":{},"body":{"index.html":{}}}],["quanto",{"_index":3155,"title":{},"body":{"index.html":{}}}],["que",{"_index":242,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CondominiumRepo.html":{},"classes/Email.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-12.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"classes/NotFoundFilter.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["queries",{"_index":2727,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["query",{"_index":802,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/InviteFirestore.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["query.exec",{"_index":2733,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["query.get",{"_index":2237,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["query.id",{"_index":2689,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["query.trigger",{"_index":2731,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["queryresult",{"_index":2236,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["queryresult.foreach((doc",{"_index":2239,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["questão",{"_index":352,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Num.html":{},"index.html":{}}}],["quiser",{"_index":3126,"title":{},"body":{"index.html":{}}}],["randomuuid",{"_index":1807,"title":{},"body":{"interfaces/IOTPProps.html":{},"injectables/LogInterceptor.html":{},"classes/OTP.html":{},"classes/UUID.html":{}}}],["rapidamente",{"_index":2971,"title":{},"body":{"index.html":{}}}],["rastramento",{"_index":1534,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{}}}],["rastreável",{"_index":32,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["rawemail",{"_index":692,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["rawhours",{"_index":1229,"title":{},"body":{"classes/DateFormats.html":{}}}],["rawminutes",{"_index":1227,"title":{},"body":{"classes/DateFormats.html":{}}}],["rawseconds",{"_index":1225,"title":{},"body":{"classes/DateFormats.html":{}}}],["rawtoken",{"_index":205,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["rawtoken?.split",{"_index":214,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["readonly",{"_index":11,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryError.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Name.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["realizadas",{"_index":2486,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["realizar",{"_index":1986,"title":{},"body":{"interfaces/IServiceErrors.html":{},"injectables/LogInterceptor.html":{},"classes/ServiceErrorFilter.html":{},"index.html":{}}}],["received",{"_index":2004,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["reconhecível",{"_index":1402,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["record",{"_index":1750,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/IService.html":{},"classes/InMemoryContainer.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/typealiases.html":{}}}],["recurso",{"_index":1985,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/NotFoundFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["recursos",{"_index":1255,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["recusrsos",{"_index":1983,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["redes",{"_index":2985,"title":{},"body":{"index.html":{}}}],["redis",{"_index":3018,"title":{},"body":{"index.html":{}}}],["reduzindo",{"_index":2939,"title":{},"body":{"index.html":{}}}],["ref",{"_index":957,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"interfaces/IIndexProps.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{}}}],["reference",{"_index":1174,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-16.html":{},"classes/Index.html":{},"miscellaneous/enumerations.html":{}}}],["referencias",{"_index":531,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["reflect",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["reflost",{"_index":1173,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["refresh",{"_index":1712,"title":{},"body":{"interfaces/IAccessTokenBody.html":{},"interfaces/IRefreshTokenBody.html":{},"miscellaneous/enumerations.html":{}}}],["refreshjwtbody",{"_index":1076,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["refreshtoken",{"_index":1084,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-7.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["refreshtoken(res",{"_index":2592,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtokencontent",{"_index":2462,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["refreshtokenguard",{"_index":2439,"title":{"guards/RefreshTokenGuard.html":{}},"body":{"guards/RefreshTokenGuard.html":{},"controllers/UserController.html":{}}}],["refs",{"_index":950,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["refs.condominiumrelusercollection",{"_index":2763,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["refs.core",{"_index":2231,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["regexp",{"_index":2494,"title":{},"body":{"classes/UUID.html":{}}}],["registry",{"_index":1876,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:app/adapters/adapter.module",{"_index":1689,"title":{},"body":{"modules/HttpModule.html":{}}}],["registry:app/adapters/cookie",{"_index":2449,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["registry:app/adapters/crypt",{"_index":433,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateUserService.html":{},"classes/CryptSpy.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{}}}],["registry:app/adapters/email",{"_index":1312,"title":{},"body":{"classes/EmailSpy.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{}}}],["registry:app/adapters/http",{"_index":1999,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["registry:app/adapters/logger",{"_index":87,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"injectables/LogInterceptor.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["registry:app/auth/guards/admin",{"_index":682,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["registry:app/auth/guards/checkpassword.guard",{"_index":2599,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/checktfacode.guard",{"_index":2600,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/hmac",{"_index":2597,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/jwt.guard",{"_index":2603,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/refreshtoken.guard",{"_index":2602,"title":{},"body":{"controllers/UserController.html":{}}}],["registry:app/auth/guards/super",{"_index":676,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["registry:app/auth/tokentypes",{"_index":1059,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["registry:app/entities/condominium",{"_index":356,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IProps-6.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/Num.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["registry:app/entities/condominiumreluser",{"_index":257,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IProps-8.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"classes/Level.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["registry:app/entities/entities",{"_index":255,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-3.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{}}}],["registry:app/entities/invite",{"_index":1124,"title":{},"body":{"injectables/CreateUserService.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"controllers/UserController.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["registry:app/entities/otp",{"_index":1722,"title":{},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IOTPInObject.html":{},"classes/InMemoryOTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{}}}],["registry:app/entities/user",{"_index":291,"title":{},"body":{"classes/Auth.html":{},"classes/CPF.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["registry:app/entities/vo",{"_index":192,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRepo.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryUser.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["registry:app/errors/adapter",{"_index":88,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/FetchAdapter.html":{}}}],["registry:app/errors/entities",{"_index":253,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/Email.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["registry:app/errors/guard",{"_index":189,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["registry:app/errors/services",{"_index":1249,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["registry:app/gateways/cep.gateway",{"_index":422,"title":{},"body":{"classes/CepGatewaySpy.html":{},"injectables/CreateCondominiumService.html":{},"modules/GatewayModule.html":{},"interfaces/IProps-6.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["registry:app/mapper/condominium",{"_index":671,"title":{},"body":{"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"injectables/CondominiumsFirestore.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["registry:app/mapper/condominiumreluser",{"_index":891,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["registry:app/mapper/invite",{"_index":1754,"title":{},"body":{"interfaces/IIncomingFirestoreInviteData.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{}}}],["registry:app/mapper/user",{"_index":1759,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"injectables/InviteFirestore.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{}}}],["registry:app/repositories/condominium",{"_index":793,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/CreateCondominiumService.html":{},"modules/FirestoreModule.html":{},"interfaces/IProps-6.html":{},"classes/InMemoryCondominium.html":{},"modules/PrismaModule.html":{}}}],["registry:app/repositories/invite",{"_index":1123,"title":{},"body":{"injectables/CreateUserService.html":{},"modules/FirestoreModule.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{},"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"modules/PrismaModule.html":{}}}],["registry:app/repositories/otp",{"_index":2100,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["registry:app/repositories/user",{"_index":187,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/DeleteUserService.html":{},"modules/FirestoreModule.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-9.html":{},"classes/InMemoryUser.html":{},"guards/JwtGuard.html":{},"modules/PrismaModule.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["registry:app/services/createcondominium.service",{"_index":668,"title":{},"body":{"controllers/CondominiumController.html":{},"modules/HttpModule.html":{}}}],["registry:app/services/createtoken.service",{"_index":1691,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:app/services/createuser.service",{"_index":1690,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:app/services/deleteuser.service",{"_index":681,"title":{},"body":{"controllers/CondominiumController.html":{},"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:app/services/geninvite.service",{"_index":674,"title":{},"body":{"controllers/CondominiumController.html":{},"modules/HttpModule.html":{}}}],["registry:app/services/gentfa.service",{"_index":1697,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:app/services/getcondominiumrel.service",{"_index":1704,"title":{},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["registry:infra/gateways/errors",{"_index":1528,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["registry:infra/http/dto/inviteuser.dto",{"_index":1655,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["registry:infra/http/dto/launch",{"_index":467,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["registry:infra/http/dto/login.dto",{"_index":435,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["registry:infra/http/filters/errors/adapter.filter",{"_index":1849,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/classvalidator.filter",{"_index":1850,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/databasecustomerror.filter",{"_index":1857,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/gateways.filter",{"_index":1847,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/generic.filter",{"_index":1843,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/guard.filter",{"_index":1848,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/notfound.filter",{"_index":1854,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/prisma.filter",{"_index":1858,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/services.filter",{"_index":1845,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/throttler.filter",{"_index":1852,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/filters/errors/vo.filter",{"_index":1846,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/http/interceptors/logger.interceptor",{"_index":1841,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["registry:infra/storages/db/error",{"_index":1205,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["registry:infra/storages/db/firestore/firestore.module",{"_index":1703,"title":{},"body":{"modules/HttpModule.html":{}}}],["registry:tests/errors/inmemoryerror",{"_index":2031,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["registry:utils/class",{"_index":1346,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["registry:utils/convertvalidatorerr",{"_index":437,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["registry:utils/dateformats",{"_index":2318,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["registry:utils/generatestringcodecontent",{"_index":470,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IValidate.html":{}}}],["registry:utils/replace",{"_index":890,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{}}}],["registryapi",{"_index":3184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registryapibootstrap",{"_index":1859,"title":{"classes/RegistryAPIBootstrap.html":{}},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"miscellaneous/variables.html":{}}}],["reject",{"_index":313,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["reject(err",{"_index":322,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["relacionadas",{"_index":3000,"title":{},"body":{"index.html":{}}}],["relação",{"_index":1626,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-12.html":{},"miscellaneous/functions.html":{}}}],["remove",{"_index":2285,"title":{"interfaces/remove.html":{},"interfaces/remove-1.html":{}},"body":{"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["removelistener",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["renovação",{"_index":1046,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["repetido",{"_index":1826,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{},"classes/UUIDGroup.html":{}}}],["repositories/condominium.service",{"_index":2423,"title":{},"body":{"modules/PrismaModule.html":{}}}],["repositories/condominiums",{"_index":1481,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["repositories/invite",{"_index":1483,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["repositories/invite.service",{"_index":2426,"title":{},"body":{"modules/PrismaModule.html":{}}}],["repositories/user.service",{"_index":2425,"title":{},"body":{"modules/PrismaModule.html":{}}}],["repositories/users",{"_index":1480,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["req",{"_index":203,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["req.body",{"_index":446,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["req.headers.cookie",{"_index":2454,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["req.headers?.authorization?.split('bearer",{"_index":486,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["req.inmemorydata",{"_index":451,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{}}}],["req.inmemorydata.invite",{"_index":2625,"title":{},"body":{"controllers/UserController.html":{}}}],["req.inmemorydata.user",{"_index":712,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["req.method",{"_index":2333,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["req.params?.condominiumid",{"_index":208,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["req.path",{"_index":2325,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["req.query.invite",{"_index":1673,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["req.query?.invite",{"_index":1671,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["req?.headers?.authorization",{"_index":206,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["request",{"_index":190,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-1.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["requestlistener",{"_index":1834,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["required",{"_index":757,"title":{},"body":{"classes/CondominiumMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"classes/InviteMapper.html":{},"miscellaneous/typealiases.html":{}}}],["requiredlevel",{"_index":698,"title":{},"body":{"controllers/CondominiumController.html":{},"injectables/GenInviteService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IValidate.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{}}}],["requisitados",{"_index":3098,"title":{},"body":{"index.html":{}}}],["requisição",{"_index":509,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/FetchAdapter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["requisições",{"_index":981,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/ThrottlerErrorFilter.html":{},"index.html":{}}}],["res",{"_index":1383,"title":{},"body":{"classes/FetchAdapter.html":{},"controllers/UserController.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/variables.html":{}}}],["res.cookie('refresh",{"_index":2612,"title":{},"body":{"controllers/UserController.html":{}}}],["res.data",{"_index":2726,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["res.data().count",{"_index":2202,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["res.empty",{"_index":2193,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["res.exists",{"_index":2724,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["res.foreach((item",{"_index":2194,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["res.headers",{"_index":1386,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["res.id",{"_index":2725,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["res.json",{"_index":1389,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["res.status",{"_index":1385,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["reset",{"_index":127,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}],["resolve(hash",{"_index":320,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["response",{"_index":90,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/CheckPasswordGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["response.status(400).json",{"_index":513,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"interfaces/IBodyProps.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["response.status(401).json",{"_index":1639,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["response.status(404).json",{"_index":2380,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["response.status(500).json",{"_index":106,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["response.status(error.httpcode).json",{"_index":1213,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["responsáveis",{"_index":2881,"title":{},"body":{"index.html":{}}}],["responsável",{"_index":1030,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserDataCore.html":{},"index.html":{}}}],["resposta",{"_index":2927,"title":{},"body":{"index.html":{}}}],["result",{"_index":403,"title":{},"body":{"classes/CPF.html":{},"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{},"classes/UUIDGroup.html":{},"miscellaneous/enumerations.html":{}}}],["resultado",{"_index":1511,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["resultofnumwithweights",{"_index":404,"title":{},"body":{"classes/CPF.html":{}}}],["results",{"_index":61,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retornar",{"_index":1625,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-12.html":{}}}],["retorno",{"_index":1427,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/IService.html":{}}}],["return",{"_index":105,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateTokenService.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/Email.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"injectables/LogInterceptor.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":84,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"classes/IService.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{}}}],["reutilizar",{"_index":2935,"title":{},"body":{"index.html":{}}}],["rodar",{"_index":2978,"title":{},"body":{"index.html":{}}}],["root",{"_index":3077,"title":{},"body":{"index.html":{}}}],["rota",{"_index":2329,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["rotas",{"_index":687,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["rua",{"_index":2383,"title":{},"body":{"classes/Num.html":{}}}],["ruim",{"_index":510,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["run",{"_index":2463,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["run(input",{"_index":1901,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["rxjs",{"_index":2319,"title":{},"body":{"injectables/LogInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2321,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["s",{"_index":2330,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["saas",{"_index":2993,"title":{},"body":{"index.html":{}}}],["safe",{"_index":1169,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["safelyfind",{"_index":2284,"title":{"interfaces/safelyFind.html":{}},"body":{"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["safesearch",{"_index":222,"title":{"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{}},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CondominiumRepo.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-11.html":{},"interfaces/IValidate.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["safesearchenabled",{"_index":1168,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["salvar",{"_index":3127,"title":{},"body":{"index.html":{}}}],["samesite",{"_index":2619,"title":{},"body":{"controllers/UserController.html":{}}}],["sandbox.smtp.mailtrap.io",{"_index":3057,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1432,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["schema.parse(input",{"_index":1440,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["se",{"_index":159,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CondominiumRepo.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"classes/InviteRepo.html":{},"classes/Num.html":{},"guards/SuperAdminJwt.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["search",{"_index":932,"title":{"interfaces/search.html":{},"interfaces/search-1.html":{}},"body":{"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{}}}],["searchbyfield",{"_index":2699,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["searchbyfield(collection",{"_index":2709,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["searchbyid",{"_index":2700,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["searchbyid(input",{"_index":2713,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["searchedcondominiumreluser",{"_index":2079,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["searchedinvite",{"_index":2075,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["searchedinviteindex",{"_index":2088,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["seconds",{"_index":1231,"title":{},"body":{"classes/DateFormats.html":{}}}],["secret",{"_index":197,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["secure",{"_index":2616,"title":{},"body":{"controllers/UserController.html":{}}}],["segue",{"_index":3029,"title":{},"body":{"index.html":{}}}],["seguida",{"_index":3095,"title":{},"body":{"index.html":{}}}],["seguintes",{"_index":2891,"title":{},"body":{"index.html":{}}}],["seja",{"_index":28,"title":{},"body":{"classes/AdapterError.html":{},"classes/CondominiumRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/InviteRepo.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["semiparseddata",{"_index":2745,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["semiparsedinvite",{"_index":2242,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["semiparseduser",{"_index":2753,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["sempre",{"_index":3125,"title":{},"body":{"index.html":{}}}],["send",{"_index":1304,"title":{},"body":{"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"interfaces/ISendMailContent.html":{},"classes/NodemailerAdapter.html":{}}}],["send(data",{"_index":2355,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["sendo",{"_index":701,"title":{},"body":{"controllers/CondominiumController.html":{},"index.html":{}}}],["senha",{"_index":443,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"classes/Password.html":{}}}],["senhas",{"_index":426,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["ser",{"_index":919,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/Entity.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IProps-1.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"classes/LoginDTO.html":{},"classes/ServiceErrorFilter.html":{},"controllers/UserController.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["service",{"_index":1799,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-5.html":{},"classes/LoggerAdapter.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["serviceerrorfilter",{"_index":1844,"title":{"classes/ServiceErrorFilter.html":{}},"body":{"interfaces/IProps.html":{},"interfaces/IServiceErrors.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{}}}],["serviceerrorfilter(this.logger",{"_index":1893,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["serviceerrors",{"_index":1247,"title":{"classes/ServiceErrors.html":{}},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{}}}],["serviceerrorstags",{"_index":1248,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["serviceerrorstags.alreadyexist",{"_index":1980,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["serviceerrorstags.unauthorized",{"_index":1979,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["serviceerrorstags.wrongserviceusage",{"_index":1257,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["services",{"_index":1798,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"interfaces/IProps-5.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"classes/LoggerAdapter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["servidor",{"_index":110,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["servidores",{"_index":2887,"title":{},"body":{"index.html":{}}}],["serviço",{"_index":1029,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"injectables/DeleteUserService.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserDataCore.html":{},"index.html":{}}}],["serviços",{"_index":2873,"title":{},"body":{"index.html":{}}}],["serão",{"_index":2964,"title":{},"body":{"index.html":{}}}],["set",{"_index":633,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"index.html":{}}}],["set(input",{"_index":2531,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["setapartmentnumber(input",{"_index":839,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setblock(input",{"_index":834,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setcep(input",{"_index":580,"title":{},"body":{"classes/Condominium.html":{}}}],["setcnpj(input",{"_index":588,"title":{},"body":{"classes/Condominium.html":{}}}],["setcondominiumid(input",{"_index":826,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setcpf(input",{"_index":2560,"title":{},"body":{"classes/User.html":{}}}],["setdescription('morada",{"_index":1877,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setemail(input",{"_index":2552,"title":{},"body":{"classes/User.html":{}}}],["setglobalfilters",{"_index":1888,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setglobalinteceptors",{"_index":1883,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setglobalpipes",{"_index":1886,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setlevel(input",{"_index":822,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setname(input",{"_index":575,"title":{},"body":{"classes/Condominium.html":{},"classes/User.html":{}}}],["setnum(input",{"_index":584,"title":{},"body":{"classes/Condominium.html":{}}}],["setpassword(input",{"_index":2556,"title":{},"body":{"classes/User.html":{}}}],["setphonenumber(input",{"_index":2564,"title":{},"body":{"classes/User.html":{}}}],["settitle('moradaapp",{"_index":1875,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["setupdatedat(input",{"_index":842,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setupfilesafterenv",{"_index":3200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setuserid(input",{"_index":830,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["setversion('1.0",{"_index":1878,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["seu",{"_index":3044,"title":{},"body":{"index.html":{}}}],["seus",{"_index":1516,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGatewayError.html":{},"interfaces/IProps-12.html":{},"index.html":{}}}],["siafi",{"_index":1998,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["signature",{"_index":476,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["signed",{"_index":2621,"title":{},"body":{"controllers/UserController.html":{}}}],["significativa",{"_index":2941,"title":{},"body":{"index.html":{}}}],["sim",{"_index":3017,"title":{},"body":{"index.html":{}}}],["simbólicos",{"_index":2931,"title":{},"body":{"index.html":{}}}],["simples",{"_index":2928,"title":{},"body":{"index.html":{}}}],["simplesmente",{"_index":2512,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["sinta",{"_index":3149,"title":{},"body":{"index.html":{}}}],["sistema",{"_index":2944,"title":{},"body":{"index.html":{}}}],["sistemas",{"_index":2884,"title":{},"body":{"index.html":{}}}],["snapshot",{"_index":2738,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.data",{"_index":2744,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.empty",{"_index":2749,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.exists",{"_index":2741,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.foreach((item",{"_index":2750,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["snapshot.id",{"_index":2743,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["sobre",{"_index":2868,"title":{},"body":{"index.html":{}}}],["solicitado",{"_index":1188,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["solicitação",{"_index":1602,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["somente",{"_index":3124,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"modules/AdaptersModule.html":{},"controllers/AdminController.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"modules/FirestoreModule.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"modules/GatewayModule.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"modules/HttpModule.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/IClass.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["spec\\\\.ts",{"_index":3192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sprint",{"_index":3159,"title":{},"body":{"index.html":{}}}],["src/.../_iservice.ts",{"_index":3174,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../condominium.ts",{"_index":2832,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../condominiumreluser.ts",{"_index":2834,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../convertvalidatorerr.ts",{"_index":2830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cookie.ts",{"_index":3175,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../entities.ts",{"_index":2822,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../enums.ts",{"_index":2824,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../executioncontextspy.ts",{"_index":3182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../generatestringcodecontent.ts",{"_index":2841,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":2821,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../invite.ts",{"_index":2838,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../logger.ts",{"_index":2825,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../otp.ts",{"_index":2844,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../replace.ts",{"_index":3173,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../services.ts",{"_index":2826,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tokentypes.ts",{"_index":2827,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.ts",{"_index":2840,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app.module.ts",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["src/registryapi/app/adapters/adapter.module.ts",{"_index":129,"title":{},"body":{"modules/AdaptersModule.html":{}}}],["src/registryapi/app/adapters/bcrypt/bcryptadapter.ts",{"_index":292,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["src/registryapi/app/adapters/bcrypt/bcryptadapter.ts:6",{"_index":298,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["src/registryapi/app/adapters/cookie",{"_index":973,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["src/registryapi/app/adapters/cookie.ts",{"_index":967,"title":{},"body":{"classes/CookieAdapter.html":{},"interfaces/IValidateSignedCookie.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/adapters/cookie.ts:12",{"_index":971,"title":{},"body":{"classes/CookieAdapter.html":{}}}],["src/registryapi/app/adapters/crypt.ts",{"_index":1134,"title":{},"body":{"classes/CryptAdapter.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{}}}],["src/registryapi/app/adapters/crypt.ts:12",{"_index":1136,"title":{},"body":{"classes/CryptAdapter.html":{}}}],["src/registryapi/app/adapters/crypt.ts:13",{"_index":1137,"title":{},"body":{"classes/CryptAdapter.html":{}}}],["src/registryapi/app/adapters/crypt.ts:14",{"_index":1135,"title":{},"body":{"classes/CryptAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts",{"_index":1260,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:13",{"_index":1274,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:17",{"_index":1284,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:21",{"_index":1269,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:25",{"_index":1278,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:38",{"_index":1272,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:5",{"_index":1282,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:51",{"_index":1276,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/echoguard/index.ts:9",{"_index":1280,"title":{},"body":{"classes/EchoguardAdapter.html":{}}}],["src/registryapi/app/adapters/email.ts",{"_index":1303,"title":{},"body":{"classes/EmailAdapter.html":{},"interfaces/ISendMailContent.html":{}}}],["src/registryapi/app/adapters/email.ts:9",{"_index":1305,"title":{},"body":{"classes/EmailAdapter.html":{}}}],["src/registryapi/app/adapters/fetch/fetchadapter.ts",{"_index":1370,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["src/registryapi/app/adapters/fetch/fetchadapter.ts:6",{"_index":1374,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["src/registryapi/app/adapters/firebase",{"_index":1404,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["src/registryapi/app/adapters/http.ts",{"_index":1676,"title":{},"body":{"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{}}}],["src/registryapi/app/adapters/http.ts:13",{"_index":1677,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts",{"_index":1794,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/adapters/logger.ts:25",{"_index":2344,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:26",{"_index":2343,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:27",{"_index":2340,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:28",{"_index":2345,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:29",{"_index":2338,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:30",{"_index":2342,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:31",{"_index":2339,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/logger.ts:32",{"_index":2341,"title":{},"body":{"classes/LoggerAdapter.html":{}}}],["src/registryapi/app/adapters/nodemailer/nodemaileradapter.ts",{"_index":2354,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["src/registryapi/app/adapters/nodemailer/nodemaileradapter.ts:5",{"_index":2356,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["src/registryapi/app/auth/guards/admin",{"_index":156,"title":{},"body":{"guards/AdminJwt.html":{}}}],["src/registryapi/app/auth/guards/checkpassword.guard.ts",{"_index":425,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["src/registryapi/app/auth/guards/checkpassword.guard.ts:13",{"_index":428,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["src/registryapi/app/auth/guards/checkpassword.guard.ts:19",{"_index":432,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["src/registryapi/app/auth/guards/checkpassword.guard.ts:31",{"_index":429,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["src/registryapi/app/auth/guards/checktfacode.guard.ts",{"_index":453,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["src/registryapi/app/auth/guards/checktfacode.guard.ts:15",{"_index":461,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["src/registryapi/app/auth/guards/checktfacode.guard.ts:21",{"_index":465,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["src/registryapi/app/auth/guards/checktfacode.guard.ts:41",{"_index":462,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["src/registryapi/app/auth/guards/hmac",{"_index":1643,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["src/registryapi/app/auth/guards/jwt.guard.ts",{"_index":2289,"title":{},"body":{"guards/JwtGuard.html":{}}}],["src/registryapi/app/auth/guards/jwt.guard.ts:11",{"_index":2292,"title":{},"body":{"guards/JwtGuard.html":{}}}],["src/registryapi/app/auth/guards/jwt.guard.ts:17",{"_index":2294,"title":{},"body":{"guards/JwtGuard.html":{}}}],["src/registryapi/app/auth/guards/jwt.guard.ts:29",{"_index":2293,"title":{},"body":{"guards/JwtGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts",{"_index":2440,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts:12",{"_index":2444,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts:19",{"_index":2447,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts:33",{"_index":2448,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/refreshtoken.guard.ts:47",{"_index":2445,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["src/registryapi/app/auth/guards/super",{"_index":2478,"title":{},"body":{"guards/SuperAdminJwt.html":{}}}],["src/registryapi/app/auth/tokentypes.ts",{"_index":1710,"title":{},"body":{"interfaces/IAccessTokenBody.html":{},"interfaces/IRefreshTokenBody.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/app/entities/condominium/index.ts",{"_index":555,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:100",{"_index":574,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:103",{"_index":576,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:108",{"_index":579,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:111",{"_index":581,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:116",{"_index":583,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:119",{"_index":585,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:124",{"_index":587,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:127",{"_index":589,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:132",{"_index":591,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:137",{"_index":593,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:52",{"_index":567,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:53",{"_index":564,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:67",{"_index":569,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:81",{"_index":570,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominium/index.ts:95",{"_index":572,"title":{},"body":{"classes/Condominium.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts",{"_index":812,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"miscellaneous/variables.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:107",{"_index":819,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:111",{"_index":823,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:114",{"_index":821,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:118",{"_index":827,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:121",{"_index":825,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:125",{"_index":831,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:128",{"_index":829,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:132",{"_index":836,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:135",{"_index":833,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:139",{"_index":840,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:142",{"_index":838,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:146",{"_index":843,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:149",{"_index":841,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:50",{"_index":815,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:51",{"_index":814,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:72",{"_index":817,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/condominiumreluser/index.ts:89",{"_index":818,"title":{},"body":{"classes/CondominiumRelUser.html":{}}}],["src/registryapi/app/entities/entities.ts",{"_index":1338,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/app/entities/entities.ts:14",{"_index":1344,"title":{},"body":{"classes/Entity.html":{}}}],["src/registryapi/app/entities/entities.ts:15",{"_index":1343,"title":{},"body":{"classes/Entity.html":{}}}],["src/registryapi/app/entities/entities.ts:24",{"_index":2774,"title":{},"body":{"classes/ValueObject.html":{}}}],["src/registryapi/app/entities/entities.ts:25",{"_index":2775,"title":{},"body":{"classes/ValueObject.html":{}}}],["src/registryapi/app/entities/entities.ts:27",{"_index":2773,"title":{},"body":{"classes/ValueObject.html":{}}}],["src/registryapi/app/entities/entities.ts:37",{"_index":2771,"title":{},"body":{"classes/ValueObject.html":{}}}],["src/registryapi/app/entities/invite/index.ts",{"_index":1776,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:21",{"_index":2163,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:22",{"_index":2162,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:35",{"_index":2164,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:48",{"_index":2165,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:59",{"_index":2167,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:62",{"_index":2169,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:65",{"_index":2171,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:68",{"_index":2173,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:71",{"_index":2174,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/invite/index.ts:74",{"_index":2175,"title":{},"body":{"classes/Invite.html":{}}}],["src/registryapi/app/entities/otp/index.ts",{"_index":1806,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/entities/otp/index.ts:24",{"_index":2389,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:25",{"_index":2388,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:38",{"_index":2390,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:51",{"_index":2391,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:63",{"_index":2393,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:67",{"_index":2394,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:71",{"_index":2395,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:75",{"_index":2396,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:79",{"_index":2397,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:83",{"_index":2399,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/otp/index.ts:87",{"_index":2400,"title":{},"body":{"classes/OTP.html":{}}}],["src/registryapi/app/entities/user/index.ts",{"_index":1938,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/registryapi/app/entities/user/index.ts:104",{"_index":2548,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:109",{"_index":2549,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:112",{"_index":2550,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:117",{"_index":2551,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:120",{"_index":2553,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:125",{"_index":2555,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:128",{"_index":2557,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:133",{"_index":2559,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:136",{"_index":2561,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:141",{"_index":2563,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:144",{"_index":2565,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:149",{"_index":2566,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:154",{"_index":2567,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:58",{"_index":2545,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:59",{"_index":2544,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:74",{"_index":2546,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/user/index.ts:89",{"_index":2547,"title":{},"body":{"classes/User.html":{}}}],["src/registryapi/app/entities/vo/condominium/cep/index.ts",{"_index":345,"title":{},"body":{"classes/CEP.html":{}}}],["src/registryapi/app/entities/vo/condominium/cep/index.ts:20",{"_index":353,"title":{},"body":{"classes/CEP.html":{}}}],["src/registryapi/app/entities/vo/condominium/cep/index.ts:24",{"_index":354,"title":{},"body":{"classes/CEP.html":{}}}],["src/registryapi/app/entities/vo/condominium/cep/index.ts:5",{"_index":346,"title":{},"body":{"classes/CEP.html":{}}}],["src/registryapi/app/entities/vo/condominium/cnpj/index.ts",{"_index":362,"title":{},"body":{"classes/CNPJ.html":{}}}],["src/registryapi/app/entities/vo/condominium/cnpj/index.ts:20",{"_index":364,"title":{},"body":{"classes/CNPJ.html":{}}}],["src/registryapi/app/entities/vo/condominium/cnpj/index.ts:24",{"_index":365,"title":{},"body":{"classes/CNPJ.html":{}}}],["src/registryapi/app/entities/vo/condominium/cnpj/index.ts:5",{"_index":363,"title":{},"body":{"classes/CNPJ.html":{}}}],["src/registryapi/app/entities/vo/condominium/num/index.ts",{"_index":2381,"title":{},"body":{"classes/Num.html":{}}}],["src/registryapi/app/entities/vo/condominium/num/index.ts:21",{"_index":2386,"title":{},"body":{"classes/Num.html":{}}}],["src/registryapi/app/entities/vo/condominium/num/index.ts:25",{"_index":2387,"title":{},"body":{"classes/Num.html":{}}}],["src/registryapi/app/entities/vo/condominium/num/index.ts:5",{"_index":2382,"title":{},"body":{"classes/Num.html":{}}}],["src/registryapi/app/entities/vo/generals/name/index.ts",{"_index":2349,"title":{},"body":{"classes/Name.html":{}}}],["src/registryapi/app/entities/vo/generals/name/index.ts:18",{"_index":2352,"title":{},"body":{"classes/Name.html":{}}}],["src/registryapi/app/entities/vo/generals/name/index.ts:22",{"_index":2353,"title":{},"body":{"classes/Name.html":{}}}],["src/registryapi/app/entities/vo/generals/name/index.ts:6",{"_index":2351,"title":{},"body":{"classes/Name.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts",{"_index":2507,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:24",{"_index":2524,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:33",{"_index":2521,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:48",{"_index":2523,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:56",{"_index":2525,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/group.ts:6",{"_index":2510,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts",{"_index":2487,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:20",{"_index":2490,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:27",{"_index":2492,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:32",{"_index":2491,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:36",{"_index":2493,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/generals/uuid/index.ts:6",{"_index":2489,"title":{},"body":{"classes/UUID.html":{}}}],["src/registryapi/app/entities/vo/otp/code/index.ts",{"_index":516,"title":{},"body":{"classes/Code.html":{}}}],["src/registryapi/app/entities/vo/otp/code/index.ts:15",{"_index":518,"title":{},"body":{"classes/Code.html":{}}}],["src/registryapi/app/entities/vo/otp/code/index.ts:19",{"_index":519,"title":{},"body":{"classes/Code.html":{}}}],["src/registryapi/app/entities/vo/otp/code/index.ts:5",{"_index":517,"title":{},"body":{"classes/Code.html":{}}}],["src/registryapi/app/entities/vo/user/apartmentnumber/index.ts",{"_index":231,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["src/registryapi/app/entities/vo/user/apartmentnumber/index.ts:20",{"_index":248,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["src/registryapi/app/entities/vo/user/apartmentnumber/index.ts:24",{"_index":251,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["src/registryapi/app/entities/vo/user/apartmentnumber/index.ts:5",{"_index":238,"title":{},"body":{"classes/ApartmentNumber.html":{}}}],["src/registryapi/app/entities/vo/user/block/index.ts",{"_index":328,"title":{},"body":{"classes/Block.html":{}}}],["src/registryapi/app/entities/vo/user/block/index.ts:17",{"_index":334,"title":{},"body":{"classes/Block.html":{}}}],["src/registryapi/app/entities/vo/user/block/index.ts:21",{"_index":335,"title":{},"body":{"classes/Block.html":{}}}],["src/registryapi/app/entities/vo/user/block/index.ts:5",{"_index":329,"title":{},"body":{"classes/Block.html":{}}}],["src/registryapi/app/entities/vo/user/cpf/index.ts",{"_index":369,"title":{},"body":{"classes/CPF.html":{}}}],["src/registryapi/app/entities/vo/user/cpf/index.ts:5",{"_index":370,"title":{},"body":{"classes/CPF.html":{}}}],["src/registryapi/app/entities/vo/user/cpf/index.ts:61",{"_index":371,"title":{},"body":{"classes/CPF.html":{}}}],["src/registryapi/app/entities/vo/user/cpf/index.ts:65",{"_index":372,"title":{},"body":{"classes/CPF.html":{}}}],["src/registryapi/app/entities/vo/user/email/index.ts",{"_index":1297,"title":{},"body":{"classes/Email.html":{}}}],["src/registryapi/app/entities/vo/user/email/index.ts:17",{"_index":1301,"title":{},"body":{"classes/Email.html":{}}}],["src/registryapi/app/entities/vo/user/email/index.ts:21",{"_index":1302,"title":{},"body":{"classes/Email.html":{}}}],["src/registryapi/app/entities/vo/user/email/index.ts:5",{"_index":1298,"title":{},"body":{"classes/Email.html":{}}}],["src/registryapi/app/entities/vo/user/level/index.ts",{"_index":2299,"title":{},"body":{"classes/Level.html":{}}}],["src/registryapi/app/entities/vo/user/level/index.ts:20",{"_index":2304,"title":{},"body":{"classes/Level.html":{}}}],["src/registryapi/app/entities/vo/user/level/index.ts:24",{"_index":2305,"title":{},"body":{"classes/Level.html":{}}}],["src/registryapi/app/entities/vo/user/level/index.ts:5",{"_index":2300,"title":{},"body":{"classes/Level.html":{}}}],["src/registryapi/app/entities/vo/user/password/index.ts",{"_index":2406,"title":{},"body":{"classes/Password.html":{}}}],["src/registryapi/app/entities/vo/user/password/index.ts:20",{"_index":2408,"title":{},"body":{"classes/Password.html":{}}}],["src/registryapi/app/entities/vo/user/password/index.ts:24",{"_index":2409,"title":{},"body":{"classes/Password.html":{}}}],["src/registryapi/app/entities/vo/user/password/index.ts:5",{"_index":2407,"title":{},"body":{"classes/Password.html":{}}}],["src/registryapi/app/entities/vo/user/phonenumber/index.ts",{"_index":2410,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["src/registryapi/app/entities/vo/user/phonenumber/index.ts:20",{"_index":2413,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["src/registryapi/app/entities/vo/user/phonenumber/index.ts:24",{"_index":2414,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["src/registryapi/app/entities/vo/user/phonenumber/index.ts:5",{"_index":2411,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["src/registryapi/app/errors/adapter.ts",{"_index":6,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/IProps-2.html":{}}}],["src/registryapi/app/errors/adapter.ts:7",{"_index":17,"title":{},"body":{"classes/AdapterError.html":{}}}],["src/registryapi/app/errors/entities.ts",{"_index":1314,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-3.html":{}}}],["src/registryapi/app/errors/entities.ts:9",{"_index":1315,"title":{},"body":{"classes/EntitieError.html":{}}}],["src/registryapi/app/errors/guard.ts",{"_index":1640,"title":{},"body":{"classes/GuardErrors.html":{},"interfaces/IProps-4.html":{}}}],["src/registryapi/app/errors/guard.ts:5",{"_index":1641,"title":{},"body":{"classes/GuardErrors.html":{}}}],["src/registryapi/app/errors/services.ts",{"_index":1932,"title":{},"body":{"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/app/errors/services.ts:13",{"_index":2474,"title":{},"body":{"classes/ServiceErrors.html":{}}}],["src/registryapi/app/gateways/auth.gateway.ts",{"_index":280,"title":{},"body":{"classes/Auth.html":{}}}],["src/registryapi/app/gateways/auth.gateway.ts:4",{"_index":286,"title":{},"body":{"classes/Auth.html":{}}}],["src/registryapi/app/gateways/auth.gateway.ts:5",{"_index":288,"title":{},"body":{"classes/Auth.html":{}}}],["src/registryapi/app/gateways/auth.gateway.ts:6",{"_index":290,"title":{},"body":{"classes/Auth.html":{}}}],["src/registryapi/app/gateways/cep.gateway.ts",{"_index":406,"title":{},"body":{"classes/CepGateway.html":{},"interfaces/ICheckCep.html":{}}}],["src/registryapi/app/gateways/cep.gateway.ts:11",{"_index":409,"title":{},"body":{"classes/CepGateway.html":{}}}],["src/registryapi/app/mapper/condominium.ts",{"_index":745,"title":{},"body":{"classes/CondominiumMapper.html":{},"interfaces/IConvertToObject.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/mapper/condominium.ts:20",{"_index":750,"title":{},"body":{"classes/CondominiumMapper.html":{}}}],["src/registryapi/app/mapper/condominium.ts:38",{"_index":755,"title":{},"body":{"classes/CondominiumMapper.html":{}}}],["src/registryapi/app/mapper/condominiumreluser.ts",{"_index":894,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/mapper/condominiumreluser.ts:28",{"_index":897,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{}}}],["src/registryapi/app/mapper/condominiumreluser.ts:36",{"_index":898,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{}}}],["src/registryapi/app/mapper/invite.ts",{"_index":1715,"title":{},"body":{"interfaces/IConvertToObject-1.html":{},"classes/InviteMapper.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/mapper/invite.ts:19",{"_index":2248,"title":{},"body":{"classes/InviteMapper.html":{}}}],["src/registryapi/app/mapper/invite.ts:32",{"_index":2249,"title":{},"body":{"classes/InviteMapper.html":{}}}],["src/registryapi/app/mapper/otp.ts",{"_index":1721,"title":{},"body":{"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"classes/OTPMapper.html":{}}}],["src/registryapi/app/mapper/otp.ts:28",{"_index":2401,"title":{},"body":{"classes/OTPMapper.html":{}}}],["src/registryapi/app/mapper/otp.ts:45",{"_index":2402,"title":{},"body":{"classes/OTPMapper.html":{}}}],["src/registryapi/app/mapper/user.ts",{"_index":2014,"title":{},"body":{"interfaces/IUserInObject.html":{},"classes/UserMapper.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/mapper/user.ts:30",{"_index":2662,"title":{},"body":{"classes/UserMapper.html":{}}}],["src/registryapi/app/mapper/user.ts:45",{"_index":2663,"title":{},"body":{"classes/UserMapper.html":{}}}],["src/registryapi/app/repositories/condominium.ts",{"_index":913,"title":{},"body":{"classes/CondominiumRepo.html":{},"interfaces/create.html":{},"interfaces/safeSearch.html":{},"interfaces/search.html":{}}}],["src/registryapi/app/repositories/condominium.ts:21",{"_index":914,"title":{},"body":{"classes/CondominiumRepo.html":{}}}],["src/registryapi/app/repositories/condominium.ts:28",{"_index":915,"title":{},"body":{"classes/CondominiumRepo.html":{}}}],["src/registryapi/app/repositories/condominium.ts:37",{"_index":930,"title":{},"body":{"classes/CondominiumRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts",{"_index":2277,"title":{},"body":{"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["src/registryapi/app/repositories/invite.ts:29",{"_index":2278,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts:36",{"_index":2280,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts:45",{"_index":2281,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts:51",{"_index":2282,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/invite.ts:56",{"_index":2279,"title":{},"body":{"classes/InviteRepo.html":{}}}],["src/registryapi/app/repositories/otp.ts",{"_index":1730,"title":{},"body":{"interfaces/ICreateOTPInput.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"classes/OTPRepo.html":{}}}],["src/registryapi/app/repositories/otp.ts:19",{"_index":2403,"title":{},"body":{"classes/OTPRepo.html":{}}}],["src/registryapi/app/repositories/otp.ts:21",{"_index":2405,"title":{},"body":{"classes/OTPRepo.html":{}}}],["src/registryapi/app/repositories/otp.ts:23",{"_index":2404,"title":{},"body":{"classes/OTPRepo.html":{}}}],["src/registryapi/app/repositories/user.ts",{"_index":2691,"title":{},"body":{"classes/UserRepo.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["src/registryapi/app/repositories/user.ts:33",{"_index":2692,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:40",{"_index":2694,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:47",{"_index":2695,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:50",{"_index":2697,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:55",{"_index":2696,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/repositories/user.ts:60",{"_index":2693,"title":{},"body":{"classes/UserRepo.html":{}}}],["src/registryapi/app/services/_iservice.ts",{"_index":1965,"title":{},"body":{"classes/IService.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/app/services/_iservice.ts:6",{"_index":1972,"title":{},"body":{"classes/IService.html":{}}}],["src/registryapi/app/services/createcondominium.service.ts",{"_index":1028,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"interfaces/IProps-6.html":{}}}],["src/registryapi/app/services/createcondominium.service.ts:13",{"_index":1035,"title":{},"body":{"injectables/CreateCondominiumService.html":{}}}],["src/registryapi/app/services/createcondominium.service.ts:19",{"_index":1037,"title":{},"body":{"injectables/CreateCondominiumService.html":{}}}],["src/registryapi/app/services/createtoken.service.ts",{"_index":1043,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["src/registryapi/app/services/createtoken.service.ts:38",{"_index":1049,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["src/registryapi/app/services/createtoken.service.ts:41",{"_index":1052,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["src/registryapi/app/services/createtoken.service.ts:61",{"_index":1054,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["src/registryapi/app/services/createtoken.service.ts:75",{"_index":1056,"title":{},"body":{"injectables/CreateTokenService.html":{}}}],["src/registryapi/app/services/createuser.service.ts",{"_index":1118,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["src/registryapi/app/services/createuser.service.ts:19",{"_index":1121,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["src/registryapi/app/services/createuser.service.ts:25",{"_index":1122,"title":{},"body":{"injectables/CreateUserService.html":{}}}],["src/registryapi/app/services/deleteuser.service.ts",{"_index":1243,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{}}}],["src/registryapi/app/services/deleteuser.service.ts:17",{"_index":1245,"title":{},"body":{"injectables/DeleteUserService.html":{}}}],["src/registryapi/app/services/deleteuser.service.ts:20",{"_index":1246,"title":{},"body":{"injectables/DeleteUserService.html":{}}}],["src/registryapi/app/services/geninvite.service.ts",{"_index":1549,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["src/registryapi/app/services/geninvite.service.ts:19",{"_index":1553,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["src/registryapi/app/services/geninvite.service.ts:26",{"_index":1557,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["src/registryapi/app/services/geninvite.service.ts:43",{"_index":1554,"title":{},"body":{"injectables/GenInviteService.html":{}}}],["src/registryapi/app/services/gentfa.service.ts",{"_index":1585,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["src/registryapi/app/services/gentfa.service.ts:16",{"_index":1590,"title":{},"body":{"injectables/GenTFAService.html":{}}}],["src/registryapi/app/services/gentfa.service.ts:23",{"_index":1593,"title":{},"body":{"injectables/GenTFAService.html":{}}}],["src/registryapi/app/services/gentfa.service.ts:44",{"_index":1591,"title":{},"body":{"injectables/GenTFAService.html":{}}}],["src/registryapi/app/services/getcondominiumrel.service.ts",{"_index":1623,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-12.html":{}}}],["src/registryapi/app/services/getcondominiumrel.service.ts:12",{"_index":1628,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{}}}],["src/registryapi/app/services/getcondominiumrel.service.ts:15",{"_index":1629,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{}}}],["src/registryapi/bootstrap.ts",{"_index":1833,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:30",{"_index":2464,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:31",{"_index":2465,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:33",{"_index":2466,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:58",{"_index":2469,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:62",{"_index":2470,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:66",{"_index":2468,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/bootstrap.ts:80",{"_index":2467,"title":{},"body":{"classes/RegistryAPIBootstrap.html":{}}}],["src/registryapi/index.ts",{"_index":3185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/registryapi/infra/gateways/apis/viacep.gateway.ts",{"_index":1990,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["src/registryapi/infra/gateways/apis/viacep.gateway.ts:20",{"_index":2777,"title":{},"body":{"injectables/ViacepGateway.html":{}}}],["src/registryapi/infra/gateways/apis/viacep.gateway.ts:23",{"_index":2778,"title":{},"body":{"injectables/ViacepGateway.html":{}}}],["src/registryapi/infra/gateways/errors/index.ts",{"_index":1532,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/infra/gateways/errors/index.ts:13",{"_index":1535,"title":{},"body":{"classes/GatewayErrors.html":{}}}],["src/registryapi/infra/gateways/errors/index.ts:14",{"_index":1533,"title":{},"body":{"classes/GatewayErrors.html":{}}}],["src/registryapi/infra/gateways/gateway.module.ts",{"_index":1546,"title":{},"body":{"modules/GatewayModule.html":{}}}],["src/registryapi/infra/http/controllers/admin.controller.ts",{"_index":149,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts",{"_index":643,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts:35",{"_index":651,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts:53",{"_index":656,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts:69",{"_index":661,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/condominium.controller.ts:82",{"_index":664,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["src/registryapi/infra/http/controllers/super",{"_index":2475,"title":{},"body":{"controllers/SuperAdminController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts",{"_index":2568,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:118",{"_index":2586,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:129",{"_index":2579,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:137",{"_index":2582,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:155",{"_index":2589,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:166",{"_index":2595,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:51",{"_index":2591,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/controllers/user.controller.ts:75",{"_index":2576,"title":{},"body":{"controllers/UserController.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts",{"_index":980,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:29",{"_index":994,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:41",{"_index":995,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:53",{"_index":988,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:68",{"_index":999,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createcondominium.dto.ts:80",{"_index":991,"title":{},"body":{"classes/CreateCondominiumDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts",{"_index":1087,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:104",{"_index":1095,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:27",{"_index":1093,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:42",{"_index":1092,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:54",{"_index":1094,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:66",{"_index":1091,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:76",{"_index":1090,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/createuser.dto.ts:92",{"_index":1089,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["src/registryapi/infra/http/dto/deleteadminuser.dto.ts",{"_index":1239,"title":{},"body":{"classes/DeleteUserDTO.html":{}}}],["src/registryapi/infra/http/dto/deleteadminuser.dto.ts:20",{"_index":1242,"title":{},"body":{"classes/DeleteUserDTO.html":{}}}],["src/registryapi/infra/http/dto/inviteuser.dto.ts",{"_index":2286,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["src/registryapi/infra/http/dto/inviteuser.dto.ts:20",{"_index":2287,"title":{},"body":{"classes/InviteUserDTO.html":{}}}],["src/registryapi/infra/http/dto/launch",{"_index":2295,"title":{},"body":{"classes/LaunchTFADTO.html":{}}}],["src/registryapi/infra/http/dto/login.dto.ts",{"_index":2346,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/registryapi/infra/http/dto/login.dto.ts:20",{"_index":2347,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/registryapi/infra/http/dto/login.dto.ts:32",{"_index":2348,"title":{},"body":{"classes/LoginDTO.html":{}}}],["src/registryapi/infra/http/filters/errors/adapter.filter.ts",{"_index":64,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/adapter.filter.ts:11",{"_index":82,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/adapter.filter.ts:8",{"_index":77,"title":{},"body":{"classes/AdapterErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/classvalidator.filter.ts",{"_index":492,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["src/registryapi/infra/http/filters/errors/classvalidator.filter.ts:19",{"_index":494,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/classvalidator.filter.ts:22",{"_index":497,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/classvalidator.filter.ts:33",{"_index":495,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/databasecustomerror.filter.ts",{"_index":1181,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["src/registryapi/infra/http/filters/errors/databasecustomerror.filter.ts:18",{"_index":1184,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/databasecustomerror.filter.ts:21",{"_index":1203,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/databasecustomerror.filter.ts:66",{"_index":1204,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/gateways.filter.ts",{"_index":1504,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["src/registryapi/infra/http/filters/errors/gateways.filter.ts:18",{"_index":1506,"title":{},"body":{"classes/GatewayErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/gateways.filter.ts:21",{"_index":1524,"title":{},"body":{"classes/GatewayErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/gateways.filter.ts:37",{"_index":1526,"title":{},"body":{"classes/GatewayErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/generic.filter.ts",{"_index":1606,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["src/registryapi/infra/http/filters/errors/generic.filter.ts:14",{"_index":1609,"title":{},"body":{"classes/GenericErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/generic.filter.ts:17",{"_index":1612,"title":{},"body":{"classes/GenericErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/generic.filter.ts:26",{"_index":1613,"title":{},"body":{"classes/GenericErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/guard.filter.ts",{"_index":1634,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/guard.filter.ts:11",{"_index":1636,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/guard.filter.ts:8",{"_index":1635,"title":{},"body":{"classes/GuardErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/notfound.filter.ts",{"_index":2372,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/notfound.filter.ts:12",{"_index":2373,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/notfound.filter.ts:15",{"_index":2376,"title":{},"body":{"classes/NotFoundFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/prisma.filter.ts",{"_index":1822,"title":{},"body":{"interfaces/IPrismaError.html":{},"classes/PrismaErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/prisma.filter.ts:15",{"_index":2415,"title":{},"body":{"classes/PrismaErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/prisma.filter.ts:18",{"_index":2416,"title":{},"body":{"classes/PrismaErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/prisma.filter.ts:45",{"_index":2417,"title":{},"body":{"classes/PrismaErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/services.filter.ts",{"_index":1975,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/services.filter.ts:18",{"_index":2471,"title":{},"body":{"classes/ServiceErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/services.filter.ts:21",{"_index":2472,"title":{},"body":{"classes/ServiceErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/services.filter.ts:43",{"_index":2473,"title":{},"body":{"classes/ServiceErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/throttler.filter.ts",{"_index":2479,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/throttler.filter.ts:11",{"_index":2483,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/throttler.filter.ts:8",{"_index":2481,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/vo.filter.ts",{"_index":1324,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/vo.filter.ts:12",{"_index":1327,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["src/registryapi/infra/http/filters/errors/vo.filter.ts:9",{"_index":1326,"title":{},"body":{"classes/EntitieErrorFilter.html":{}}}],["src/registryapi/infra/http/http.module.ts",{"_index":1685,"title":{},"body":{"modules/HttpModule.html":{}}}],["src/registryapi/infra/http/interceptors/logger.interceptor.ts",{"_index":2307,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/registryapi/infra/http/interceptors/logger.interceptor.ts:16",{"_index":2311,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/registryapi/infra/http/interceptors/logger.interceptor.ts:19",{"_index":2315,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/registryapi/infra/storages/db/error/index.ts",{"_index":1149,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["src/registryapi/infra/storages/db/error/index.ts:19",{"_index":1150,"title":{},"body":{"classes/DatabaseCustomError.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts",{"_index":524,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts:11",{"_index":553,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts:23",{"_index":541,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts:31",{"_index":545,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/collectionsrefs.service.ts:5",{"_index":529,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getcondominium.ts",{"_index":1424,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getcondominium.ts:11",{"_index":1425,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getcondominiumrel.ts",{"_index":1442,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getcondominiumrel.ts:11",{"_index":1443,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getinvite.ts",{"_index":1450,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getinvite.ts:11",{"_index":1451,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getuser.ts",{"_index":1463,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/dto/getuser.ts:11",{"_index":1464,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["src/registryapi/infra/storages/db/firestore/entities/indexes.ts",{"_index":1764,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["src/registryapi/infra/storages/db/firestore/entities/indexes.ts:24",{"_index":2161,"title":{},"body":{"classes/Index.html":{}}}],["src/registryapi/infra/storages/db/firestore/entities/indexes.ts:31",{"_index":2159,"title":{},"body":{"classes/Index.html":{}}}],["src/registryapi/infra/storages/db/firestore/entities/indexes.ts:9",{"_index":2157,"title":{},"body":{"classes/Index.html":{}}}],["src/registryapi/infra/storages/db/firestore/enums.ts",{"_index":2829,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.module.ts",{"_index":1478,"title":{},"body":{"modules/FirestoreModule.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts",{"_index":1484,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts:21",{"_index":1493,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts:25",{"_index":1490,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts:29",{"_index":1491,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/firestore.service.ts:8",{"_index":1489,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiumreluser.ts",{"_index":883,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiumreluser.ts:26",{"_index":886,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiumreluser.ts:43",{"_index":887,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiums.ts",{"_index":720,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiums.ts:20",{"_index":726,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/condominiums.ts:40",{"_index":733,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/invite.ts",{"_index":1753,"title":{},"body":{"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/invite.ts:19",{"_index":2246,"title":{},"body":{"classes/InviteFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/invite.ts:33",{"_index":2247,"title":{},"body":{"classes/InviteFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/users.ts",{"_index":1757,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/users.ts:21",{"_index":2659,"title":{},"body":{"classes/UserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/mapper/users.ts:36",{"_index":2661,"title":{},"body":{"classes/UserFirestoreMapper.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts",{"_index":935,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:13",{"_index":937,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:19",{"_index":939,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:47",{"_index":940,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:48",{"_index":941,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/condominiums.ts:52",{"_index":942,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts",{"_index":2176,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:141",{"_index":2180,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:142",{"_index":2181,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:144",{"_index":2182,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:18",{"_index":2177,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:24",{"_index":2178,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:77",{"_index":2179,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/invite.ts:83",{"_index":2183,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts",{"_index":2698,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:104",{"_index":2708,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:129",{"_index":2707,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:159",{"_index":2703,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:17",{"_index":2701,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:23",{"_index":2702,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:30",{"_index":2711,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:46",{"_index":2714,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:54",{"_index":2704,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:55",{"_index":2705,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/firestore/repositories/users.ts:57",{"_index":2706,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominium.ts",{"_index":764,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominium.ts:25",{"_index":767,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominium.ts:9",{"_index":770,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominiumreluser.ts",{"_index":905,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominiumreluser.ts:25",{"_index":907,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/condominiumreluser.ts:9",{"_index":908,"title":{},"body":{"classes/CondominiumRelUserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/invite.ts",{"_index":2251,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/invite.ts:24",{"_index":2253,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/invite.ts:9",{"_index":2254,"title":{},"body":{"classes/InvitePrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/user.ts",{"_index":2664,"title":{},"body":{"classes/UserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/user.ts:26",{"_index":2666,"title":{},"body":{"classes/UserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/mapper/user.ts:9",{"_index":2667,"title":{},"body":{"classes/UserPrismaMapper.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.module.ts",{"_index":2422,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts",{"_index":2427,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:13",{"_index":2435,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:15",{"_index":2432,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:20",{"_index":2431,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:25",{"_index":2434,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/prisma.service.ts:30",{"_index":2433,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts",{"_index":777,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:13",{"_index":781,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:16",{"_index":784,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:26",{"_index":787,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:27",{"_index":789,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/condominium.service.ts:31",{"_index":790,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts",{"_index":2257,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:14",{"_index":2258,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:17",{"_index":2259,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:22",{"_index":2261,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:23",{"_index":2262,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:25",{"_index":2263,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:46",{"_index":2264,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/invite.service.ts:73",{"_index":2260,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts",{"_index":2668,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:16",{"_index":2669,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:19",{"_index":2670,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:21",{"_index":2672,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:22",{"_index":2673,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:24",{"_index":2674,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:52",{"_index":2676,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:73",{"_index":2675,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/infra/storages/db/prisma/repositories/user.service.ts:92",{"_index":2671,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts",{"_index":1139,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts:10",{"_index":1143,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts:15",{"_index":1142,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts:20",{"_index":1141,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/cryptspy.ts:4",{"_index":1140,"title":{},"body":{"classes/CryptSpy.html":{}}}],["src/registryapi/tests/adapters/emailspy.ts",{"_index":1309,"title":{},"body":{"classes/EmailSpy.html":{}}}],["src/registryapi/tests/adapters/emailspy.ts:4",{"_index":1310,"title":{},"body":{"classes/EmailSpy.html":{}}}],["src/registryapi/tests/adapters/emailspy.ts:8",{"_index":1311,"title":{},"body":{"classes/EmailSpy.html":{}}}],["src/registryapi/tests/errors/inmemoryerror.ts",{"_index":1925,"title":{},"body":{"interfaces/IProps-13.html":{},"classes/InMemoryError.html":{}}}],["src/registryapi/tests/errors/inmemoryerror.ts:9",{"_index":2049,"title":{},"body":{"classes/InMemoryError.html":{}}}],["src/registryapi/tests/factories/condominium.ts",{"_index":2846,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/condominiumreluser.ts",{"_index":2849,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/firestore/condominium.ts",{"_index":2851,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/firestore/condominiumreluser.ts",{"_index":2853,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/firestore/invite.ts",{"_index":2855,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/firestore/user.ts",{"_index":2857,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/invite.ts",{"_index":2859,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/otp.ts",{"_index":2861,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/factories/user.ts",{"_index":2863,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/registryapi/tests/gateways/cep.gateway.ts",{"_index":417,"title":{},"body":{"classes/CepGatewaySpy.html":{}}}],["src/registryapi/tests/gateways/cep.gateway.ts:4",{"_index":420,"title":{},"body":{"classes/CepGatewaySpy.html":{}}}],["src/registryapi/tests/gateways/cep.gateway.ts:8",{"_index":421,"title":{},"body":{"classes/CepGatewaySpy.html":{}}}],["src/registryapi/tests/guards/executioncontextspy.ts",{"_index":3206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts",{"_index":2021,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:12",{"_index":2026,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:16",{"_index":2024,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:22",{"_index":2027,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:38",{"_index":2028,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:39",{"_index":2029,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/condominium/index.ts:43",{"_index":2030,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["src/registryapi/tests/inmemorydatabase/inmemorycontainer.ts",{"_index":1744,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["src/registryapi/tests/inmemorydatabase/inmemorycontainer.ts:21",{"_index":2047,"title":{},"body":{"classes/InMemoryContainer.html":{}}}],["src/registryapi/tests/inmemorydatabase/inmemorycontainer.ts:28",{"_index":2048,"title":{},"body":{"classes/InMemoryContainer.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts",{"_index":2051,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:101",{"_index":2061,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:14",{"_index":2056,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:20",{"_index":2057,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:21",{"_index":2055,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:28",{"_index":2059,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:54",{"_index":2063,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:55",{"_index":2065,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:57",{"_index":2066,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/invites/index.ts:75",{"_index":2069,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts",{"_index":2093,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:12",{"_index":2095,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:17",{"_index":2096,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:19",{"_index":2097,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:38",{"_index":2099,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/otp/index.ts:48",{"_index":2098,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts",{"_index":2111,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:100",{"_index":2127,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:122",{"_index":2119,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:17",{"_index":2115,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:24",{"_index":2114,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:30",{"_index":2117,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:57",{"_index":2121,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:58",{"_index":2123,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:60",{"_index":2124,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/tests/inmemorydatabase/user/index.ts:85",{"_index":2130,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["src/registryapi/utils/class.ts",{"_index":1713,"title":{},"body":{"interfaces/IClass.html":{}}}],["src/registryapi/utils/convertvalidatorerr.ts",{"_index":1907,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["src/registryapi/utils/dateformats.ts",{"_index":1216,"title":{},"body":{"classes/DateFormats.html":{}}}],["src/registryapi/utils/dateformats.ts:6",{"_index":1219,"title":{},"body":{"classes/DateFormats.html":{}}}],["src/registryapi/utils/generatestringcodecontent.ts",{"_index":1736,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{}}}],["src/registryapi/utils/replace.ts",{"_index":3177,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stack",{"_index":103,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EchoguardAdapter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/LoggerAdapter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["start",{"_index":1795,"title":{},"body":{"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":2866,"title":{"index.html":{}},"body":{}}],["static",{"_index":721,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DateFormats.html":{},"classes/Entity.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/UUID.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"classes/ValueObject.html":{}}}],["status",{"_index":1384,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"injectables/PrismaService.html":{}}}],["statuscode",{"_index":107,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["street_address",{"_index":411,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["strict",{"_index":2620,"title":{},"body":{"controllers/UserController.html":{}}}],["string",{"_index":45,"title":{},"body":{"classes/AdapterError.html":{},"guards/AdminJwt.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CookieAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EntitieError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryError.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(process.env.cookie_key",{"_index":2452,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["strings",{"_index":2527,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["sua",{"_index":1739,"title":{},"body":{"interfaces/IGenerateInviteKeyProps.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["suas",{"_index":2996,"title":{},"body":{"index.html":{}}}],["sub",{"_index":1065,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-7.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{}}}],["subject",{"_index":1307,"title":{},"body":{"classes/EmailAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/ISendMailContent.html":{},"classes/NodemailerAdapter.html":{}}}],["sucedida",{"_index":1391,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["sucedido",{"_index":2337,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["sucesso",{"_index":1912,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":54,"title":{},"body":{"classes/AdapterError.html":{},"controllers/CondominiumController.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/InMemoryError.html":{},"classes/ServiceErrors.html":{},"controllers/SuperAdminController.html":{}}}],["superadmincontroller",{"_index":1687,"title":{"controllers/SuperAdminController.html":{}},"body":{"modules/HttpModule.html":{},"controllers/SuperAdminController.html":{}}}],["superadminjwt",{"_index":675,"title":{"guards/SuperAdminJwt.html":{}},"body":{"controllers/CondominiumController.html":{},"guards/SuperAdminJwt.html":{}}}],["support",{"_index":3161,"title":{},"body":{"modules.html":{}}}],["supress_only_stack",{"_index":1293,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{}}}],["svg",{"_index":3162,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3154,"title":{},"body":{"index.html":{}}}],["swaggermodule",{"_index":1856,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["swaggermodule.createdocument(this.app",{"_index":1881,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["swaggermodule.setup('api",{"_index":1882,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["switch",{"_index":1656,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["switchtohttp",{"_index":3210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["são",{"_index":1517,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["t",{"_index":1350,"title":{},"body":{"classes/Entity.html":{},"interfaces/IClass.html":{},"classes/ValueObject.html":{}}}],["tag",{"_index":809,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-9.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{}}}],["tal",{"_index":1399,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["tanto",{"_index":3153,"title":{},"body":{"index.html":{}}}],["tap",{"_index":2320,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["tarefa",{"_index":1400,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["target",{"_index":714,"title":{},"body":{"controllers/CondominiumController.html":{},"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{},"controllers/UserController.html":{}}}],["target.equalto(actualuser",{"_index":1250,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{}}}],["tcondominiuminobject",{"_index":735,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"miscellaneous/typealiases.html":{}}}],["tcondominiumrelusertoobject",{"_index":888,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{},"miscellaneous/typealiases.html":{}}}],["teceprops",{"_index":1271,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{},"miscellaneous/typealiases.html":{}}}],["telefone",{"_index":2412,"title":{},"body":{"classes/PhoneNumber.html":{}}}],["tem",{"_index":162,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-12.html":{},"guards/SuperAdminJwt.html":{},"index.html":{}}}],["temos",{"_index":3140,"title":{},"body":{"index.html":{}}}],["temporário",{"_index":2332,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["tenham",{"_index":383,"title":{},"body":{"classes/CPF.html":{}}}],["tentar",{"_index":1667,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["ter",{"_index":3012,"title":{},"body":{"index.html":{}}}],["terminal",{"_index":3104,"title":{},"body":{"index.html":{}}}],["testenvironment",{"_index":3199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testes",{"_index":3117,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2784,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["testpara",{"_index":3138,"title":{},"body":{"index.html":{}}}],["testregex",{"_index":3191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tfa",{"_index":2644,"title":{},"body":{"controllers/UserController.html":{}}}],["tfa')@httpcode(204",{"_index":2585,"title":{},"body":{"controllers/UserController.html":{}}}],["tfa.dto",{"_index":468,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["tfa.dto.ts",{"_index":2296,"title":{},"body":{"classes/LaunchTFADTO.html":{}}}],["tfa.dto.ts:20",{"_index":2298,"title":{},"body":{"classes/LaunchTFADTO.html":{}}}],["tfirestorecondominiumrelusertoobject",{"_index":892,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"miscellaneous/typealiases.html":{}}}],["then((res",{"_index":2223,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["then(async",{"_index":1382,"title":{},"body":{"classes/FetchAdapter.html":{}}}],["this.$connect().then",{"_index":2437,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect().then",{"_index":2438,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._id",{"_index":612,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["this._instance",{"_index":1498,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["this._instance.settings",{"_index":1500,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["this._instance.terminate",{"_index":1502,"title":{},"body":{"injectables/FirestoreService.html":{}}}],["this._value",{"_index":343,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Email.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{}}}],["this._value.length",{"_index":359,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{}}}],["this._value.slice",{"_index":393,"title":{},"body":{"classes/CPF.html":{}}}],["this._value.slice(0",{"_index":398,"title":{},"body":{"classes/CPF.html":{}}}],["this.app",{"_index":1863,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.enablecors",{"_index":1868,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.enableshutdownhooks",{"_index":1866,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.get(loggeradapter",{"_index":1873,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.init",{"_index":1906,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.use(cookieparser(process.env.cookie_key",{"_index":1867,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.useglobalfilters(new",{"_index":1889,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.useglobalinterceptors(new",{"_index":1884,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.app.useglobalpipes(new",{"_index":1887,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.build(input.requestlistener",{"_index":1902,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.buildaccesstoken(user",{"_index":1083,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["this.buildrefreshtoken(user.email",{"_index":1085,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["this.calls.check",{"_index":423,"title":{},"body":{"classes/CepGatewaySpy.html":{}}}],["this.calls.compare",{"_index":1147,"title":{},"body":{"classes/CryptSpy.html":{}}}],["this.calls.create",{"_index":2034,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["this.calls.delete",{"_index":2091,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["this.calls.find",{"_index":2041,"title":{},"body":{"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{}}}],["this.calls.getallcondominiumrelation",{"_index":2149,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.calls.getcondominiumrelation",{"_index":2145,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.calls.hash",{"_index":1146,"title":{},"body":{"classes/CryptSpy.html":{}}}],["this.calls.hashwithhmac",{"_index":1144,"title":{},"body":{"classes/CryptSpy.html":{}}}],["this.calls.send",{"_index":1313,"title":{},"body":{"classes/EmailSpy.html":{}}}],["this.calls.transfertouserresources",{"_index":2087,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.cep",{"_index":637,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.cep.value",{"_index":616,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.cepgate.check(input.condominium.cep.value",{"_index":1040,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"interfaces/IProps-6.html":{}}}],["this.checkcookie(token",{"_index":2459,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["this.checktoken(parsedtoken",{"_index":2460,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["this.checktoken(token",{"_index":217,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["this.cnpj.value",{"_index":618,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.collectionsrefs.condominium.cep.doc(condominium.cep",{"_index":955,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["this.collectionsrefs.condominium.cnpj.doc",{"_index":952,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["this.collectionsrefs.condominium.itself.doc(id",{"_index":958,"title":{},"body":{"injectables/CondominiumsFirestore.html":{}}}],["this.collectionsrefs.invite",{"_index":2210,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.invite.getinvitedoc(id",{"_index":2208,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.invite.getinvitedoc(inviteid",{"_index":2224,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.invite.itself",{"_index":2204,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.user",{"_index":2197,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.condominiumreluser",{"_index":2756,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.core",{"_index":2189,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.core.doc(input).get",{"_index":2723,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.core.doc(parseduser.id",{"_index":2758,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.core.doc(userid",{"_index":2227,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.user.cpfindex.doc",{"_index":2761,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.cpfindex.doc(user.cpf",{"_index":2226,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.collectionsrefs.user.emailindex.doc",{"_index":2759,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.collectionsrefs.user.emailindex.doc(user.email",{"_index":2225,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["this.comparator(this.value",{"_index":2543,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["this.condominiumid",{"_index":1813,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.condominiumid.value",{"_index":1784,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["this.condominiumrepo.create",{"_index":1041,"title":{},"body":{"injectables/CreateCondominiumService.html":{},"interfaces/IProps-6.html":{}}}],["this.condominiums",{"_index":2032,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["this.condominiums.find((item",{"_index":2036,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["this.condominiums.push(input.condominium",{"_index":2040,"title":{},"body":{"classes/InMemoryCondominium.html":{}}}],["this.content",{"_index":1541,"title":{},"body":{"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{}}}],["this.cookieadapter.validatesignedcookie",{"_index":2450,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["this.cpf.value",{"_index":1947,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.createcondominium.exec",{"_index":695,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["this.createdat",{"_index":619,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["this.createtoken.exec",{"_index":2609,"title":{},"body":{"controllers/UserController.html":{}}}],["this.createuser.exec",{"_index":2638,"title":{},"body":{"controllers/UserController.html":{}}}],["this.crypt",{"_index":1664,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["this.crypt.compare",{"_index":440,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["this.crypt.hash(input.user.password.value",{"_index":1126,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["this.crypt.hashwithhmac",{"_index":477,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["this.cryptadapter.hashwithhmac",{"_index":1563,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["this.deleteuserservice.exec",{"_index":713,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["this.email.send",{"_index":1601,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["this.email.value",{"_index":1781,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["this.emailadapter.send",{"_index":1572,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["this.entity",{"_index":1322,"title":{},"body":{"classes/EntitieError.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-3.html":{},"classes/InMemoryError.html":{}}}],["this.expiresat",{"_index":1785,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["this.find",{"_index":2688,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.find(tobesearched",{"_index":2539,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["this.firestore.instance",{"_index":947,"title":{},"body":{"injectables/CondominiumsFirestore.html":{},"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["this.firestore.instance.collection",{"_index":537,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.firestore.instance.collection('index/condominiums/cep",{"_index":540,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.firestore.instance.collection('index/condominiums/cnpj",{"_index":539,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.firestore.instance.collection('index/users/cpf",{"_index":552,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.firestore.instance.collection('index/users/email",{"_index":550,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.gencode(input.userid",{"_index":1600,"title":{},"body":{"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{}}}],["this.generateinvite",{"_index":1569,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["this.genhmacdata(input",{"_index":323,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["this.geninvite.exec",{"_index":697,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["this.geninviteservice.exec",{"_index":718,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["this.gentfa.exec",{"_index":2646,"title":{},"body":{"controllers/UserController.html":{}}}],["this.getcondominiumreluserservice.exec",{"_index":2651,"title":{},"body":{"controllers/UserController.html":{}}}],["this.httpadapter.call",{"_index":2000,"title":{},"body":{"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["this.httpcode",{"_index":57,"title":{},"body":{"classes/AdapterError.html":{},"interfaces/IProps-2.html":{}}}],["this.id",{"_index":1815,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.id.equalto(input.id",{"_index":623,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.id.value",{"_index":621,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["this.invite.itself.doc(id",{"_index":544,"title":{},"body":{"injectables/CollectionsRefService.html":{}}}],["this.inviterepo.create",{"_index":1571,"title":{},"body":{"injectables/GenInviteService.html":{},"interfaces/IProps-10.html":{}}}],["this.inviterepo.find",{"_index":1672,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["this.inviterepo.transfertouserresources",{"_index":1133,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["this.invites",{"_index":2071,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.invites.find",{"_index":2076,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.invites.find((item",{"_index":2085,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.invites.findindex((item",{"_index":2089,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.invites.push(input.invite",{"_index":2084,"title":{},"body":{"classes/InMemoryInvite.html":{}}}],["this.jwtservice",{"_index":195,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["this.jwtservice.signasync(accessjwtbody",{"_index":1073,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["this.jwtservice.signasync(refreshjwtbody",{"_index":1080,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["this.logger",{"_index":1872,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.logger.error",{"_index":98,"title":{},"body":{"classes/AdapterErrorFilter.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/EntitieErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"interfaces/IBodyProps.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{},"classes/ThrottlerErrorFilter.html":{},"controllers/UserController.html":{}}}],["this.logger.info",{"_index":2324,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.mapkeybasedonlevel(input.invite.type.value",{"_index":1658,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["this.message",{"_index":59,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/InMemoryError.html":{},"classes/ServiceErrors.html":{}}}],["this.name",{"_index":55,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/InMemoryError.html":{},"classes/ServiceErrors.html":{}}}],["this.name.value",{"_index":615,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.num.value",{"_index":617,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.otps.find",{"_index":2101,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["this.otps.findindex",{"_index":2109,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["this.otps.push",{"_index":2105,"title":{},"body":{"classes/InMemoryOTP.html":{}}}],["this.password.value",{"_index":1946,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.phonenumber.value",{"_index":1948,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.possibleerrors.find((item",{"_index":1207,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IPrismaError.html":{},"interfaces/IServiceErrors.html":{},"classes/PrismaErrorFilter.html":{},"classes/ServiceErrorFilter.html":{}}}],["this.prisma.$transaction",{"_index":2273,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.condominium.create",{"_index":801,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["this.prisma.condominium.findfirst",{"_index":805,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["this.prisma.condominiumreluser.create",{"_index":2276,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.condominiumreluser.findfirst",{"_index":2681,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.prisma.condominiumreluser.findmany",{"_index":2684,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.prisma.invite.create",{"_index":2268,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.invite.delete",{"_index":2274,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.invite.findfirst",{"_index":2269,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.user.create",{"_index":2275,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["this.prisma.user.delete",{"_index":2690,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.prisma.user.findfirst",{"_index":2678,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["this.processtokens(res",{"_index":2641,"title":{},"body":{"controllers/UserController.html":{}}}],["this.props",{"_index":605,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/InMemoryContainer.html":{},"classes/Index.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["this.props.apartmentnumber",{"_index":862,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.apartmentnumber.value",{"_index":863,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.block",{"_index":860,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.block.value",{"_index":861,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.cep",{"_index":635,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.cep.equalto(input.cep",{"_index":625,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.cnpj",{"_index":640,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.cnpj.equalto(input.cnpj",{"_index":627,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.code",{"_index":1820,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.props.code.equalto(input.code",{"_index":1818,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.props.condominiumid",{"_index":867,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{},"classes/OTP.html":{}}}],["this.props.condominiumid.value",{"_index":864,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.cpf",{"_index":1961,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.createdat",{"_index":628,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/OTP.html":{},"classes/User.html":{}}}],["this.props.email",{"_index":1790,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["this.props.expiresat",{"_index":1792,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["this.props.level",{"_index":875,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.level.value",{"_index":859,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.props.name",{"_index":632,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.name.equalto(input.name",{"_index":624,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.num",{"_index":638,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.num.equalto(input.num",{"_index":626,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{}}}],["this.props.password",{"_index":1959,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.phonenumber",{"_index":1963,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.ref",{"_index":1771,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["this.props.requiredlevel",{"_index":1819,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.props.ttl",{"_index":1791,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{},"classes/OTP.html":{}}}],["this.props.type",{"_index":1793,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["this.props.updatedat",{"_index":630,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.props.userid",{"_index":878,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.props.userid.value",{"_index":865,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["this.ref",{"_index":1774,"title":{},"body":{"interfaces/IIndexProps.html":{},"classes/Index.html":{}}}],["this.requiredlevel.equalto(input.requiredlevel",{"_index":1817,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.searchbyfield",{"_index":2730,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.searchbyid(input.key.value",{"_index":2728,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["this.setglobalfilters",{"_index":1905,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.setglobalinteceptors",{"_index":1903,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.setglobalpipes",{"_index":1904,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["this.status",{"_index":2436,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.tag",{"_index":1178,"title":{},"body":{"classes/DatabaseCustomError.html":{},"classes/GatewayErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{}}}],["this.ttl",{"_index":1782,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{},"classes/OTP.html":{}}}],["this.type.value",{"_index":1783,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["this.untrackableerrors.find((item",{"_index":1614,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["this.updatedat",{"_index":620,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["this.userid",{"_index":1811,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{}}}],["this.userrepo.delete",{"_index":1258,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{}}}],["this.userrepo.find",{"_index":219,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["this.userrepo.getallcondominiumrelation",{"_index":1631,"title":{},"body":{"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-12.html":{}}}],["this.userrepo.getcondominiumrelation",{"_index":225,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["this.users",{"_index":2073,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["this.users.find",{"_index":2080,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["this.users.find((item",{"_index":2140,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.users.findindex((item",{"_index":2156,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.users.push",{"_index":2136,"title":{},"body":{"classes/InMemoryUser.html":{}}}],["this.validate",{"_index":1674,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["this.validate(password",{"_index":449,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["this.validate(user",{"_index":490,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["this.validatebody(body",{"_index":508,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["this.value",{"_index":2540,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["this.value.size",{"_index":2541,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["throttle",{"_index":2601,"title":{},"body":{"controllers/UserController.html":{}}}],["throttler",{"_index":2480,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["throttlererrorfilter",{"_index":1851,"title":{"classes/ThrottlerErrorFilter.html":{}},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ThrottlerErrorFilter.html":{}}}],["throttlererrorfilter(this.logger",{"_index":1899,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["throttlerexception",{"_index":2482,"title":{},"body":{"classes/ThrottlerErrorFilter.html":{}}}],["throttlerguard",{"_index":1698,"title":{},"body":{"modules/HttpModule.html":{}}}],["throttlermodule",{"_index":1699,"title":{},"body":{"modules/HttpModule.html":{}}}],["throttlermodule.forroot",{"_index":1705,"title":{},"body":{"modules/HttpModule.html":{}}}],["throw",{"_index":199,"title":{},"body":{"guards/AdminJwt.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CondominiumPrismaRepo.html":{},"injectables/CondominiumsFirestore.html":{},"injectables/DeleteUserService.html":{},"classes/Email.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-9.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{}}}],["throwtfa",{"_index":283,"title":{},"body":{"classes/Auth.html":{}}}],["throwtfa(user",{"_index":287,"title":{},"body":{"classes/Auth.html":{}}}],["time",{"_index":2917,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":736,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{}}}],["tinputotpprops",{"_index":1809,"title":{},"body":{"interfaces/IOTPProps.html":{},"classes/OTP.html":{},"miscellaneous/typealiases.html":{}}}],["tinputpropscondominium",{"_index":563,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/typealiases.html":{}}}],["tinputpropsuser",{"_index":1939,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["tinviteinobject",{"_index":1716,"title":{},"body":{"interfaces/IConvertToObject-1.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"miscellaneous/typealiases.html":{}}}],["tipo",{"_index":1913,"title":{},"body":{"interfaces/IProps-1.html":{},"guards/RefreshTokenGuard.html":{},"miscellaneous/functions.html":{}}}],["tobeiterated",{"_index":2522,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["tobeiterated.values",{"_index":2534,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["tobesearched",{"_index":2520,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["toclass",{"_index":746,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["toclass(input",{"_index":748,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTPMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["toclass(undefined",{"_index":895,"title":{},"body":{"classes/CondominiumRelUserMapper.html":{}}}],["toda",{"_index":3119,"title":{},"body":{"index.html":{}}}],["todas",{"_index":3014,"title":{},"body":{"index.html":{}}}],["todos",{"_index":2969,"title":{},"body":{"index.html":{}}}],["token",{"_index":179,"title":{},"body":{"guards/AdminJwt.html":{},"classes/Auth.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-7.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"miscellaneous/enumerations.html":{}}}],["token=')[1",{"_index":2457,"title":{},"body":{"guards/RefreshTokenGuard.html":{}}}],["tokendata",{"_index":193,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["tokens",{"_index":2441,"title":{},"body":{"guards/RefreshTokenGuard.html":{},"controllers/UserController.html":{}}}],["tokens')@httpcode(200",{"_index":2594,"title":{},"body":{"controllers/UserController.html":{}}}],["tokentype",{"_index":1058,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IProps-7.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.accesstoken",{"_index":1072,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["tokentype.refreshtoken",{"_index":1079,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"guards/RefreshTokenGuard.html":{}}}],["tokentypes",{"_index":186,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["toobject",{"_index":747,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/InviteMapper.html":{},"classes/OTPMapper.html":{},"classes/UserMapper.html":{}}}],["toobject(input",{"_index":754,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/OTPMapper.html":{},"classes/UserMapper.html":{}}}],["toomanyentities",{"_index":1156,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["toprisma",{"_index":765,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["toprisma(input",{"_index":769,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["tovalidate",{"_index":399,"title":{},"body":{"classes/CPF.html":{}}}],["toverride",{"_index":2848,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["transaction",{"_index":2187,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/UsersFirestore.html":{}}}],["transaction.create(inviteref",{"_index":2209,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["transaction.delete(condominiumreluser",{"_index":2766,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["transaction.delete(refs.core",{"_index":2767,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["transaction.delete(refs.cpfindex",{"_index":2769,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["transaction.delete(refs.emailindex",{"_index":2768,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["transaction.get(condominiumreluserquery).then((res",{"_index":2201,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["transaction.get(getuserquery).then((res",{"_index":2192,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["transferir",{"_index":2283,"title":{},"body":{"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["transfertouserresources",{"_index":2054,"title":{"interfaces/transferToUserResources.html":{}},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["transfertouserresources(input",{"_index":2067,"title":{},"body":{"classes/InMemoryInvite.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{}}}],["transform",{"_index":3193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transforma",{"_index":730,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"classes/InviteFirestoreMapper.html":{},"classes/UserFirestoreMapper.html":{}}}],["transformer",{"_index":439,"title":{},"body":{"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{},"dependencies.html":{}}}],["transport",{"_index":2360,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["transport.sendmail",{"_index":2367,"title":{},"body":{"classes/NodemailerAdapter.html":{}}}],["treplace",{"_index":889,"title":{},"body":{"classes/CondominiumRelUserFirestoreMapper.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"miscellaneous/typealiases.html":{}}}],["trigger",{"_index":2729,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["troque",{"_index":3053,"title":{},"body":{"index.html":{}}}],["true",{"_index":223,"title":{},"body":{"guards/AdminJwt.html":{},"modules/AppModule.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRepo.html":{},"injectables/FirestoreService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-11.html":{},"interfaces/ISuccess.html":{},"interfaces/IValidate.html":{},"injectables/InviteFirestore.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"injectables/PrismaService.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":318,"title":{},"body":{"classes/BcryptAdapter.html":{}}}],["ts",{"_index":3190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tserviceexecinput",{"_index":1971,"title":{},"body":{"classes/IService.html":{},"miscellaneous/typealiases.html":{}}}],["tserviceexecreturn",{"_index":1973,"title":{},"body":{"classes/IService.html":{},"miscellaneous/typealiases.html":{}}}],["ttl",{"_index":1455,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"injectables/GenInviteService.html":{},"modules/HttpModule.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"controllers/UserController.html":{}}}],["tudo",{"_index":3072,"title":{},"body":{"index.html":{}}}],["tuserclasstoobject",{"_index":1758,"title":{},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IUserInObject.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"miscellaneous/typealiases.html":{}}}],["tvalidatesignedcookiereturn",{"_index":972,"title":{},"body":{"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IValidateSignedCookie.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":38,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"classes/ApartmentNumber.html":{},"classes/Auth.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/Condominium.html":{},"controllers/CondominiumController.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/CondominiumRepo.html":{},"injectables/CondominiumsFirestore.html":{},"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"injectables/CreateTokenService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/CryptAdapter.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DateFormats.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/EchoguardAdapter.html":{},"classes/Email.html":{},"classes/EmailAdapter.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"injectables/FirestoreService.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"classes/GenericErrorFilter.html":{},"injectables/GetCondominiumRelUserService.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"classes/HttpAdapter.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICheckCep.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/ICreateOTPInput.html":{},"interfaces/ICryptCompare.html":{},"interfaces/ICryptHmac.html":{},"interfaces/IDeleteOTPInput.html":{},"interfaces/IFindOTPInput.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IIndexProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/ILoggerDefaultProps.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-13.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/ISendMailContent.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/ISuccess.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"interfaces/IValidateSignedCookie.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryError.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Index.html":{},"classes/Invite.html":{},"injectables/InviteFirestore.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InviteMapper.html":{},"classes/InvitePrismaMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerAdapter.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/NodemailerAdapter.html":{},"classes/NotFoundFilter.html":{},"classes/Num.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"classes/OTPRepo.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"injectables/ViacepGateway.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3171,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1670,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["typescript",{"_index":2215,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["t|j)s",{"_index":3205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u",{"_index":3146,"title":{},"body":{"index.html":{}}}],["uf",{"_index":415,"title":{},"body":{"classes/CepGateway.html":{},"classes/CepGatewaySpy.html":{},"interfaces/ICheckCep.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["um",{"_index":160,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"injectables/CreateCondominiumService.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/DeleteUserDTO.html":{},"injectables/DeleteUserService.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"injectables/GenInviteService.html":{},"injectables/GetCondominiumRelUserService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-6.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"injectables/InviteFirestore.html":{},"classes/InviteMapper.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"guards/SuperAdminJwt.html":{},"classes/UUIDGroup.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["uma",{"_index":756,"title":{},"body":{"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/EntitieErrorFilter.html":{},"classes/FetchAdapter.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"classes/IService.html":{},"interfaces/IUserInObject.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["unauthorized",{"_index":1934,"title":{},"body":{"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":42,"title":{},"body":{"classes/AdapterError.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/DeleteUserDTO.html":{},"classes/Entity.html":{},"classes/FetchAdapter.html":{},"guards/HmacInviteGuard.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-8.html":{},"interfaces/IValidate.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/OTP.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["undefined})@isoptional",{"_index":1088,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["undefined})@maxlength(undefined.maxlength",{"_index":987,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["undefined})@min(undefined.minlength",{"_index":998,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["undefined})@minlength(undefined.minlength",{"_index":990,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["unit",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["unitários",{"_index":3137,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":180,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateTokenService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/ILoggerDefaultProps.html":{},"guards/JwtGuard.html":{},"classes/LoggerAdapter.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UsersFirestore.html":{},"miscellaneous/enumerations.html":{}}}],["unparsedcondominium",{"_index":804,"title":{},"body":{"injectables/CondominiumPrismaRepo.html":{}}}],["unparsedcondominiumrelgroup",{"_index":2683,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["unparsedcondominiumrelgroup.map((item",{"_index":2686,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["unparsedcondominiumreluser",{"_index":2680,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["unparseddata",{"_index":2742,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["unparsedinvite",{"_index":2238,"title":{},"body":{"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{}}}],["unparseduser",{"_index":2677,"title":{},"body":{"injectables/UserPrismaRepo.html":{},"injectables/UsersFirestore.html":{}}}],["untrackableerrors",{"_index":1608,"title":{},"body":{"classes/GenericErrorFilter.html":{},"interfaces/IUntrackableErrors.html":{}}}],["unused",{"_index":2217,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["up",{"_index":3073,"title":{},"body":{"index.html":{}}}],["upcom",{"_index":3078,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":561,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IAccessTokenBody.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IRefreshTokenBody.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/User.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"miscellaneous/variables.html":{}}}],["updatedat(input",{"_index":881,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["updateday",{"_index":604,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IPropsCondominium.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1395,"title":{},"body":{"classes/FetchAdapter.html":{},"classes/HttpAdapter.html":{},"interfaces/IHttpClientCall.html":{},"interfaces/IHttpClientCallReturn.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["usada",{"_index":3007,"title":{},"body":{"index.html":{}}}],["usado",{"_index":20,"title":{},"body":{"classes/AdapterError.html":{},"classes/AdapterErrorFilter.html":{},"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/CondominiumMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRepo.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DatabaseCustomError.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/DeleteUserDTO.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"classes/GatewayErrors.html":{},"classes/GenericErrorFilter.html":{},"classes/GuardErrorFilter.html":{},"classes/GuardErrors.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IBodyProps.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/IConvertToObject.html":{},"interfaces/IConvertToObject-1.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGatewayError.html":{},"interfaces/IIndexProps.html":{},"interfaces/IPrismaError.html":{},"interfaces/IProps-1.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/IService.html":{},"interfaces/IServiceErrors.html":{},"interfaces/IUntrackableErrors.html":{},"interfaces/IUserInObject.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteMapper.html":{},"classes/InviteRepo.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"injectables/LogInterceptor.html":{},"classes/LoginDTO.html":{},"classes/NotFoundFilter.html":{},"classes/PrismaErrorFilter.html":{},"guards/RefreshTokenGuard.html":{},"classes/ServiceErrorFilter.html":{},"classes/ServiceErrors.html":{},"guards/SuperAdminJwt.html":{},"classes/ThrottlerErrorFilter.html":{},"classes/UserMapper.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["usamos",{"_index":2900,"title":{},"body":{"index.html":{}}}],["usando",{"_index":377,"title":{},"body":{"classes/CPF.html":{},"injectables/LogInterceptor.html":{},"index.html":{}}}],["usar",{"_index":925,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/Entity.html":{},"classes/InviteRepo.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["use",{"_index":25,"title":{},"body":{"classes/AdapterError.html":{},"classes/DatabaseCustomError.html":{},"classes/EntitieError.html":{},"classes/Entity.html":{},"classes/GatewayErrors.html":{},"classes/GuardErrors.html":{},"interfaces/IProps-15.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-2.html":{},"interfaces/IProps-3.html":{},"interfaces/IProps-4.html":{},"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["useclass",{"_index":145,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{}}}],["useguards",{"_index":666,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["useguards(adminjwt",{"_index":716,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["useguards(checkpasswordguard",{"_index":2642,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(checkpasswordguard)@post('launch",{"_index":2584,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(checktfacodeguard",{"_index":2654,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(checktfacodeguard)@post('login')@httpcode(200",{"_index":2588,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(hmacinviteguard",{"_index":2622,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(hmacinviteguard)@post('accept",{"_index":2575,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":2647,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@delete()@httpcode(204",{"_index":2578,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtguard)@get()@httpcode(200",{"_index":2581,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(refreshtokenguard",{"_index":2656,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(refreshtokenguard)@get('get",{"_index":2593,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(superadminjwt",{"_index":705,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["user",{"_index":218,"title":{"classes/User.html":{}},"body":{"guards/AdminJwt.html":{},"classes/Auth.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CollectionsRefService.html":{},"controllers/CondominiumController.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/Entity.html":{},"injectables/GenTFAService.html":{},"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserDataCore.html":{},"interfaces/IUserInObject.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"classes/NodemailerAdapter.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"classes/ValueObject.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"miscellaneous/enumerations.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["user')@useguards(adminjwt)@httpcode(204",{"_index":663,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["user')@useguards(superadminjwt)@httpcode(204",{"_index":660,"title":{},"body":{"controllers/CondominiumController.html":{}}}],["user.createdat",{"_index":1069,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["user.email",{"_index":474,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"controllers/CondominiumController.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"controllers/UserController.html":{}}}],["user.email.value",{"_index":1067,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["user.id",{"_index":227,"title":{},"body":{"guards/AdminJwt.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/CreateTokenService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{}}}],["user.id.value",{"_index":1066,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{},"injectables/UserPrismaRepo.html":{}}}],["user.name.value",{"_index":1068,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["user.password",{"_index":1128,"title":{},"body":{"injectables/CreateUserService.html":{},"interfaces/IProps-8.html":{}}}],["user.password.value",{"_index":450,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["user.phonenumber.value",{"_index":1071,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["user.updatedat",{"_index":1070,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["userarr",{"_index":1748,"title":{},"body":{"interfaces/IInMemoryContainerProps.html":{},"interfaces/IInMemoryUserContainer.html":{},"classes/InMemoryContainer.html":{}}}],["userasobject",{"_index":2652,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":1686,"title":{"controllers/UserController.html":{}},"body":{"modules/HttpModule.html":{},"controllers/UserController.html":{}}}],["userdtorules",{"_index":373,"title":{},"body":{"classes/CPF.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IPropsUser.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"classes/Name.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["userdtorules.cpf.maxlength",{"_index":1108,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userdtorules.cpf.minlength",{"_index":1106,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userdtorules.email.maxlength",{"_index":1009,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/Email.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["userdtorules.name.maxlength",{"_index":1098,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/Name.html":{}}}],["userdtorules.name.minlength",{"_index":1100,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userdtorules.password.maxlength",{"_index":1102,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{},"classes/Password.html":{}}}],["userdtorules.password.minlength",{"_index":1104,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["userdtorules.phonenumber.maxlength",{"_index":1114,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/PhoneNumber.html":{}}}],["userdtorules.phonenumber.minlength",{"_index":1116,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userfactory",{"_index":2845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userfactory(input",{"_index":2864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userfirestoremapper",{"_index":1760,"title":{"classes/UserFirestoreMapper.html":{}},"body":{"interfaces/IIncomingFirestoreUserData.html":{},"classes/UserFirestoreMapper.html":{},"injectables/UsersFirestore.html":{}}}],["userfirestoremapper.fromfirebasetoclass(parseduser",{"_index":2737,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["userfirestoremapper.fromfirebasetoobject(semiparseduser",{"_index":2754,"title":{},"body":{"injectables/UsersFirestore.html":{}}}],["userid",{"_index":226,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"injectables/CreateTokenService.html":{},"injectables/CreateUserService.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/ICondominiumRelUserInObject.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IConvertToObject-2.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IOTPInObject.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-7.html":{},"interfaces/IProps-8.html":{},"interfaces/IUserDataCore.html":{},"injectables/InviteFirestore.html":{},"classes/OTP.html":{},"classes/OTPMapper.html":{},"guards/SuperAdminJwt.html":{},"controllers/UserController.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{},"miscellaneous/variables.html":{}}}],["userid(input",{"_index":877,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["userid.value",{"_index":1077,"title":{},"body":{"injectables/CreateTokenService.html":{},"interfaces/IProps-7.html":{},"interfaces/IUserDataCore.html":{}}}],["usermapper",{"_index":2016,"title":{"classes/UserMapper.html":{}},"body":{"interfaces/IUserInObject.html":{},"injectables/InviteFirestore.html":{},"controllers/UserController.html":{},"classes/UserMapper.html":{}}}],["usermapper.toclass",{"_index":2637,"title":{},"body":{"controllers/UserController.html":{}}}],["usermapper.toobject(input.user",{"_index":2212,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["usermapper.toobject(user",{"_index":2653,"title":{},"body":{"controllers/UserController.html":{}}}],["userprisma",{"_index":2665,"title":{},"body":{"classes/UserPrismaMapper.html":{}}}],["userprismamapper",{"_index":2265,"title":{"classes/UserPrismaMapper.html":{}},"body":{"injectables/InvitePrismaRepo.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{}}}],["userprismamapper.toclass(unparseduser",{"_index":2679,"title":{},"body":{"injectables/UserPrismaRepo.html":{}}}],["userprismamapper.toprisma(input.user",{"_index":2271,"title":{},"body":{"injectables/InvitePrismaRepo.html":{}}}],["userprismarepo",{"_index":2424,"title":{"injectables/UserPrismaRepo.html":{}},"body":{"modules/PrismaModule.html":{},"injectables/UserPrismaRepo.html":{}}}],["userrepo",{"_index":171,"title":{"classes/UserRepo.html":{}},"body":{"guards/AdminJwt.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"injectables/DeleteUserService.html":{},"modules/FirestoreModule.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-9.html":{},"classes/InMemoryUser.html":{},"guards/JwtGuard.html":{},"modules/PrismaModule.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"overview.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces",{"_index":2131,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.create",{"_index":2116,"title":{},"body":{"classes/InMemoryUser.html":{},"classes/UserRepo.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.getallcondominiumrelation",{"_index":2126,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.getcondominiumrelation",{"_index":2129,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.remove",{"_index":2118,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.safesearch",{"_index":2120,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["userrepointerfaces.search",{"_index":2122,"title":{},"body":{"classes/InMemoryUser.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["users",{"_index":2053,"title":{},"body":{"classes/InMemoryInvite.html":{},"classes/InMemoryUser.html":{}}}],["usersfirestore",{"_index":1479,"title":{"injectables/UsersFirestore.html":{}},"body":{"modules/FirestoreModule.html":{},"injectables/UsersFirestore.html":{}}}],["uso",{"_index":1982,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["usuário",{"_index":161,"title":{},"body":{"guards/AdminJwt.html":{},"injectables/CondominiumPrismaRepo.html":{},"classes/CreateUserDTO.html":{},"injectables/CreateUserService.html":{},"classes/DatabaseCustomErrorFilter.html":{},"injectables/DeleteUserService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/IFirestoreErrors.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-8.html":{},"interfaces/IProps-9.html":{},"interfaces/IUserInObject.html":{},"injectables/InviteFirestore.html":{},"injectables/InvitePrismaRepo.html":{},"classes/Level.html":{},"injectables/LogInterceptor.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"guards/SuperAdminJwt.html":{},"classes/UserMapper.html":{},"classes/UserPrismaMapper.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create-2.html":{},"miscellaneous/functions.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch-1.html":{},"interfaces/search-1.html":{}}}],["usuários",{"_index":1241,"title":{},"body":{"classes/DeleteUserDTO.html":{},"classes/InviteRepo.html":{},"controllers/UserController.html":{},"interfaces/create-1.html":{},"interfaces/find.html":{},"interfaces/remove.html":{},"interfaces/safelyFind.html":{},"interfaces/transferToUserResources.html":{}}}],["utc",{"_index":1238,"title":{},"body":{"classes/DateFormats.html":{}}}],["util",{"_index":2513,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["utilizada",{"_index":920,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["utilizado",{"_index":2350,"title":{},"body":{"classes/Name.html":{},"index.html":{}}}],["utilizando",{"_index":1254,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{}}}],["utilizar",{"_index":1984,"title":{},"body":{"interfaces/IServiceErrors.html":{},"classes/ServiceErrorFilter.html":{}}}],["utilização",{"_index":773,"title":{},"body":{"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["uuid",{"_index":191,"title":{"classes/UUID.html":{}},"body":{"guards/AdminJwt.html":{},"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/CondominiumRepo.html":{},"injectables/CreateTokenService.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"injectables/GetCondominiumRelUserService.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IGenerateInviteKeyProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IProps-12.html":{},"interfaces/IProps-14.html":{},"interfaces/IProps-7.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"interfaces/IUserDataCore.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryUser.html":{},"classes/Invite.html":{},"classes/InviteRepo.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"injectables/UserPrismaRepo.html":{},"classes/UserRepo.html":{},"injectables/UsersFirestore.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["uuid(condominiumid",{"_index":228,"title":{},"body":{"guards/AdminJwt.html":{},"guards/SuperAdminJwt.html":{}}}],["uuid(id",{"_index":613,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["uuid(input.condominiumid",{"_index":1779,"title":{},"body":{"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"classes/Invite.html":{}}}],["uuid(tokendata.sub",{"_index":221,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["uuid(uuid",{"_index":2505,"title":{},"body":{"classes/UUID.html":{}}}],["uuid.check(item",{"_index":2528,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["uuid.genv4",{"_index":614,"title":{},"body":{"classes/Condominium.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/User.html":{}}}],["uuidgroup",{"_index":2506,"title":{"classes/UUIDGroup.html":{}},"body":{"classes/UUIDGroup.html":{}}}],["uuids",{"_index":2530,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["vai",{"_index":3107,"title":{},"body":{"index.html":{}}}],["valida",{"_index":1426,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["validade",{"_index":1645,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["validado",{"_index":1428,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["validar",{"_index":158,"title":{},"body":{"guards/AdminJwt.html":{},"classes/CPF.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IIndexProps.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"interfaces/IValidate.html":{},"classes/Index.html":{},"classes/InviteUserDTO.html":{},"guards/JwtGuard.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{},"classes/UUIDGroup.html":{}}}],["validate",{"_index":284,"title":{},"body":{"classes/Auth.html":{},"guards/CheckPasswordGuard.html":{},"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IProps-1.html":{}}}],["validate(data.body",{"_index":1917,"title":{},"body":{"interfaces/IProps-1.html":{}}}],["validate(input",{"_index":1652,"title":{},"body":{"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["validate(password",{"_index":430,"title":{},"body":{"guards/CheckPasswordGuard.html":{}}}],["validate(token",{"_index":289,"title":{},"body":{"classes/Auth.html":{}}}],["validate(user",{"_index":463,"title":{},"body":{"guards/CheckTFACodeGuard.html":{}}}],["validatebody",{"_index":493,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{}}}],["validatebody(input",{"_index":496,"title":{},"body":{"classes/ClassValidatorErrorFilter.html":{},"interfaces/IBodyProps.html":{}}}],["validatesignedcookie",{"_index":968,"title":{},"body":{"classes/CookieAdapter.html":{},"classes/CookieParserAdapter.html":{},"interfaces/IValidateSignedCookie.html":{}}}],["validatesignedcookie(data",{"_index":969,"title":{},"body":{"classes/CookieAdapter.html":{}}}],["validatesignedcookie(input",{"_index":975,"title":{},"body":{"classes/CookieParserAdapter.html":{}}}],["validationpipe",{"_index":1842,"title":{},"body":{"interfaces/IProps.html":{},"classes/RegistryAPIBootstrap.html":{}}}],["validationres",{"_index":489,"title":{},"body":{"guards/CheckTFACodeGuard.html":{},"guards/HmacInviteGuard.html":{},"interfaces/IValidate.html":{}}}],["validator",{"_index":392,"title":{},"body":{"classes/CPF.html":{},"classes/ClassValidatorErrorFilter.html":{},"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"interfaces/IBodyProps.html":{},"interfaces/IProps-1.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["validação",{"_index":1911,"title":{},"body":{"interfaces/IProps-1.html":{},"miscellaneous/functions.html":{}}}],["validos",{"_index":348,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{}}}],["valor",{"_index":340,"title":{},"body":{"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CondominiumRepo.html":{},"classes/Email.html":{},"classes/Entity.html":{},"classes/InviteRepo.html":{},"classes/UUIDGroup.html":{},"classes/UserRepo.html":{},"classes/ValueObject.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"index.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["valores",{"_index":347,"title":{},"body":{"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{}}}],["value",{"_index":236,"title":{},"body":{"classes/ApartmentNumber.html":{},"classes/BcryptAdapter.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/CepGatewaySpy.html":{},"classes/Code.html":{},"injectables/CollectionsRefService.html":{},"classes/CryptSpy.html":{},"classes/DatabaseCustomErrorFilter.html":{},"classes/Email.html":{},"classes/EmailSpy.html":{},"classes/EntitieError.html":{},"classes/EntitieErrorFilter.html":{},"classes/Entity.html":{},"classes/GatewayErrorFilter.html":{},"classes/GenericErrorFilter.html":{},"interfaces/IProps-3.html":{},"classes/InMemoryCondominium.html":{},"classes/InMemoryContainer.html":{},"classes/InMemoryInvite.html":{},"classes/InMemoryOTP.html":{},"classes/InMemoryUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/PrismaErrorFilter.html":{},"injectables/PrismaService.html":{},"classes/ServiceErrorFilter.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valueobject",{"_index":232,"title":{"classes/ValueObject.html":{}},"body":{"classes/ApartmentNumber.html":{},"classes/Block.html":{},"classes/CEP.html":{},"classes/CNPJ.html":{},"classes/CPF.html":{},"classes/Code.html":{},"classes/CondominiumRelUser.html":{},"classes/Email.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IPropsUser.html":{},"classes/Level.html":{},"classes/Name.html":{},"classes/Num.html":{},"classes/Password.html":{},"classes/PhoneNumber.html":{},"classes/UUID.html":{},"classes/UUIDGroup.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/ValueObject.html":{}}}],["valueobject.build",{"_index":852,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.build(apartmentnumber",{"_index":2639,"title":{},"body":{"controllers/UserController.html":{}}}],["valueobject.build(block",{"_index":855,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"controllers/UserController.html":{}}}],["valueobject.build(level",{"_index":847,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.build(uuid",{"_index":845,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.compare",{"_index":866,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.compare(this._id",{"_index":1949,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.cpf",{"_index":1952,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.email",{"_index":1957,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.name",{"_index":1956,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.password",{"_index":1954,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.phonenumber",{"_index":1950,"title":{},"body":{"interfaces/IPropsUser.html":{},"classes/User.html":{}}}],["valueobject.compare(this.props.block",{"_index":869,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.compare(this.props.level",{"_index":871,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["valueobject.compare(this.props.userid",{"_index":872,"title":{},"body":{"classes/CondominiumRelUser.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{}}}],["values",{"_index":1368,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{}}}],["vamos",{"_index":3070,"title":{},"body":{"index.html":{}}}],["variables",{"_index":3178,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variável",{"_index":3006,"title":{},"body":{"index.html":{}}}],["vars",{"_index":2218,"title":{},"body":{"injectables/InviteFirestore.html":{},"controllers/UserController.html":{}}}],["ver",{"_index":686,"title":{},"body":{"controllers/CondominiumController.html":{},"controllers/UserController.html":{}}}],["verbosememoryleak",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["verificadores",{"_index":391,"title":{},"body":{"classes/CPF.html":{}}}],["verifique",{"_index":1515,"title":{},"body":{"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{}}}],["verifyasync(token",{"_index":196,"title":{},"body":{"guards/AdminJwt.html":{},"guards/JwtGuard.html":{},"guards/RefreshTokenGuard.html":{},"guards/SuperAdminJwt.html":{}}}],["vez",{"_index":3120,"title":{},"body":{"index.html":{}}}],["viabilizando",{"_index":2956,"title":{},"body":{"index.html":{}}}],["viacepgateway",{"_index":1547,"title":{"injectables/ViacepGateway.html":{}},"body":{"modules/GatewayModule.html":{},"interfaces/ISuccess.html":{},"injectables/ViacepGateway.html":{}}}],["vida",{"_index":2878,"title":{},"body":{"index.html":{}}}],["vinculado",{"_index":1200,"title":{},"body":{"classes/DatabaseCustomErrorFilter.html":{},"interfaces/IFirestoreErrors.html":{}}}],["vindo",{"_index":1576,"title":{},"body":{"injectables/GenInviteService.html":{},"injectables/GenTFAService.html":{},"interfaces/IProps-10.html":{},"interfaces/IProps-11.html":{},"guards/JwtGuard.html":{}}}],["vindos",{"_index":729,"title":{},"body":{"classes/CondominiumFirestoreMapper.html":{},"classes/CondominiumPrismaMapper.html":{},"classes/CondominiumRelUserFirestoreMapper.html":{},"classes/CondominiumRelUserPrismaMapper.html":{},"classes/DatabaseCustomError.html":{},"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"interfaces/IIncomingFirestoreCondominiumData.html":{},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{},"interfaces/IIncomingFirestoreInviteData.html":{},"interfaces/IIncomingFirestoreUserData.html":{},"interfaces/IProps-16.html":{},"interfaces/IProps-5.html":{},"classes/InviteFirestoreMapper.html":{},"classes/InvitePrismaMapper.html":{},"classes/ServiceErrors.html":{},"classes/UserFirestoreMapper.html":{},"classes/UserPrismaMapper.html":{}}}],["virtual",{"_index":933,"title":{},"body":{"classes/CondominiumRepo.html":{},"classes/InviteRepo.html":{},"classes/UserRepo.html":{},"interfaces/create.html":{},"interfaces/create-1.html":{},"interfaces/create-2.html":{},"interfaces/find.html":{},"interfaces/getAllCondominiumRelation.html":{},"interfaces/getCondominiumRelation.html":{},"interfaces/remove.html":{},"interfaces/remove-1.html":{},"interfaces/safeSearch.html":{},"interfaces/safeSearch-1.html":{},"interfaces/safelyFind.html":{},"interfaces/search.html":{},"interfaces/search-1.html":{},"interfaces/transferToUserResources.html":{}}}],["virtualização",{"_index":2946,"title":{},"body":{"index.html":{}}}],["visualizar",{"_index":3054,"title":{},"body":{"index.html":{}}}],["vo",{"_index":594,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/Entity.html":{},"interfaces/ICondominiumRelUserProps.html":{},"interfaces/IInputCondominiumRelUser.html":{},"interfaces/IInputPropsInvite.html":{},"interfaces/IOTPProps.html":{},"interfaces/IProps-14.html":{},"interfaces/IPropsCondominium.html":{},"interfaces/IPropsUser.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["voc",{"_index":1252,"title":{},"body":{"injectables/DeleteUserService.html":{},"interfaces/IProps-9.html":{},"classes/NotFoundFilter.html":{},"index.html":{}}}],["voenum",{"_index":1348,"title":{},"body":{"classes/Entity.html":{},"classes/ValueObject.html":{},"miscellaneous/enumerations.html":{}}}],["void",{"_index":577,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/IService.html":{},"classes/InMemoryContainer.html":{},"classes/RegistryAPIBootstrap.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["vontade",{"_index":3150,"title":{},"body":{"index.html":{}}}],["válido",{"_index":1006,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["válido'})@maxlength(undefined.maxlength",{"_index":993,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["válidos",{"_index":1005,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/GatewayErrorFilter.html":{},"interfaces/IGatewayError.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["válidos'})@isemail",{"_index":992,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/DeleteUserDTO.html":{},"classes/InviteUserDTO.html":{},"classes/LaunchTFADTO.html":{},"classes/LoginDTO.html":{}}}],["válidos'})@maxlength(undefined.maxlength",{"_index":989,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{},"classes/LoginDTO.html":{}}}],["válidos'})@minlength(undefined.minlength",{"_index":986,"title":{},"body":{"classes/CreateCondominiumDTO.html":{},"classes/CreateUserDTO.html":{}}}],["warn",{"_index":1266,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"classes/LoggerAdapter.html":{}}}],["warn(`alert",{"_index":1419,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["warn(`warn",{"_index":1418,"title":{},"body":{"classes/FirebaseLoggerAdapter.html":{}}}],["warn(input",{"_index":1283,"title":{},"body":{"classes/EchoguardAdapter.html":{},"classes/FirebaseLoggerAdapter.html":{},"interfaces/ILoggerDefaultProps.html":{},"classes/LoggerAdapter.html":{}}}],["wasfinded",{"_index":2532,"title":{},"body":{"classes/UUIDGroup.html":{}}}],["where('condominiumid",{"_index":2205,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["where('email",{"_index":2190,"title":{},"body":{"injectables/InviteFirestore.html":{}}}],["wildcard",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["windows",{"_index":3034,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":1161,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["wronginputlevel",{"_index":1160,"title":{},"body":{"classes/DatabaseCustomError.html":{},"interfaces/IProps-16.html":{},"miscellaneous/enumerations.html":{}}}],["wrongserviceusage",{"_index":1933,"title":{},"body":{"interfaces/IProps-5.html":{},"classes/ServiceErrors.html":{},"miscellaneous/enumerations.html":{}}}],["xito",{"_index":3102,"title":{},"body":{"index.html":{}}}],["yes",{"_index":566,"title":{},"body":{"classes/Condominium.html":{},"classes/CondominiumRelUser.html":{},"classes/IService.html":{},"classes/Invite.html":{},"classes/OTP.html":{},"classes/User.html":{},"classes/ValueObject.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":1430,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["z.instanceof(timestamp",{"_index":1439,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["z.object",{"_index":1433,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["z.optional",{"_index":1445,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["z.string().email",{"_index":1460,"title":{},"body":{"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["z.string().length(condominiumdtorules.cep.minlength",{"_index":1437,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["z.string().length(condominiumdtorules.cnpj.minlength",{"_index":1438,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{}}}],["z.string().length(userdtorules.cpf.minlength",{"_index":1471,"title":{},"body":{"classes/FirestoreGetUserDTO.html":{}}}],["z.string().max(condominiumreluserdtorules.block.maxlength",{"_index":1446,"title":{},"body":{"classes/FirestoreGetCondominiumRelUserDTO.html":{}}}],["z.string().uuid",{"_index":1434,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{}}}],["zod",{"_index":1431,"title":{},"body":{"classes/FirestoreGetCondominiumDTO.html":{},"classes/FirestoreGetCondominiumRelUserDTO.html":{},"classes/FirestoreGetInviteDTO.html":{},"classes/FirestoreGetUserDTO.html":{},"dependencies.html":{}}}],["zoom",{"_index":126,"title":{},"body":{"modules/AdaptersModule.html":{},"modules/AppModule.html":{},"modules/FirestoreModule.html":{},"modules/GatewayModule.html":{},"modules/HttpModule.html":{},"modules/PrismaModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdapterError.html":{"url":"classes/AdapterError.html","title":"class - AdapterError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdapterError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/adapter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                httpCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/errors/adapter.ts:7\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de adaptadores, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        httpCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/errors/adapter.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        interface IProps {\n\tmessage: string;\n\thttpCode?: number;\n}\n\nexport class AdapterError extends Error {\n\treadonly httpCode: number | undefined;\n\n\t/**\n\t * Erro customizado usado na camada de adaptadores, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input- Deve conter a mensagem do erro e o código http\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Adapter Error';\n\t\tthis.httpCode = input.httpCode;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdapterErrorFilter.html":{"url":"classes/AdapterErrorFilter.html","title":"class - AdapterErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdapterErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/adapter.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Adapters\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/adapter.filter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: AdapterError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/adapter.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            AdapterError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { AdapterError } from '@registry:app/errors/adapter';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros dos Adapters */\n@Catch(AdapterError)\nexport class AdapterErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(exception: AdapterError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.adapter,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdaptersModule.html":{"url":"modules/AdaptersModule.html","title":"module - AdaptersModule","body":"\n                   \n\n\n\n\n    Modules\n    AdaptersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdaptersModule\n\n\n\ncluster_AdaptersModule_exports\n\n\n\n\nCookieAdapter \n\nCookieAdapter \n\n\n\nCryptAdapter \n\nCryptAdapter \n\n\n\nEmailAdapter \n\nEmailAdapter \n\n\n\nHttpAdapter \n\nHttpAdapter \n\n\n\nLoggerAdapter \n\nLoggerAdapter \n\n\n\nAdaptersModule\n\nAdaptersModule\n\nCookieAdapter  -->\n\nAdaptersModule->CookieAdapter \n\n\n\nCryptAdapter  -->\n\nAdaptersModule->CryptAdapter \n\n\n\nEmailAdapter  -->\n\nAdaptersModule->EmailAdapter \n\n\n\nHttpAdapter  -->\n\nAdaptersModule->HttpAdapter \n\n\n\nLoggerAdapter  -->\n\nAdaptersModule->LoggerAdapter \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/app/adapters/adapter.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CookieAdapter\n                        \n                        \n                            CryptAdapter\n                        \n                        \n                            EmailAdapter\n                        \n                        \n                            HttpAdapter\n                        \n                        \n                            LoggerAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { EmailAdapter } from './email';\nimport { NodemailerAdapter } from './nodemailer/nodemailerAdapter';\nimport { CryptAdapter } from './crypt';\nimport { BcryptAdapter } from './bcrypt/bcryptAdapter';\nimport { HttpAdapter } from './http';\nimport { FetchAdapter } from './fetch/fetchAdapter';\nimport { LoggerAdapter } from './logger';\nimport { CookieAdapter } from './cookie';\nimport { CookieParserAdapter } from './cookie-parser/cookieParserAdapter';\nimport { FirebaseLoggerAdapter } from './firebase-logger';\n\n@Global()\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: EmailAdapter,\n\t\t\tuseClass: NodemailerAdapter,\n\t\t},\n\t\t{\n\t\t\tprovide: CryptAdapter,\n\t\t\tuseClass: BcryptAdapter,\n\t\t},\n\t\t{\n\t\t\tprovide: HttpAdapter,\n\t\t\tuseClass: FetchAdapter,\n\t\t},\n\t\t{\n\t\t\tprovide: LoggerAdapter,\n\t\t\tuseClass: FirebaseLoggerAdapter,\n\t\t},\n\t\t{\n\t\t\tprovide: CookieAdapter,\n\t\t\tuseClass: CookieParserAdapter,\n\t\t},\n\t],\n\texports: [\n\t\tEmailAdapter,\n\t\tCryptAdapter,\n\t\tHttpAdapter,\n\t\tLoggerAdapter,\n\t\tCookieAdapter,\n\t],\n})\nexport class AdaptersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/controllers/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('admin')\nexport class AdminController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminJwt.html":{"url":"guards/AdminJwt.html","title":"guard - AdminJwt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminJwt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/admin-jwt.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar se um usuário tem permissões de um funcionário\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/admin-jwt.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/admin-jwt.guard.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/admin-jwt.guard.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n\tBadRequestException,\n\tCanActivate,\n\tExecutionContext,\n\tHttpStatus,\n\tInjectable,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IAccessTokenBody } from '../tokenTypes';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\nimport { UUID } from '@registry:app/entities/VO';\n\n/** Usado para validar se um usuário tem permissões de um funcionário */\n@Injectable()\nexport class AdminJwt implements CanActivate {\n\tconstructor(\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async checkToken(token: string) {\n\t\tconst tokenData = await this.jwtService\n\t\t\t.verifyAsync(token, {\n\t\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({ message: 'JWT inválido' });\n\t\t\t});\n\n\t\treturn tokenData;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\t\tconst rawToken = req?.headers?.authorization;\n\n\t\tconst condominiumId = req.params?.condominiumId;\n\t\tif (!condominiumId)\n\t\t\tthrow new BadRequestException({\n\t\t\t\tstatusCode: HttpStatus.BAD_REQUEST,\n\t\t\t\terror: 'Bad Request',\n\t\t\t\tmessage: 'Condomínio não especificado',\n\t\t\t});\n\n\t\tconst token = rawToken?.split(' ')[1];\n\t\tif (!token) throw new GuardErrors({ message: 'Token não encontrado' });\n\n\t\tconst tokenData = (await this.checkToken(token)) as IAccessTokenBody;\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new UUID(tokenData.sub),\n\t\t\tsafeSearch: true,\n\t\t});\n\t\tconst condominiumRelUser = await this.userRepo.getCondominiumRelation({\n\t\t\tuserId: user.id,\n\t\t\tcondominiumId: new UUID(condominiumId),\n\t\t});\n\n\t\tif (!condominiumRelUser || condominiumRelUser.level.value \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApartmentNumber.html":{"url":"classes/ApartmentNumber.html","title":"class - ApartmentNumber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApartmentNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/apartmentNumber/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/apartmentNumber/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nNúmero do apartamento que esta entre 2147483647 e 0\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: ApartmentNumber)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/apartmentNumber/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ApartmentNumber\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/apartmentNumber/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class ApartmentNumber implements ValueObject {\n\t/**\n\t * @param _value - Número do apartamento que esta entre 2147483647 e 0\n\t **/\n\tconstructor(private readonly _value: number) {\n\t\tif (\n\t\t\t_value > condominiumRelUserDTORules.apartmentNumber.maxLength ||\n\t\t\t_value \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHttpModule\n\nHttpModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHttpModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HttpModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HttpModule } from './infra/http/http.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\n\n@Module({\n\timports: [\n\t\tHttpModule,\n\t\tEventEmitterModule.forRoot({\n\t\t\twildcard: false,\n\t\t\tdelimiter: '.',\n\t\t\tnewListener: false,\n\t\t\tremoveListener: false,\n\t\t\tmaxListeners: 10,\n\t\t\tverboseMemoryLeak: true,\n\t\t\tignoreErrors: false,\n\t\t}),\n\t],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/gateways/auth.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                genToken\n                            \n                            \n                                    Abstract\n                                throwTFA\n                            \n                            \n                                    Abstract\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        genToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    genToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/gateways/auth.gateway.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        throwTFA\n                        \n                    \n                \n            \n            \n                \n                        \n                    throwTFA(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/gateways/auth.gateway.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/gateways/auth.gateway.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@registry:app/entities/user';\n\nexport abstract class Auth {\n\tabstract genToken(user: User): Promise;\n\tabstract throwTFA(user: User): Promise;\n\tabstract validate(token: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BcryptAdapter.html":{"url":"classes/BcryptAdapter.html","title":"class - BcryptAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BcryptAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/bcrypt/bcryptAdapter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CryptAdapter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                genHmacData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                            \n                                    Async\n                                hashWithHmac\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        genHmacData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/adapters/bcrypt/bcryptAdapter.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(input: ICryptCompare)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CryptAdapter\n\n                        \n                    \n                    \n                        \n                                Defined in         CryptAdapter:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptCompare\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CryptAdapter\n\n                        \n                    \n                    \n                        \n                                Defined in         CryptAdapter:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashWithHmac\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashWithHmac(input: ICryptHmac)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CryptAdapter\n\n                        \n                    \n                    \n                        \n                                Defined in         CryptAdapter:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptHmac\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { createHmac } from 'node:crypto';\nimport { CryptAdapter, ICryptCompare, ICryptHmac } from '../crypt';\nimport * as bcrypt from 'bcrypt';\n\nexport class BcryptAdapter extends CryptAdapter {\n\tprivate genHmacData = (input: ICryptHmac): Promise =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\tconst hmac = createHmac('sha256', input.key);\n\t\t\thmac.update(input.data);\n\n\t\t\ttry {\n\t\t\t\tconst hash = hmac.digest('hex');\n\t\t\t\tresolve(hash);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\n\tasync hashWithHmac(input: ICryptHmac): Promise {\n\t\tconst hash = await this.genHmacData(input);\n\t\treturn hash;\n\t}\n\n\tasync hash(data: string): Promise {\n\t\treturn await bcrypt.hash(data, 10);\n\t}\n\n\tasync compare(input: ICryptCompare): Promise {\n\t\treturn await bcrypt.compare(input.data, input.hashedData);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Block.html":{"url":"classes/Block.html","title":"class - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/block/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/block/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nNome do block que deve estar entre 6 e 0 caracteres\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Block)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/block/index.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Block\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/block/index.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { ValueObject, EntitiesEnum } from '@registry:app/entities/entities';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class Block implements ValueObject {\n\t/**\n\t * @param _value - Nome do block que deve estar entre 6 e 0 caracteres\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tif (_value.length > condominiumRelUserDTORules.block.maxLength)\n\t\t\tthrow new EntitieError({\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\tmessage: 'Valor incorreto de Block',\n\t\t\t});\n\t}\n\n\tpublic equalTo(input: Block) {\n\t\treturn input.value === this._value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CEP.html":{"url":"classes/CEP.html","title":"class - CEP","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CEP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/condominium/CEP/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/condominium/CEP/index.ts:5\n                            \n                        \n\n                \n                    \n                            Deve conter valores validos de um CEP, formatados ou não\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nCEP em questão\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: CEP)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/condominium/CEP/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CEP\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/condominium/CEP/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\n\nexport class CEP implements ValueObject {\n\t/**\n\t * Deve conter valores validos de um CEP, formatados ou não\n\t * @param _value - CEP em questão\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tthis._value = _value.replace(/[-]/g, '');\n\n\t\tif (this._value.length !== condominiumDTORules.CEP.minLength)\n\t\t\tthrow new EntitieError({\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\tmessage: 'Valor incorreto de CEP',\n\t\t\t});\n\t}\n\n\tpublic equalTo(input: CEP) {\n\t\treturn input.value === this._value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CNPJ.html":{"url":"classes/CNPJ.html","title":"class - CNPJ","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CNPJ\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/condominium/CNPJ/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/condominium/CNPJ/index.ts:5\n                            \n                        \n\n                \n                    \n                            Deve conter valores validos de um CNPJ, formatados ou não\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nCNPJ em questão\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: CNPJ)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/condominium/CNPJ/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CNPJ\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/condominium/CNPJ/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\n\nexport class CNPJ implements ValueObject {\n\t/**\n\t * Deve conter valores validos de um CNPJ, formatados ou não\n\t * @param _value - CNPJ em questão\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tthis._value = _value.replaceAll(/[./-]/g, '');\n\n\t\tif (this._value.length !== condominiumDTORules.CNPJ.minLength)\n\t\t\tthrow new EntitieError({\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\tmessage: 'Valor incorreto de CNPJ',\n\t\t\t});\n\t}\n\n\tpublic equalTo(input: CNPJ) {\n\t\treturn input.value === this._value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CPF.html":{"url":"classes/CPF.html","title":"class - CPF","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CPF\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/CPF/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/CPF/index.ts:5\n                            \n                        \n\n                \n                    \n                            Deve conter valores validos de CPF, formatados ou não\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nCPF em questão\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: CPF)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/CPF/index.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CPF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/CPF/index.ts:65\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { ValueObject, EntitiesEnum } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class CPF implements ValueObject {\n\t/**\n\t * Deve conter valores validos de CPF, formatados ou não\n\t * @param _value - CPF em questão\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tthis._value = _value.replace(/[.-]/g, '');\n\n\t\t/*\n\t\t * Função criada para validar CPFs usando o\n\t\t * algoritmo de módulo 11. Material abaixo caso tenham interesse:\n\t\t * https://www.youtube.com/watch?v=15Bw0duulMQ&themeRefresh=1\n\t\t **/\n\n\t\t// Pegando os últimos dois digitos (digitos verificadores)\n\t\tconst validator = this._value.slice(\n\t\t\tthis._value.length - 2,\n\t\t\tthis._value.length,\n\t\t);\n\t\t// Pegando os números do corpo do CPF\n\t\tlet body = this._value.slice(0, -2);\n\n\t\tlet toValidate: string = '';\n\t\tfor (let loop = 0; loop  prev + current,\n\t\t\t);\n\t\t\tlet result = resultOfNumWithWeights % 11;\n\n\t\t\tresult \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CepGateway.html":{"url":"classes/CepGateway.html","title":"class - CepGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CepGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/gateways/CEP.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/gateways/CEP.gateway.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface ICheckCep {\n\tcep: string;\n\tstreet_address: string;\n\tcomplement: string;\n\tneighborhood: string;\n\tcity: string;\n\tuf: string;\n}\n\nexport abstract class CepGateway {\n\tabstract check(input: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CepGatewaySpy.html":{"url":"classes/CepGatewaySpy.html","title":"class - CepGatewaySpy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CepGatewaySpy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/gateways/CEP.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CepGateway\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcheck: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/gateways/CEP.gateway.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/gateways/CEP.gateway.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CepGateway, ICheckCep } from '@registry:app/gateways/CEP.gateway';\n\nexport class CepGatewaySpy implements CepGateway {\n\tcalls = {\n\t\tcheck: 0,\n\t};\n\n\tasync check(): Promise {\n\t\tthis.calls.check = this.calls.check + 1;\n\t\treturn {\n\t\t\tcity: 'any',\n\t\t\tstreet_address: 'any',\n\t\t\tcomplement: 'any',\n\t\t\tneighborhood: 'any',\n\t\t\tcep: 'any',\n\t\t\tuf: 'any',\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckPasswordGuard.html":{"url":"guards/CheckPasswordGuard.html","title":"guard - CheckPasswordGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckPasswordGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/checkPassword.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar as senhas\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(crypt: CryptAdapter, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/checkPassword.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkPassword.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(password: Password, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkPassword.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            Password\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { Email, Password } from '@registry:app/entities/VO';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { LoginDTO } from '@registry:infra/http/DTO/login.DTO';\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { checkClassValidatorErrors } from '@registry:utils/convertValidatorErr';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\n/** Usado para validar as senhas */\n@Injectable()\nexport class CheckPasswordGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly crypt: CryptAdapter,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async validate(password: Password, hash: string) {\n\t\tconst response = await this.crypt.compare({\n\t\t\tdata: password.value,\n\t\t\thashedData: hash,\n\t\t});\n\n\t\tif (!response)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'Email ou senha incorretos',\n\t\t\t});\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\n\t\tconst body = plainToClass(LoginDTO, req.body);\n\t\tawait checkClassValidatorErrors({ body });\n\n\t\tconst email = new Email(body.email);\n\t\tconst password = new Password(body.password);\n\n\t\tconst user = await this.userRepo.find({ key: email, safeSearch: true });\n\t\tawait this.validate(password, user.password.value);\n\n\t\treq.inMemoryData = {\n\t\t\t...req.inMemoryData,\n\t\t\tuser,\n\t\t};\n\n\t\treturn true;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CheckTFACodeGuard.html":{"url":"guards/CheckTFACodeGuard.html","title":"guard - CheckTFACodeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CheckTFACodeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/checkTFACode.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar o códigos gerados nos fluxos de autenticação de dois fatores\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, crypt: CryptAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/checkTFACode.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkTFACode.guard.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(user: User, codeUsedOnInput: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/checkTFACode.guard.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                codeUsedOnInput\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { Email } from '@registry:app/entities/VO';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { LaunchTFADTO } from '@registry:infra/http/DTO/launch-tfa.DTO';\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { checkClassValidatorErrors } from '@registry:utils/convertValidatorErr';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { User } from '@registry:app/entities/user';\n\n/** Usado para validar o códigos gerados nos fluxos de autenticação de dois fatores */\n@Injectable()\nexport class CheckTFACodeGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tprivate async validate(user: User, codeUsedOnInput: string) {\n\t\tconst metadata = codeUsedOnInput.split('.')[0];\n\t\tconst code = generateStringCodeContent({\n\t\t\temail: user.email,\n\t\t\tid: user.id,\n\t\t});\n\n\t\tconst signature = await this.crypt.hashWithHmac({\n\t\t\tdata: `${metadata}.${btoa(code)}`,\n\t\t\tkey: process.env.TFA_TOKEN_KEY as string,\n\t\t});\n\t\tconst codeForValidation = `${metadata}.${btoa(signature)}`;\n\n\t\tconst parsedMetadata = JSON.parse(atob(metadata));\n\t\treturn (\n\t\t\tcodeForValidation === codeUsedOnInput &&\n\t\t\tparsedMetadata?.exp >= Date.now()\n\t\t);\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\n\t\tconst token =\n\t\t\treq.headers?.authorization?.split('Bearer ')[1] ??\n\t\t\t(function () {\n\t\t\t\tthrow new GuardErrors({ message: 'O código é inválido' });\n\t\t\t})();\n\n\t\tconst body = plainToClass(LaunchTFADTO, req.body);\n\t\tawait checkClassValidatorErrors({ body });\n\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new Email(body.email),\n\t\t\tsafeSearch: true,\n\t\t});\n\t\tconst validationRes = await this.validate(user, token);\n\t\tif (!validationRes)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'O código é inválido',\n\t\t\t});\n\n\t\treq.inMemoryData = { ...req.inMemoryData, user };\n\t\treturn true;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClassValidatorErrorFilter.html":{"url":"classes/ClassValidatorErrorFilter.html","title":"class - ClassValidatorErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClassValidatorErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/classValidator.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros do Class Validator\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                validateBody\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/classValidator.filter.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: BadRequestException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/classValidator.filter.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        BadRequestException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateBody\n                        \n                    \n                \n            \n            \n                \nvalidateBody(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/classValidator.filter.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IBodyProps\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tArgumentsHost,\n\tBadRequestException,\n\tCatch,\n\tExceptionFilter,\n} from '@nestjs/common';\nimport { isArray, isNumber, isString } from 'class-validator';\nimport { Response } from 'express';\n\ninterface IBodyProps {\n\tmessage: Array;\n\terror: string;\n\tstatusCode: number;\n}\n\n/** Usado para filtrar erros do Class Validator */\n@Catch(BadRequestException)\nexport class ClassValidatorErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tvalidateBody(input: any): input is IBodyProps {\n\t\treturn (\n\t\t\t'message' in input &&\n\t\t\tisArray(input['message']) &&\n\t\t\t'error' in input &&\n\t\t\tisString(input['error']) &&\n\t\t\t'statusCode' in input &&\n\t\t\tisNumber(input['statusCode'])\n\t\t);\n\t}\n\n\tcatch(exception: BadRequestException, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst body = exception.getResponse() as IBodyProps;\n\t\tif (!this.validateBody(body))\n\t\t\treturn response.status(500).json({\n\t\t\t\tstatusCode: 500,\n\t\t\t\tmessage: 'Erro interno do servidor',\n\t\t\t});\n\n\t\tthis.logger.error({\n\t\t\tname: 'Requisição ruim',\n\t\t\tlayer: LayersEnum.dto,\n\t\t\tdescription: JSON.stringify(body.message),\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(400).json({\n\t\t\tstatusCode: 400,\n\t\t\tname: 'Requisição ruim',\n\t\t\tmessage: body.message,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Code.html":{"url":"classes/Code.html","title":"class - Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Code\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/OTP/code/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/OTP/code/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Code)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/OTP/code/index.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Code\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/OTP/code/index.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport { ValueObject } from '@registry:app/entities/entities';\n\nexport class Code implements ValueObject {\n\t/** @deprecated **/\n\tconstructor(private readonly _value: string) {\n\t\tif (_value.length > 100 || _value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectionsRefService.html":{"url":"injectables/CollectionsRefService.html","title":"injectable - CollectionsRefService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CollectionsRefService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                condominium\n                            \n                            \n                                    Public\n                                invite\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: FirestoreService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts:5\n                            \n                        \n\n                \n                    \n                            Prove as referencias das coleções e documentos do firestore\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                        FirestoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        condominium\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\titself: this.firestore.instance.collection(\n\t\t\t'Entities/CondominiumsDocuments/Condominiums',\n\t\t),\n\t\tcnpj: this.firestore.instance.collection('Index/Condominiums/cnpj'),\n\t\tcep: this.firestore.instance.collection('Index/Condominiums/cep'),\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        invite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\titself: this.firestore.instance.collection(\n\t\t\t'/Entities/UsersDocuments/Invites',\n\t\t),\n\t\tgetInviteDoc: (id: string) => this.invite.itself.doc(id),\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcore: this.firestore.instance.collection(\n\t\t\t'Entities/UsersDocuments/Core',\n\t\t),\n\t\tcondominiumRelUser: (id: string) =>\n\t\t\tthis.firestore.instance.collection(\n\t\t\t\t`Entities/UsersDocuments/Core/${id}/CondominiumRelUser`,\n\t\t\t),\n\t\temailIndex: this.firestore.instance.collection('Index/Users/email'),\n\t\tcpfIndex: this.firestore.instance.collection('Index/Users/cpf'),\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/collectionsRefs.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FirestoreService } from './firestore.service';\n\n@Injectable()\nexport class CollectionsRefService {\n\t/**\n\t * Prove as referencias das coleções e documentos do firestore\n\t **/\n\tconstructor(private readonly firestore: FirestoreService) {}\n\n\tpublic user = {\n\t\tcore: this.firestore.instance.collection(\n\t\t\t'Entities/UsersDocuments/Core',\n\t\t),\n\t\tcondominiumRelUser: (id: string) =>\n\t\t\tthis.firestore.instance.collection(\n\t\t\t\t`Entities/UsersDocuments/Core/${id}/CondominiumRelUser`,\n\t\t\t),\n\t\temailIndex: this.firestore.instance.collection('Index/Users/email'),\n\t\tcpfIndex: this.firestore.instance.collection('Index/Users/cpf'),\n\t};\n\n\tpublic condominium = {\n\t\titself: this.firestore.instance.collection(\n\t\t\t'Entities/CondominiumsDocuments/Condominiums',\n\t\t),\n\t\tcnpj: this.firestore.instance.collection('Index/Condominiums/cnpj'),\n\t\tcep: this.firestore.instance.collection('Index/Condominiums/cep'),\n\t};\n\n\tpublic invite = {\n\t\titself: this.firestore.instance.collection(\n\t\t\t'/Entities/UsersDocuments/Invites',\n\t\t),\n\t\tgetInviteDoc: (id: string) => this.invite.itself.doc(id),\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Condominium.html":{"url":"classes/Condominium.html","title":"class - Condominium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Condominium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominium/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dereference\n                            \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    CEP\n                                \n                                \n                                    num\n                                \n                                \n                                    CNPJ\n                                \n                                \n                                    createdAt\n                                \n                                \n                                    updatedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(content: TInputPropsCondominium, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/condominium/index.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                        TInputPropsCondominium\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UUID\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/condominium/index.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IPropsCondominium\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/condominium/index.ts:53\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dereference\n                        \n                    \n                \n            \n            \n                \n                        \n                    dereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/condominium/index.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Condominium\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Condominium)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/condominium/index.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Condominium\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:100\n                                \n                            \n\n                \n                    \n                        setname(input: Name)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:103\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Name\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        CEP\n                    \n                \n\n                \n                    \n                        getCEP()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:108\n                                \n                            \n\n                \n                    \n                        setCEP(input: CEP)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:111\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            CEP\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        num\n                    \n                \n\n                \n                    \n                        getnum()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:116\n                                \n                            \n\n                \n                    \n                        setnum(input: Num)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:119\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Num\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        CNPJ\n                    \n                \n\n                \n                    \n                        getCNPJ()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:124\n                                \n                            \n\n                \n                    \n                        setCNPJ(input: CNPJ)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:127\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            CNPJ\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:132\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominium/index.ts:137\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { CEP, Name, Num, CNPJ, UUID } from '../VO';\nimport { Entity } from '../entities';\n\ninterface IPropsCondominium {\n\tname: Name;\n\tCEP: CEP;\n\tnum: Num;\n\tCNPJ: CNPJ;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n}\n\nexport type TInputPropsCondominium = {\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n};\n\nexport const condominiumDTORules = {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\tCEP: {\n\t\tminLength: 8,\n\t\tmaxLength: 9,\n\t\ttype: 'string',\n\t},\n\tnum: {\n\t\tminLength: 0,\n\t\tmaxLength: 2147483647,\n\t\ttype: 'number',\n\t},\n\tCNPJ: {\n\t\tminLength: 14,\n\t\tmaxLength: 18,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAy: {\n\t\ttype: Date,\n\t},\n};\n\nexport class Condominium implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: IPropsCondominium;\n\n\tconstructor(content: TInputPropsCondominium, id?: string) {\n\t\tthis.props = {\n\t\t\tname: new Name(content.name),\n\t\t\tCEP: new CEP(content.CEP),\n\t\t\tnum: new Num(content.num),\n\t\t\tCNPJ: new CNPJ(content.CNPJ),\n\t\t\tcreatedAt: content.createdAt ?? new Date(),\n\t\t\tupdatedAt: content.updatedAt ?? new Date(),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tpublic dereference(): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: this.name.value,\n\t\t\t\tCEP: this.CEP.value,\n\t\t\t\tnum: this.num.value,\n\t\t\t\tCNPJ: this.CNPJ.value,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t\tupdatedAt: this.updatedAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tpublic equalTo(input: Condominium): boolean {\n\t\treturn (\n\t\t\tinput instanceof Condominium &&\n\t\t\tthis.id.equalTo(input.id) &&\n\t\t\tthis.props.name.equalTo(input.name) &&\n\t\t\tthis.props.CEP.equalTo(input.CEP) &&\n\t\t\tthis.props.num.equalTo(input.num) &&\n\t\t\tthis.props.CNPJ.equalTo(input.CNPJ) &&\n\t\t\tthis.props.createdAt === input.createdAt &&\n\t\t\tthis.props.updatedAt === input.updatedAt\n\t\t);\n\t}\n\n\t// ID\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\t// NAME\n\tget name(): Name {\n\t\treturn this.props.name;\n\t}\n\tset name(input: Name) {\n\t\tthis.props.name = input;\n\t}\n\n\t// CEP\n\tget CEP(): CEP {\n\t\treturn this.props.CEP;\n\t}\n\tset CEP(input: CEP) {\n\t\tthis.CEP = input;\n\t}\n\n\t// NUM\n\tget num(): Num {\n\t\treturn this.props.num;\n\t}\n\tset num(input: Num) {\n\t\tthis.props.num = input;\n\t}\n\n\t// CNPJ\n\tget CNPJ(): CNPJ {\n\t\treturn this.props.CNPJ;\n\t}\n\tset CNPJ(input: CNPJ) {\n\t\tthis.props.CNPJ = input;\n\t}\n\n\t// CREATEDAT\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n\n\t// UPDATEDAT\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CondominiumController.html":{"url":"controllers/CondominiumController.html","title":"controller - CondominiumController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CondominiumController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/controllers/condominium.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /condominium\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createAdmin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                invite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateCondominiumDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/condominium.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCondominiumDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAdmin(req: Request, body: InviteUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':condominiumId/invite-admin')@UseGuards(SuperAdminJwt)@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/condominium.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            InviteUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(req: Request, body: DeleteUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('dev/:condominiumId/delete-user')@UseGuards(SuperAdminJwt)@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/condominium.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            DeleteUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        invite\n                        \n                    \n                \n            \n            \n                \n                        \n                    invite(req: Request, body: InviteUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':condominiumId/invite-user')@UseGuards(AdminJwt)@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/condominium.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            InviteUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tBody,\n\tController,\n\tDelete,\n\tHttpCode,\n\tPost,\n\tReq,\n\tUseGuards,\n} from '@nestjs/common';\nimport { CreateCondominiumService } from '@registry:app/services/createCondominium.service';\nimport { CreateCondominiumDTO } from '../DTO/createCondominium.DTO';\nimport { CondominiumMapper } from '@registry:app/mapper/condominium';\nimport { Email, Level } from '@registry:app/entities/VO';\nimport { GenInviteService } from '@registry:app/services/genInvite.service';\nimport { SuperAdminJwt } from '@registry:app/auth/guards/super-admin-jwt.guard';\nimport { InviteUserDTO } from '../DTO/inviteUser.DTO';\nimport { Request } from 'express';\nimport { DeleteUserDTO } from '../DTO/deleteAdminUser.DTO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { DeleteUserService } from '@registry:app/services/deleteUser.service';\nimport { AdminJwt } from '@registry:app/auth/guards/admin-jwt.guard';\nimport { User } from '@registry:app/entities/user';\n\n@Controller('/condominium')\nexport class CondominiumController {\n\t/** Acesse /api para ver as rotas disponíveis **/\n\tconstructor(\n\t\tprivate readonly createCondominium: CreateCondominiumService,\n\t\tprivate readonly genInvite: GenInviteService,\n\t\tprivate readonly deleteUserService: DeleteUserService,\n\t\tprivate readonly genInviteService: GenInviteService,\n\t) {}\n\n\t@Post()\n\tasync create(@Body() body: CreateCondominiumDTO) {\n\t\tconst { email: rawEmail, ...condominiumData } = body;\n\n\t\tconst condominium = CondominiumMapper.toClass({ ...condominiumData });\n\t\tawait this.createCondominium.exec({ condominium });\n\n\t\tconst email = new Email(rawEmail);\n\t\tawait this.genInvite.exec({\n\t\t\temail,\n\t\t\trequiredLevel: new Level(2), // AVISO: SUPER ADMIN SENDO CONVIDADO\n\t\t\tkey: process.env.INVITE_SUPER_ADMIN_TOKEN_KEY,\n\t\t\tcondominiumId: condominium.id,\n\t\t});\n\t}\n\n\t@Post(':condominiumId/invite-admin')\n\t@UseGuards(SuperAdminJwt)\n\t@HttpCode(204)\n\tasync createAdmin(@Req() req: Request, @Body() body: InviteUserDTO) {\n\t\tconst condominiumRelUser = req.inMemoryData\n\t\t\t.condominiumRelUser as CondominiumRelUser;\n\t\tconst email = new Email(body.email);\n\n\t\tawait this.genInvite.exec({\n\t\t\trequiredLevel: new Level(1),\n\t\t\tcondominiumId: condominiumRelUser.condominiumId,\n\t\t\tkey: process.env.INVITE_ADMIN_TOKEN_KEY,\n\t\t\temail,\n\t\t});\n\t}\n\n\t@Delete('dev/:condominiumId/delete-user')\n\t@UseGuards(SuperAdminJwt)\n\t@HttpCode(204)\n\tasync deleteUser(@Req() req: Request, @Body() body: DeleteUserDTO) {\n\t\tconst user = req.inMemoryData.user as User;\n\n\t\tconst email = new Email(body.email);\n\t\tawait this.deleteUserService.exec({\n\t\t\ttarget: email,\n\t\t\tactualUser: user.email,\n\t\t});\n\t}\n\n\t@Post(':condominiumId/invite-user')\n\t@UseGuards(AdminJwt)\n\t@HttpCode(204)\n\tasync invite(@Req() req: Request, @Body() body: InviteUserDTO) {\n\t\tconst condominiumRelUser = req.inMemoryData\n\t\t\t.condominiumRelUser as CondominiumRelUser;\n\n\t\tawait this.genInviteService.exec({\n\t\t\temail: new Email(body.email),\n\t\t\tcondominiumId: condominiumRelUser.condominiumId,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumFirestoreMapper.html":{"url":"classes/CondominiumFirestoreMapper.html","title":"class - CondominiumFirestoreMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumFirestoreMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/condominiums.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromFirestoreToClass\n                            \n                            \n                                    Static\n                                fromFirestoreToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToClass(input: IIncomingFirestoreCondominiumData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/condominiums.ts:20\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreCondominiumData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Condominium\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToObject(input: IIncomingFirestoreCondominiumData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/condominiums.ts:40\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreCondominiumData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TCondominiumInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { TCondominiumInObject } from '@registry:app/mapper/condominium';\nimport { Timestamp } from 'firebase-admin/firestore';\n\nexport interface IIncomingFirestoreCondominiumData {\n\tid: string;\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt: Timestamp;\n\tupdatedAt: Timestamp;\n}\n\nexport class CondominiumFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass(\n\t\tinput: IIncomingFirestoreCondominiumData,\n\t): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tnum: input.num,\n\t\t\t\tname: input.name,\n\t\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreCondominiumData,\n\t): TCondominiumInObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumMapper.html":{"url":"classes/CondominiumMapper.html","title":"class - CondominiumMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/condominium.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: IConvertToObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/condominium.ts:20\n                        \n                    \n\n\n            \n                \n                        Método usado para converter um objeto de um condomínio em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IConvertToObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados do condomínio em forma de objeto\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Condominium\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: Condominium)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/condominium.ts:38\n                        \n                    \n\n\n            \n                \n                        Método usado para converter uma classe de condomínio em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Condominium\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados do condomínio em forma de classe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TCondominiumInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\n\ninterface IConvertToObject {\n\tid?: string;\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport type TCondominiumInObject = Required;\n\nexport class CondominiumMapper {\n\t/**\n\t * Método usado para converter um objeto de um condomínio em classe\n\t * @param input - Deve conter os dados do condomínio em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: input.name,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tnum: input.num,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de condomínio em objeto\n\t * @param input - Deve conter os dados do condomínio em forma de classe\n\t **/\n\tstatic toObject(input: Condominium): TCondominiumInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tnum: input.num.value,\n\t\t\tCEP: input.CEP.value,\n\t\t\tname: input.name.value,\n\t\t\tCNPJ: input.CNPJ.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumPrismaMapper.html":{"url":"classes/CondominiumPrismaMapper.html","title":"class - CondominiumPrismaMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumPrismaMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/mapper/condominium.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: CondominiumPrisma)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/condominium.ts:25\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do prisma em classes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumPrisma\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do prisma\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Condominium\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(input: Condominium)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/condominium.ts:9\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados inseridos e os adapta para a utilização no prisma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Condominium\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados de entrada do condomínio\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CondominiumPrisma\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { Condominium as CondominiumPrisma } from '@prisma/client';\n\nexport class CondominiumPrismaMapper {\n\t/**\n\t * Mapeia os dados inseridos e os adapta para a utilização no prisma\n\t * @param input - Deve conter os dados de entrada do condomínio\n\t **/\n\tstatic toPrisma(input: Condominium): CondominiumPrisma {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tname: input.name.value,\n\t\t\tCNPJ: input.CNPJ.value,\n\t\t\tCEP: input.CEP.value,\n\t\t\tnum: input.num.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do prisma em classes\n\t * @param input - Deve conter os dados vindos do prisma\n\t **/\n\tstatic toClass(input: CondominiumPrisma): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: input.name,\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tnum: input.num,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CondominiumPrismaRepo.html":{"url":"injectables/CondominiumPrismaRepo.html","title":"injectable - CondominiumPrismaRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CondominiumPrismaRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: CondominiumInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search | CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/condominium.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search | CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tCondominiumRepo,\n\tCondominiumInterfaces,\n} from '@registry:app/repositories/condominium';\nimport { PrismaService } from '../prisma.service';\nimport { Injectable } from '@nestjs/common';\nimport { CondominiumPrismaMapper } from '../mapper/condominium';\nimport { Condominium } from '@registry:app/entities/condominium';\nimport { CEP, CNPJ, Name } from '@registry:app/entities/VO';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\n@Injectable()\nexport class CondominiumPrismaRepo implements CondominiumRepo {\n\tconstructor(private readonly prisma: PrismaService) {}\n\n\tasync create(input: CondominiumInterfaces.create): Promise {\n\t\tconst condominiumInPrisma = CondominiumPrismaMapper.toPrisma(\n\t\t\tinput.condominium,\n\t\t);\n\n\t\tawait this.prisma.condominium.create({\n\t\t\tdata: { ...condominiumInPrisma },\n\t\t});\n\t}\n\n\tasync find(input: CondominiumInterfaces.safeSearch): Promise;\n\tasync find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n\n\tasync find(\n\t\tinput: CondominiumInterfaces.search | CondominiumInterfaces.safeSearch,\n\t): Promise {\n\t\tconst query =\n\t\t\tinput.key instanceof Name\n\t\t\t\t? { name: input.key.value }\n\t\t\t\t: input.key instanceof CEP\n\t\t\t\t\t? { CEP: input.key.value }\n\t\t\t\t\t: input.key instanceof CNPJ\n\t\t\t\t\t\t? { CNPJ: input.key.value }\n\t\t\t\t\t\t: { id: input.key.value };\n\n\t\tconst unparsedCondominium = await this.prisma.condominium.findFirst({\n\t\t\twhere: query,\n\t\t});\n\n\t\tif (!unparsedCondominium && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tif (!unparsedCondominium) return undefined;\n\n\t\tconst condominium =\n\t\t\tCondominiumPrismaMapper.toClass(unparsedCondominium);\n\t\treturn condominium;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRelUser.html":{"url":"classes/CondominiumRelUser.html","title":"class - CondominiumRelUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRelUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominiumRelUser/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dereference\n                            \n                            \n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    level\n                                \n                                \n                                    condominiumId\n                                \n                                \n                                    userId\n                                \n                                \n                                    block\n                                \n                                \n                                    apartmentNumber\n                                \n                                \n                                    updatedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IInputCondominiumRelUser, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IInputCondominiumRelUser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UUID\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICondominiumRelUserProps\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:51\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dereference\n                        \n                    \n                \n            \n            \n                \ndereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         CondominiumRelUser\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equalTo\n                        \n                    \n                \n            \n            \n                \nequalTo(input: CondominiumRelUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumRelUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:107\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n\n                \n                    \n                        getlevel()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:114\n                                \n                            \n\n                \n                    \n                        setlevel(input: Level)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:111\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Level\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        condominiumId\n                    \n                \n\n                \n                    \n                        getcondominiumId()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:121\n                                \n                            \n\n                \n                    \n                        setcondominiumId(input: UUID)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:118\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            UUID\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:128\n                                \n                            \n\n                \n                    \n                        setuserId(input: UUID)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:125\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            UUID\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        block\n                    \n                \n\n                \n                    \n                        getblock()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:135\n                                \n                            \n\n                \n                    \n                        setblock(input: Block | undefined | null)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:132\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Block | undefined | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        apartmentNumber\n                    \n                \n\n                \n                    \n                        getapartmentNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:142\n                                \n                            \n\n                \n                    \n                        setapartmentNumber(input: ApartmentNumber | undefined | null)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:139\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                        ApartmentNumber | undefined | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:149\n                                \n                            \n\n                \n                    \n                        setupdatedAt(input: Date)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/condominiumRelUser/index.ts:146\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Date\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { UUID, Block, Level, ApartmentNumber } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\nexport interface ICondominiumRelUserProps {\n\tuserId: UUID;\n\tcondominiumId: UUID;\n\tblock?: Block | null;\n\tapartmentNumber?: ApartmentNumber | null;\n\tlevel: Level;\n\tupdatedAt: Date;\n}\n\nexport interface IInputCondominiumRelUser {\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel?: number | null;\n\tupdatedAt?: Date;\n}\n\nexport const condominiumRelUserDTORules = {\n\tuserId: {\n\t\ttype: 'string',\n\t},\n\tcondominiumId: {\n\t\ttype: 'string',\n\t},\n\tblock: {\n\t\tmaxLength: 6,\n\t\toption: true,\n\t\ttype: 'string',\n\t},\n\tapartmentNumber: {\n\t\tmaxLength: 2147483647,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tlevel: {\n\t\tmaxLength: 2,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class CondominiumRelUser implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: ICondominiumRelUserProps;\n\n\tconstructor(input: IInputCondominiumRelUser, id?: string) {\n\t\tthis._id = ValueObject.build(UUID, id).or(UUID.genV4()).exec();\n\t\tthis.props = {\n\t\t\tlevel: ValueObject.build(Level, input.level)\n\t\t\t\t.or(new Level(0))\n\t\t\t\t.exec(),\n\t\t\tapartmentNumber: ValueObject.build(\n\t\t\t\tApartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t)\n\t\t\t\t.allowNullish()\n\t\t\t\t.exec(),\n\t\t\tblock: ValueObject.build(Block, input.block).allowNullish().exec(),\n\t\t\tcondominiumId: ValueObject.build(UUID, input.condominiumId).exec(),\n\t\t\tuserId: ValueObject.build(UUID, input.userId).exec(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): CondominiumRelUser {\n\t\treturn new CondominiumRelUser({\n\t\t\tlevel: this.props.level.value,\n\t\t\tblock:\n\t\t\t\tthis.props.block instanceof Block\n\t\t\t\t\t? this.props.block.value\n\t\t\t\t\t: this.props.block,\n\t\t\tapartmentNumber:\n\t\t\t\tthis.props.apartmentNumber instanceof ApartmentNumber\n\t\t\t\t\t? this.props.apartmentNumber.value\n\t\t\t\t\t: this.props.apartmentNumber,\n\t\t\tcondominiumId: this.props.condominiumId.value,\n\t\t\tuserId: this.props.userId.value,\n\t\t\tupdatedAt: this.props.updatedAt,\n\t\t});\n\t}\n\n\tequalTo(input: CondominiumRelUser): boolean {\n\t\treturn (\n\t\t\tinput instanceof CondominiumRelUser &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.condominiumId,\n\t\t\t\tinput.condominiumId,\n\t\t\t) &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.apartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t) &&\n\t\t\tValueObject.compare(this.props.block, input.block) &&\n\t\t\tValueObject.compare(this.props.level, input.level) &&\n\t\t\tValueObject.compare(this.props.userId, input.userId) &&\n\t\t\tthis.props.updatedAt === this.props.updatedAt\n\t\t);\n\t}\n\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\tset level(input: Level) {\n\t\tthis.props.level = input;\n\t}\n\tget level(): Level {\n\t\treturn this.props.level;\n\t}\n\n\tset condominiumId(input: UUID) {\n\t\tthis.props.condominiumId = input;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\n\tset userId(input: UUID) {\n\t\tthis.props.userId = input;\n\t}\n\tget userId(): UUID {\n\t\treturn this.props.userId;\n\t}\n\n\tset block(input: Block | undefined | null) {\n\t\tthis.props.block = input;\n\t}\n\tget block(): Block | undefined | null {\n\t\treturn this.props.block;\n\t}\n\n\tset apartmentNumber(input: ApartmentNumber | undefined | null) {\n\t\tthis.props.apartmentNumber = input;\n\t}\n\tget apartmentNumber(): ApartmentNumber | undefined | null {\n\t\treturn this.props.apartmentNumber;\n\t}\n\n\tset updatedAt(input: Date) {\n\t\tthis.props.updatedAt = input;\n\t}\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRelUserFirestoreMapper.html":{"url":"classes/CondominiumRelUserFirestoreMapper.html","title":"class - CondominiumRelUserFirestoreMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRelUserFirestoreMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromFirestoreToClass\n                            \n                            \n                                    Static\n                                fromFirestoreToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToClass(undefined: IIncomingFirestoreCondominiumRelUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts:26\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IIncomingFirestoreCondominiumRelUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CondominiumRelUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToObject(input: IIncomingFirestoreCondominiumRelUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts:43\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreCondominiumRelUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TCondominiumRelUserToObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Timestamp } from 'firebase-admin/firestore';\nimport { TReplace } from '@registry:utils/replace';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport interface IIncomingFirestoreCondominiumRelUserData {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock: string | null;\n\tapartmentNumber: number | null;\n\tlevel: number;\n\tupdatedAt: Timestamp;\n}\n\nexport type TFirestoreCondominiumRelUserToObject = TReplace;\n\nexport class CondominiumRelUserFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass({\n\t\tid,\n\t\t...input\n\t}: IIncomingFirestoreCondominiumRelUserData): CondominiumRelUser {\n\t\treturn new CondominiumRelUser(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tid,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreCondominiumRelUserData,\n\t): TCondominiumRelUserToObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRelUserMapper.html":{"url":"classes/CondominiumRelUserMapper.html","title":"class - CondominiumRelUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRelUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/condominiumRelUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(undefined: ICondominiumRelUserInObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/condominiumRelUser.ts:28\n                        \n                    \n\n\n            \n                \n                        Método usado para converter um objeto de CondominiumRelUser em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            ICondominiumRelUserInObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: CondominiumRelUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/condominiumRelUser.ts:36\n                        \n                    \n\n\n            \n                \n                        Método usado para converter uma classe de CondominiumRelUser em um objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumRelUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de classe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TCondominiumRelUserToObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\n\nexport interface ICondominiumRelUserInObject {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel: number;\n\tupdatedAt?: Date;\n}\n\nexport type TCondominiumRelUserToObject = {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel: number;\n\tupdatedAt: Date;\n};\n\nexport class CondominiumRelUserMapper {\n\t/**\n\t * Método usado para converter um objeto de CondominiumRelUser em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass({ id, ...input }: ICondominiumRelUserInObject) {\n\t\treturn new CondominiumRelUser({ ...input }, id);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de CondominiumRelUser em um objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: CondominiumRelUser): TCondominiumRelUserToObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tuserId: input.userId.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\tblock: input.block ? input.block.value : input.block,\n\t\t\tlevel: input.level.value,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t\tapartmentNumber: input.apartmentNumber\n\t\t\t\t? input.apartmentNumber.value\n\t\t\t\t: input.apartmentNumber,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRelUserPrismaMapper.html":{"url":"classes/CondominiumRelUserPrismaMapper.html","title":"class - CondominiumRelUserPrismaMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRelUserPrismaMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/mapper/condominiumRelUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: CondominiumRelUserPrisma)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/condominiumRelUser.ts:25\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do prisma em classes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        CondominiumRelUserPrisma\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do prisma\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CondominiumRelUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(input: CondominiumRelUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/condominiumRelUser.ts:9\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados inseridos e os adapta para a utilização no prisma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumRelUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados de entrada do CondominiumRelUser\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CondominiumRelUserPrisma\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { CondominiumRelUser as CondominiumRelUserPrisma } from '@prisma/client';\n\nexport class CondominiumRelUserPrismaMapper {\n\t/**\n\t * Mapeia os dados inseridos e os adapta para a utilização no prisma\n\t * @param input - Deve conter os dados de entrada do CondominiumRelUser\n\t **/\n\tstatic toPrisma(input: CondominiumRelUser): CondominiumRelUserPrisma {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\tuserId: input.userId.value,\n\t\t\tblock: input.block?.value ?? null,\n\t\t\tlevel: input.level.value,\n\t\t\tapartment_number: input.apartmentNumber?.value ?? null,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do prisma em classes\n\t * @param input - Deve conter os dados vindos do prisma\n\t **/\n\tstatic toClass(input: CondominiumRelUserPrisma): CondominiumRelUser {\n\t\treturn new CondominiumRelUser(\n\t\t\t{\n\t\t\t\tuserId: input.userId,\n\t\t\t\tcondominiumId: input.condominiumId,\n\t\t\t\tapartmentNumber: input.apartment_number,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t\tblock: input.block,\n\t\t\t\tlevel: input.level,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CondominiumRepo.html":{"url":"classes/CondominiumRepo.html","title":"class - CondominiumRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CondominiumRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/condominium.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/repositories/condominium.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/condominium.ts:28\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um condomínio\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/condominium.ts:37\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um condomínio\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\n\nexport namespace CondominiumInterfaces {\n\texport interface create {\n\t\tcondominium: Condominium;\n\t}\n\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n\texport interface search {\n\t\tsafeSearch: undefined;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n}\n\nexport abstract class CondominiumRepo {\n\t/** @virtual */\n\tabstract create: (input: CondominiumInterfaces.create) => Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.safeSearch,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CondominiumsFirestore.html":{"url":"injectables/CondominiumsFirestore.html","title":"injectable - CondominiumsFirestore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CondominiumsFirestore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(collectionsRefs: CollectionsRefService, firestore: FirestoreService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionsRefs\n                                                  \n                                                        \n                                                                        CollectionsRefService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                        FirestoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: CondominiumInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/condominiums.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CondominiumMapper } from '@registry:app/mapper/condominium';\nimport {\n\tCondominiumInterfaces,\n\tCondominiumRepo,\n} from '@registry:app/repositories/condominium';\nimport { FirestoreService } from '../firestore.service';\nimport { Condominium } from '@registry:app/entities/condominium';\nimport { Injectable } from '@nestjs/common';\nimport { Index } from '../entities/indexes';\nimport { CollectionsRefService } from '../collectionsRefs.service';\n\n@Injectable()\nexport class CondominiumsFirestore implements CondominiumRepo {\n\tconstructor(\n\t\tprivate readonly collectionsRefs: CollectionsRefService,\n\t\tprivate readonly firestore: FirestoreService,\n\t) {}\n\n\tasync create(input: CondominiumInterfaces.create): Promise {\n\t\tconst { id, ...condominium } = CondominiumMapper.toObject(\n\t\t\tinput.condominium,\n\t\t);\n\n\t\tconst database = this.firestore.instance;\n\t\tconst batch = database.batch();\n\n\t\tconst refs = {\n\t\t\tcnpjIndex: this.collectionsRefs.condominium.cnpj.doc(\n\t\t\t\tcondominium.CNPJ,\n\t\t\t),\n\t\t\tcepIndex: this.collectionsRefs.condominium.cep.doc(condominium.CEP),\n\t\t};\n\n\t\tconst condominiumIndexRef = new Index({\n\t\t\tref: this.collectionsRefs.condominium.itself.doc(id),\n\t\t}).flat();\n\n\t\tbatch.create(refs.cnpjIndex, condominiumIndexRef);\n\t\tbatch.create(refs.cepIndex, condominiumIndexRef);\n\n\t\tconst entityRef = this.collectionsRefs.condominium.itself.doc(id);\n\t\tbatch.create(entityRef, condominium);\n\n\t\tawait batch.commit();\n\t}\n\n\tasync find(input: CondominiumInterfaces.safeSearch): Promise;\n\tasync find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n\n\tasync find(): Promise {\n\t\tthrow new Error(\n\t\t\t'\"find\" Method not implemented in \"CondominiumsFirestore\"',\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CookieAdapter.html":{"url":"classes/CookieAdapter.html","title":"class - CookieAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CookieAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/cookie.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                validateSignedCookie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateSignedCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateSignedCookie(data: IValidateSignedCookie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/cookie.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            IValidateSignedCookie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TValidateSignedCookieReturn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export type TValidateSignedCookieReturn =\n\t| Promise\n\t| string\n\t| false;\n\nexport interface IValidateSignedCookie {\n\tcookie: string;\n\tkey: string;\n}\n\nexport abstract class CookieAdapter {\n\tabstract validateSignedCookie(\n\t\tdata: IValidateSignedCookie,\n\t): TValidateSignedCookieReturn;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CookieParserAdapter.html":{"url":"classes/CookieParserAdapter.html","title":"class - CookieParserAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CookieParserAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/cookie-parser/cookieParserAdapter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CookieAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateSignedCookie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validateSignedCookie\n                        \n                    \n                \n            \n            \n                \nvalidateSignedCookie(input: IValidateSignedCookie)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/cookie-parser/cookieParserAdapter.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IValidateSignedCookie\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TValidateSignedCookieReturn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as cookieParser from 'cookie-parser';\nimport {\n\tCookieAdapter,\n\tIValidateSignedCookie,\n\tTValidateSignedCookieReturn,\n} from '../cookie';\n\nexport class CookieParserAdapter implements CookieAdapter {\n\tvalidateSignedCookie(\n\t\tinput: IValidateSignedCookie,\n\t): TValidateSignedCookieReturn {\n\t\treturn cookieParser.signedCookie(input.cookie, input.key);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCondominiumDTO.html":{"url":"classes/CreateCondominiumDTO.html","title":"class - CreateCondominiumDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCondominiumDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/createCondominium.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de criação de condomínio\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                CEP\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                CNPJ\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                num\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        CEP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"CEP\" precisa conter caracteres válidos'})@MinLength(undefined.minLength, {message: undefined})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        CNPJ\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"CNPJ\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"name\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        num\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber({}, {message: 'O campo \"num\" precisa ser um número'})@Max(undefined.maxLength, {message: undefined})@Min(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createCondominium.DTO.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\nimport { userDTORules } from '@registry:app/entities/user';\nimport {\n\tIsEmail,\n\tIsNumber,\n\tIsString,\n\tMax,\n\tMaxLength,\n\tMin,\n\tMinLength,\n} from 'class-validator';\n\n/** Usado para validar o corpo das requisições de criação de condomínio */\nexport class CreateCondominiumDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"name\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(condominiumDTORules.name.maxLength, {\n\t\tmessage: `O campo \"name\" precisa conter no máximo ${condominiumDTORules.name.maxLength} caracteres`,\n\t})\n\t@MinLength(condominiumDTORules.name.minLength, {\n\t\tmessage: `O campo \"name\" precisa conter no mínimo ${condominiumDTORules.name.minLength} caracteres`,\n\t})\n\t\tname: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"CEP\" precisa conter caracteres válidos',\n\t})\n\t@MinLength(condominiumDTORules.CEP.minLength, {\n\t\tmessage: `O campo \"CEP\" precisa conter no mínimo ${condominiumDTORules.CEP.minLength} caracteres`,\n\t})\n\t@MaxLength(condominiumDTORules.CEP.maxLength, {\n\t\tmessage: `O campo \"CEP\" precisa conter no máximo ${condominiumDTORules.CEP.maxLength} caracteres`,\n\t})\n\t\tCEP: string;\n\n\t@ApiProperty()\n\t@IsNumber(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"num\" precisa ser um número',\n\t\t},\n\t)\n\t@Max(condominiumDTORules.num.maxLength, {\n\t\tmessage: `O campo \"num\" precisa ser menor ou igual a ${condominiumDTORules.num.maxLength}`,\n\t})\n\t@Min(condominiumDTORules.num.minLength, {\n\t\tmessage: `O campo \"num\" precisa ser maior ou igual a ${condominiumDTORules.num.minLength}`,\n\t})\n\t\tnum: number;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"CNPJ\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(condominiumDTORules.CNPJ.maxLength, {\n\t\tmessage: `O campo \"CNPJ\" precisa conter no máximo ${condominiumDTORules.CNPJ.maxLength} caracteres`,\n\t})\n\t@MinLength(condominiumDTORules.CNPJ.minLength, {\n\t\tmessage: `O campo \"CNPJ\" precisa conter no mínimo ${condominiumDTORules.CNPJ.minLength} caracteres`,\n\t})\n\t\tCNPJ: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateCondominiumService.html":{"url":"injectables/CreateCondominiumService.html","title":"injectable - CreateCondominiumService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateCondominiumService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createCondominium.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por criar um novo condomínio\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(condominiumRepo: CondominiumRepo, cepGate: CepGateway)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/createCondominium.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        condominiumRepo\n                                                  \n                                                        \n                                                                        CondominiumRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cepGate\n                                                  \n                                                        \n                                                                        CepGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createCondominium.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CepGateway } from '@registry:app/gateways/CEP.gateway';\nimport { CondominiumRepo } from '@registry:app/repositories/condominium';\nimport { Injectable } from '@nestjs/common';\nimport { IService } from './_IService';\n\ninterface IProps {\n\tcondominium: Condominium;\n}\n\n/** Serviço responsável por criar um novo condomínio */\n@Injectable()\nexport class CreateCondominiumService implements IService {\n\tconstructor(\n\t\tprivate readonly condominiumRepo: CondominiumRepo,\n\t\tprivate readonly cepGate: CepGateway,\n\t) {}\n\n\tasync exec(input: IProps) {\n\t\tawait this.cepGate.check(input.condominium.CEP.value);\n\n\t\tawait this.condominiumRepo.create({\n\t\t\tcondominium: input.condominium,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTokenService.html":{"url":"injectables/CreateTokenService.html","title":"injectable - CreateTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createToken.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por gerar o token de acesso e o de renovação\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                buildAccessToken\n                            \n                            \n                                    Private\n                                    Async\n                                buildRefreshToken\n                            \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/createToken.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        buildAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAccessToken(user: User | IUserDataCore)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createToken.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User | IUserDataCore\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        buildRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildRefreshToken(email: Email, userId: UUID)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createToken.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            Email\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(undefined: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createToken.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tIAccessTokenBody,\n\tIRefreshTokenBody,\n\tTokenType,\n} from '@registry:app/auth/tokenTypes';\nimport {\n\tApartmentNumber,\n\tBlock,\n\tEmail,\n\tLevel,\n\tName,\n\tPhoneNumber,\n\tUUID,\n} from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IService } from './_IService';\n\ninterface IUserDataCore {\n\tid: UUID;\n\temail: Email;\n\tblock?: Block;\n\tapartmentNumber?: ApartmentNumber;\n\tname: Name;\n\tlevel: Level;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n\tphoneNumber: PhoneNumber;\n}\n\ninterface IProps {\n\tuser: User | IUserDataCore;\n}\n\n/** Serviço responsável por gerar o token de acesso e o de renovação */\n@Injectable()\nexport class CreateTokenService implements IService {\n\tconstructor(private readonly jwtService: JwtService) {}\n\n\tprivate async buildAccessToken(user: User | IUserDataCore) {\n\t\tconst exp = parseInt(process.env.ACCESS_TOKEN_EXP as string);\n\t\tconst accessJwtBody: Omit = {\n\t\t\tsub: user.id.value,\n\t\t\tcontent: {\n\t\t\t\temail: user.email.value,\n\t\t\t\tname: user.name.value,\n\t\t\t\tcreatedAt: user.createdAt,\n\t\t\t\tupdatedAt: user.updatedAt,\n\t\t\t\tphoneNumber: user.phoneNumber.value,\n\t\t\t},\n\t\t\ttype: TokenType.accessToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(accessJwtBody, {\n\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tprivate async buildRefreshToken(email: Email, userId: UUID) {\n\t\tconst exp = parseInt(process.env.REFRESH_TOKEN_EXP as string);\n\t\tconst refreshJwtBody: Omit = {\n\t\t\tsub: userId.value,\n\t\t\temail: email.value,\n\t\t\ttype: TokenType.refreshToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(refreshJwtBody, {\n\t\t\tsecret: process.env.REFRESH_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tasync exec({ user }: IProps) {\n\t\tconst accessToken = await this.buildAccessToken(user);\n\t\tconst refreshToken = await this.buildRefreshToken(user.email, user.id);\n\n\t\treturn { accessToken, refreshToken };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/createUser.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de criação de usuário\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                apartmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                block\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                CPF\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        apartmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber({}, {message: 'O campo \"apartmentNumber\" precisa ser um número'})@Max(undefined.maxLength, {message: undefined})@Min(undefined.minLength, {message: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        block\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"block\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        CPF\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"CPF\" precisa conter caracteres válidos'})@MinLength(undefined.minLength, {message: undefined})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"name\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"password\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"phoneNumber\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/createUser.DTO.ts:104\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\nimport { userDTORules } from '@registry:app/entities/user';\nimport {\n\tIsEmail,\n\tIsNumber,\n\tIsOptional,\n\tIsString,\n\tMax,\n\tMaxLength,\n\tMin,\n\tMinLength,\n} from 'class-validator';\n\n/** Usado para validar o corpo das requisições de criação de usuário */\nexport class CreateUserDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"name\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(userDTORules.name.maxLength, {\n\t\tmessage: `O campo \"name\" precisa conter no máximo ${userDTORules.name.maxLength} caracteres`,\n\t})\n\t@MinLength(userDTORules.name.minLength, {\n\t\tmessage: `O campo \"name\" precisa conter no mínimo ${userDTORules.name.minLength} caracteres`,\n\t})\n\t\tname: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"password\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(userDTORules.password.maxLength, {\n\t\tmessage: `O campo \"password\" precisa conter no máximo ${userDTORules.password.maxLength} caracteres`,\n\t})\n\t@MinLength(userDTORules.password.minLength, {\n\t\tmessage: `O campo \"password\" precisa conter no mínimo ${userDTORules.password.minLength} caracteres`,\n\t})\n\t\tpassword: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"CPF\" precisa conter caracteres válidos',\n\t})\n\t@MinLength(userDTORules.CPF.minLength, {\n\t\tmessage: `O campo \"CPF\" precisa conter no mínimo ${userDTORules.CPF.minLength} caracteres`,\n\t})\n\t@MaxLength(userDTORules.CPF.maxLength, {\n\t\tmessage: `O campo \"CPF\" precisa conter no máximo ${userDTORules.CPF.maxLength} caracteres`,\n\t})\n\t\tCPF: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"block\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(condominiumRelUserDTORules.block.maxLength, {\n\t\tmessage: `O campo \"block\" precisa conter no máximo ${condominiumRelUserDTORules.block.maxLength} caracteres`,\n\t})\n\t@IsOptional()\n\t\tblock: string;\n\n\t@ApiProperty()\n\t@IsNumber(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"apartmentNumber\" precisa ser um número',\n\t\t},\n\t)\n\t@Max(condominiumRelUserDTORules.apartmentNumber.maxLength, {\n\t\tmessage: `O campo \"apartmentNumber\" precisa ser menor ou igual a ${condominiumRelUserDTORules.apartmentNumber.maxLength}`,\n\t})\n\t@Min(condominiumRelUserDTORules.apartmentNumber.minLength, {\n\t\tmessage: `O campo \"apartmentNumber\" precisa ser maior ou igual a ${condominiumRelUserDTORules.apartmentNumber.minLength}`,\n\t})\n\t@IsOptional()\n\t\tapartmentNumber: number;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"phoneNumber\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(userDTORules.phoneNumber.maxLength, {\n\t\tmessage: `O campo \"phoneNumber\" precisa conter no máximo ${userDTORules.phoneNumber.maxLength} caracteres`,\n\t})\n\t@MinLength(userDTORules.phoneNumber.minLength, {\n\t\tmessage: `O campo \"phoneNumber\" precisa conter no mínimo ${userDTORules.phoneNumber.minLength} caracteres`,\n\t})\n\t\tphoneNumber: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserService.html":{"url":"injectables/CreateUserService.html","title":"injectable - CreateUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createUser.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por criar um novo usuário\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(inviteRepo: InviteRepo, crypt: CryptAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/createUser.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inviteRepo\n                                                  \n                                                        \n                                                                        InviteRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(undefined: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/createUser.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { ApartmentNumber, Block, Password } from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { IService } from './_IService';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\n\ninterface IProps {\n\tuser: User;\n\tinvite: Invite;\n\tapartmentNumber?: ApartmentNumber | null;\n\tblock?: Block | null;\n}\n\n/** Serviço responsável por criar um novo usuário */\n@Injectable()\nexport class CreateUserService implements IService {\n\tconstructor(\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tasync exec({ ...input }: IProps) {\n\t\tconst hashPass = await this.crypt.hash(input.user.password.value);\n\n\t\tconst user = input.user.dereference();\n\t\tuser.password = new Password(hashPass);\n\n\t\tconst condominiumRelUser = new CondominiumRelUser({\n\t\t\tapartmentNumber: input.apartmentNumber\n\t\t\t\t? input.apartmentNumber.value\n\t\t\t\t: undefined,\n\t\t\tblock: input.block ? input.block.value : undefined,\n\t\t\tlevel: input.invite.type.value,\n\t\t\tcondominiumId: input.invite.condominiumId.value,\n\t\t\tuserId: input.user.id.value,\n\t\t});\n\n\t\tawait this.inviteRepo.transferToUserResources({\n\t\t\tuser,\n\t\t\tcondominiumRelUser,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptAdapter.html":{"url":"classes/CryptAdapter.html","title":"class - CryptAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/crypt.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                compare\n                            \n                            \n                                    Abstract\n                                hash\n                            \n                            \n                                    Abstract\n                                hashWithHmac\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(input: ICryptCompare)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/crypt.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptCompare\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/crypt.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        hashWithHmac\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashWithHmac(input: ICryptHmac)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/crypt.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptHmac\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface ICryptCompare {\n\tdata: string;\n\thashedData: string;\n}\n\nexport interface ICryptHmac {\n\tdata: string;\n\tkey: string;\n}\n\nexport abstract class CryptAdapter {\n\tabstract hash(data: string): Promise;\n\tabstract hashWithHmac(input: ICryptHmac): Promise;\n\tabstract compare(input: ICryptCompare): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptSpy.html":{"url":"classes/CryptSpy.html","title":"class - CryptSpy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptSpy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/adapters/cryptSpy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CryptAdapter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                            \n                                    Async\n                                hashWithHmac\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\thashWithHmac: 0,\n\t\thash: 0,\n\t\tcompare: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/adapters/cryptSpy.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(input: ICryptCompare)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/adapters/cryptSpy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICryptCompare\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/adapters/cryptSpy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashWithHmac\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashWithHmac()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/adapters/cryptSpy.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CryptAdapter, ICryptCompare } from '@registry:app/adapters/crypt';\n\nexport class CryptSpy implements CryptAdapter {\n\tcalls = {\n\t\thashWithHmac: 0,\n\t\thash: 0,\n\t\tcompare: 0,\n\t};\n\n\tasync hashWithHmac(): Promise {\n\t\tthis.calls.hashWithHmac = this.calls.hashWithHmac + 1;\n\t\treturn 'e187f1f266a145c2f8649b2324d0bb54a7cf62e3c9abfce5a7f2ff8bbbd59d44b';\n\t}\n\n\tasync hash(data: string): Promise {\n\t\tthis.calls.hash = this.calls.hash + 1;\n\t\treturn data;\n\t}\n\n\tasync compare(input: ICryptCompare): Promise {\n\t\tthis.calls.compare = this.calls.compare + 1;\n\t\treturn input.data === input.hashedData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseCustomError.html":{"url":"classes/DatabaseCustomError.html","title":"class - DatabaseCustomError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseCustomError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/error/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/error/index.ts:19\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de banco de dados, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro e o identificador usado para mapear os erros na camada dos filters, use os enums vindos de DatabaseCustomErrorsTags\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DatabaseCustomErrorsTags\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/error/index.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum DatabaseCustomErrorsTags {\n\ttooManyEntities = 'Too many entities',\n\tmaximumCondominiumRelUser = 'Maximum condominiumRelUser',\n\twrongInputLevel = 'Wrong input level detected',\n\tcontentAlreadyExists = 'This content already exists',\n\tcontentDoesntExists = 'This content doesn\\'t exists',\n\tsafeSearchEnabled = 'Safe search detected',\n\tdtoFailure = 'The DTO found an error',\n\trefLost = 'The reference could not be found',\n\tmalformedRef = 'Malformed reference',\n}\n\ninterface IProps {\n\tmessage: string;\n\ttag: DatabaseCustomErrorsTags;\n}\n\nexport class DatabaseCustomError extends Error {\n\treadonly tag: DatabaseCustomErrorsTags;\n\n\t/**\n\t * Erro customizado usado na camada de banco de dados, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e o identificador usado para mapear os erros na camada dos filters, use os enums vindos de DatabaseCustomErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Database Custom Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseCustomErrorFilter.html":{"url":"classes/DatabaseCustomErrorFilter.html","title":"class - DatabaseCustomErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseCustomErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros customizados do banco de dados\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                possibleErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        possibleErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IFirestoreErrors[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentAlreadyExists,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.refLost,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.tooManyEntities,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.maximumCondominiumRelUser,\n\t\t\tmessage: 'Este usuário já está vinculado a outro condomínio',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.wrongInputLevel,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: DatabaseCustomError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            DatabaseCustomError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\nimport {\n\tDatabaseCustomError,\n\tDatabaseCustomErrorsTags,\n} from '@registry:infra/storages/db/error';\n\ninterface IFirestoreErrors {\n\tname: string;\n\ttag: DatabaseCustomErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros customizados do banco de dados */\n@Catch(DatabaseCustomError)\nexport class DatabaseCustomErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate readonly possibleErrors: IFirestoreErrors[] = [\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentAlreadyExists,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.refLost,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.tooManyEntities,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.maximumCondominiumRelUser,\n\t\t\tmessage: 'Este usuário já está vinculado a outro condomínio',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.wrongInputLevel,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t];\n\n\tcatch(exception: DatabaseCustomError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.database,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateFormats.html":{"url":"classes/DateFormats.html","title":"class - DateFormats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateFormats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/utils/dateFormats.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                prettify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        prettify\n                        \n                    \n                \n            \n            \n                \n                        \n                    prettify(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/utils/dateFormats.ts:6\n                        \n                    \n\n\n            \n                \n                        Formata a data para ser mostrado, por exemplo, em logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter a data a ser formatada\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class DateFormats {\n\t/**\n\t * Formata a data para ser mostrado, por exemplo, em logs\n\t * @param date - Deve conter a data a ser formatada\n\t **/\n\tstatic prettify(date: Date): string {\n\t\tconst rawSeconds = date.getUTCSeconds();\n\t\tconst rawMinutes = date.getUTCMinutes();\n\t\tconst rawHours = date.getUTCHours();\n\n\t\tconst seconds = rawSeconds > 9 ? rawSeconds : `0${rawSeconds}`;\n\t\tconst minutes = rawMinutes > 9 ? rawMinutes : `0${rawMinutes}`;\n\t\tconst hours = rawHours > 9 ? rawHours : `0${rawHours}`;\n\n\t\treturn `${hours}:${minutes}:${seconds} UTC`;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserDTO.html":{"url":"classes/DeleteUserDTO.html","title":"class - DeleteUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/deleteAdminUser.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de deleção de usuários\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/deleteAdminUser.DTO.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { userDTORules } from '@registry:app/entities/user';\nimport { IsEmail, IsString, MaxLength } from 'class-validator';\n\n/** Usado para validar o corpo das requisições de deleção de usuários */\nexport class DeleteUserDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserService.html":{"url":"injectables/DeleteUserService.html","title":"injectable - DeleteUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/deleteUser.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por deletar um usuário\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/deleteUser.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(undefined: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/deleteUser.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Email } from '@registry:app/entities/VO';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { Injectable } from '@nestjs/common';\nimport { IService } from './_IService';\nimport {\n\tServiceErrors,\n\tServiceErrorsTags,\n} from '@registry:app/errors/services';\n\ninterface IProps {\n\ttarget: Email;\n\tactualUser?: Email;\n}\n\n/** Serviço responsável por deletar um usuário */\n@Injectable()\nexport class DeleteUserService implements IService {\n\tconstructor(private readonly userRepo: UserRepo) {}\n\n\tasync exec({ target, actualUser }: IProps) {\n\t\tif (actualUser && target.equalTo(actualUser))\n\t\t\tthrow new ServiceErrors({\n\t\t\t\tmessage:\n\t\t\t\t\t'Não é possível deletar você mesmo utilizando os recursos de administradores',\n\t\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\t});\n\n\t\tawait this.userRepo.delete({ key: target });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EchoguardAdapter.html":{"url":"classes/EchoguardAdapter.html","title":"class - EchoguardAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EchoguardAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/echoguard/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            LoggerAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                alert\n                            \n                            \n                                    Async\n                                critical\n                            \n                            \n                                    Async\n                                debug\n                            \n                            \n                                    Async\n                                emergencial\n                            \n                            \n                                    Async\n                                error\n                            \n                            \n                                    Async\n                                info\n                            \n                            \n                                    Async\n                                log\n                            \n                            \n                                    Async\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        alert\n                        \n                    \n                \n            \n            \n                \n                        \n                    alert(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        critical\n                        \n                    \n                \n            \n            \n                \n                        \n                    critical(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emergencial\n                        \n                    \n                \n            \n            \n                \n                        \n                    emergencial(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        warn\n                        \n                    \n                \n            \n            \n                \n                        \n                    warn(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/echoguard/index.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Echo } from 'echoguard';\nimport { ILoggerDefaultProps, LoggerAdapter, TECEProps } from '../logger';\n\nexport class EchoguardAdapter implements LoggerAdapter {\n\tasync log(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.info });\n\t}\n\n\tasync info(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.info });\n\t}\n\n\tasync debug(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.debug });\n\t}\n\n\tasync warn(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.warn });\n\t}\n\n\tasync alert(input: ILoggerDefaultProps): Promise {\n\t\tEcho.create({ ...input, level: Echo.LogsLevelEnum.alert });\n\t}\n\n\tasync error({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\tEcho.create({\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: Echo.LogsLevelEnum.error,\n\t\t});\n\t}\n\n\tasync critical({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\tEcho.create({\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: Echo.LogsLevelEnum.error,\n\t\t});\n\t}\n\n\tasync emergencial({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\tEcho.create({\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: Echo.LogsLevelEnum.error,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Email.html":{"url":"classes/Email.html","title":"class - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/email/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/email/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEmail que deve conter menos de 320 caracteres\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Email)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/email/index.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Email\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/email/index.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class Email implements ValueObject {\n\t/**\n\t * @param _value - Email que deve conter menos de 320 caracteres\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tif (_value.length > userDTORules.email.maxLength)\n\t\t\tthrow new EntitieError({\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\tmessage: 'Valor incorreto de Email',\n\t\t\t});\n\t}\n\n\tpublic equalTo(input: Email) {\n\t\treturn input.value === this._value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailAdapter.html":{"url":"classes/EmailAdapter.html","title":"class - EmailAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/email.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        send\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/adapters/email.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface ISendMailContent {\n\tfrom: string;\n\tto: string;\n\tsubject: string;\n\tbody: string;\n}\n\nexport abstract class EmailAdapter {\n\tabstract send: (data: ISendMailContent) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailSpy.html":{"url":"classes/EmailSpy.html","title":"class - EmailSpy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailSpy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/adapters/emailSpy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            EmailAdapter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tsend: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/adapters/emailSpy.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/adapters/emailSpy.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EmailAdapter } from '@registry:app/adapters/email';\n\nexport class EmailSpy implements EmailAdapter {\n\tcalls = {\n\t\tsend: 0,\n\t};\n\n\tasync send(): Promise {\n\t\tthis.calls.send = this.calls.send + 1;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntitieError.html":{"url":"classes/EntitieError.html","title":"class - EntitieError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntitieError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/entities.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/errors/entities.ts:9\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de entidades, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro e a entidade envolvida, use EntitiesEnum para fazer esta indicação\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntitiesEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/errors/entities.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\n\ninterface IProps {\n\tentity: EntitiesEnum;\n\tmessage: string;\n}\n\nexport class EntitieError extends Error {\n\treadonly entity: EntitiesEnum;\n\n\t/**\n\t * Erro customizado usado na camada de entidades, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e a entidade envolvida, use EntitiesEnum para fazer esta indicação\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name =\n\t\t\tinput.entity === EntitiesEnum.vo\n\t\t\t\t? 'Value Object error'\n\t\t\t\t: 'Entity error';\n\t\tthis.message = input.message;\n\t\tthis.entity = input.entity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntitieErrorFilter.html":{"url":"classes/EntitieErrorFilter.html","title":"class - EntitieErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntitieErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/vo.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Value Objects\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/vo.filter.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: EntitieError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/vo.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            EntitieError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport { EntitieError } from '@registry:app/errors/entities';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros dos Value Objects */\n@Catch(EntitieError)\nexport class EntitieErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(exception: EntitieError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tif (exception.entity === EntitiesEnum.vo) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: exception.name,\n\t\t\t\tlayer: LayersEnum.entitie,\n\t\t\t\tdescription: exception.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(400).json({\n\t\t\t\tstatusCode: 400,\n\t\t\t\tmessage:\n\t\t\t\t\t'Valores malformados foram detectados, certifique-se de que o conteúdo possui uma boa integridade',\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.entitie,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Entity.html":{"url":"classes/Entity.html","title":"class - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/entities.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para manter um padrão nas classes da camada de entidades\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                dereference\n                            \n                            \n                                    Abstract\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        dereference\n                        \n                    \n                \n            \n            \n                \n                        \n                    dereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Entity\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Entity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Entity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { IClass } from '@registry:utils/class';\n\nexport enum EntitiesEnum {\n\tcondominium = 'Condominium',\n\tuser = 'User',\n\totp = 'OTP',\n\tinvite = 'Invite',\n\tvo = 'Value Object',\n}\n\n/** Usado para manter um padrão nas classes da camada de entidades */\nexport abstract class Entity {\n\tabstract equalTo(input: Entity): boolean;\n\tabstract dereference(): Entity;\n}\n\nexport enum VOEnum {\n\tNullOrUndefined,\n}\n\n/** Usado para manter um padrão nos Value Objects */\nexport abstract class ValueObject {\n\tabstract equalTo(input: T): boolean;\n\tabstract get value(): O;\n\n\tstatic compare(\n\t\tc1?: ValueObject | null,\n\t\tc2?: ValueObject | null,\n\t): boolean {\n\t\tif (c1 !== null && c1 !== undefined && c2 !== null && c2 !== undefined)\n\t\t\treturn c1.equalTo(c2);\n\n\t\treturn c1 === c2;\n\t}\n\n\tstatic build(\n\t\tconstructor: IClass,\n\t\tinternalValue?: ConstructorParameters> | null,\n\t) {\n\t\tconst orStatement = (\n\t\t\talternativeValue: A,\n\t\t): { exec: () => InstanceType> | A } => {\n\t\t\tif (!internalValue) return { exec: () => alternativeValue };\n\t\t\treturn { exec: () => new constructor(internalValue) };\n\t\t};\n\n\t\tconst allowNullish = (): {\n\t\t\texec: () => InstanceType> | null | undefined;\n\t\t} => {\n\t\t\tif (internalValue === null || internalValue === undefined)\n\t\t\t\treturn { exec: () => internalValue };\n\t\t\treturn { exec: () => new constructor(internalValue) };\n\t\t};\n\n\t\treturn {\n\t\t\texec: (): InstanceType> => {\n\t\t\t\tif (!internalValue)\n\t\t\t\t\tthrow new EntitieError({\n\t\t\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t'Valor interno de entidade não pode ser null ou undefined, use \\'or\\' para garantir que seja possível de se usar valores nulos ou valores alternativos ou use \\'allowNullish\\' para lidar diretamente com nullish values',\n\t\t\t\t\t});\n\t\t\t\treturn new constructor(internalValue);\n\t\t\t},\n\t\t\tor: (alternativeValue: T) =>\n\t\t\t\torStatement(alternativeValue),\n\t\t\tallowNullish,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchAdapter.html":{"url":"classes/FetchAdapter.html","title":"class - FetchAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/fetch/fetchAdapter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            HttpAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                call\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        call\n                        \n                    \n                \n            \n            \n                \n                        \n                    call(input: IHttpClientCall)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/fetch/fetchAdapter.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IHttpClientCall\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { IHttpClientCall, HttpAdapter, IHttpClientCallReturn } from '../http';\nimport { AdapterError } from '@registry:app/errors/adapter';\n\nexport class FetchAdapter implements HttpAdapter {\n\tasync call(input: IHttpClientCall): Promise {\n\t\tlet statusCode: number | undefined;\n\n\t\treturn await fetch(input.url, {\n\t\t\tmethod: input.method,\n\t\t\theaders: input.headers,\n\t\t\tbody: input.body,\n\t\t})\n\t\t\t.then(async (res) => {\n\t\t\t\tconst status = res.status;\n\t\t\t\tconst headers = res.headers;\n\t\t\t\tconst body: any = res.headers\n\t\t\t\t\t.get('content-type')\n\t\t\t\t\t?.includes('application/json')\n\t\t\t\t\t? await res.json()\n\t\t\t\t\t: undefined;\n\n\t\t\t\tif (res.status >= 400) {\n\t\t\t\t\tstatusCode = res.status;\n\t\t\t\t\tthrow new HttpException(\n\t\t\t\t\t\t'Requisição mal sucedida',\n\t\t\t\t\t\tres.status,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tstatus,\n\t\t\t\t\theaders,\n\t\t\t\t\tbody,\n\t\t\t\t};\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (!(err instanceof HttpException))\n\t\t\t\t\tthrow new AdapterError({\n\t\t\t\t\t\tmessage: `Não foi possível estabelecer uma conexão com o serviço de URL ${input.url}, pois o adaptador responsável por tal tarefa disparou um erro não reconhecível`,\n\t\t\t\t\t});\n\n\t\t\t\tthrow new AdapterError({\n\t\t\t\t\tmessage: `A requisição do serviço de URL ${input.url} falhou com o código ${statusCode}`,\n\t\t\t\t\thttpCode: statusCode,\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseLoggerAdapter.html":{"url":"classes/FirebaseLoggerAdapter.html","title":"class - FirebaseLoggerAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseLoggerAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/firebase-logger/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            LoggerAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                alert\n                            \n                            \n                                    Async\n                                critical\n                            \n                            \n                                    Async\n                                debug\n                            \n                            \n                                    Async\n                                emergencial\n                            \n                            \n                                    Async\n                                error\n                            \n                            \n                                    Async\n                                info\n                            \n                            \n                                    Async\n                                log\n                            \n                            \n                                    Async\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        alert\n                        \n                    \n                \n            \n            \n                \n                        \n                    alert(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        critical\n                        \n                    \n                \n            \n            \n                \n                        \n                    critical(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emergencial\n                        \n                    \n                \n            \n            \n                \n                        \n                    emergencial(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(undefined: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        warn\n                        \n                    \n                \n            \n            \n                \n                        \n                    warn(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/firebase-logger/index.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ILoggerDefaultProps, LoggerAdapter, TECEProps } from '../logger';\nimport { warn, info, debug, error, log } from 'firebase-functions/logger';\n\nexport class FirebaseLoggerAdapter implements LoggerAdapter {\n\tasync log(input: ILoggerDefaultProps): Promise {\n\t\tlog(`LOG: ${input.name}`, { ...input, level: 'LOG' });\n\t}\n\n\tasync info(input: ILoggerDefaultProps): Promise {\n\t\tinfo(`INFO: ${input.name}`, {\n\t\t\t...input,\n\t\t\tlevel: 'INFO',\n\t\t});\n\t}\n\n\tasync debug(input: ILoggerDefaultProps): Promise {\n\t\tdebug(`DEBUG: ${input.name}`, {\n\t\t\t...input,\n\t\t\tlevel: 'DEBUG',\n\t\t});\n\t}\n\n\tasync warn(input: ILoggerDefaultProps): Promise {\n\t\twarn(`WARN: ${input.name}`, {\n\t\t\t...input,\n\t\t\tlevel: 'WARN',\n\t\t});\n\t}\n\n\tasync alert(input: ILoggerDefaultProps): Promise {\n\t\twarn(`ALERT: ${input.name}`, {\n\t\t\t...input,\n\t\t\tlevel: 'ALERT',\n\t\t});\n\t}\n\n\tasync error({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\terror(`ERROR: ${input.name}`, {\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: 'ERROR',\n\t\t});\n\t}\n\n\tasync critical({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\terror(`CRITICAL: ${input.name}`, {\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: 'CRITICAL',\n\t\t});\n\t}\n\n\tasync emergencial({ stack, ...input }: TECEProps): Promise {\n\t\tconst description =\n\t\t\tprocess.env.LOGS !== 'SUPRESS_ONLY_STACK'\n\t\t\t\t? `${stack ? '\\n[STACK] ' + stack : input.description}`\n\t\t\t\t: `${input.description}`;\n\n\t\terror(`EMERGENCIAL: ${input.name}`, {\n\t\t\t...input,\n\t\t\tdescription,\n\t\t\tlevel: 'EMERGENCIAL',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirestoreGetCondominiumDTO.html":{"url":"classes/FirestoreGetCondominiumDTO.html","title":"class - FirestoreGetCondominiumDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirestoreGetCondominiumDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/DTO/getCondominium.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/DTO/getCondominium.ts:11\n                        \n                    \n\n\n            \n                \n                        Valida o retorno dos dados vindos do firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreCondominiumData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { IIncomingFirestoreCondominiumData } from '../mapper/condominiums';\nimport { z } from 'zod';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\n\nexport class FirestoreGetCondominiumDTO {\n\t/**\n\t * Valida o retorno dos dados vindos do firestore\n\t * @param input - Deve conter os dados a ser validado\n\t **/\n\tstatic exec(input: any) {\n\t\tconst schema = z.object({\n\t\t\tid: z.string().uuid(),\n\t\t\tname: z\n\t\t\t\t.string()\n\t\t\t\t.min(condominiumDTORules.name.minLength)\n\t\t\t\t.max(condominiumDTORules.name.maxLength),\n\t\t\tCEP: z.string().length(condominiumDTORules.CEP.minLength),\n\t\t\tCNPJ: z.string().length(condominiumDTORules.CNPJ.minLength),\n\t\t\tnum: z\n\t\t\t\t.number()\n\t\t\t\t.min(condominiumDTORules.num.minLength)\n\t\t\t\t.max(condominiumDTORules.num.maxLength),\n\t\t\tcreatedAt: z.instanceof(Timestamp),\n\t\t\tupdatedAt: z.instanceof(Timestamp),\n\t\t});\n\t\tschema.parse(input);\n\n\t\treturn input as IIncomingFirestoreCondominiumData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirestoreGetCondominiumRelUserDTO.html":{"url":"classes/FirestoreGetCondominiumRelUserDTO.html","title":"class - FirestoreGetCondominiumRelUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirestoreGetCondominiumRelUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/DTO/getCondominiumRel.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/DTO/getCondominiumRel.ts:11\n                        \n                    \n\n\n            \n                \n                        Valida o retorno dos dados vindos do firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreCondominiumRelUserData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { z } from 'zod';\nimport { IIncomingFirestoreCondominiumRelUserData } from '../mapper/condominiumRelUser';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class FirestoreGetCondominiumRelUserDTO {\n\t/**\n\t * Valida o retorno dos dados vindos do firestore\n\t * @param input - Deve conter os dados a ser validado\n\t **/\n\tstatic exec(input: any) {\n\t\tconst schema = z.object({\n\t\t\tapartmentNumber: z.optional(\n\t\t\t\tz\n\t\t\t\t\t.number()\n\t\t\t\t\t.min(condominiumRelUserDTORules.apartmentNumber.minLength)\n\t\t\t\t\t.max(condominiumRelUserDTORules.apartmentNumber.maxLength),\n\t\t\t),\n\t\t\tblock: z.optional(\n\t\t\t\tz.string().max(condominiumRelUserDTORules.block.maxLength),\n\t\t\t),\n\t\t\tlevel: z.optional(\n\t\t\t\tz\n\t\t\t\t\t.number()\n\t\t\t\t\t.min(condominiumRelUserDTORules.level.minLength)\n\t\t\t\t\t.max(condominiumRelUserDTORules.level.maxLength),\n\t\t\t),\n\t\t\tupdatedAt: z.instanceof(Timestamp),\n\t\t\tuserId: z.string().uuid(),\n\t\t\tid: z.string().uuid(),\n\t\t\tcondominiumId: z.string().uuid(),\n\t\t});\n\t\tschema.parse(input);\n\n\t\treturn input as IIncomingFirestoreCondominiumRelUserData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirestoreGetInviteDTO.html":{"url":"classes/FirestoreGetInviteDTO.html","title":"class - FirestoreGetInviteDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirestoreGetInviteDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/DTO/getInvite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/DTO/getInvite.ts:11\n                        \n                    \n\n\n            \n                \n                        Valida o retorno dos dados vindos do firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ndado a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreInviteData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { IIncomingFirestoreInviteData } from '../mapper/invite';\nimport { z } from 'zod';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class FirestoreGetInviteDTO {\n\t/**\n\t * Valida o retorno dos dados vindos do firestore\n\t * @param input - dado a ser validado\n\t **/\n\tstatic exec(input: any) {\n\t\tconst schema = z.object({\n\t\t\tid: z.string().uuid(),\n\t\t\tcondominiumId: z.string().uuid(),\n\t\t\tttl: z\n\t\t\t\t.number()\n\t\t\t\t.max(1000 * 60 * 60 * 24 * 10)\n\t\t\t\t.min(0),\n\t\t\ttype: z\n\t\t\t\t.number()\n\t\t\t\t.min(condominiumRelUserDTORules.level.minLength)\n\t\t\t\t.max(condominiumRelUserDTORules.level.maxLength),\n\t\t\temail: z.string().email(),\n\t\t\texpiresAt: z.instanceof(Timestamp),\n\t\t});\n\t\tschema.parse(input);\n\n\t\treturn input as IIncomingFirestoreInviteData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirestoreGetUserDTO.html":{"url":"classes/FirestoreGetUserDTO.html","title":"class - FirestoreGetUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirestoreGetUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/DTO/getUser.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/DTO/getUser.ts:11\n                        \n                    \n\n\n            \n                \n                        Valida o retorno dos dados vindos do firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreUserData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { IIncomingFirestoreUserData } from '../mapper/users';\nimport { z } from 'zod';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class FirestoreGetUserDTO {\n\t/**\n\t * Valida o retorno dos dados vindos do firestore\n\t * @param input - Deve conter os dados a ser validado\n\t **/\n\tstatic exec(input: any) {\n\t\tconst schema = z.object({\n\t\t\tid: z.string().uuid(),\n\t\t\tname: z\n\t\t\t\t.string()\n\t\t\t\t.min(userDTORules.name.minLength)\n\t\t\t\t.max(userDTORules.name.maxLength),\n\t\t\temail: z.string().email(),\n\t\t\tpassword: z\n\t\t\t\t.string()\n\t\t\t\t.min(userDTORules.password.minLength)\n\t\t\t\t.max(userDTORules.password.maxLength),\n\t\t\tCPF: z.string().length(userDTORules.CPF.minLength),\n\t\t\tphoneNumber: z\n\t\t\t\t.string()\n\t\t\t\t.min(userDTORules.phoneNumber.minLength)\n\t\t\t\t.max(userDTORules.phoneNumber.maxLength),\n\t\t\tcreatedAt: z.instanceof(Timestamp),\n\t\t\tupdatedAt: z.instanceof(Timestamp),\n\t\t});\n\t\tschema.parse(input);\n\n\t\treturn input as IIncomingFirestoreUserData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FirestoreModule.html":{"url":"modules/FirestoreModule.html","title":"module - FirestoreModule","body":"\n                   \n\n\n\n\n    Modules\n    FirestoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FirestoreModule\n\n\n\ncluster_FirestoreModule_providers\n\n\n\ncluster_FirestoreModule_exports\n\n\n\n\nCondominiumRepo \n\nCondominiumRepo \n\n\n\nInviteRepo \n\nInviteRepo \n\n\n\nUserRepo \n\nUserRepo \n\n\n\nFirestoreModule\n\nFirestoreModule\n\nCondominiumRepo  -->\n\nFirestoreModule->CondominiumRepo \n\n\n\nInviteRepo  -->\n\nFirestoreModule->InviteRepo \n\n\n\nUserRepo  -->\n\nFirestoreModule->UserRepo \n\n\n\n\n\nCollectionsRefService\n\nCollectionsRefService\n\nFirestoreModule -->\n\nCollectionsRefService->FirestoreModule\n\n\n\n\n\nFirestoreService\n\nFirestoreService\n\nFirestoreModule -->\n\nFirestoreService->FirestoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/firestore.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CollectionsRefService\n                        \n                        \n                            FirestoreService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CondominiumRepo\n                        \n                        \n                            InviteRepo\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UserRepo } from '@registry:app/repositories/user';\nimport { Global, Module } from '@nestjs/common';\nimport { UsersFirestore } from './repositories/users';\nimport { CondominiumRepo } from '@registry:app/repositories/condominium';\nimport { CondominiumsFirestore } from './repositories/condominiums';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { InviteFirestore } from './repositories/invite';\nimport { FirestoreService } from './firestore.service';\nimport { CollectionsRefService } from './collectionsRefs.service';\n\n@Global()\n@Module({\n\tproviders: [\n\t\tFirestoreService,\n\t\tCollectionsRefService,\n\t\t{\n\t\t\tprovide: UserRepo,\n\t\t\tuseClass: UsersFirestore,\n\t\t},\n\t\t{\n\t\t\tprovide: CondominiumRepo,\n\t\t\tuseClass: CondominiumsFirestore,\n\t\t},\n\t\t{\n\t\t\tprovide: InviteRepo,\n\t\t\tuseClass: InviteFirestore,\n\t\t},\n\t],\n\texports: [UserRepo, CondominiumRepo, InviteRepo],\n})\nexport class FirestoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirestoreService.html":{"url":"injectables/FirestoreService.html","title":"injectable - FirestoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirestoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/firestore.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                onApplicationShutdown\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    instance\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                        \n                    close()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        instance\n                    \n                \n\n                \n                    \n                        getinstance()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/infra/storages/db/firestore/firestore.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, OnApplicationShutdown } from '@nestjs/common';\nimport { initializeApp } from 'firebase-admin/app';\nimport { Firestore } from 'firebase-admin/firestore';\nimport admin from 'firebase-admin';\n\n@Injectable()\nexport class FirestoreService implements OnApplicationShutdown {\n\tprivate readonly _instance: Firestore;\n\n\tconstructor() {\n\t\tinitializeApp({\n\t\t\tprojectId: process.env.GCP_PROJECT,\n\t\t});\n\n\t\tthis._instance = admin.firestore();\n\t\tthis._instance.settings({\n\t\t\tignoreUndefinedProperties: true,\n\t\t});\n\t}\n\n\tget instance(): Firestore {\n\t\treturn this._instance;\n\t}\n\n\tasync close() {\n\t\tawait this._instance.terminate();\n\t}\n\n\tasync onApplicationShutdown() {\n\t\tawait this._instance.terminate();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GatewayErrorFilter.html":{"url":"classes/GatewayErrorFilter.html","title":"class - GatewayErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GatewayErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/gateways.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Gateways\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                possibleErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/gateways.filter.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        possibleErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGatewayError[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Entrada inválida',\n\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\tmessage:\n\t\t\t\t'Não foi possível atingir o resultado esperado com a entrada de dados fornecida, por favor, verifique se seus dados são válidos',\n\t\t\thttpCode: 400,\n\t\t},\n\t\t{\n\t\t\tname: 'Dada envenenado',\n\t\t\ttag: GatewaysErrorsTags.PoisonedContent,\n\t\t\tmessage: 'Conteúdo mau formado pelo servidor',\n\t\t\thttpCode: 500,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/gateways.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: GatewayErrors, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/gateways.filter.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            GatewayErrors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tGatewayErrors,\n\tGatewaysErrorsTags,\n} from '@registry:infra/gateways/errors';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IGatewayError {\n\tname: string;\n\ttag: GatewaysErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros dos Gateways */\n@Catch(GatewayErrors)\nexport class GatewayErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IGatewayError[] = [\n\t\t{\n\t\t\tname: 'Entrada inválida',\n\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\tmessage:\n\t\t\t\t'Não foi possível atingir o resultado esperado com a entrada de dados fornecida, por favor, verifique se seus dados são válidos',\n\t\t\thttpCode: 400,\n\t\t},\n\t\t{\n\t\t\tname: 'Dada envenenado',\n\t\t\ttag: GatewaysErrorsTags.PoisonedContent,\n\t\t\tmessage: 'Conteúdo mau formado pelo servidor',\n\t\t\thttpCode: 500,\n\t\t},\n\t];\n\n\tcatch(exception: GatewayErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.gateway,\n\t\t\t\tdescription: `${\n\t\t\t\t\texception.content\n\t\t\t\t\t\t? `${error.message} - ${exception.content}`\n\t\t\t\t\t\t: error.message\n\t\t\t\t}`,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.gateway,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GatewayErrors.html":{"url":"classes/GatewayErrors.html","title":"class - GatewayErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GatewayErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/errors/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                content\n                            \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/gateways/errors/index.ts:14\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de gateways, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro, o conteúdo e a tag de rastramento para os filters, use o GatewaysErrorsTags\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/gateways/errors/index.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GatewaysErrorsTags\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/gateways/errors/index.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum GatewaysErrorsTags {\n\tInvalidResult = 'Invalid Result',\n\tPoisonedContent = 'Poisoned Content',\n}\n\ninterface IProps {\n\tmessage: string;\n\tcontent?: any;\n\ttag: GatewaysErrorsTags;\n}\n\nexport class GatewayErrors extends Error {\n\treadonly tag: GatewaysErrorsTags;\n\treadonly content: any;\n\n\t/**\n\t * Erro customizado usado na camada de gateways, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro, o conteúdo e a tag de rastramento para os filters, use o GatewaysErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Gateway Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t\tthis.content = input.content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\n\nCepGateway \n\nCepGateway \n\n\n\nGatewayModule\n\nGatewayModule\n\nCepGateway  -->\n\nGatewayModule->CepGateway \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CepGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CepGateway } from '@registry:app/gateways/CEP.gateway';\nimport { Module } from '@nestjs/common';\nimport { ViacepGateway } from './APIs/viacep.gateway';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: CepGateway,\n\t\t\tuseClass: ViacepGateway,\n\t\t},\n\t],\n\texports: [CepGateway],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenInviteService.html":{"url":"injectables/GenInviteService.html","title":"injectable - GenInviteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenInviteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genInvite.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por criar um convite\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                            \n                                    Private\n                                    Async\n                                generateInvite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptAdapter: CryptAdapter, emailAdapter: EmailAdapter, inviteRepo: InviteRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/genInvite.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptAdapter\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailAdapter\n                                                  \n                                                        \n                                                                        EmailAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inviteRepo\n                                                  \n                                                        \n                                                                        InviteRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genInvite.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateInvite\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateInvite(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genInvite.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { Email, Level, UUID } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { Invite } from '@registry:app/entities/invite';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tcondominiumId: UUID;\n\trequiredLevel?: Level;\n\tkey?: string;\n}\n\n/** Serviço responsável por criar um convite */\n@Injectable()\nexport class GenInviteService implements IService {\n\tconstructor(\n\t\tprivate readonly cryptAdapter: CryptAdapter,\n\t\tprivate readonly emailAdapter: EmailAdapter,\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t) {}\n\n\tprivate async generateInvite({\n\t\tinvite,\n\t\tkey,\n\t}: {\n\t\tinvite: Invite;\n\t\tkey: string;\n\t}) {\n\t\tconst inputData = generateStringCodeContent({\n\t\t\tid: invite.id,\n\t\t\temail: invite.email,\n\t\t\trequiredLevel: invite.type,\n\t\t\tcondominiumId: invite.condominiumId,\n\t\t});\n\n\t\treturn await this.cryptAdapter.hashWithHmac({ key, data: inputData });\n\t}\n\n\tasync exec(input: IProps): Promise {\n\t\tconst invite = new Invite({\n\t\t\temail: input.email.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\ttype: input.requiredLevel?.value ?? 0,\n\t\t\tttl: 1000 * 60 * 60 * 24 * 7,\n\t\t});\n\t\tconst inviteAsHash = await this.generateInvite({\n\t\t\tinvite,\n\t\t\tkey: input.key ?? (process.env.INVITE_TOKEN_KEY as string),\n\t\t});\n\n\t\tawait this.inviteRepo.create({ invite });\n\t\tawait this.emailAdapter.send({\n\t\t\tfrom: `${process.env.NAME_SENDER} `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Convite para o condomínio`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este link com ninguém\n\t\t\t\thttps://[EXEMPLO DE DOMÍNIO]/[PÁGINA DO FRONT PARA VALIDAR O CONVITE]/${inviteAsHash}`,\n\t\t});\n\n\t\treturn invite;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenTFAService.html":{"url":"injectables/GenTFAService.html","title":"injectable - GenTFAService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenTFAService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genTFA.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por iniciar o processo de autenticação de dois fatores\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                            \n                                    Private\n                                    Async\n                                genCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: EmailAdapter, userRepo: UserRepo, crypt: CryptAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/genTFA.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        EmailAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genTFA.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        genCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    genCode(input: UUID)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/genTFA.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { Email, UUID } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tuserId: UUID;\n}\n\n/** Serviço responsável por iniciar o processo de autenticação de dois fatores */\n@Injectable()\nexport class GenTFAService implements IService {\n\tconstructor(\n\t\tprivate readonly email: EmailAdapter,\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tprivate async genCode(input: UUID) {\n\t\tconst user = await this.userRepo.find({ key: input, safeSearch: true });\n\t\tlet code = generateStringCodeContent({\n\t\t\temail: user.email,\n\t\t\tid: user.id,\n\t\t});\n\t\tconst key = process.env.TFA_TOKEN_KEY as string;\n\n\t\tconst metadata = JSON.stringify({\n\t\t\tiat: Date.now(),\n\t\t\texp: Date.now() + 1000 * 60 * 60 * 3,\n\t\t});\n\t\tcode = `${btoa(metadata)}.${btoa(code)}`;\n\n\t\tconst inviteSignature = await this.crypt.hashWithHmac({\n\t\t\tdata: code,\n\t\t\tkey,\n\t\t});\n\t\treturn `${btoa(metadata)}.${btoa(inviteSignature)}`;\n\t}\n\n\tasync exec(input: IProps) {\n\t\tconst code = await this.genCode(input.userId);\n\t\tawait this.email.send({\n\t\t\tfrom: `${process.env.NAME_SENDER} `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Solicitação de login`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este código com ninguém\n\t\t\t\thttps://[EXEMPLO DE DOMÍNIO]/[PÁGINA DO FRONT PARA VALIDAR O CÓDIGO]/${code}`,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GenericErrorFilter.html":{"url":"classes/GenericErrorFilter.html","title":"class - GenericErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GenericErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/generic.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros genéricos\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                untrackableErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/generic.filter.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        untrackableErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUntrackableErrors[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\tkey: 'ALREADY_EXISTS: entity already exists',\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/generic.filter.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/generic.filter.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IUntrackableErrors {\n\tname: string;\n\tkey: string;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros genéricos */\n@Catch()\nexport class GenericErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate readonly untrackableErrors: IUntrackableErrors[] = [\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\tkey: 'ALREADY_EXISTS: entity already exists',\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t];\n\n\tcatch(exception: Error, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.untrackableErrors.find((item) => {\n\t\t\treturn exception?.message?.includes(item.key);\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: `Erro interno do servidor ${exception?.name}`,\n\t\t\tlayer: LayersEnum.unknown,\n\t\t\tdescription: exception?.message ?? 'Causa desconhecida',\n\t\t\tstack: exception?.stack ?? 'Causa desconhecida',\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetCondominiumRelUserService.html":{"url":"injectables/GetCondominiumRelUserService.html","title":"injectable - GetCondominiumRelUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetCondominiumRelUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/getCondominiumRel.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Serviço responsável por ler e retornar a relação que um usuário tem com seus condominios\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/services/getCondominiumRel.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(undefined: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/getCondominiumRel.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UUID } from '@registry:app/entities/VO';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { IService } from './_IService';\n\ninterface IProps {\n\tuserId: UUID;\n}\n\n/** Serviço responsável por ler e retornar a relação que um usuário tem com seus condominios */\n@Injectable()\nexport class GetCondominiumRelUserService implements IService {\n\tconstructor(private readonly userRepo: UserRepo) {}\n\n\tasync exec({ userId }: IProps) {\n\t\tconst condominiumRelUserGroup =\n\t\t\tawait this.userRepo.getAllCondominiumRelation({ userId });\n\t\treturn {\n\t\t\tcondominiumRels: condominiumRelUserGroup,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuardErrorFilter.html":{"url":"classes/GuardErrorFilter.html","title":"class - GuardErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuardErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/guard.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Guards\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/guard.filter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: GuardErrors, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/guard.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            GuardErrors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros dos Guards */\n@Catch(GuardErrors)\nexport class GuardErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(exception: GuardErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tthis.logger.error({\n\t\t\tname: `Camada de autenticação - ${exception.name}`,\n\t\t\tlayer: LayersEnum.auth,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(401).json({\n\t\t\tstatusCode: 401,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuardErrors.html":{"url":"classes/GuardErrors.html","title":"class - GuardErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuardErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/errors/guard.ts:5\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de guards, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        interface IProps {\n\tmessage: string;\n}\n\nexport class GuardErrors extends Error {\n\t/**\n\t * Erro customizado usado na camada de guards, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Guard Error';\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/HmacInviteGuard.html":{"url":"guards/HmacInviteGuard.html","title":"guard - HmacInviteGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    HmacInviteGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/hmac-invite.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar a integridade e validade dos convites\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                mapKeyBasedOnLevel\n                            \n                            \n                                    Private\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(crypt: CryptAdapter, inviteRepo: InviteRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/hmac-invite.guard.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crypt\n                                                  \n                                                        \n                                                                        CryptAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inviteRepo\n                                                  \n                                                        \n                                                                        InviteRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/hmac-invite.guard.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapKeyBasedOnLevel\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapKeyBasedOnLevel(input: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/hmac-invite.guard.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(input: IValidate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/hmac-invite.guard.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IValidate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { Email } from '@registry:app/entities/VO';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\nimport { plainToClass } from 'class-transformer';\nimport { InviteUserDTO } from '@registry:infra/http/DTO/inviteUser.DTO';\nimport { checkClassValidatorErrors } from '@registry:utils/convertValidatorErr';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { Invite } from '@registry:app/entities/invite';\n\ninterface IValidate {\n\temail: Email;\n\tinviteAsHash: string;\n\tinvite: Invite;\n}\n\n/** Usado para validar a integridade e validade dos convites */\n@Injectable()\nexport class HmacInviteGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly crypt: CryptAdapter,\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t) {}\n\n\tprivate mapKeyBasedOnLevel(input: number | undefined) {\n\t\tswitch (input) {\n\t\tcase 1:\n\t\t\treturn process.env.INVITE_ADMIN_TOKEN_KEY;\n\t\tcase 2:\n\t\t\treturn process.env.INVITE_SUPER_ADMIN_TOKEN_KEY;\n\t\tdefault:\n\t\t\treturn process.env.INVITE_TOKEN_KEY;\n\t\t}\n\t}\n\n\tprivate async validate(input: IValidate): Promise {\n\t\tconst key = this.mapKeyBasedOnLevel(input.invite.type.value);\n\n\t\tconst invite = generateStringCodeContent({\n\t\t\tcondominiumId: input.invite.condominiumId,\n\t\t\temail: input.email,\n\t\t\trequiredLevel: input.invite.type,\n\t\t\tid: input.invite.id,\n\t\t});\n\t\tconst hashedInvite = await this.crypt\n\t\t\t.hashWithHmac({ data: invite, key: key as string })\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({\n\t\t\t\t\tmessage: 'Falha ao tentar gerar um HMAC do convite',\n\t\t\t\t});\n\t\t\t});\n\n\t\treturn hashedInvite === input.inviteAsHash;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\n\t\tconst body = plainToClass(InviteUserDTO, req.body);\n\t\tawait checkClassValidatorErrors({ body });\n\t\tconst email = new Email(body.email);\n\n\t\tif (typeof req.query?.invite !== 'string')\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'O convite é inválido',\n\t\t\t});\n\n\t\tconst invite = await this.inviteRepo.find({\n\t\t\tkey: email,\n\t\t\tsafeSearch: true,\n\t\t});\n\n\t\tconst inviteAsHash = req.query.invite;\n\t\tconst validationRes = await this.validate({\n\t\t\temail,\n\t\t\tinviteAsHash,\n\t\t\tinvite,\n\t\t});\n\t\tif (!validationRes || invite.expiresAt.getTime() \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpAdapter.html":{"url":"classes/HttpAdapter.html","title":"class - HttpAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/http.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                call\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        call\n                        \n                    \n                \n            \n            \n                \n                        \n                    call(input: IHttpClientCall)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/http.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IHttpClientCall\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface IHttpClientCall {\n\turl: string;\n\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE';\n\theaders?: Headers | { [key: string]: string };\n\tbody?: string | FormData | BodyInit;\n}\nexport interface IHttpClientCallReturn {\n\tbody: any;\n\theaders: Headers;\n\tstatus: number;\n}\nexport abstract class HttpAdapter {\n\tabstract call(input: IHttpClientCall): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpModule.html":{"url":"modules/HttpModule.html","title":"module - HttpModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HttpModule\n\n\n\ncluster_HttpModule_providers\n\n\n\ncluster_HttpModule_imports\n\n\n\n\nAdaptersModule\n\nAdaptersModule\n\n\n\nHttpModule\n\nHttpModule\n\nHttpModule -->\n\nAdaptersModule->HttpModule\n\n\n\n\n\nFirestoreModule\n\nFirestoreModule\n\nHttpModule -->\n\nFirestoreModule->HttpModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nHttpModule -->\n\nGatewayModule->HttpModule\n\n\n\n\n\nCreateCondominiumService\n\nCreateCondominiumService\n\nHttpModule -->\n\nCreateCondominiumService->HttpModule\n\n\n\n\n\nCreateTokenService\n\nCreateTokenService\n\nHttpModule -->\n\nCreateTokenService->HttpModule\n\n\n\n\n\nCreateUserService\n\nCreateUserService\n\nHttpModule -->\n\nCreateUserService->HttpModule\n\n\n\n\n\nDeleteUserService\n\nDeleteUserService\n\nHttpModule -->\n\nDeleteUserService->HttpModule\n\n\n\n\n\nGenInviteService\n\nGenInviteService\n\nHttpModule -->\n\nGenInviteService->HttpModule\n\n\n\n\n\nGenTFAService\n\nGenTFAService\n\nHttpModule -->\n\nGenTFAService->HttpModule\n\n\n\n\n\nGetCondominiumRelUserService\n\nGetCondominiumRelUserService\n\nHttpModule -->\n\nGetCondominiumRelUserService->HttpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/infra/http/http.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CreateCondominiumService\n                        \n                        \n                            CreateTokenService\n                        \n                        \n                            CreateUserService\n                        \n                        \n                            DeleteUserService\n                        \n                        \n                            GenInviteService\n                        \n                        \n                            GenTFAService\n                        \n                        \n                            GetCondominiumRelUserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CondominiumController\n                        \n                        \n                            UserController\n                        \n                        \n                            AdminController\n                        \n                        \n                            SuperAdminController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdaptersModule\n                        \n                        \n                            FirestoreModule\n                        \n                        \n                            GatewayModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CondominiumController } from './controllers/condominium.controller';\nimport { AdaptersModule } from '@registry:app/adapters/adapter.module';\nimport { CreateCondominiumService } from '@registry:app/services/createCondominium.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { CreateUserService } from '@registry:app/services/createUser.service';\nimport { CreateTokenService } from '@registry:app/services/createToken.service';\nimport { DeleteUserService } from '@registry:app/services/deleteUser.service';\nimport { GenInviteService } from '@registry:app/services/genInvite.service';\nimport { UserController } from './controllers/user.controller';\nimport { AdminController } from './controllers/admin.controller';\nimport { SuperAdminController } from './controllers/super-admin.controller';\nimport { GatewayModule } from '../gateways/gateway.module';\nimport { GenTFAService } from '@registry:app/services/genTFA.service';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\nimport { FirestoreModule } from '@registry:infra/storages/db/firestore/firestore.module';\nimport { GetCondominiumRelUserService } from '@registry:app/services/getCondominiumRel.service';\n\n@Module({\n\timports: [\n\t\tFirestoreModule,\n\t\tAdaptersModule,\n\t\tGatewayModule,\n\t\tThrottlerModule.forRoot([\n\t\t\t{\n\t\t\t\tlimit: 45,\n\t\t\t\tttl: 30000,\n\t\t\t},\n\t\t]),\n\t],\n\tcontrollers: [\n\t\tCondominiumController,\n\t\tUserController,\n\t\tAdminController,\n\t\tSuperAdminController,\n\t],\n\tproviders: [\n\t\tJwtService,\n\t\tCreateCondominiumService,\n\t\tCreateUserService,\n\t\tCreateTokenService,\n\t\tDeleteUserService,\n\t\tGenInviteService,\n\t\tGenTFAService,\n\t\tGetCondominiumRelUserService,\n\t\t{\n\t\t\tprovide: APP_GUARD,\n\t\t\tuseClass: ThrottlerGuard,\n\t\t},\n\t],\n})\nexport class HttpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccessTokenBody.html":{"url":"interfaces/IAccessTokenBody.html","title":"interface - IAccessTokenBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAccessTokenBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/auth/tokenTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum TokenType {\n\taccessToken = 'Access Token',\n\trefreshToken = 'Refresh Token',\n}\n\nexport interface IAccessTokenBody {\n\tsub: string;\n\ttype: string;\n\tcontent: {\n\t\tname: string;\n\t\temail: string;\n\t\tphoneNumber: string;\n\t\tcreatedAt: Date;\n\t\tupdatedAt: Date;\n\t};\n\tiat: number;\n\texp: number;\n}\n\nexport interface IRefreshTokenBody {\n\tsub: string;\n\ttype: string;\n\temail: string;\n\tiat: number;\n\texp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBodyProps.html":{"url":"interfaces/IBodyProps.html","title":"interface - IBodyProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBodyProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/classValidator.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tArgumentsHost,\n\tBadRequestException,\n\tCatch,\n\tExceptionFilter,\n} from '@nestjs/common';\nimport { isArray, isNumber, isString } from 'class-validator';\nimport { Response } from 'express';\n\ninterface IBodyProps {\n\tmessage: Array;\n\terror: string;\n\tstatusCode: number;\n}\n\n/** Usado para filtrar erros do Class Validator */\n@Catch(BadRequestException)\nexport class ClassValidatorErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tvalidateBody(input: any): input is IBodyProps {\n\t\treturn (\n\t\t\t'message' in input &&\n\t\t\tisArray(input['message']) &&\n\t\t\t'error' in input &&\n\t\t\tisString(input['error']) &&\n\t\t\t'statusCode' in input &&\n\t\t\tisNumber(input['statusCode'])\n\t\t);\n\t}\n\n\tcatch(exception: BadRequestException, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst body = exception.getResponse() as IBodyProps;\n\t\tif (!this.validateBody(body))\n\t\t\treturn response.status(500).json({\n\t\t\t\tstatusCode: 500,\n\t\t\t\tmessage: 'Erro interno do servidor',\n\t\t\t});\n\n\t\tthis.logger.error({\n\t\t\tname: 'Requisição ruim',\n\t\t\tlayer: LayersEnum.dto,\n\t\t\tdescription: JSON.stringify(body.message),\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(400).json({\n\t\t\tstatusCode: 400,\n\t\t\tname: 'Requisição ruim',\n\t\t\tmessage: body.message,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICheckCep.html":{"url":"interfaces/ICheckCep.html","title":"interface - ICheckCep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICheckCep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/gateways/CEP.gateway.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cep\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            complement\n                                        \n                                \n                                \n                                        \n                                            neighborhood\n                                        \n                                \n                                \n                                        \n                                            street_address\n                                        \n                                \n                                \n                                        \n                                            uf\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cep\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cep:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        complement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complement:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        neighborhood\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        neighborhood:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street_address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uf\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uf:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICheckCep {\n\tcep: string;\n\tstreet_address: string;\n\tcomplement: string;\n\tneighborhood: string;\n\tcity: string;\n\tuf: string;\n}\n\nexport abstract class CepGateway {\n\tabstract check(input: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClass.html":{"url":"interfaces/IClass.html","title":"interface - IClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/utils/class.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IClass {\n\tnew (...args: any): T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICondominiumRelUserInObject.html":{"url":"interfaces/ICondominiumRelUserInObject.html","title":"interface - ICondominiumRelUserInObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICondominiumRelUserInObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/condominiumRelUser.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\n\nexport interface ICondominiumRelUserInObject {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel: number;\n\tupdatedAt?: Date;\n}\n\nexport type TCondominiumRelUserToObject = {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel: number;\n\tupdatedAt: Date;\n};\n\nexport class CondominiumRelUserMapper {\n\t/**\n\t * Método usado para converter um objeto de CondominiumRelUser em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass({ id, ...input }: ICondominiumRelUserInObject) {\n\t\treturn new CondominiumRelUser({ ...input }, id);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de CondominiumRelUser em um objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: CondominiumRelUser): TCondominiumRelUserToObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tuserId: input.userId.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\tblock: input.block ? input.block.value : input.block,\n\t\t\tlevel: input.level.value,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t\tapartmentNumber: input.apartmentNumber\n\t\t\t\t? input.apartmentNumber.value\n\t\t\t\t: input.apartmentNumber,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICondominiumRelUserProps.html":{"url":"interfaces/ICondominiumRelUserProps.html","title":"interface - ICondominiumRelUserProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICondominiumRelUserProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominiumRelUser/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     ApartmentNumber | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApartmentNumber | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         Block | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Block, Level, ApartmentNumber } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\nexport interface ICondominiumRelUserProps {\n\tuserId: UUID;\n\tcondominiumId: UUID;\n\tblock?: Block | null;\n\tapartmentNumber?: ApartmentNumber | null;\n\tlevel: Level;\n\tupdatedAt: Date;\n}\n\nexport interface IInputCondominiumRelUser {\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel?: number | null;\n\tupdatedAt?: Date;\n}\n\nexport const condominiumRelUserDTORules = {\n\tuserId: {\n\t\ttype: 'string',\n\t},\n\tcondominiumId: {\n\t\ttype: 'string',\n\t},\n\tblock: {\n\t\tmaxLength: 6,\n\t\toption: true,\n\t\ttype: 'string',\n\t},\n\tapartmentNumber: {\n\t\tmaxLength: 2147483647,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tlevel: {\n\t\tmaxLength: 2,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class CondominiumRelUser implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: ICondominiumRelUserProps;\n\n\tconstructor(input: IInputCondominiumRelUser, id?: string) {\n\t\tthis._id = ValueObject.build(UUID, id).or(UUID.genV4()).exec();\n\t\tthis.props = {\n\t\t\tlevel: ValueObject.build(Level, input.level)\n\t\t\t\t.or(new Level(0))\n\t\t\t\t.exec(),\n\t\t\tapartmentNumber: ValueObject.build(\n\t\t\t\tApartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t)\n\t\t\t\t.allowNullish()\n\t\t\t\t.exec(),\n\t\t\tblock: ValueObject.build(Block, input.block).allowNullish().exec(),\n\t\t\tcondominiumId: ValueObject.build(UUID, input.condominiumId).exec(),\n\t\t\tuserId: ValueObject.build(UUID, input.userId).exec(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): CondominiumRelUser {\n\t\treturn new CondominiumRelUser({\n\t\t\tlevel: this.props.level.value,\n\t\t\tblock:\n\t\t\t\tthis.props.block instanceof Block\n\t\t\t\t\t? this.props.block.value\n\t\t\t\t\t: this.props.block,\n\t\t\tapartmentNumber:\n\t\t\t\tthis.props.apartmentNumber instanceof ApartmentNumber\n\t\t\t\t\t? this.props.apartmentNumber.value\n\t\t\t\t\t: this.props.apartmentNumber,\n\t\t\tcondominiumId: this.props.condominiumId.value,\n\t\t\tuserId: this.props.userId.value,\n\t\t\tupdatedAt: this.props.updatedAt,\n\t\t});\n\t}\n\n\tequalTo(input: CondominiumRelUser): boolean {\n\t\treturn (\n\t\t\tinput instanceof CondominiumRelUser &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.condominiumId,\n\t\t\t\tinput.condominiumId,\n\t\t\t) &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.apartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t) &&\n\t\t\tValueObject.compare(this.props.block, input.block) &&\n\t\t\tValueObject.compare(this.props.level, input.level) &&\n\t\t\tValueObject.compare(this.props.userId, input.userId) &&\n\t\t\tthis.props.updatedAt === this.props.updatedAt\n\t\t);\n\t}\n\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\tset level(input: Level) {\n\t\tthis.props.level = input;\n\t}\n\tget level(): Level {\n\t\treturn this.props.level;\n\t}\n\n\tset condominiumId(input: UUID) {\n\t\tthis.props.condominiumId = input;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\n\tset userId(input: UUID) {\n\t\tthis.props.userId = input;\n\t}\n\tget userId(): UUID {\n\t\treturn this.props.userId;\n\t}\n\n\tset block(input: Block | undefined | null) {\n\t\tthis.props.block = input;\n\t}\n\tget block(): Block | undefined | null {\n\t\treturn this.props.block;\n\t}\n\n\tset apartmentNumber(input: ApartmentNumber | undefined | null) {\n\t\tthis.props.apartmentNumber = input;\n\t}\n\tget apartmentNumber(): ApartmentNumber | undefined | null {\n\t\treturn this.props.apartmentNumber;\n\t}\n\n\tset updatedAt(input: Date) {\n\t\tthis.props.updatedAt = input;\n\t}\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConvertToObject.html":{"url":"interfaces/IConvertToObject.html","title":"interface - IConvertToObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConvertToObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/condominium.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CEP\n                                        \n                                \n                                \n                                        \n                                            CNPJ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            num\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CEP\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CEP:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CNPJ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CNPJ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\n\ninterface IConvertToObject {\n\tid?: string;\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport type TCondominiumInObject = Required;\n\nexport class CondominiumMapper {\n\t/**\n\t * Método usado para converter um objeto de um condomínio em classe\n\t * @param input - Deve conter os dados do condomínio em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: input.name,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tnum: input.num,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de condomínio em objeto\n\t * @param input - Deve conter os dados do condomínio em forma de classe\n\t **/\n\tstatic toObject(input: Condominium): TCondominiumInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tnum: input.num.value,\n\t\t\tCEP: input.CEP.value,\n\t\t\tname: input.name.value,\n\t\t\tCNPJ: input.CNPJ.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConvertToObject-1.html":{"url":"interfaces/IConvertToObject-1.html","title":"interface - IConvertToObject-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConvertToObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Invite } from '@registry:app/entities/invite';\n\ninterface IConvertToObject {\n\tid?: string;\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport type TInviteInObject = Required;\n\nexport class InviteMapper {\n\t/**\n\t * Método usado para converter um objeto de convite em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de convite em objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: Invite): TInviteInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\temail: input.email.value,\n\t\t\tttl: input.ttl,\n\t\t\texpiresAt: input.expiresAt,\n\t\t\ttype: input.type.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConvertToObject-2.html":{"url":"interfaces/IConvertToObject-2.html","title":"interface - IConvertToObject-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConvertToObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            requiredLevel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ttl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredLevel:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Code, Level } from '@registry:app/entities/VO';\nimport { OTP } from '@registry:app/entities/OTP';\n\ninterface IConvertToObject {\n\tid?: string;\n\tttl?: number;\n\tuserId?: string;\n\trequiredLevel: number;\n\tcondominiumId: string;\n\tcode: string;\n\tcreatedAt?: Date;\n}\n\nexport interface IOTPInObject {\n\tid: string;\n\tttl: number;\n\tuserId?: string;\n\trequiredLevel: number;\n\tcondominiumId: string;\n\tcode: string;\n\tcreatedAt: Date;\n}\n\nexport class OTPMapper {\n\t/**\n\t * @deprecated\n\t **/\n\tstatic toClass(input: IConvertToObject): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tttl: input.ttl,\n\t\t\t\tuserId: input.userId,\n\t\t\t\trequiredLevel: new Level(input.requiredLevel),\n\t\t\t\tcondominiumId: input.condominiumId,\n\t\t\t\tcode: new Code(input.code),\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * @deprecated\n\t **/\n\tstatic toObject(input: OTP): IOTPInObject {\n\t\treturn {\n\t\t\tid: input.id,\n\t\t\trequiredLevel: input.requiredLevel.value,\n\t\t\tttl: input.ttl,\n\t\t\tcondominiumId: input.condominiumId,\n\t\t\tuserId: input.userId,\n\t\t\tcode: input.code.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateOTPInput.html":{"url":"interfaces/ICreateOTPInput.html","title":"interface - ICreateOTPInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateOTPInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            otp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otp:         OTP\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OTP\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { Email } from '@registry:app/entities/VO';\n\nexport interface ICreateOTPInput {\n\totp: OTP;\n\temail: Email;\n}\n\nexport interface IFindOTPInput {\n\temail: Email;\n}\n\nexport interface IDeleteOTPInput {\n\temail: Email;\n}\n\nexport abstract class OTPRepo {\n\t/** @deprecated */\n\tabstract create(input: ICreateOTPInput): Promise;\n\t/** @deprecated */\n\tabstract find(input: IFindOTPInput): Promise;\n\t/** @deprecated */\n\tabstract delete(input: IDeleteOTPInput): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICryptCompare.html":{"url":"interfaces/ICryptCompare.html","title":"interface - ICryptCompare","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICryptCompare\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/crypt.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            hashedData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hashedData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hashedData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICryptCompare {\n\tdata: string;\n\thashedData: string;\n}\n\nexport interface ICryptHmac {\n\tdata: string;\n\tkey: string;\n}\n\nexport abstract class CryptAdapter {\n\tabstract hash(data: string): Promise;\n\tabstract hashWithHmac(input: ICryptHmac): Promise;\n\tabstract compare(input: ICryptCompare): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICryptHmac.html":{"url":"interfaces/ICryptHmac.html","title":"interface - ICryptHmac","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICryptHmac\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/crypt.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICryptCompare {\n\tdata: string;\n\thashedData: string;\n}\n\nexport interface ICryptHmac {\n\tdata: string;\n\tkey: string;\n}\n\nexport abstract class CryptAdapter {\n\tabstract hash(data: string): Promise;\n\tabstract hashWithHmac(input: ICryptHmac): Promise;\n\tabstract compare(input: ICryptCompare): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDeleteOTPInput.html":{"url":"interfaces/IDeleteOTPInput.html","title":"interface - IDeleteOTPInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDeleteOTPInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { Email } from '@registry:app/entities/VO';\n\nexport interface ICreateOTPInput {\n\totp: OTP;\n\temail: Email;\n}\n\nexport interface IFindOTPInput {\n\temail: Email;\n}\n\nexport interface IDeleteOTPInput {\n\temail: Email;\n}\n\nexport abstract class OTPRepo {\n\t/** @deprecated */\n\tabstract create(input: ICreateOTPInput): Promise;\n\t/** @deprecated */\n\tabstract find(input: IFindOTPInput): Promise;\n\t/** @deprecated */\n\tabstract delete(input: IDeleteOTPInput): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOTPInput.html":{"url":"interfaces/IFindOTPInput.html","title":"interface - IFindOTPInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOTPInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { Email } from '@registry:app/entities/VO';\n\nexport interface ICreateOTPInput {\n\totp: OTP;\n\temail: Email;\n}\n\nexport interface IFindOTPInput {\n\temail: Email;\n}\n\nexport interface IDeleteOTPInput {\n\temail: Email;\n}\n\nexport abstract class OTPRepo {\n\t/** @deprecated */\n\tabstract create(input: ICreateOTPInput): Promise;\n\t/** @deprecated */\n\tabstract find(input: IFindOTPInput): Promise;\n\t/** @deprecated */\n\tabstract delete(input: IDeleteOTPInput): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFirestoreErrors.html":{"url":"interfaces/IFirestoreErrors.html","title":"interface - IFirestoreErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFirestoreErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/databaseCustomError.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         DatabaseCustomErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseCustomErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\nimport {\n\tDatabaseCustomError,\n\tDatabaseCustomErrorsTags,\n} from '@registry:infra/storages/db/error';\n\ninterface IFirestoreErrors {\n\tname: string;\n\ttag: DatabaseCustomErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros customizados do banco de dados */\n@Catch(DatabaseCustomError)\nexport class DatabaseCustomErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate readonly possibleErrors: IFirestoreErrors[] = [\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\ttag: DatabaseCustomErrorsTags.contentAlreadyExists,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Conteúdo não existe',\n\t\t\ttag: DatabaseCustomErrorsTags.refLost,\n\t\t\tmessage: 'O conteúdo solicitado não foi encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.tooManyEntities,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.maximumCondominiumRelUser,\n\t\t\tmessage: 'Este usuário já está vinculado a outro condomínio',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Acesso não autorizado',\n\t\t\ttag: DatabaseCustomErrorsTags.wrongInputLevel,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t];\n\n\tcatch(exception: DatabaseCustomError, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.database,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGatewayError.html":{"url":"interfaces/IGatewayError.html","title":"interface - IGatewayError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGatewayError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/gateways.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         GatewaysErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GatewaysErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tGatewayErrors,\n\tGatewaysErrorsTags,\n} from '@registry:infra/gateways/errors';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IGatewayError {\n\tname: string;\n\ttag: GatewaysErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros dos Gateways */\n@Catch(GatewayErrors)\nexport class GatewayErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IGatewayError[] = [\n\t\t{\n\t\t\tname: 'Entrada inválida',\n\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\tmessage:\n\t\t\t\t'Não foi possível atingir o resultado esperado com a entrada de dados fornecida, por favor, verifique se seus dados são válidos',\n\t\t\thttpCode: 400,\n\t\t},\n\t\t{\n\t\t\tname: 'Dada envenenado',\n\t\t\ttag: GatewaysErrorsTags.PoisonedContent,\n\t\t\tmessage: 'Conteúdo mau formado pelo servidor',\n\t\t\thttpCode: 500,\n\t\t},\n\t];\n\n\tcatch(exception: GatewayErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.gateway,\n\t\t\t\tdescription: `${\n\t\t\t\t\texception.content\n\t\t\t\t\t\t? `${error.message} - ${exception.content}`\n\t\t\t\t\t\t: error.message\n\t\t\t\t}`,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.gateway,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGenerateInviteKeyProps.html":{"url":"interfaces/IGenerateInviteKeyProps.html","title":"interface - IGenerateInviteKeyProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGenerateInviteKeyProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/utils/generateStringCodeContent.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            requiredLevel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredLevel:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Level, Email, UUID } from '@registry:app/entities/VO';\n\nexport interface IGenerateInviteKeyProps {\n\tid: UUID;\n\temail: Email;\n\trequiredLevel?: Level;\n\tcondominiumId?: UUID;\n}\n\n/**\n * Feito para gerar uma string com base nos dados do usuário e sua relação com o condomínio\n **/\nexport function generateStringCodeContent(input: IGenerateInviteKeyProps) {\n\tconst key = `[ID(${input.id.value})].[EMAIL(${input.email.value})].[LEVEL(${\n\t\tinput.requiredLevel?.value ?? 'UNKNOWN'\n\t})].[CONDOMINIUMID(${input.condominiumId?.value ?? 'UNKNOWN'})]`;\n\treturn key;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHttpClientCall.html":{"url":"interfaces/IHttpClientCall.html","title":"interface - IHttpClientCall","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHttpClientCall\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/http.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     string | FormData | BodyInit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | FormData | BodyInit\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Headers | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Headers | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:     \"GET\" | \"POST\" | \"PATCH\" | \"PUT\" | \"DELETE\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"GET\" | \"POST\" | \"PATCH\" | \"PUT\" | \"DELETE\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHttpClientCall {\n\turl: string;\n\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE';\n\theaders?: Headers | { [key: string]: string };\n\tbody?: string | FormData | BodyInit;\n}\nexport interface IHttpClientCallReturn {\n\tbody: any;\n\theaders: Headers;\n\tstatus: number;\n}\nexport abstract class HttpAdapter {\n\tabstract call(input: IHttpClientCall): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHttpClientCallReturn.html":{"url":"interfaces/IHttpClientCallReturn.html","title":"interface - IHttpClientCallReturn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IHttpClientCallReturn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/http.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Headers\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Headers\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHttpClientCall {\n\turl: string;\n\tmethod: 'GET' | 'POST' | 'PATCH' | 'PUT' | 'DELETE';\n\theaders?: Headers | { [key: string]: string };\n\tbody?: string | FormData | BodyInit;\n}\nexport interface IHttpClientCallReturn {\n\tbody: any;\n\theaders: Headers;\n\tstatus: number;\n}\nexport abstract class HttpAdapter {\n\tabstract call(input: IHttpClientCall): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInMemoryContainerProps.html":{"url":"interfaces/IInMemoryContainerProps.html","title":"interface - IInMemoryContainerProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInMemoryContainerProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumArr\n                                        \n                                \n                                \n                                        \n                                            condominiumRelUserArr\n                                        \n                                \n                                \n                                        \n                                            inviteArr\n                                        \n                                \n                                \n                                        \n                                            userArr\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumArr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumArr:         Condominium[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Condominium[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumRelUserArr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumRelUserArr:     CondominiumRelUser[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CondominiumRelUser[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteArr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inviteArr:         Invite[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invite[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userArr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userArr:         IInMemoryUserContainer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IInMemoryUserContainer[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport interface IInMemoryUserContainer {\n\tuser: {\n\t\tcontent: User;\n\t\tcondominiumRelUser: Record;\n\t};\n}\n\ninterface IInMemoryContainerProps {\n\tuserArr: IInMemoryUserContainer[];\n\tcondominiumArr: Condominium[];\n\tcondominiumRelUserArr: CondominiumRelUser[];\n\tinviteArr: Invite[];\n}\n\nexport class InMemoryContainer {\n\tprops: IInMemoryContainerProps = {\n\t\tuserArr: [],\n\t\tcondominiumArr: [],\n\t\tcondominiumRelUserArr: [],\n\t\tinviteArr: [],\n\t};\n\n\terase() {\n\t\tthis.props = {\n\t\t\tuserArr: [],\n\t\t\tcondominiumRelUserArr: [],\n\t\t\tinviteArr: [],\n\t\t\tcondominiumArr: [],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInMemoryUserContainer.html":{"url":"interfaces/IInMemoryUserContainer.html","title":"interface - IInMemoryUserContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInMemoryUserContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport interface IInMemoryUserContainer {\n\tuser: {\n\t\tcontent: User;\n\t\tcondominiumRelUser: Record;\n\t};\n}\n\ninterface IInMemoryContainerProps {\n\tuserArr: IInMemoryUserContainer[];\n\tcondominiumArr: Condominium[];\n\tcondominiumRelUserArr: CondominiumRelUser[];\n\tinviteArr: Invite[];\n}\n\nexport class InMemoryContainer {\n\tprops: IInMemoryContainerProps = {\n\t\tuserArr: [],\n\t\tcondominiumArr: [],\n\t\tcondominiumRelUserArr: [],\n\t\tinviteArr: [],\n\t};\n\n\terase() {\n\t\tthis.props = {\n\t\t\tuserArr: [],\n\t\t\tcondominiumRelUserArr: [],\n\t\t\tinviteArr: [],\n\t\t\tcondominiumArr: [],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIncomingFirestoreCondominiumData.html":{"url":"interfaces/IIncomingFirestoreCondominiumData.html","title":"interface - IIncomingFirestoreCondominiumData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIncomingFirestoreCondominiumData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/condominiums.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CEP\n                                        \n                                \n                                \n                                        \n                                            CNPJ\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            num\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CEP\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CEP:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CNPJ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CNPJ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { TCondominiumInObject } from '@registry:app/mapper/condominium';\nimport { Timestamp } from 'firebase-admin/firestore';\n\nexport interface IIncomingFirestoreCondominiumData {\n\tid: string;\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt: Timestamp;\n\tupdatedAt: Timestamp;\n}\n\nexport class CondominiumFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass(\n\t\tinput: IIncomingFirestoreCondominiumData,\n\t): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tCEP: input.CEP,\n\t\t\t\tCNPJ: input.CNPJ,\n\t\t\t\tnum: input.num,\n\t\t\t\tname: input.name,\n\t\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreCondominiumData,\n\t): TCondominiumInObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIncomingFirestoreCondominiumRelUserData.html":{"url":"interfaces/IIncomingFirestoreCondominiumRelUserData.html","title":"interface - IIncomingFirestoreCondominiumRelUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIncomingFirestoreCondominiumRelUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Timestamp } from 'firebase-admin/firestore';\nimport { TReplace } from '@registry:utils/replace';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport interface IIncomingFirestoreCondominiumRelUserData {\n\tid: string;\n\tuserId: string;\n\tcondominiumId: string;\n\tblock: string | null;\n\tapartmentNumber: number | null;\n\tlevel: number;\n\tupdatedAt: Timestamp;\n}\n\nexport type TFirestoreCondominiumRelUserToObject = TReplace;\n\nexport class CondominiumRelUserFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass({\n\t\tid,\n\t\t...input\n\t}: IIncomingFirestoreCondominiumRelUserData): CondominiumRelUser {\n\t\treturn new CondominiumRelUser(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tid,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreCondominiumRelUserData,\n\t): TCondominiumRelUserToObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIncomingFirestoreInviteData.html":{"url":"interfaces/IIncomingFirestoreInviteData.html","title":"interface - IIncomingFirestoreInviteData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIncomingFirestoreInviteData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { Invite } from '@registry:app/entities/invite';\nimport { TInviteInObject } from '@registry:app/mapper/invite';\n\nexport interface IIncomingFirestoreInviteData {\n\tid: string;\n\temail: string;\n\tttl: number;\n\texpiresAt: Timestamp;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class InviteFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass(input: IIncomingFirestoreInviteData): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\texpiresAt: input.expiresAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreInviteData,\n\t): TInviteInObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tttl: input.ttl,\n\t\t\texpiresAt: input.expiresAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIncomingFirestoreUserData.html":{"url":"interfaces/IIncomingFirestoreUserData.html","title":"interface - IIncomingFirestoreUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIncomingFirestoreUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/users.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CPF\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CPF\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CPF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '@registry:app/entities/user';\nimport { TUserClassToObject } from '@registry:app/mapper/user';\nimport { Timestamp } from 'firebase-admin/firestore';\n\nexport interface IIncomingFirestoreUserData {\n\tid: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt: Timestamp;\n\tupdatedAt: Timestamp;\n}\n\nexport class UserFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirebaseToClass(input: IIncomingFirestoreUserData): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirebaseToObject(\n\t\tinput: IIncomingFirestoreUserData,\n\t): TUserClassToObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IIndexProps.html":{"url":"interfaces/IIndexProps.html","title":"interface - IIndexProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIndexProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/entities/indexes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ref\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ref:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentData, DocumentReference } from 'firebase-admin/firestore';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\nexport interface IIndexProps {\n\tref: DocumentReference;\n}\n\nexport class Index {\n\tprivate readonly props: IIndexProps;\n\n\t/**\n\t *\tUsado para manipular e validar a integridade dos índices no firestore\n\t **/\n\tconstructor(input: IIndexProps) {\n\t\tif (!(input.ref instanceof DocumentReference))\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Malformed reference',\n\t\t\t\ttag: DatabaseCustomErrorsTags.malformedRef,\n\t\t\t});\n\n\t\tthis.props = { ...input };\n\t}\n\n\tget ref(): DocumentReference {\n\t\treturn this.props.ref;\n\t}\n\n\t/**\n\t * Converte o índice em um objeto\n\t **/\n\tflat(): IIndexProps {\n\t\treturn { ref: this.ref };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInputCondominiumRelUser.html":{"url":"interfaces/IInputCondominiumRelUser.html","title":"interface - IInputCondominiumRelUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInputCondominiumRelUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominiumRelUser/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            level\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Block, Level, ApartmentNumber } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\nexport interface ICondominiumRelUserProps {\n\tuserId: UUID;\n\tcondominiumId: UUID;\n\tblock?: Block | null;\n\tapartmentNumber?: ApartmentNumber | null;\n\tlevel: Level;\n\tupdatedAt: Date;\n}\n\nexport interface IInputCondominiumRelUser {\n\tuserId: string;\n\tcondominiumId: string;\n\tblock?: string | null;\n\tapartmentNumber?: number | null;\n\tlevel?: number | null;\n\tupdatedAt?: Date;\n}\n\nexport const condominiumRelUserDTORules = {\n\tuserId: {\n\t\ttype: 'string',\n\t},\n\tcondominiumId: {\n\t\ttype: 'string',\n\t},\n\tblock: {\n\t\tmaxLength: 6,\n\t\toption: true,\n\t\ttype: 'string',\n\t},\n\tapartmentNumber: {\n\t\tmaxLength: 2147483647,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tlevel: {\n\t\tmaxLength: 2,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class CondominiumRelUser implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: ICondominiumRelUserProps;\n\n\tconstructor(input: IInputCondominiumRelUser, id?: string) {\n\t\tthis._id = ValueObject.build(UUID, id).or(UUID.genV4()).exec();\n\t\tthis.props = {\n\t\t\tlevel: ValueObject.build(Level, input.level)\n\t\t\t\t.or(new Level(0))\n\t\t\t\t.exec(),\n\t\t\tapartmentNumber: ValueObject.build(\n\t\t\t\tApartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t)\n\t\t\t\t.allowNullish()\n\t\t\t\t.exec(),\n\t\t\tblock: ValueObject.build(Block, input.block).allowNullish().exec(),\n\t\t\tcondominiumId: ValueObject.build(UUID, input.condominiumId).exec(),\n\t\t\tuserId: ValueObject.build(UUID, input.userId).exec(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): CondominiumRelUser {\n\t\treturn new CondominiumRelUser({\n\t\t\tlevel: this.props.level.value,\n\t\t\tblock:\n\t\t\t\tthis.props.block instanceof Block\n\t\t\t\t\t? this.props.block.value\n\t\t\t\t\t: this.props.block,\n\t\t\tapartmentNumber:\n\t\t\t\tthis.props.apartmentNumber instanceof ApartmentNumber\n\t\t\t\t\t? this.props.apartmentNumber.value\n\t\t\t\t\t: this.props.apartmentNumber,\n\t\t\tcondominiumId: this.props.condominiumId.value,\n\t\t\tuserId: this.props.userId.value,\n\t\t\tupdatedAt: this.props.updatedAt,\n\t\t});\n\t}\n\n\tequalTo(input: CondominiumRelUser): boolean {\n\t\treturn (\n\t\t\tinput instanceof CondominiumRelUser &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.condominiumId,\n\t\t\t\tinput.condominiumId,\n\t\t\t) &&\n\t\t\tValueObject.compare(\n\t\t\t\tthis.props.apartmentNumber,\n\t\t\t\tinput.apartmentNumber,\n\t\t\t) &&\n\t\t\tValueObject.compare(this.props.block, input.block) &&\n\t\t\tValueObject.compare(this.props.level, input.level) &&\n\t\t\tValueObject.compare(this.props.userId, input.userId) &&\n\t\t\tthis.props.updatedAt === this.props.updatedAt\n\t\t);\n\t}\n\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\tset level(input: Level) {\n\t\tthis.props.level = input;\n\t}\n\tget level(): Level {\n\t\treturn this.props.level;\n\t}\n\n\tset condominiumId(input: UUID) {\n\t\tthis.props.condominiumId = input;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\n\tset userId(input: UUID) {\n\t\tthis.props.userId = input;\n\t}\n\tget userId(): UUID {\n\t\treturn this.props.userId;\n\t}\n\n\tset block(input: Block | undefined | null) {\n\t\tthis.props.block = input;\n\t}\n\tget block(): Block | undefined | null {\n\t\treturn this.props.block;\n\t}\n\n\tset apartmentNumber(input: ApartmentNumber | undefined | null) {\n\t\tthis.props.apartmentNumber = input;\n\t}\n\tget apartmentNumber(): ApartmentNumber | undefined | null {\n\t\treturn this.props.apartmentNumber;\n\t}\n\n\tset updatedAt(input: Date) {\n\t\tthis.props.updatedAt = input;\n\t}\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInputPropsInvite.html":{"url":"interfaces/IInputPropsInvite.html","title":"interface - IInputPropsInvite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInputPropsInvite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/invite/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email, Level, UUID } from '../VO';\nimport { Entity } from '../entities';\n\nexport interface IProps {\n\temail: Email;\n\tttl: number;\n\texpiresAt: Date;\n\tcondominiumId: UUID;\n\ttype: Level;\n}\n\nexport interface IInputPropsInvite {\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class Invite implements Entity {\n\tprivate readonly props: IProps;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: IInputPropsInvite, id?: string) {\n\t\tthis.props = {\n\t\t\temail: new Email(input.email),\n\t\t\tttl: input.ttl,\n\t\t\ttype: new Level(input.type),\n\t\t\tcondominiumId: new UUID(input.condominiumId),\n\t\t\texpiresAt: input.expiresAt ?? new Date(Date.now() + input.ttl),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tdereference(): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\temail: this.email.value,\n\t\t\t\tttl: this.ttl,\n\t\t\t\ttype: this.type.value,\n\t\t\t\tcondominiumId: this.condominiumId.value,\n\t\t\t\texpiresAt: this.expiresAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tequalTo(input: Invite): boolean {\n\t\treturn (\n\t\t\tinput.id.equalTo(this.id) &&\n\t\t\tinput.type.equalTo(this.type) &&\n\t\t\tinput.email.equalTo(this.email) &&\n\t\t\tinput.ttl === this.ttl &&\n\t\t\tinput.expiresAt === this.expiresAt &&\n\t\t\tinput.condominiumId.equalTo(this.condominiumId)\n\t\t);\n\t}\n\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\tget expiresAt(): Date {\n\t\treturn this.props.expiresAt;\n\t}\n\tget type(): Level {\n\t\treturn this.props.type;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILoggerDefaultProps.html":{"url":"interfaces/ILoggerDefaultProps.html","title":"interface - ILoggerDefaultProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILoggerDefaultProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:         LayersEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LayersEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum LayersEnum {\n\tstart = 'Start-layer',\n\tinterceptors = 'Interceptor-Layer',\n\tservices = 'Service-Layer',\n\tentitie = 'Entitie-Layer',\n\tcontroller = 'Controller-Layer',\n\tdto = 'DTO-Layer',\n\tauth = 'Auth-Layer',\n\tgateway = 'Gateway-Layer',\n\tunknown = 'Unknown-Layer',\n\tadapter = 'Adapter-Layer',\n\tdatabase = 'Database-Layer',\n\tcache = 'Cache-Layer',\n}\n\nexport interface ILoggerDefaultProps {\n\tname: string;\n\tdescription: string;\n\tlayer: LayersEnum;\n}\n\nexport type TECEProps = ILoggerDefaultProps & { stack?: string };\n\nexport abstract class LoggerAdapter {\n\tabstract log(input: ILoggerDefaultProps): Promise;\n\tabstract info(input: ILoggerDefaultProps): Promise;\n\tabstract debug(input: ILoggerDefaultProps): Promise;\n\tabstract warn(input: ILoggerDefaultProps): Promise;\n\tabstract alert(input: ILoggerDefaultProps): Promise;\n\tabstract error(input: TECEProps): Promise;\n\tabstract critical(input: TECEProps): Promise;\n\tabstract emergencial(input: TECEProps): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOTPInObject.html":{"url":"interfaces/IOTPInObject.html","title":"interface - IOTPInObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOTPInObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/otp.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            requiredLevel\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredLevel:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Code, Level } from '@registry:app/entities/VO';\nimport { OTP } from '@registry:app/entities/OTP';\n\ninterface IConvertToObject {\n\tid?: string;\n\tttl?: number;\n\tuserId?: string;\n\trequiredLevel: number;\n\tcondominiumId: string;\n\tcode: string;\n\tcreatedAt?: Date;\n}\n\nexport interface IOTPInObject {\n\tid: string;\n\tttl: number;\n\tuserId?: string;\n\trequiredLevel: number;\n\tcondominiumId: string;\n\tcode: string;\n\tcreatedAt: Date;\n}\n\nexport class OTPMapper {\n\t/**\n\t * @deprecated\n\t **/\n\tstatic toClass(input: IConvertToObject): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tttl: input.ttl,\n\t\t\t\tuserId: input.userId,\n\t\t\t\trequiredLevel: new Level(input.requiredLevel),\n\t\t\t\tcondominiumId: input.condominiumId,\n\t\t\t\tcode: new Code(input.code),\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * @deprecated\n\t **/\n\tstatic toObject(input: OTP): IOTPInObject {\n\t\treturn {\n\t\t\tid: input.id,\n\t\t\trequiredLevel: input.requiredLevel.value,\n\t\t\tttl: input.ttl,\n\t\t\tcondominiumId: input.condominiumId,\n\t\t\tuserId: input.userId,\n\t\t\tcode: input.code.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOTPProps.html":{"url":"interfaces/IOTPProps.html","title":"interface - IOTPProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOTPProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/OTP/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            requiredLevel\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         Code\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Code\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredLevel:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { randomUUID } from 'crypto';\nimport { Code, Level } from '../VO';\nimport { Entity } from '../entities';\n\ninterface IOTPProps {\n\tuserId?: string;\n\trequiredLevel: Level;\n\tcondominiumId: string;\n\tcode: Code;\n\tttl: number;\n\tcreatedAt: Date;\n}\n\nexport type TInputOTPProps = {\n\tuserId?: string;\n\trequiredLevel?: Level;\n\tcondominiumId: string;\n\tcode: Code;\n\tttl?: number;\n\tcreatedAt?: Date;\n};\n\nexport class OTP implements Entity {\n\tprivate readonly _id: string;\n\tprivate readonly props: IOTPProps;\n\n\t/** @deprecated **/\n\tconstructor(input: TInputOTPProps, id?: string) {\n\t\tthis._id = id ?? randomUUID();\n\t\tthis.props = {\n\t\t\t...input,\n\t\t\trequiredLevel: input.requiredLevel ?? new Level(0),\n\t\t\tttl: input.ttl ?? 1000 * 60 * 2,\n\t\t\tcreatedAt: input.createdAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tuserId: this.userId,\n\t\t\t\trequiredLevel: new Level(this.requiredLevel.value),\n\t\t\t\tcondominiumId: this.condominiumId,\n\t\t\t\tcode: new Code(this.code.value),\n\t\t\t\tttl: this.ttl,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t},\n\t\t\tthis.id,\n\t\t);\n\t}\n\tpublic equalTo(input: OTP) {\n\t\treturn (\n\t\t\tthis._id === input._id &&\n\t\t\tthis.requiredLevel.equalTo(input.requiredLevel) &&\n\t\t\tthis.props.ttl === input.ttl &&\n\t\t\tthis.props.condominiumId === input.condominiumId &&\n\t\t\tthis.props.userId === input.userId &&\n\t\t\tthis.props.code.equalTo(input.code) &&\n\t\t\tthis.props.createdAt === input.createdAt\n\t\t);\n\t}\n\n\tget requiredLevel(): Level {\n\t\treturn this.props.requiredLevel;\n\t}\n\n\tget condominiumId(): string {\n\t\treturn this.props.condominiumId;\n\t}\n\n\tget userId(): string | undefined {\n\t\treturn this.props.userId;\n\t}\n\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget code(): Code {\n\t\treturn this.props.code;\n\t}\n\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPrismaError.html":{"url":"interfaces/IPrismaError.html","title":"interface - IPrismaError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPrismaError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/prisma.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { Response } from 'express';\n\ninterface IPrismaError {\n\tname: string;\n\tcode: string;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros do Prisma */\n@Catch(Prisma.PrismaClientKnownRequestError)\nexport class PrismaErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IPrismaError[] = [\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P2025',\n\t\t\tmessage: 'Não foi possível deletar o dado, pois o mesmo não existe',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Erro ao criar dado repetido',\n\t\t\tcode: 'P2002',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\tcode: 'P1009',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P1003',\n\t\t\tmessage: 'Não encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t];\n\n\tcatch(\n\t\texception: Prisma.PrismaClientKnownRequestError,\n\t\thost: ArgumentsHost,\n\t) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.code === exception.code;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.code}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: `${exception.name} - ${exception.code}`,\n\t\t\tlayer: LayersEnum.database,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps.html":{"url":"interfaces/IProps.html","title":"interface - IProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/bootstrap.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            requestListener\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestListener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requestListener:     Express\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Express\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LoggerAdapter } from '@registry:app/adapters/logger';\nimport { NestFactory } from '@nestjs/core';\nimport {\n\tExpressAdapter,\n\tNestExpressApplication,\n} from '@nestjs/platform-express';\nimport express, { Express } from 'express';\nimport { AppModule } from './app.module';\nimport { LogInterceptor } from '@registry:infra/http/interceptors/logger.interceptor';\nimport cookieParser from 'cookie-parser';\nimport { ValidationPipe } from '@nestjs/common';\nimport { GenericErrorFilter } from '@registry:infra/http/filters/errors/generic.filter';\nimport { ServiceErrorFilter } from '@registry:infra/http/filters/errors/services.filter';\nimport { EntitieErrorFilter } from '@registry:infra/http/filters/errors/vo.filter';\nimport { GatewayErrorFilter } from '@registry:infra/http/filters/errors/gateways.filter';\nimport { GuardErrorFilter } from '@registry:infra/http/filters/errors/guard.filter';\nimport { AdapterErrorFilter } from '@registry:infra/http/filters/errors/adapter.filter';\nimport { ClassValidatorErrorFilter } from '@registry:infra/http/filters/errors/classValidator.filter';\nimport { ThrottlerErrorFilter } from '@registry:infra/http/filters/errors/throttler.filter';\nimport { NotFoundFilter } from '@registry:infra/http/filters/errors/notFound.filter';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { DatabaseCustomErrorFilter } from '@registry:infra/http/filters/errors/databaseCustomError.filter';\nimport { PrismaErrorFilter } from '@registry:infra/http/filters/errors/prisma.filter';\n\ninterface IProps {\n\trequestListener: Express;\n}\n\nexport class RegistryAPIBootstrap {\n\tprivate app: NestExpressApplication;\n\tprivate logger: LoggerAdapter;\n\n\tprivate async build(requestListener: express.Express) {\n\t\tthis.app = await NestFactory.create(\n\t\t\tAppModule,\n\t\t\tnew ExpressAdapter(requestListener),\n\t\t);\n\n\t\tthis.app.enableShutdownHooks();\n\t\tthis.app.use(cookieParser(process.env.COOKIE_KEY));\n\t\tthis.app.enableCors({\n\t\t\torigin: '*', // mudar no futuro\n\t\t\tmethods: ['DELETE', 'POST', 'PATCH', 'PUT', 'GET'],\n\t\t});\n\t\tthis.logger = this.app.get(LoggerAdapter);\n\n\t\tconst config = new DocumentBuilder()\n\t\t\t.setTitle('MoradaApp: Registry API')\n\t\t\t.setDescription('Morada App Registry API')\n\t\t\t.setVersion('1.0')\n\t\t\t.addTag('moradaApp')\n\t\t\t.build();\n\n\t\tconst document = SwaggerModule.createDocument(this.app, config);\n\t\tSwaggerModule.setup('api', this.app, document);\n\t}\n\n\tprivate setGlobalInteceptors() {\n\t\tthis.app.useGlobalInterceptors(new LogInterceptor(this.logger));\n\t}\n\n\tprivate setGlobalPipes() {\n\t\tthis.app.useGlobalPipes(new ValidationPipe());\n\t}\n\n\tprivate setGlobalFilters() {\n\t\tthis.app.useGlobalFilters(new GenericErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new PrismaErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new DatabaseCustomErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ServiceErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new EntitieErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new GatewayErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new GuardErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new AdapterErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ClassValidatorErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ThrottlerErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new NotFoundFilter(this.logger));\n\t}\n\n\tasync run(input: IProps) {\n\t\tawait this.build(input.requestListener);\n\t\tthis.setGlobalInteceptors();\n\t\tthis.setGlobalPipes();\n\t\tthis.setGlobalFilters();\n\n\t\tawait this.app.init();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-1.html":{"url":"interfaces/IProps-1.html","title":"interface - IProps-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/utils/convertValidatorErr.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, HttpStatus } from '@nestjs/common';\nimport { validate } from 'class-validator';\n\ninterface IProps {\n\tbody: any;\n}\n\n/**\n * Usado para aplicar o class validator fora dos controllers\n * em forma de decorator, caso a validação não seja um sucesso, um erro do tipo BadRequestException será disparado\n * @param data - Deve conter o corpo da requisição a ser validado\n **/\nexport async function checkClassValidatorErrors(data: IProps) {\n\tconst errors = await validate(data.body);\n\n\tconst errorMessages = errors.flatMap(({ constraints }) =>\n\t\tObject.values(constraints!),\n\t);\n\n\tif (errorMessages.length > 0) {\n\t\tthrow new BadRequestException({\n\t\t\tstatusCode: HttpStatus.BAD_REQUEST,\n\t\t\terror: 'Bad Request',\n\t\t\tmessage: errorMessages,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-10.html":{"url":"interfaces/IProps-10.html","title":"interface - IProps-10","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genInvite.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            requiredLevel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredLevel:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { Email, Level, UUID } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { Invite } from '@registry:app/entities/invite';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tcondominiumId: UUID;\n\trequiredLevel?: Level;\n\tkey?: string;\n}\n\n/** Serviço responsável por criar um convite */\n@Injectable()\nexport class GenInviteService implements IService {\n\tconstructor(\n\t\tprivate readonly cryptAdapter: CryptAdapter,\n\t\tprivate readonly emailAdapter: EmailAdapter,\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t) {}\n\n\tprivate async generateInvite({\n\t\tinvite,\n\t\tkey,\n\t}: {\n\t\tinvite: Invite;\n\t\tkey: string;\n\t}) {\n\t\tconst inputData = generateStringCodeContent({\n\t\t\tid: invite.id,\n\t\t\temail: invite.email,\n\t\t\trequiredLevel: invite.type,\n\t\t\tcondominiumId: invite.condominiumId,\n\t\t});\n\n\t\treturn await this.cryptAdapter.hashWithHmac({ key, data: inputData });\n\t}\n\n\tasync exec(input: IProps): Promise {\n\t\tconst invite = new Invite({\n\t\t\temail: input.email.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t\ttype: input.requiredLevel?.value ?? 0,\n\t\t\tttl: 1000 * 60 * 60 * 24 * 7,\n\t\t});\n\t\tconst inviteAsHash = await this.generateInvite({\n\t\t\tinvite,\n\t\t\tkey: input.key ?? (process.env.INVITE_TOKEN_KEY as string),\n\t\t});\n\n\t\tawait this.inviteRepo.create({ invite });\n\t\tawait this.emailAdapter.send({\n\t\t\tfrom: `${process.env.NAME_SENDER} `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Convite para o condomínio`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este link com ninguém\n\t\t\t\thttps://[EXEMPLO DE DOMÍNIO]/[PÁGINA DO FRONT PARA VALIDAR O CONVITE]/${inviteAsHash}`,\n\t\t});\n\n\t\treturn invite;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-11.html":{"url":"interfaces/IProps-11.html","title":"interface - IProps-11","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/genTFA.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { EmailAdapter } from '@registry:app/adapters/email';\nimport { Email, UUID } from '@registry:app/entities/VO';\nimport { Injectable } from '@nestjs/common';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { IService } from './_IService';\n\ninterface IProps {\n\temail: Email;\n\tuserId: UUID;\n}\n\n/** Serviço responsável por iniciar o processo de autenticação de dois fatores */\n@Injectable()\nexport class GenTFAService implements IService {\n\tconstructor(\n\t\tprivate readonly email: EmailAdapter,\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tprivate async genCode(input: UUID) {\n\t\tconst user = await this.userRepo.find({ key: input, safeSearch: true });\n\t\tlet code = generateStringCodeContent({\n\t\t\temail: user.email,\n\t\t\tid: user.id,\n\t\t});\n\t\tconst key = process.env.TFA_TOKEN_KEY as string;\n\n\t\tconst metadata = JSON.stringify({\n\t\t\tiat: Date.now(),\n\t\t\texp: Date.now() + 1000 * 60 * 60 * 3,\n\t\t});\n\t\tcode = `${btoa(metadata)}.${btoa(code)}`;\n\n\t\tconst inviteSignature = await this.crypt.hashWithHmac({\n\t\t\tdata: code,\n\t\t\tkey,\n\t\t});\n\t\treturn `${btoa(metadata)}.${btoa(inviteSignature)}`;\n\t}\n\n\tasync exec(input: IProps) {\n\t\tconst code = await this.genCode(input.userId);\n\t\tawait this.email.send({\n\t\t\tfrom: `${process.env.NAME_SENDER} `,\n\t\t\tto: input.email.value,\n\t\t\tsubject: `${process.env.PROJECT_NAME} - Solicitação de login`,\n\t\t\tbody: `Seja bem-vindo!\n\t\t\t\tNão compartilhe este código com ninguém\n\t\t\t\thttps://[EXEMPLO DE DOMÍNIO]/[PÁGINA DO FRONT PARA VALIDAR O CÓDIGO]/${code}`,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-12.html":{"url":"interfaces/IProps-12.html","title":"interface - IProps-12","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/getCondominiumRel.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UUID } from '@registry:app/entities/VO';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { IService } from './_IService';\n\ninterface IProps {\n\tuserId: UUID;\n}\n\n/** Serviço responsável por ler e retornar a relação que um usuário tem com seus condominios */\n@Injectable()\nexport class GetCondominiumRelUserService implements IService {\n\tconstructor(private readonly userRepo: UserRepo) {}\n\n\tasync exec({ userId }: IProps) {\n\t\tconst condominiumRelUserGroup =\n\t\t\tawait this.userRepo.getAllCondominiumRelation({ userId });\n\t\treturn {\n\t\t\tcondominiumRels: condominiumRelUserGroup,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-13.html":{"url":"interfaces/IProps-13.html","title":"interface - IProps-13","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/errors/inMemoryError.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         EntitiesEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntitiesEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\n\ninterface IProps {\n\tentity: EntitiesEnum;\n\tmessage: string;\n}\n\nexport class InMemoryError extends Error {\n\treadonly entity: EntitiesEnum;\n\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = `In Memory Error: ${input.entity}`;\n\t\tthis.message = input.message;\n\t\tthis.entity = input.entity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-14.html":{"url":"interfaces/IProps-14.html","title":"interface - IProps-14","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/invite/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            expiresAt\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email, Level, UUID } from '../VO';\nimport { Entity } from '../entities';\n\nexport interface IProps {\n\temail: Email;\n\tttl: number;\n\texpiresAt: Date;\n\tcondominiumId: UUID;\n\ttype: Level;\n}\n\nexport interface IInputPropsInvite {\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class Invite implements Entity {\n\tprivate readonly props: IProps;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: IInputPropsInvite, id?: string) {\n\t\tthis.props = {\n\t\t\temail: new Email(input.email),\n\t\t\tttl: input.ttl,\n\t\t\ttype: new Level(input.type),\n\t\t\tcondominiumId: new UUID(input.condominiumId),\n\t\t\texpiresAt: input.expiresAt ?? new Date(Date.now() + input.ttl),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tdereference(): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\temail: this.email.value,\n\t\t\t\tttl: this.ttl,\n\t\t\t\ttype: this.type.value,\n\t\t\t\tcondominiumId: this.condominiumId.value,\n\t\t\t\texpiresAt: this.expiresAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tequalTo(input: Invite): boolean {\n\t\treturn (\n\t\t\tinput.id.equalTo(this.id) &&\n\t\t\tinput.type.equalTo(this.type) &&\n\t\t\tinput.email.equalTo(this.email) &&\n\t\t\tinput.ttl === this.ttl &&\n\t\t\tinput.expiresAt === this.expiresAt &&\n\t\t\tinput.condominiumId.equalTo(this.condominiumId)\n\t\t);\n\t}\n\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\tget expiresAt(): Date {\n\t\treturn this.props.expiresAt;\n\t}\n\tget type(): Level {\n\t\treturn this.props.type;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-15.html":{"url":"interfaces/IProps-15.html","title":"interface - IProps-15","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/errors/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         GatewaysErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GatewaysErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum GatewaysErrorsTags {\n\tInvalidResult = 'Invalid Result',\n\tPoisonedContent = 'Poisoned Content',\n}\n\ninterface IProps {\n\tmessage: string;\n\tcontent?: any;\n\ttag: GatewaysErrorsTags;\n}\n\nexport class GatewayErrors extends Error {\n\treadonly tag: GatewaysErrorsTags;\n\treadonly content: any;\n\n\t/**\n\t * Erro customizado usado na camada de gateways, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro, o conteúdo e a tag de rastramento para os filters, use o GatewaysErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Gateway Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t\tthis.content = input.content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-16.html":{"url":"interfaces/IProps-16.html","title":"interface - IProps-16","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/error/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         DatabaseCustomErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseCustomErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum DatabaseCustomErrorsTags {\n\ttooManyEntities = 'Too many entities',\n\tmaximumCondominiumRelUser = 'Maximum condominiumRelUser',\n\twrongInputLevel = 'Wrong input level detected',\n\tcontentAlreadyExists = 'This content already exists',\n\tcontentDoesntExists = 'This content doesn\\'t exists',\n\tsafeSearchEnabled = 'Safe search detected',\n\tdtoFailure = 'The DTO found an error',\n\trefLost = 'The reference could not be found',\n\tmalformedRef = 'Malformed reference',\n}\n\ninterface IProps {\n\tmessage: string;\n\ttag: DatabaseCustomErrorsTags;\n}\n\nexport class DatabaseCustomError extends Error {\n\treadonly tag: DatabaseCustomErrorsTags;\n\n\t/**\n\t * Erro customizado usado na camada de banco de dados, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e o identificador usado para mapear os erros na camada dos filters, use os enums vindos de DatabaseCustomErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Database Custom Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-2.html":{"url":"interfaces/IProps-2.html","title":"interface - IProps-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/adapter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IProps {\n\tmessage: string;\n\thttpCode?: number;\n}\n\nexport class AdapterError extends Error {\n\treadonly httpCode: number | undefined;\n\n\t/**\n\t * Erro customizado usado na camada de adaptadores, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input- Deve conter a mensagem do erro e o código http\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Adapter Error';\n\t\tthis.httpCode = input.httpCode;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-3.html":{"url":"interfaces/IProps-3.html","title":"interface - IProps-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/entities.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         EntitiesEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntitiesEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\n\ninterface IProps {\n\tentity: EntitiesEnum;\n\tmessage: string;\n}\n\nexport class EntitieError extends Error {\n\treadonly entity: EntitiesEnum;\n\n\t/**\n\t * Erro customizado usado na camada de entidades, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e a entidade envolvida, use EntitiesEnum para fazer esta indicação\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name =\n\t\t\tinput.entity === EntitiesEnum.vo\n\t\t\t\t? 'Value Object error'\n\t\t\t\t: 'Entity error';\n\t\tthis.message = input.message;\n\t\tthis.entity = input.entity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-4.html":{"url":"interfaces/IProps-4.html","title":"interface - IProps-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IProps {\n\tmessage: string;\n}\n\nexport class GuardErrors extends Error {\n\t/**\n\t * Erro customizado usado na camada de guards, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Guard Error';\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-5.html":{"url":"interfaces/IProps-5.html","title":"interface - IProps-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/services.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         ServiceErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ServiceErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum ServiceErrorsTags {\n\twrongServiceUsage = 'WrongServiceUsage',\n\tunauthorized = 'Unauthorized',\n\talreadyExist = 'Conflict',\n}\n\ninterface IProps {\n\tmessage: string;\n\ttag: ServiceErrorsTags;\n}\n\nexport class ServiceErrors extends Error {\n\treadonly tag: ServiceErrorsTags;\n\n\t/**\n\t * Erro customizado usado na camada de services, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e o identificador em forma de tag usado para mapear os erros na camada dos filters, use os enums vindos de ServiceErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Service Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-6.html":{"url":"interfaces/IProps-6.html","title":"interface - IProps-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createCondominium.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominium\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominium:         Condominium\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Condominium\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CepGateway } from '@registry:app/gateways/CEP.gateway';\nimport { CondominiumRepo } from '@registry:app/repositories/condominium';\nimport { Injectable } from '@nestjs/common';\nimport { IService } from './_IService';\n\ninterface IProps {\n\tcondominium: Condominium;\n}\n\n/** Serviço responsável por criar um novo condomínio */\n@Injectable()\nexport class CreateCondominiumService implements IService {\n\tconstructor(\n\t\tprivate readonly condominiumRepo: CondominiumRepo,\n\t\tprivate readonly cepGate: CepGateway,\n\t) {}\n\n\tasync exec(input: IProps) {\n\t\tawait this.cepGate.check(input.condominium.CEP.value);\n\n\t\tawait this.condominiumRepo.create({\n\t\t\tcondominium: input.condominium,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-7.html":{"url":"interfaces/IProps-7.html","title":"interface - IProps-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createToken.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | IUserDataCore\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | IUserDataCore\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tIAccessTokenBody,\n\tIRefreshTokenBody,\n\tTokenType,\n} from '@registry:app/auth/tokenTypes';\nimport {\n\tApartmentNumber,\n\tBlock,\n\tEmail,\n\tLevel,\n\tName,\n\tPhoneNumber,\n\tUUID,\n} from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IService } from './_IService';\n\ninterface IUserDataCore {\n\tid: UUID;\n\temail: Email;\n\tblock?: Block;\n\tapartmentNumber?: ApartmentNumber;\n\tname: Name;\n\tlevel: Level;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n\tphoneNumber: PhoneNumber;\n}\n\ninterface IProps {\n\tuser: User | IUserDataCore;\n}\n\n/** Serviço responsável por gerar o token de acesso e o de renovação */\n@Injectable()\nexport class CreateTokenService implements IService {\n\tconstructor(private readonly jwtService: JwtService) {}\n\n\tprivate async buildAccessToken(user: User | IUserDataCore) {\n\t\tconst exp = parseInt(process.env.ACCESS_TOKEN_EXP as string);\n\t\tconst accessJwtBody: Omit = {\n\t\t\tsub: user.id.value,\n\t\t\tcontent: {\n\t\t\t\temail: user.email.value,\n\t\t\t\tname: user.name.value,\n\t\t\t\tcreatedAt: user.createdAt,\n\t\t\t\tupdatedAt: user.updatedAt,\n\t\t\t\tphoneNumber: user.phoneNumber.value,\n\t\t\t},\n\t\t\ttype: TokenType.accessToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(accessJwtBody, {\n\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tprivate async buildRefreshToken(email: Email, userId: UUID) {\n\t\tconst exp = parseInt(process.env.REFRESH_TOKEN_EXP as string);\n\t\tconst refreshJwtBody: Omit = {\n\t\t\tsub: userId.value,\n\t\t\temail: email.value,\n\t\t\ttype: TokenType.refreshToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(refreshJwtBody, {\n\t\t\tsecret: process.env.REFRESH_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tasync exec({ user }: IProps) {\n\t\tconst accessToken = await this.buildAccessToken(user);\n\t\tconst refreshToken = await this.buildRefreshToken(user.email, user.id);\n\n\t\treturn { accessToken, refreshToken };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-8.html":{"url":"interfaces/IProps-8.html","title":"interface - IProps-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createUser.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            invite\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:     ApartmentNumber | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApartmentNumber | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         Block | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invite:         Invite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { ApartmentNumber, Block, Password } from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { IService } from './_IService';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\n\ninterface IProps {\n\tuser: User;\n\tinvite: Invite;\n\tapartmentNumber?: ApartmentNumber | null;\n\tblock?: Block | null;\n}\n\n/** Serviço responsável por criar um novo usuário */\n@Injectable()\nexport class CreateUserService implements IService {\n\tconstructor(\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t\tprivate readonly crypt: CryptAdapter,\n\t) {}\n\n\tasync exec({ ...input }: IProps) {\n\t\tconst hashPass = await this.crypt.hash(input.user.password.value);\n\n\t\tconst user = input.user.dereference();\n\t\tuser.password = new Password(hashPass);\n\n\t\tconst condominiumRelUser = new CondominiumRelUser({\n\t\t\tapartmentNumber: input.apartmentNumber\n\t\t\t\t? input.apartmentNumber.value\n\t\t\t\t: undefined,\n\t\t\tblock: input.block ? input.block.value : undefined,\n\t\t\tlevel: input.invite.type.value,\n\t\t\tcondominiumId: input.invite.condominiumId.value,\n\t\t\tuserId: input.user.id.value,\n\t\t});\n\n\t\tawait this.inviteRepo.transferToUserResources({\n\t\t\tuser,\n\t\t\tcondominiumRelUser,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProps-9.html":{"url":"interfaces/IProps-9.html","title":"interface - IProps-9","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/deleteUser.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            actualUser\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actualUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actualUser:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Email } from '@registry:app/entities/VO';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { Injectable } from '@nestjs/common';\nimport { IService } from './_IService';\nimport {\n\tServiceErrors,\n\tServiceErrorsTags,\n} from '@registry:app/errors/services';\n\ninterface IProps {\n\ttarget: Email;\n\tactualUser?: Email;\n}\n\n/** Serviço responsável por deletar um usuário */\n@Injectable()\nexport class DeleteUserService implements IService {\n\tconstructor(private readonly userRepo: UserRepo) {}\n\n\tasync exec({ target, actualUser }: IProps) {\n\t\tif (actualUser && target.equalTo(actualUser))\n\t\t\tthrow new ServiceErrors({\n\t\t\t\tmessage:\n\t\t\t\t\t'Não é possível deletar você mesmo utilizando os recursos de administradores',\n\t\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\t});\n\n\t\tawait this.userRepo.delete({ key: target });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropsCondominium.html":{"url":"interfaces/IPropsCondominium.html","title":"interface - IPropsCondominium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropsCondominium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/condominium/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CEP\n                                        \n                                \n                                \n                                        \n                                            CNPJ\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            num\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CEP\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CEP:         CEP\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CEP\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CNPJ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CNPJ:         CNPJ\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CNPJ\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num:         Num\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Num\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CEP, Name, Num, CNPJ, UUID } from '../VO';\nimport { Entity } from '../entities';\n\ninterface IPropsCondominium {\n\tname: Name;\n\tCEP: CEP;\n\tnum: Num;\n\tCNPJ: CNPJ;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n}\n\nexport type TInputPropsCondominium = {\n\tname: string;\n\tCEP: string;\n\tnum: number;\n\tCNPJ: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n};\n\nexport const condominiumDTORules = {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\tCEP: {\n\t\tminLength: 8,\n\t\tmaxLength: 9,\n\t\ttype: 'string',\n\t},\n\tnum: {\n\t\tminLength: 0,\n\t\tmaxLength: 2147483647,\n\t\ttype: 'number',\n\t},\n\tCNPJ: {\n\t\tminLength: 14,\n\t\tmaxLength: 18,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAy: {\n\t\ttype: Date,\n\t},\n};\n\nexport class Condominium implements Entity {\n\tprivate readonly _id: UUID;\n\tprivate props: IPropsCondominium;\n\n\tconstructor(content: TInputPropsCondominium, id?: string) {\n\t\tthis.props = {\n\t\t\tname: new Name(content.name),\n\t\t\tCEP: new CEP(content.CEP),\n\t\t\tnum: new Num(content.num),\n\t\t\tCNPJ: new CNPJ(content.CNPJ),\n\t\t\tcreatedAt: content.createdAt ?? new Date(),\n\t\t\tupdatedAt: content.updatedAt ?? new Date(),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tpublic dereference(): Condominium {\n\t\treturn new Condominium(\n\t\t\t{\n\t\t\t\tname: this.name.value,\n\t\t\t\tCEP: this.CEP.value,\n\t\t\t\tnum: this.num.value,\n\t\t\t\tCNPJ: this.CNPJ.value,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t\tupdatedAt: this.updatedAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tpublic equalTo(input: Condominium): boolean {\n\t\treturn (\n\t\t\tinput instanceof Condominium &&\n\t\t\tthis.id.equalTo(input.id) &&\n\t\t\tthis.props.name.equalTo(input.name) &&\n\t\t\tthis.props.CEP.equalTo(input.CEP) &&\n\t\t\tthis.props.num.equalTo(input.num) &&\n\t\t\tthis.props.CNPJ.equalTo(input.CNPJ) &&\n\t\t\tthis.props.createdAt === input.createdAt &&\n\t\t\tthis.props.updatedAt === input.updatedAt\n\t\t);\n\t}\n\n\t// ID\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\t// NAME\n\tget name(): Name {\n\t\treturn this.props.name;\n\t}\n\tset name(input: Name) {\n\t\tthis.props.name = input;\n\t}\n\n\t// CEP\n\tget CEP(): CEP {\n\t\treturn this.props.CEP;\n\t}\n\tset CEP(input: CEP) {\n\t\tthis.CEP = input;\n\t}\n\n\t// NUM\n\tget num(): Num {\n\t\treturn this.props.num;\n\t}\n\tset num(input: Num) {\n\t\tthis.props.num = input;\n\t}\n\n\t// CNPJ\n\tget CNPJ(): CNPJ {\n\t\treturn this.props.CNPJ;\n\t}\n\tset CNPJ(input: CNPJ) {\n\t\tthis.props.CNPJ = input;\n\t}\n\n\t// CREATEDAT\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n\n\t// UPDATEDAT\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropsUser.html":{"url":"interfaces/IPropsUser.html","title":"interface - IPropsUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropsUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/user/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CPF\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CPF\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CPF:         CPF\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CPF\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         Password\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Password\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         PhoneNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PhoneNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Name, Email, Password, CPF, PhoneNumber, UUID } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\ninterface IPropsUser {\n\tname: Name;\n\temail: Email;\n\tpassword: Password;\n\tCPF: CPF;\n\tphoneNumber: PhoneNumber;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n}\n\nexport type TInputPropsUser = {\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n};\n\nexport const userDTORules = {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\temail: {\n\t\tmaxLength: 320,\n\t\ttype: 'string',\n\t},\n\tpassword: {\n\t\tmaxLength: 64,\n\t\tminLength: 8,\n\t\ttype: 'string',\n\t},\n\tCPF: {\n\t\tmaxLength: 14,\n\t\tminLength: 11,\n\t\ttype: 'string',\n\t},\n\tphoneNumber: {\n\t\tmaxLength: 30,\n\t\tminLength: 10,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class User implements Entity {\n\tprivate props: IPropsUser;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: TInputPropsUser, id?: string) {\n\t\tthis.props = {\n\t\t\tname: new Name(input.name),\n\t\t\temail: new Email(input.email),\n\t\t\tpassword: new Password(input.password),\n\t\t\tCPF: new CPF(input.CPF),\n\t\t\tphoneNumber: new PhoneNumber(input.phoneNumber),\n\t\t\tcreatedAt: input.createdAt ?? new Date(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tpublic dereference(): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\tname: this.name.value,\n\t\t\t\temail: this.email.value,\n\t\t\t\tpassword: this.password.value,\n\t\t\t\tCPF: this.CPF.value,\n\t\t\t\tphoneNumber: this.phoneNumber.value,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t\tupdatedAt: this.updatedAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tpublic equalTo(input: User): boolean {\n\t\treturn (\n\t\t\tinput instanceof User &&\n\t\t\tthis.createdAt === input.createdAt &&\n\t\t\tthis.updatedAt === input.updatedAt &&\n\t\t\tValueObject.compare(this._id, input.id) &&\n\t\t\tValueObject.compare(this.phoneNumber, input.phoneNumber) &&\n\t\t\tValueObject.compare(this.CPF, input.CPF) &&\n\t\t\tValueObject.compare(this.password, input.password) &&\n\t\t\tValueObject.compare(this.name, input.name) &&\n\t\t\tValueObject.compare(this.email, input.email)\n\t\t);\n\t}\n\n\t// Id\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\t// Name\n\tget name(): Name {\n\t\treturn this.props.name;\n\t}\n\tset name(input: Name) {\n\t\tthis.props.name = input;\n\t}\n\n\t// Email\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tset email(input: Email) {\n\t\tthis.props.email = input;\n\t}\n\n\t// Password\n\tget password(): Password {\n\t\treturn this.props.password;\n\t}\n\tset password(input: Password) {\n\t\tthis.props.password = input;\n\t}\n\n\t// CPF\n\tget CPF(): CPF {\n\t\treturn this.props.CPF;\n\t}\n\tset CPF(input: CPF) {\n\t\tthis.props.CPF = input;\n\t}\n\n\t// PhoneNumber\n\tget phoneNumber(): PhoneNumber {\n\t\treturn this.props.phoneNumber;\n\t}\n\tset phoneNumber(input: PhoneNumber) {\n\t\tthis.props.phoneNumber = input;\n\t}\n\n\t// CreatedAt\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n\n\t// UpdatedAt\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRefreshTokenBody.html":{"url":"interfaces/IRefreshTokenBody.html","title":"interface - IRefreshTokenBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRefreshTokenBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/auth/tokenTypes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum TokenType {\n\taccessToken = 'Access Token',\n\trefreshToken = 'Refresh Token',\n}\n\nexport interface IAccessTokenBody {\n\tsub: string;\n\ttype: string;\n\tcontent: {\n\t\tname: string;\n\t\temail: string;\n\t\tphoneNumber: string;\n\t\tcreatedAt: Date;\n\t\tupdatedAt: Date;\n\t};\n\tiat: number;\n\texp: number;\n}\n\nexport interface IRefreshTokenBody {\n\tsub: string;\n\ttype: string;\n\temail: string;\n\tiat: number;\n\texp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISendMailContent.html":{"url":"interfaces/ISendMailContent.html","title":"interface - ISendMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISendMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/email.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISendMailContent {\n\tfrom: string;\n\tto: string;\n\tsubject: string;\n\tbody: string;\n}\n\nexport abstract class EmailAdapter {\n\tabstract send: (data: ISendMailContent) => Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IService.html":{"url":"classes/IService.html","title":"class - IService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/_IService.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para garantir uma padronização nos services, obrigando por exemplo, o a existência de funções com retorno de objetos ou void\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                exec\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exec\n                        \n                    \n                \n            \n            \n                \n                        \n                    exec(input?: TServiceExecInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/services/_IService.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TServiceExecInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TServiceExecReturn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        type TServiceExecReturn = Promise> | Promise | void;\ntype TServiceExecInput = Record;\n\n/** Usado para garantir uma padronização nos services, obrigando por exemplo, o a existência de funções com retorno de objetos ou void **/\nexport abstract class IService {\n\tabstract exec(input?: TServiceExecInput): TServiceExecReturn;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IServiceErrors.html":{"url":"interfaces/IServiceErrors.html","title":"interface - IServiceErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IServiceErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/services.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         ServiceErrorsTags\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ServiceErrorsTags\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tServiceErrors,\n\tServiceErrorsTags,\n} from '@registry:app/errors/services';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IServiceErrors {\n\tname: string;\n\ttag: ServiceErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros dos Services */\n@Catch(ServiceErrors)\nexport class ServiceErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IServiceErrors[] = [\n\t\t{\n\t\t\tname: 'Credenciais inválidas',\n\t\t\ttag: ServiceErrorsTags.unauthorized,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\ttag: ServiceErrorsTags.alreadyExist,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 409,\n\t\t},\n\t\t{\n\t\t\tname: 'Uso incorreto de recusrsos',\n\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\tmessage:\n\t\t\t\t'Não é possível utilizar este recurso para realizar está ação',\n\t\t\thttpCode: 400,\n\t\t},\n\t];\n\n\tcatch(exception: ServiceErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.services,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.services,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISuccess.html":{"url":"interfaces/ISuccess.html","title":"interface - ISuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/APIs/viacep.gateway.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bairro\n                                        \n                                \n                                \n                                        \n                                            cep\n                                        \n                                \n                                \n                                        \n                                            complemento\n                                        \n                                \n                                \n                                        \n                                            ddd\n                                        \n                                \n                                \n                                        \n                                            gia\n                                        \n                                \n                                \n                                        \n                                            ibge\n                                        \n                                \n                                \n                                        \n                                            localidade\n                                        \n                                \n                                \n                                        \n                                            logradouro\n                                        \n                                \n                                \n                                        \n                                            siafi\n                                        \n                                \n                                \n                                        \n                                            uf\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bairro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bairro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cep\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cep:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        complemento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complemento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ddd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ddd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gia\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gia:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ibge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ibge:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localidade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localidade:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logradouro\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logradouro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        siafi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        siafi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uf\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uf:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpAdapter } from '@registry:app/adapters/http';\nimport { CepGateway, ICheckCep } from '@registry:app/gateways/CEP.gateway';\nimport { Injectable } from '@nestjs/common';\nimport { GatewayErrors, GatewaysErrorsTags } from '../errors';\n\ninterface ISuccess {\n\tcep: string;\n\tlogradouro: string;\n\tcomplemento: string;\n\tbairro: string;\n\tlocalidade: string;\n\tuf: string;\n\tibge: string;\n\tgia: string;\n\tddd: string;\n\tsiafi: string;\n}\n\n@Injectable()\nexport class ViacepGateway implements CepGateway {\n\tconstructor(private readonly httpAdapter: HttpAdapter) {}\n\n\tasync check(input: string): Promise {\n\t\tconst data = await this.httpAdapter.call({\n\t\t\turl: `https://viacep.com.br/ws/${input}/json/`,\n\t\t\tmethod: 'GET',\n\t\t});\n\n\t\tif (data.body?.erro)\n\t\t\tthrow new GatewayErrors({\n\t\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\t\tmessage: `Could not finish the request: https://viacep.com.br/ws/${input}/json/. Received 'erro' field as true!`,\n\t\t\t});\n\n\t\tconst body = data.body as ISuccess;\n\t\treturn {\n\t\t\tuf: body.uf,\n\t\t\tcep: body.cep,\n\t\t\tneighborhood: body.bairro,\n\t\t\tcomplement: body.complemento,\n\t\t\tcity: body.localidade,\n\t\t\tstreet_address: body.logradouro,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUntrackableErrors.html":{"url":"interfaces/IUntrackableErrors.html","title":"interface - IUntrackableErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUntrackableErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/generic.filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            httpCode\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        httpCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IUntrackableErrors {\n\tname: string;\n\tkey: string;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros genéricos */\n@Catch()\nexport class GenericErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate readonly untrackableErrors: IUntrackableErrors[] = [\n\t\t{\n\t\t\tname: 'Conteúdo já existe',\n\t\t\tkey: 'ALREADY_EXISTS: entity already exists',\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 401,\n\t\t},\n\t];\n\n\tcatch(exception: Error, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.untrackableErrors.find((item) => {\n\t\t\treturn exception?.message?.includes(item.key);\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: `Erro interno do servidor ${exception?.name}`,\n\t\t\tlayer: LayersEnum.unknown,\n\t\t\tdescription: exception?.message ?? 'Causa desconhecida',\n\t\t\tstack: exception?.stack ?? 'Causa desconhecida',\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserDataCore.html":{"url":"interfaces/IUserDataCore.html","title":"interface - IUserDataCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserDataCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/services/createToken.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apartmentNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            block\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartmentNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartmentNumber:         ApartmentNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ApartmentNumber\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block:         Block\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Block\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         Level\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Level\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         PhoneNumber\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PhoneNumber\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tIAccessTokenBody,\n\tIRefreshTokenBody,\n\tTokenType,\n} from '@registry:app/auth/tokenTypes';\nimport {\n\tApartmentNumber,\n\tBlock,\n\tEmail,\n\tLevel,\n\tName,\n\tPhoneNumber,\n\tUUID,\n} from '@registry:app/entities/VO';\nimport { User } from '@registry:app/entities/user';\nimport { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IService } from './_IService';\n\ninterface IUserDataCore {\n\tid: UUID;\n\temail: Email;\n\tblock?: Block;\n\tapartmentNumber?: ApartmentNumber;\n\tname: Name;\n\tlevel: Level;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n\tphoneNumber: PhoneNumber;\n}\n\ninterface IProps {\n\tuser: User | IUserDataCore;\n}\n\n/** Serviço responsável por gerar o token de acesso e o de renovação */\n@Injectable()\nexport class CreateTokenService implements IService {\n\tconstructor(private readonly jwtService: JwtService) {}\n\n\tprivate async buildAccessToken(user: User | IUserDataCore) {\n\t\tconst exp = parseInt(process.env.ACCESS_TOKEN_EXP as string);\n\t\tconst accessJwtBody: Omit = {\n\t\t\tsub: user.id.value,\n\t\t\tcontent: {\n\t\t\t\temail: user.email.value,\n\t\t\t\tname: user.name.value,\n\t\t\t\tcreatedAt: user.createdAt,\n\t\t\t\tupdatedAt: user.updatedAt,\n\t\t\t\tphoneNumber: user.phoneNumber.value,\n\t\t\t},\n\t\t\ttype: TokenType.accessToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(accessJwtBody, {\n\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tprivate async buildRefreshToken(email: Email, userId: UUID) {\n\t\tconst exp = parseInt(process.env.REFRESH_TOKEN_EXP as string);\n\t\tconst refreshJwtBody: Omit = {\n\t\t\tsub: userId.value,\n\t\t\temail: email.value,\n\t\t\ttype: TokenType.refreshToken,\n\t\t};\n\n\t\treturn await this.jwtService.signAsync(refreshJwtBody, {\n\t\t\tsecret: process.env.REFRESH_TOKEN_KEY,\n\t\t\texpiresIn: exp,\n\t\t});\n\t}\n\n\tasync exec({ user }: IProps) {\n\t\tconst accessToken = await this.buildAccessToken(user);\n\t\tconst refreshToken = await this.buildRefreshToken(user.email, user.id);\n\n\t\treturn { accessToken, refreshToken };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserInObject.html":{"url":"interfaces/IUserInObject.html","title":"interface - IUserInObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserInObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CPF\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CPF\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CPF:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { User } from '../entities/user';\n\nexport interface IUserInObject {\n\tid?: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport type TUserClassToObject = {\n\tid: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n};\n\nexport class UserMapper {\n\t/**\n\t * Método usado para converter um objeto de usuário em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IUserInObject): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de usuário em objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: User): TUserClassToObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tname: input.name.value,\n\t\t\temail: input.email.value,\n\t\t\tpassword: input.password.value,\n\t\t\tCPF: input.CPF.value,\n\t\t\tphoneNumber: input.phoneNumber.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidate.html":{"url":"interfaces/IValidate.html","title":"interface - IValidate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/auth/guards/hmac-invite.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invite\n                                        \n                                \n                                \n                                        \n                                            inviteAsHash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invite:         Invite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteAsHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inviteAsHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { CryptAdapter } from '@registry:app/adapters/crypt';\nimport { Email } from '@registry:app/entities/VO';\nimport { generateStringCodeContent } from '@registry:utils/generateStringCodeContent';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\nimport { plainToClass } from 'class-transformer';\nimport { InviteUserDTO } from '@registry:infra/http/DTO/inviteUser.DTO';\nimport { checkClassValidatorErrors } from '@registry:utils/convertValidatorErr';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { Invite } from '@registry:app/entities/invite';\n\ninterface IValidate {\n\temail: Email;\n\tinviteAsHash: string;\n\tinvite: Invite;\n}\n\n/** Usado para validar a integridade e validade dos convites */\n@Injectable()\nexport class HmacInviteGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly crypt: CryptAdapter,\n\t\tprivate readonly inviteRepo: InviteRepo,\n\t) {}\n\n\tprivate mapKeyBasedOnLevel(input: number | undefined) {\n\t\tswitch (input) {\n\t\tcase 1:\n\t\t\treturn process.env.INVITE_ADMIN_TOKEN_KEY;\n\t\tcase 2:\n\t\t\treturn process.env.INVITE_SUPER_ADMIN_TOKEN_KEY;\n\t\tdefault:\n\t\t\treturn process.env.INVITE_TOKEN_KEY;\n\t\t}\n\t}\n\n\tprivate async validate(input: IValidate): Promise {\n\t\tconst key = this.mapKeyBasedOnLevel(input.invite.type.value);\n\n\t\tconst invite = generateStringCodeContent({\n\t\t\tcondominiumId: input.invite.condominiumId,\n\t\t\temail: input.email,\n\t\t\trequiredLevel: input.invite.type,\n\t\t\tid: input.invite.id,\n\t\t});\n\t\tconst hashedInvite = await this.crypt\n\t\t\t.hashWithHmac({ data: invite, key: key as string })\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({\n\t\t\t\t\tmessage: 'Falha ao tentar gerar um HMAC do convite',\n\t\t\t\t});\n\t\t\t});\n\n\t\treturn hashedInvite === input.inviteAsHash;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\n\t\tconst body = plainToClass(InviteUserDTO, req.body);\n\t\tawait checkClassValidatorErrors({ body });\n\t\tconst email = new Email(body.email);\n\n\t\tif (typeof req.query?.invite !== 'string')\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'O convite é inválido',\n\t\t\t});\n\n\t\tconst invite = await this.inviteRepo.find({\n\t\t\tkey: email,\n\t\t\tsafeSearch: true,\n\t\t});\n\n\t\tconst inviteAsHash = req.query.invite;\n\t\tconst validationRes = await this.validate({\n\t\t\temail,\n\t\t\tinviteAsHash,\n\t\t\tinvite,\n\t\t});\n\t\tif (!validationRes || invite.expiresAt.getTime() \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidateSignedCookie.html":{"url":"interfaces/IValidateSignedCookie.html","title":"interface - IValidateSignedCookie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidateSignedCookie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/cookie.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cookie\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cookie\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cookie:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type TValidateSignedCookieReturn =\n\t| Promise\n\t| string\n\t| false;\n\nexport interface IValidateSignedCookie {\n\tcookie: string;\n\tkey: string;\n}\n\nexport abstract class CookieAdapter {\n\tabstract validateSignedCookie(\n\t\tdata: IValidateSignedCookie,\n\t): TValidateSignedCookieReturn;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryCondominium.html":{"url":"classes/InMemoryCondominium.html","title":"class - InMemoryCondominium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryCondominium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/condominium/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CondominiumRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calls\n                            \n                            \n                                    Public\n                                condominiums\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: InMemoryContainer)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        InMemoryContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        condominiums\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Condominium[]\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: CondominiumInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: CondominiumInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/condominium/index.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CondominiumInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport {\n\tCondominiumInterfaces,\n\tCondominiumRepo,\n} from '@registry:app/repositories/condominium';\nimport { InMemoryError } from '@registry:tests/errors/inMemoryError';\nimport { InMemoryContainer } from '../inMemoryContainer';\n\nexport class InMemoryCondominium implements CondominiumRepo {\n\tpublic calls = {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t};\n\tpublic condominiums: Condominium[];\n\n\tconstructor(container: InMemoryContainer) {\n\t\tthis.condominiums = container.props.condominiumArr;\n\t}\n\n\tpublic async create(input: CondominiumInterfaces.create): Promise {\n\t\t++this.calls.create;\n\n\t\tconst existentData = this.condominiums.find((item) =>\n\t\t\tinput.condominium.equalTo(item),\n\t\t);\n\n\t\tif (existentData)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.condominium,\n\t\t\t\tmessage: 'Condominium already exist',\n\t\t\t});\n\n\t\tthis.condominiums.push(input.condominium);\n\t}\n\n\tasync find(input: CondominiumInterfaces.safeSearch): Promise;\n\tasync find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n\n\tpublic async find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise {\n\t\t++this.calls.find;\n\n\t\tconst existentData = this.condominiums.find((item) => {\n\t\t\treturn (\n\t\t\t\t(input.key instanceof CNPJ && item.CNPJ.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof CEP && item.CEP.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof Name && item.name.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof UUID && item.id.equalTo(input.key))\n\t\t\t);\n\t\t});\n\n\t\tif (!existentData && input.safeSearch)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.condominium,\n\t\t\t\tmessage: 'Condominium not found',\n\t\t\t});\n\n\t\treturn existentData;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryContainer.html":{"url":"classes/InMemoryContainer.html","title":"class - InMemoryContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                erase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IInMemoryContainerProps\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tuserArr: [],\n\t\tcondominiumArr: [],\n\t\tcondominiumRelUserArr: [],\n\t\tinviteArr: [],\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        erase\n                        \n                    \n                \n            \n            \n                \nerase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/inMemoryContainer.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Condominium } from '@registry:app/entities/condominium';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport interface IInMemoryUserContainer {\n\tuser: {\n\t\tcontent: User;\n\t\tcondominiumRelUser: Record;\n\t};\n}\n\ninterface IInMemoryContainerProps {\n\tuserArr: IInMemoryUserContainer[];\n\tcondominiumArr: Condominium[];\n\tcondominiumRelUserArr: CondominiumRelUser[];\n\tinviteArr: Invite[];\n}\n\nexport class InMemoryContainer {\n\tprops: IInMemoryContainerProps = {\n\t\tuserArr: [],\n\t\tcondominiumArr: [],\n\t\tcondominiumRelUserArr: [],\n\t\tinviteArr: [],\n\t};\n\n\terase() {\n\t\tthis.props = {\n\t\t\tuserArr: [],\n\t\t\tcondominiumRelUserArr: [],\n\t\t\tinviteArr: [],\n\t\t\tcondominiumArr: [],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryError.html":{"url":"classes/InMemoryError.html","title":"class - InMemoryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/errors/inMemoryError.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/tests/errors/inMemoryError.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        entity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntitiesEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/errors/inMemoryError.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\n\ninterface IProps {\n\tentity: EntitiesEnum;\n\tmessage: string;\n}\n\nexport class InMemoryError extends Error {\n\treadonly entity: EntitiesEnum;\n\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = `In Memory Error: ${input.entity}`;\n\t\tthis.message = input.message;\n\t\tthis.entity = input.entity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryInvite.html":{"url":"classes/InMemoryInvite.html","title":"class - InMemoryInvite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryInvite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/invites/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            InviteRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calls\n                            \n                            \n                                    Public\n                                invites\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                transferToUserResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: InMemoryContainer)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        InMemoryContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\ttransferToUserResources: 0,\n\t\tdelete: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        invites\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Invite[]\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IInMemoryUserContainer[]\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: InviteRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: InviteRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind | InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.safelyFind | InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transferToUserResources\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferToUserResources(input: InviteRepoInterfaces.transferToUserResources)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/invites/index.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.transferToUserResources\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntitiesEnum } from '@registry:app/entities/entities';\nimport { Invite } from '@registry:app/entities/invite';\nimport {\n\tInviteRepo,\n\tInviteRepoInterfaces,\n} from '@registry:app/repositories/invite';\nimport { InMemoryError } from '@registry:tests/errors/inMemoryError';\nimport {\n\tIInMemoryUserContainer,\n\tInMemoryContainer,\n} from '../inMemoryContainer';\n\nexport class InMemoryInvite implements InviteRepo {\n\tpublic calls = {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\ttransferToUserResources: 0,\n\t\tdelete: 0,\n\t};\n\tpublic invites: Invite[];\n\tpublic users: IInMemoryUserContainer[];\n\n\tconstructor(container: InMemoryContainer) {\n\t\tthis.invites = container.props.inviteArr;\n\t\tthis.users = container.props.userArr;\n\t}\n\n\tasync create(input: InviteRepoInterfaces.create): Promise {\n\t\t++this.calls.create;\n\n\t\tconst searchedInvite = this.invites.find(\n\t\t\t(item) => item.id === input.invite.id,\n\t\t);\n\t\tif (searchedInvite)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.invite,\n\t\t\t\tmessage: 'Invite already exist',\n\t\t\t});\n\n\t\tconst searchedCondominiumRelUser = this.users.find(\n\t\t\t(item) =>\n\t\t\t\titem.user.condominiumRelUser[input.invite.condominiumId.value],\n\t\t);\n\n\t\tif (searchedCondominiumRelUser)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.invite,\n\t\t\t\tmessage: 'User is already linked in one condominium',\n\t\t\t});\n\n\t\tthis.invites.push(input.invite);\n\t}\n\n\tasync find(input: InviteRepoInterfaces.safelyFind): Promise;\n\tasync find(input: InviteRepoInterfaces.find): Promise;\n\n\tasync find(\n\t\tinput: InviteRepoInterfaces.safelyFind | InviteRepoInterfaces.find,\n\t): Promise {\n\t\t++this.calls.find;\n\n\t\tconst searchedInvite = this.invites.find((item) =>\n\t\t\titem.email.equalTo(input.key),\n\t\t);\n\n\t\tif (!searchedInvite && input.safeSearch)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.invite,\n\t\t\t\tmessage: 'Invite not found',\n\t\t\t});\n\n\t\treturn searchedInvite;\n\t}\n\n\tasync transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise {\n\t\t++this.calls.transferToUserResources;\n\n\t\tconst searchedInviteIndex = this.invites.findIndex((item) =>\n\t\t\titem.email.equalTo(input.user.email),\n\t\t);\n\t\tif (searchedInviteIndex  {\n\t\t++this.calls.delete;\n\n\t\tconst searchedInviteIndex = this.invites.findIndex((item) =>\n\t\t\titem.id.equalTo(input.key),\n\t\t);\n\t\tif (searchedInviteIndex \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryOTP.html":{"url":"classes/InMemoryOTP.html","title":"class - InMemoryOTP","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryOTP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/otp/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OTPRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calls\n                            \n                            \n                                    Public\n                                otps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\tdelete: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        otps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: ICreateOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICreateOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: IDeleteOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IDeleteOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: IFindOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/otp/index.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IFindOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport {\n\tICreateOTPInput,\n\tIDeleteOTPInput,\n\tIFindOTPInput,\n\tOTPRepo,\n} from '@registry:app/repositories/otp';\nimport { InMemoryError } from '@registry:tests/errors/inMemoryError';\n\nexport class InMemoryOTP implements OTPRepo {\n\tpublic calls = {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\tdelete: 0,\n\t};\n\tpublic otps: Array = [];\n\n\tpublic async create(input: ICreateOTPInput): Promise {\n\t\tthis.calls.create = this.calls.create + 1;\n\n\t\tconst existentData = this.otps.find(\n\t\t\t(item) => `mockOTP:${input.email.value}` === item.key,\n\t\t);\n\n\t\tif (existentData)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.otp,\n\t\t\t\tmessage: 'OTP already exist',\n\t\t\t});\n\n\t\tthis.otps.push({\n\t\t\tkey: `mockOTP:${input.email.value}`,\n\t\t\tvalue: input.otp,\n\t\t});\n\t}\n\n\tpublic async find(input: IFindOTPInput): Promise {\n\t\tthis.calls.find = this.calls.find + 1;\n\n\t\tconst existentData = this.otps.find(\n\t\t\t(item) => `mockOTP:${input.email.value}` === item.key,\n\t\t);\n\n\t\treturn existentData?.value;\n\t}\n\n\tpublic async delete(input: IDeleteOTPInput): Promise {\n\t\tthis.calls.delete = this.calls.delete + 1;\n\n\t\tconst existentDataIndex = this.otps.findIndex(\n\t\t\t(item) => `mockOTP:${input.email.value}` === item.key,\n\t\t);\n\n\t\tif (existentDataIndex \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InMemoryUser.html":{"url":"classes/InMemoryUser.html","title":"class - InMemoryUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InMemoryUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/tests/inMemoryDatabase/user/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            UserRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calls\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                getAllCondominiumRelation\n                            \n                            \n                                    Async\n                                getCondominiumRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(container: InMemoryContainer)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        InMemoryContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        calls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\tdelete: 0,\n\t\tgetCondominiumRelation: 0,\n\t\tgetAllCondominiumRelation: 0,\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IInMemoryUserContainer[]\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: UserRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: UserRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search | UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCondominiumRelation(input: UserRepoInterfaces.getAllCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getAllCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCondominiumRelation(input: UserRepoInterfaces.getCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/tests/inMemoryDatabase/user/index.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { EntitiesEnum } from '@registry:app/entities/entities';\nimport { User } from '@registry:app/entities/user';\nimport { UserRepo, UserRepoInterfaces } from '@registry:app/repositories/user';\nimport { InMemoryError } from '@registry:tests/errors/inMemoryError';\nimport {\n\tIInMemoryUserContainer,\n\tInMemoryContainer,\n} from '../inMemoryContainer';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport {\n\tCondominiumRelUserMapper,\n\tTCondominiumRelUserToObject,\n} from '@registry:app/mapper/condominiumRelUser';\n\nexport class InMemoryUser implements UserRepo {\n\tpublic calls = {\n\t\tcreate: 0,\n\t\tfind: 0,\n\t\tdelete: 0,\n\t\tgetCondominiumRelation: 0,\n\t\tgetAllCondominiumRelation: 0,\n\t};\n\tpublic users: IInMemoryUserContainer[];\n\n\tconstructor(container: InMemoryContainer) {\n\t\tthis.users = container.props.userArr;\n\t}\n\n\tpublic async create(input: UserRepoInterfaces.create): Promise {\n\t\t++this.calls.create;\n\n\t\tconst existentData = this.users.find(\n\t\t\t(item) =>\n\t\t\t\tinput.user.id.equalTo(item.user.content.id) ||\n\t\t\t\tinput.user.email.equalTo(item.user.content.email) ||\n\t\t\t\tinput.user.CPF.equalTo(item.user.content.CPF),\n\t\t);\n\n\t\tif (existentData)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.user,\n\t\t\t\tmessage: 'User already exist',\n\t\t\t});\n\n\t\tthis.users.push({\n\t\t\tuser: {\n\t\t\t\tcontent: input.user,\n\t\t\t\tcondominiumRelUser: {\n\t\t\t\t\t[input.condominiumRelUser.condominiumId.value]:\n\t\t\t\t\t\tinput.condominiumRelUser,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync find(input: UserRepoInterfaces.safeSearch): Promise;\n\tasync find(input: UserRepoInterfaces.search): Promise;\n\n\tpublic async find(\n\t\tinput: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch,\n\t): Promise {\n\t\t++this.calls.find;\n\n\t\tconst existentData = this.users.find((item) => {\n\t\t\treturn (\n\t\t\t\t(input.key instanceof Email &&\n\t\t\t\t\titem.user.content.email.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof CPF &&\n\t\t\t\t\titem.user.content.CPF.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof UUID &&\n\t\t\t\t\titem.user.content.id.equalTo(input.key))\n\t\t\t);\n\t\t});\n\n\t\tif (!existentData && input.safeSearch)\n\t\t\tthrow new InMemoryError({\n\t\t\t\tentity: EntitiesEnum.user,\n\t\t\t\tmessage: 'User not found',\n\t\t\t});\n\n\t\treturn existentData?.user.content;\n\t}\n\n\tasync getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise {\n\t\t++this.calls.getCondominiumRelation;\n\n\t\tconst existentData = this.users.find(\n\t\t\t(item) =>\n\t\t\t\titem.user.content.id === input.userId &&\n\t\t\t\titem.user.condominiumRelUser[input.condominiumId.value],\n\t\t);\n\n\t\tif (!existentData) return undefined;\n\n\t\treturn existentData.user.condominiumRelUser[input.condominiumId.value];\n\t}\n\tasync getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise {\n\t\t++this.calls.getAllCondominiumRelation;\n\n\t\tconst existentUser = this.users.find((item) =>\n\t\t\titem.user.content.id.equalTo(input.userId),\n\t\t);\n\n\t\tif (!existentUser) return [];\n\t\tconst condominiumRelUser: TCondominiumRelUserToObject[] = [];\n\n\t\tfor (const key in existentUser.user.condominiumRelUser)\n\t\t\tcondominiumRelUser.push(\n\t\t\t\tCondominiumRelUserMapper.toObject(\n\t\t\t\t\texistentUser.user.condominiumRelUser[key],\n\t\t\t\t),\n\t\t\t);\n\n\t\treturn condominiumRelUser;\n\t}\n\n\tpublic async delete(input: UserRepoInterfaces.remove): Promise {\n\t\t++this.calls.delete;\n\n\t\tconst existentDataIndex = this.users.findIndex((item) => {\n\t\t\treturn (\n\t\t\t\t(input.key instanceof UUID &&\n\t\t\t\t\titem.user.content.id.equalTo(input.key)) ||\n\t\t\t\t(input.key instanceof Email &&\n\t\t\t\t\titem.user.content.email.equalTo(input.key))\n\t\t\t);\n\t\t});\n\n\t\tif (existentDataIndex \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Index.html":{"url":"classes/Index.html","title":"class - Index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Index\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/entities/indexes.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flat\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ref\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IIndexProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/entities/indexes.ts:9\n                            \n                        \n\n                \n                    \n                            Example :Usado para manipular e validar a integridade dos índices no firestore\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IIndexProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IIndexProps\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/firestore/entities/indexes.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        flat\n                        \n                    \n                \n            \n            \n                \nflat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/entities/indexes.ts:31\n                        \n                    \n\n\n            \n                \n                        Converte o índice em um objeto\n\n\n                        \n                            Returns :         IIndexProps\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ref\n                    \n                \n\n                \n                    \n                        getref()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/infra/storages/db/firestore/entities/indexes.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DocumentData, DocumentReference } from 'firebase-admin/firestore';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\nexport interface IIndexProps {\n\tref: DocumentReference;\n}\n\nexport class Index {\n\tprivate readonly props: IIndexProps;\n\n\t/**\n\t *\tUsado para manipular e validar a integridade dos índices no firestore\n\t **/\n\tconstructor(input: IIndexProps) {\n\t\tif (!(input.ref instanceof DocumentReference))\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Malformed reference',\n\t\t\t\ttag: DatabaseCustomErrorsTags.malformedRef,\n\t\t\t});\n\n\t\tthis.props = { ...input };\n\t}\n\n\tget ref(): DocumentReference {\n\t\treturn this.props.ref;\n\t}\n\n\t/**\n\t * Converte o índice em um objeto\n\t **/\n\tflat(): IIndexProps {\n\t\treturn { ref: this.ref };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Invite.html":{"url":"classes/Invite.html","title":"class - Invite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Invite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/invite/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                    Readonly\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dereference\n                            \n                            \n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    ttl\n                                \n                                \n                                    expiresAt\n                                \n                                \n                                    type\n                                \n                                \n                                    condominiumId\n                                \n                                \n                                    id\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IInputPropsInvite, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/invite/index.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IInputPropsInvite\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UUID\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/invite/index.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProps\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/invite/index.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dereference\n                        \n                    \n                \n            \n            \n                \ndereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/invite/index.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Invite\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equalTo\n                        \n                    \n                \n            \n            \n                \nequalTo(input: Invite)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/invite/index.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Invite\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:59\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ttl\n                    \n                \n\n                \n                    \n                        getttl()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expiresAt\n                    \n                \n\n                \n                    \n                        getexpiresAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        condominiumId\n                    \n                \n\n                \n                    \n                        getcondominiumId()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/invite/index.ts:74\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Email, Level, UUID } from '../VO';\nimport { Entity } from '../entities';\n\nexport interface IProps {\n\temail: Email;\n\tttl: number;\n\texpiresAt: Date;\n\tcondominiumId: UUID;\n\ttype: Level;\n}\n\nexport interface IInputPropsInvite {\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class Invite implements Entity {\n\tprivate readonly props: IProps;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: IInputPropsInvite, id?: string) {\n\t\tthis.props = {\n\t\t\temail: new Email(input.email),\n\t\t\tttl: input.ttl,\n\t\t\ttype: new Level(input.type),\n\t\t\tcondominiumId: new UUID(input.condominiumId),\n\t\t\texpiresAt: input.expiresAt ?? new Date(Date.now() + input.ttl),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tdereference(): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\temail: this.email.value,\n\t\t\t\tttl: this.ttl,\n\t\t\t\ttype: this.type.value,\n\t\t\t\tcondominiumId: this.condominiumId.value,\n\t\t\t\texpiresAt: this.expiresAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tequalTo(input: Invite): boolean {\n\t\treturn (\n\t\t\tinput.id.equalTo(this.id) &&\n\t\t\tinput.type.equalTo(this.type) &&\n\t\t\tinput.email.equalTo(this.email) &&\n\t\t\tinput.ttl === this.ttl &&\n\t\t\tinput.expiresAt === this.expiresAt &&\n\t\t\tinput.condominiumId.equalTo(this.condominiumId)\n\t\t);\n\t}\n\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\tget expiresAt(): Date {\n\t\treturn this.props.expiresAt;\n\t}\n\tget type(): Level {\n\t\treturn this.props.type;\n\t}\n\tget condominiumId(): UUID {\n\t\treturn this.props.condominiumId;\n\t}\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InviteFirestore.html":{"url":"injectables/InviteFirestore.html","title":"injectable - InviteFirestore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InviteFirestore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/repositories/invite.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                transferToUserResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(collectionsRefs: CollectionsRefService, firestore: FirestoreService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionsRefs\n                                                  \n                                                        \n                                                                        CollectionsRefService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                        FirestoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: InviteRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: InviteRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transferToUserResources\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferToUserResources(input: InviteRepoInterfaces.transferToUserResources)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/invite.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.transferToUserResources\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FirestoreService } from '../firestore.service';\nimport {\n\tInviteRepo,\n\tInviteRepoInterfaces,\n} from '@registry:app/repositories/invite';\nimport { InviteFirestoreMapper } from '../mapper/invite';\nimport { InviteMapper } from '@registry:app/mapper/invite';\nimport { Invite } from '@registry:app/entities/invite';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\nimport { UserMapper } from '@registry:app/mapper/user';\nimport { Index } from '../entities/indexes';\nimport { FirestoreGetInviteDTO } from '../DTO/getInvite';\nimport { CondominiumRelUserMapper } from '@registry:app/mapper/condominiumRelUser';\nimport { CollectionsRefService } from '../collectionsRefs.service';\n\n@Injectable()\nexport class InviteFirestore implements InviteRepo {\n\tconstructor(\n\t\tprivate readonly collectionsRefs: CollectionsRefService,\n\t\tprivate readonly firestore: FirestoreService,\n\t) {}\n\n\tasync create(input: InviteRepoInterfaces.create): Promise {\n\t\tconst { id, ...invite } = InviteMapper.toObject(input.invite);\n\t\tconst database = this.firestore.instance;\n\n\t\tawait database.runTransaction(async (transaction) => {\n\t\t\tlet userId: string | undefined;\n\t\t\tconst getUserQuery = this.collectionsRefs.user.core\n\t\t\t\t.where('email', '==', invite.email)\n\t\t\t\t.limit(1);\n\n\t\t\tawait transaction.get(getUserQuery).then((res) => {\n\t\t\t\tif (res.empty) return;\n\n\t\t\t\tres.forEach((item) => {\n\t\t\t\t\tif (item.exists) userId = item.id;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (userId) {\n\t\t\t\tconst condominiumRelUserQuery = this.collectionsRefs.user\n\t\t\t\t\t.condominiumRelUser(userId)\n\t\t\t\t\t.count();\n\t\t\t\tlet condominiumLinkedWithThisUser = 0;\n\n\t\t\t\tawait transaction.get(condominiumRelUserQuery).then((res) => {\n\t\t\t\t\tcondominiumLinkedWithThisUser = res.data().count;\n\t\t\t\t});\n\n\t\t\t\tif (condominiumLinkedWithThisUser >= 1)\n\t\t\t\t\tthrow new DatabaseCustomError({\n\t\t\t\t\t\tmessage: 'Este usuário já esta em um condomínio',\n\t\t\t\t\t\ttag: DatabaseCustomErrorsTags.maximumCondominiumRelUser,\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst existentNumberOfInvites =\n\t\t\t\tawait this.collectionsRefs.invite.itself\n\t\t\t\t\t.where('email', '==', invite.email)\n\t\t\t\t\t.where('condominiumId', '==', invite.condominiumId)\n\t\t\t\t\t.count()\n\t\t\t\t\t.get();\n\n\t\t\tif (existentNumberOfInvites.data().count > 0)\n\t\t\t\tthrow new DatabaseCustomError({\n\t\t\t\t\tmessage: 'Usuário já foi convidado',\n\t\t\t\t\ttag: DatabaseCustomErrorsTags.contentAlreadyExists,\n\t\t\t\t});\n\n\t\t\tconst inviteRef = this.collectionsRefs.invite.getInviteDoc(id);\n\t\t\ttransaction.create(inviteRef, invite);\n\t\t});\n\t}\n\n\tasync delete(input: InviteRepoInterfaces.remove): Promise {\n\t\tawait this.collectionsRefs.invite\n\t\t\t.getInviteDoc(input.key.value)\n\t\t\t.delete();\n\t}\n\n\tasync transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise {\n\t\tconst { id: userId, ...user } = UserMapper.toObject(input.user);\n\n\t\t/* eslint-disable @typescript-eslint/no-unused-vars */\n\t\tconst {\n\t\t\tid: __,\n\t\t\tuserId: _,\n\t\t\tcondominiumId,\n\t\t\t...condominiumRelUser\n\t\t} = CondominiumRelUserMapper.toObject(input.condominiumRelUser);\n\n\t\tconst database = this.firestore.instance;\n\n\t\tlet inviteId: undefined | string;\n\t\tawait this.collectionsRefs.invite.itself\n\t\t\t.where('email', '==', user.email)\n\t\t\t.where('condominiumId', '==', condominiumId)\n\t\t\t.limit(1)\n\t\t\t.get()\n\t\t\t.then((res) =>\n\t\t\t\tres.forEach((item) => {\n\t\t\t\t\tif (item.exists) inviteId = item.id;\n\t\t\t\t}),\n\t\t\t);\n\n\t\tif (!inviteId)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Convite não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tconst refs = {\n\t\t\tinvite: this.collectionsRefs.invite.getInviteDoc(inviteId),\n\t\t\temail: this.collectionsRefs.user.emailIndex.doc(user.email),\n\t\t\tcpf: this.collectionsRefs.user.cpfIndex.doc(user.CPF),\n\t\t\tcore: this.collectionsRefs.user.core.doc(userId),\n\t\t\tcondominiumRelUser: this.collectionsRefs.user\n\t\t\t\t.condominiumRelUser(userId)\n\t\t\t\t.doc(condominiumId),\n\t\t};\n\n\t\tconst batch = database.batch();\n\t\tbatch.delete(refs.invite, { exists: true });\n\n\t\tconst contentOfIndexThatPointsToUser = new Index({\n\t\t\tref: refs.core,\n\t\t}).flat();\n\t\tbatch.create(refs.cpf, contentOfIndexThatPointsToUser);\n\t\tbatch.create(refs.email, contentOfIndexThatPointsToUser);\n\n\t\tbatch.create(refs.core, user);\n\t\tbatch.create(refs.condominiumRelUser, condominiumRelUser);\n\n\t\tawait batch.commit();\n\t}\n\n\tasync find(input: InviteRepoInterfaces.safelyFind): Promise;\n\tasync find(input: InviteRepoInterfaces.find): Promise;\n\n\tasync find(\n\t\tinput: InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind,\n\t): Promise {\n\t\tconst query = this.collectionsRefs.invite.itself\n\t\t\t.where('email', '==', input.key.value)\n\t\t\t.limit(1);\n\t\tconst queryResult = await query.get();\n\n\t\tlet unparsedInvite: Record | undefined;\n\n\t\tqueryResult.forEach((doc) => {\n\t\t\tunparsedInvite = { id: doc.id, ...doc.data() };\n\t\t\treturn;\n\t\t});\n\n\t\tif (!unparsedInvite && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\t});\n\n\t\tif (!unparsedInvite) return undefined;\n\n\t\tconst semiparsedInvite = FirestoreGetInviteDTO.exec(unparsedInvite);\n\t\tconst parsedInvite =\n\t\t\tInviteFirestoreMapper.fromFirestoreToClass(semiparsedInvite);\n\t\treturn parsedInvite;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteFirestoreMapper.html":{"url":"classes/InviteFirestoreMapper.html","title":"class - InviteFirestoreMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteFirestoreMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/invite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromFirestoreToClass\n                            \n                            \n                                    Static\n                                fromFirestoreToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToClass(input: IIncomingFirestoreInviteData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/invite.ts:19\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreInviteData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Invite\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirestoreToObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirestoreToObject(input: IIncomingFirestoreInviteData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/invite.ts:33\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreInviteData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TInviteInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Timestamp } from 'firebase-admin/firestore';\nimport { Invite } from '@registry:app/entities/invite';\nimport { TInviteInObject } from '@registry:app/mapper/invite';\n\nexport interface IIncomingFirestoreInviteData {\n\tid: string;\n\temail: string;\n\tttl: number;\n\texpiresAt: Timestamp;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport class InviteFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToClass(input: IIncomingFirestoreInviteData): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\texpiresAt: input.expiresAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirestoreToObject(\n\t\tinput: IIncomingFirestoreInviteData,\n\t): TInviteInObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tttl: input.ttl,\n\t\t\texpiresAt: input.expiresAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteMapper.html":{"url":"classes/InviteMapper.html","title":"class - InviteMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/invite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: IConvertToObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/invite.ts:19\n                        \n                    \n\n\n            \n                \n                        Método usado para converter um objeto de convite em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IConvertToObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de objeto\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Invite\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: Invite)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/invite.ts:32\n                        \n                    \n\n\n            \n                \n                        Método usado para converter uma classe de convite em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Invite\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de classe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TInviteInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Invite } from '@registry:app/entities/invite';\n\ninterface IConvertToObject {\n\tid?: string;\n\temail: string;\n\tttl: number;\n\texpiresAt?: Date;\n\tcondominiumId: string;\n\ttype: number;\n}\n\nexport type TInviteInObject = Required;\n\nexport class InviteMapper {\n\t/**\n\t * Método usado para converter um objeto de convite em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IConvertToObject): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de convite em objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: Invite): TInviteInObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\temail: input.email.value,\n\t\t\tttl: input.ttl,\n\t\t\texpiresAt: input.expiresAt,\n\t\t\ttype: input.type.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvitePrismaMapper.html":{"url":"classes/InvitePrismaMapper.html","title":"class - InvitePrismaMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvitePrismaMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/mapper/invite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: InvitePrisma)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/invite.ts:24\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do prisma em classes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InvitePrisma\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do prisma\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Invite\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(input: Invite)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/invite.ts:9\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados inseridos e os adapta para a utilização no prisma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Invite\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados de entrada do convite\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         InvitePrisma\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Invite as InvitePrisma } from '@prisma/client';\nimport { Invite } from '@registry:app/entities/invite';\n\nexport class InvitePrismaMapper {\n\t/**\n\t * Mapeia os dados inseridos e os adapta para a utilização no prisma\n\t * @param input - Deve conter os dados de entrada do convite\n\t **/\n\tstatic toPrisma(input: Invite): InvitePrisma {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\texpiresAt: input.expiresAt,\n\t\t\tttl: input.ttl,\n\t\t\ttype: input.type.value,\n\t\t\temail: input.email.value,\n\t\t\tcondominiumId: input.condominiumId.value,\n\t\t};\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do prisma em classes\n\t * @param input - Deve conter os dados vindos do prisma\n\t **/\n\tstatic toClass(input: InvitePrisma): Invite {\n\t\treturn new Invite(\n\t\t\t{\n\t\t\t\tcondominiumId: input.condominiumId,\n\t\t\t\temail: input.email,\n\t\t\t\ttype: input.type,\n\t\t\t\tttl: input.ttl,\n\t\t\t\texpiresAt: input.expiresAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvitePrismaRepo.html":{"url":"injectables/InvitePrismaRepo.html","title":"injectable - InvitePrismaRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvitePrismaRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                transferToUserResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: InviteRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: InviteRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transferToUserResources\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferToUserResources(input: InviteRepoInterfaces.transferToUserResources)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/invite.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.transferToUserResources\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n\tInviteRepo,\n\tInviteRepoInterfaces,\n} from '@registry:app/repositories/invite';\nimport { PrismaService } from '../prisma.service';\nimport { Invite } from '@registry:app/entities/invite';\nimport { InvitePrismaMapper } from '../mapper/invite';\nimport { UserPrismaMapper } from '../mapper/user';\nimport { CondominiumRelUserPrismaMapper } from '../mapper/condominiumRelUser';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\n@Injectable()\nexport class InvitePrismaRepo implements InviteRepo {\n\tconstructor(private readonly prisma: PrismaService) {}\n\n\tasync create(input: InviteRepoInterfaces.create): Promise {\n\t\tconst data = InvitePrismaMapper.toPrisma(input.invite);\n\t\tawait this.prisma.invite.create({ data });\n\t}\n\n\tasync find(input: InviteRepoInterfaces.find): Promise;\n\tasync find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\tasync find(\n\t\tinput: InviteRepoInterfaces.find | InviteRepoInterfaces.safelyFind,\n\t): Promise {\n\t\tconst unparsedInvite = await this.prisma.invite.findFirst({\n\t\t\twhere: {\n\t\t\t\temail: input.key.value,\n\t\t\t},\n\t\t});\n\n\t\tif (!unparsedInvite && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este convite não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tif (!unparsedInvite) return undefined;\n\n\t\tconst invite = InvitePrismaMapper.toClass(unparsedInvite);\n\t\treturn invite;\n\t}\n\n\tasync transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise {\n\t\tconst user = UserPrismaMapper.toPrisma(input.user);\n\t\tconst condominiumRelUser = CondominiumRelUserPrismaMapper.toPrisma(\n\t\t\tinput.condominiumRelUser,\n\t\t);\n\n\t\tconst invite = await this.prisma.invite.findFirst({\n\t\t\twhere: { email: user.email },\n\t\t});\n\n\t\tif (!invite)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Não foi possível criar um usuário',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tawait this.prisma.$transaction([\n\t\t\tthis.prisma.invite.delete({\n\t\t\t\twhere: { id: invite.id },\n\t\t\t}),\n\t\t\tthis.prisma.user.create({ data: user }),\n\t\t\tthis.prisma.condominiumRelUser.create({ data: condominiumRelUser }),\n\t\t]);\n\t}\n\n\tasync delete(input: InviteRepoInterfaces.remove): Promise {\n\t\tawait this.prisma.invite.delete({\n\t\t\twhere: { id: input.key.value },\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteRepo.html":{"url":"classes/InviteRepo.html","title":"class - InviteRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                transferToUserResources\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: InviteRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: InviteRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InviteRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.find)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:36\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um convite\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.find\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: InviteRepoInterfaces.safelyFind)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:45\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um convite\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.safelyFind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        transferToUserResources\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferToUserResources(input: InviteRepoInterfaces.transferToUserResources)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/invite.ts:51\n                        \n                    \n\n\n            \n                \n                        Método usado para transferir um convite para os recursos de usuários\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            InviteRepoInterfaces.transferToUserResources\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InviteUserDTO.html":{"url":"classes/InviteUserDTO.html","title":"class - InviteUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InviteUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/inviteUser.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de criação de convites\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/inviteUser.DTO.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { userDTORules } from '@registry:app/entities/user';\nimport { IsEmail, IsString, MaxLength } from 'class-validator';\n\n/** Usado para validar o corpo das requisições de criação de convites */\nexport class InviteUserDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtGuard.html":{"url":"guards/JwtGuard.html","title":"guard - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/jwt.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar um JWT vindo do authorization header\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/jwt.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/jwt.guard.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/jwt.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { IAccessTokenBody } from '../tokenTypes';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\nimport { UUID } from '@registry:app/entities/VO';\n\n/** Usado para validar um JWT vindo do authorization header */\n@Injectable()\nexport class JwtGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async checkToken(token: string) {\n\t\tconst tokenData: IAccessTokenBody = await this.jwtService\n\t\t\t.verifyAsync(token, {\n\t\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({ message: 'JWT inválido' });\n\t\t\t});\n\n\t\treturn tokenData;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\t\tconst rawToken = req?.headers?.authorization;\n\n\t\tconst token = rawToken?.split(' ')[1];\n\t\tif (!token) throw new GuardErrors({ message: 'Token não encontrado' });\n\n\t\tconst tokenData = (await this.checkToken(token)) as IAccessTokenBody;\n\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new UUID(tokenData.sub),\n\t\t\tsafeSearch: true,\n\t\t});\n\n\t\treq.inMemoryData = {\n\t\t\t...req.inMemoryData,\n\t\t\tuser,\n\t\t};\n\n\t\treturn true;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchTFADTO.html":{"url":"classes/LaunchTFADTO.html","title":"class - LaunchTFADTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchTFADTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/launch-tfa.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de inicialização do processo de autenticação de dois fatores\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/launch-tfa.DTO.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { userDTORules } from '@registry:app/entities/user';\nimport { IsEmail, IsString, MaxLength } from 'class-validator';\n\n/** Usado para validar o corpo das requisições de inicialização do processo de autenticação de dois fatores */\nexport class LaunchTFADTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Level.html":{"url":"classes/Level.html","title":"class - Level","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Level\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/level/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/level/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nO nível do usuário, que deve ser 0 (usuário comum), 1 (funcionário) ou 2 (administrador)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Level)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/level/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Level\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/level/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumRelUserDTORules } from '@registry:app/entities/condominiumRelUser';\n\nexport class Level implements ValueObject {\n\t/**\n\t * @param _value - O nível do usuário, que deve ser 0 (usuário comum), 1 (funcionário) ou 2 (administrador)\n\t **/\n\tconstructor(private readonly _value: number) {\n\t\tif (\n\t\t\t_value > condominiumRelUserDTORules.level.maxLength ||\n\t\t\t_value \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogInterceptor.html":{"url":"injectables/LogInterceptor.html","title":"injectable - LogInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/interceptors/logger.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para interceptar e realizar os logs da aplicação\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/interceptors/logger.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(content: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/interceptors/logger.interceptor.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tInjectable,\n\tNestInterceptor,\n\tExecutionContext,\n\tCallHandler,\n} from '@nestjs/common';\nimport { DateFormats } from '@registry:utils/dateFormats';\nimport { randomUUID } from 'crypto';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/** Usado para interceptar e realizar os logs da aplicação */\n@Injectable()\nexport class LogInterceptor implements NestInterceptor {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tintercept(content: ExecutionContext, next: CallHandler): Observable {\n\t\tconst req = content.switchToHttp().getRequest();\n\t\tconst date = new Date();\n\t\tconst anonymous = randomUUID();\n\n\t\tthis.logger.info({\n\t\t\tname: `\"${req.path}\" acessado`,\n\t\t\tdescription: `Um usuário não identificado esta acessando a rota \"${\n\t\t\t\treq.path\n\t\t\t}\" às \"${DateFormats.prettify(\n\t\t\t\tdate,\n\t\t\t)}\" usando o id temporário \"${anonymous}\" e o método \"${\n\t\t\t\treq.method\n\t\t\t}\"`,\n\t\t\tlayer: LayersEnum.interceptors,\n\t\t});\n\n\t\treturn next.handle().pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.logger.info({\n\t\t\t\t\tname: `\"${req.path}\" acesso finalizado`,\n\t\t\t\t\tdescription: `Acesso bem sucedido por \"${anonymous}\"`,\n\t\t\t\t\tlayer: LayersEnum.interceptors,\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerAdapter.html":{"url":"classes/LoggerAdapter.html","title":"class - LoggerAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/logger.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                alert\n                            \n                            \n                                    Abstract\n                                critical\n                            \n                            \n                                    Abstract\n                                debug\n                            \n                            \n                                    Abstract\n                                emergencial\n                            \n                            \n                                    Abstract\n                                error\n                            \n                            \n                                    Abstract\n                                info\n                            \n                            \n                                    Abstract\n                                log\n                            \n                            \n                                    Abstract\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        alert\n                        \n                    \n                \n            \n            \n                \n                        \n                    alert(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        critical\n                        \n                    \n                \n            \n            \n                \n                        \n                    critical(input: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        emergencial\n                        \n                    \n                \n            \n            \n                \n                        \n                    emergencial(input: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(input: TECEProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TECEProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        warn\n                        \n                    \n                \n            \n            \n                \n                        \n                    warn(input: ILoggerDefaultProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/logger.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ILoggerDefaultProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export enum LayersEnum {\n\tstart = 'Start-layer',\n\tinterceptors = 'Interceptor-Layer',\n\tservices = 'Service-Layer',\n\tentitie = 'Entitie-Layer',\n\tcontroller = 'Controller-Layer',\n\tdto = 'DTO-Layer',\n\tauth = 'Auth-Layer',\n\tgateway = 'Gateway-Layer',\n\tunknown = 'Unknown-Layer',\n\tadapter = 'Adapter-Layer',\n\tdatabase = 'Database-Layer',\n\tcache = 'Cache-Layer',\n}\n\nexport interface ILoggerDefaultProps {\n\tname: string;\n\tdescription: string;\n\tlayer: LayersEnum;\n}\n\nexport type TECEProps = ILoggerDefaultProps & { stack?: string };\n\nexport abstract class LoggerAdapter {\n\tabstract log(input: ILoggerDefaultProps): Promise;\n\tabstract info(input: ILoggerDefaultProps): Promise;\n\tabstract debug(input: ILoggerDefaultProps): Promise;\n\tabstract warn(input: ILoggerDefaultProps): Promise;\n\tabstract alert(input: ILoggerDefaultProps): Promise;\n\tabstract error(input: TECEProps): Promise;\n\tabstract critical(input: TECEProps): Promise;\n\tabstract emergencial(input: TECEProps): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDTO.html":{"url":"classes/LoginDTO.html","title":"class - LoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/DTO/login.DTO.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para validar o corpo das requisições de login\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"email\" precisa conter caracteres válidos'})@IsEmail({}, {message: 'O campo \"email\" precisa ser um email válido'})@MaxLength(undefined.maxLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/login.DTO.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString({message: 'O campo \"password\" precisa conter caracteres válidos'})@MaxLength(undefined.maxLength, {message: undefined})@MinLength(undefined.minLength, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/DTO/login.DTO.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { userDTORules } from '@registry:app/entities/user';\nimport { IsEmail, IsString, MaxLength, MinLength } from 'class-validator';\n\n/** Usado para validar o corpo das requisições de login */\nexport class LoginDTO {\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"email\" precisa conter caracteres válidos',\n\t})\n\t@IsEmail(\n\t\t{},\n\t\t{\n\t\t\tmessage: 'O campo \"email\" precisa ser um email válido',\n\t\t},\n\t)\n\t@MaxLength(userDTORules.email.maxLength, {\n\t\tmessage: `O campo \"email\" precisa conter no máximo ${userDTORules.email.maxLength} caracteres`,\n\t})\n\t\temail: string;\n\n\t@ApiProperty()\n\t@IsString({\n\t\tmessage: 'O campo \"password\" precisa conter caracteres válidos',\n\t})\n\t@MaxLength(userDTORules.password.maxLength, {\n\t\tmessage: `O campo \"password\" precisa conter no máximo ${userDTORules.password.maxLength} caracteres`,\n\t})\n\t@MinLength(userDTORules.password.minLength, {\n\t\tmessage: `O campo \"password\" precisa conter no mínimo ${userDTORules.password.minLength} caracteres`,\n\t})\n\t\tpassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Name.html":{"url":"classes/Name.html","title":"class - Name","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Name\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/generals/name/index.ts\n        \n\n\n            \n                Description\n            \n            \n                Nome utilizado nas entidades\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/generals/name/index.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Name)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/name/index.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Name\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/generals/name/index.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { ValueObject, EntitiesEnum } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\n/** Nome utilizado nas entidades */\nexport class Name implements ValueObject {\n\tconstructor(private readonly _value: string) {\n\t\tif (\n\t\t\t_value.length > userDTORules.name.maxLength ||\n\t\t\t_value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodemailerAdapter.html":{"url":"classes/NodemailerAdapter.html","title":"class - NodemailerAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodemailerAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/adapters/nodemailer/nodemailerAdapter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            EmailAdapter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(data: ISendMailContent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/adapters/nodemailer/nodemailerAdapter.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ISendMailContent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { createTransport } from 'nodemailer';\nimport { EmailAdapter, ISendMailContent } from '../email';\n\nexport class NodemailerAdapter implements EmailAdapter {\n\tasync send(data: ISendMailContent): Promise {\n\t\tif (process.env.NOT_SEND_EMAILS) return;\n\n\t\tconst transport = createTransport({\n\t\t\thost: process.env.HOST_SENDER as string,\n\t\t\tport: parseInt(process.env.HOST_PORT_SENDER as string),\n\t\t\tauth: {\n\t\t\t\tuser: process.env.EMAIL_SENDER,\n\t\t\t\tpass: process.env.PASS_SENDER,\n\t\t\t},\n\t\t});\n\n\t\tawait transport.sendMail({\n\t\t\tfrom: data.from,\n\t\t\tto: data.to,\n\t\t\tsubject: data.subject,\n\t\t\thtml: data.body,\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundFilter.html":{"url":"classes/NotFoundFilter.html","title":"class - NotFoundFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/notFound.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros de Not Found\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/notFound.filter.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(_: NotFoundException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/notFound.filter.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        NotFoundException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tArgumentsHost,\n\tCatch,\n\tExceptionFilter,\n\tNotFoundException,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros de Not Found */\n@Catch(NotFoundException)\nexport class NotFoundFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(_: NotFoundException, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tthis.logger.error({\n\t\t\tname: 'Não encontrado',\n\t\t\tlayer: LayersEnum.controller,\n\t\t\tdescription: 'O recurso que você está procurando não existe',\n\t\t});\n\n\t\treturn response.status(404).json({\n\t\t\tstatusCode: 404,\n\t\t\tname: 'Não encontrado',\n\t\t\tmessage: 'O recurso que você está procurando não existe',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Num.html":{"url":"classes/Num.html","title":"class - Num","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Num\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/condominium/num/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: number)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/condominium/num/index.ts:5\n                            \n                        \n\n                \n                    \n                            Número da rua onde se encontra o condomínio\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nO número em questão\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Num)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/condominium/num/index.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Num\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/condominium/num/index.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { condominiumDTORules } from '@registry:app/entities/condominium';\n\nexport class Num implements ValueObject {\n\t/**\n\t * Número da rua onde se encontra o condomínio\n\t * @param _value - O número em questão\n\t **/\n\tconstructor(private readonly _value: number) {\n\t\tif (\n\t\t\t_value > condominiumDTORules.num.maxLength ||\n\t\t\t_value \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTP.html":{"url":"classes/OTP.html","title":"class - OTP","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTP\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/OTP/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                    Readonly\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dereference\n                            \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    requiredLevel\n                                \n                                \n                                    condominiumId\n                                \n                                \n                                    userId\n                                \n                                \n                                    ttl\n                                \n                                \n                                    id\n                                \n                                \n                                    code\n                                \n                                \n                                    createdAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: TInputOTPProps, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/OTP/index.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        TInputOTPProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/OTP/index.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IOTPProps\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/OTP/index.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dereference\n                        \n                    \n                \n            \n            \n                \ndereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/OTP/index.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         OTP\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: OTP)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/OTP/index.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            OTP\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        requiredLevel\n                    \n                \n\n                \n                    \n                        getrequiredLevel()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        condominiumId\n                    \n                \n\n                \n                    \n                        getcondominiumId()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ttl\n                    \n                \n\n                \n                    \n                        getttl()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:75\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n\n                \n                    \n                        getcode()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:83\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/OTP/index.ts:87\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { randomUUID } from 'crypto';\nimport { Code, Level } from '../VO';\nimport { Entity } from '../entities';\n\ninterface IOTPProps {\n\tuserId?: string;\n\trequiredLevel: Level;\n\tcondominiumId: string;\n\tcode: Code;\n\tttl: number;\n\tcreatedAt: Date;\n}\n\nexport type TInputOTPProps = {\n\tuserId?: string;\n\trequiredLevel?: Level;\n\tcondominiumId: string;\n\tcode: Code;\n\tttl?: number;\n\tcreatedAt?: Date;\n};\n\nexport class OTP implements Entity {\n\tprivate readonly _id: string;\n\tprivate readonly props: IOTPProps;\n\n\t/** @deprecated **/\n\tconstructor(input: TInputOTPProps, id?: string) {\n\t\tthis._id = id ?? randomUUID();\n\t\tthis.props = {\n\t\t\t...input,\n\t\t\trequiredLevel: input.requiredLevel ?? new Level(0),\n\t\t\tttl: input.ttl ?? 1000 * 60 * 2,\n\t\t\tcreatedAt: input.createdAt ?? new Date(),\n\t\t};\n\t}\n\n\tdereference(): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tuserId: this.userId,\n\t\t\t\trequiredLevel: new Level(this.requiredLevel.value),\n\t\t\t\tcondominiumId: this.condominiumId,\n\t\t\t\tcode: new Code(this.code.value),\n\t\t\t\tttl: this.ttl,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t},\n\t\t\tthis.id,\n\t\t);\n\t}\n\tpublic equalTo(input: OTP) {\n\t\treturn (\n\t\t\tthis._id === input._id &&\n\t\t\tthis.requiredLevel.equalTo(input.requiredLevel) &&\n\t\t\tthis.props.ttl === input.ttl &&\n\t\t\tthis.props.condominiumId === input.condominiumId &&\n\t\t\tthis.props.userId === input.userId &&\n\t\t\tthis.props.code.equalTo(input.code) &&\n\t\t\tthis.props.createdAt === input.createdAt\n\t\t);\n\t}\n\n\tget requiredLevel(): Level {\n\t\treturn this.props.requiredLevel;\n\t}\n\n\tget condominiumId(): string {\n\t\treturn this.props.condominiumId;\n\t}\n\n\tget userId(): string | undefined {\n\t\treturn this.props.userId;\n\t}\n\n\tget ttl(): number {\n\t\treturn this.props.ttl;\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget code(): Code {\n\t\treturn this.props.code;\n\t}\n\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTPMapper.html":{"url":"classes/OTPMapper.html","title":"class - OTPMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTPMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/otp.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: IConvertToObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/otp.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IConvertToObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OTP\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: OTP)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/otp.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            OTP\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IOTPInObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Code, Level } from '@registry:app/entities/VO';\nimport { OTP } from '@registry:app/entities/OTP';\n\ninterface IConvertToObject {\n\tid?: string;\n\tttl?: number;\n\tuserId?: string;\n\trequiredLevel: number;\n\tcondominiumId: string;\n\tcode: string;\n\tcreatedAt?: Date;\n}\n\nexport interface IOTPInObject {\n\tid: string;\n\tttl: number;\n\tuserId?: string;\n\trequiredLevel: number;\n\tcondominiumId: string;\n\tcode: string;\n\tcreatedAt: Date;\n}\n\nexport class OTPMapper {\n\t/**\n\t * @deprecated\n\t **/\n\tstatic toClass(input: IConvertToObject): OTP {\n\t\treturn new OTP(\n\t\t\t{\n\t\t\t\tttl: input.ttl,\n\t\t\t\tuserId: input.userId,\n\t\t\t\trequiredLevel: new Level(input.requiredLevel),\n\t\t\t\tcondominiumId: input.condominiumId,\n\t\t\t\tcode: new Code(input.code),\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * @deprecated\n\t **/\n\tstatic toObject(input: OTP): IOTPInObject {\n\t\treturn {\n\t\t\tid: input.id,\n\t\t\trequiredLevel: input.requiredLevel.value,\n\t\t\tttl: input.ttl,\n\t\t\tcondominiumId: input.condominiumId,\n\t\t\tuserId: input.userId,\n\t\t\tcode: input.code.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OTPRepo.html":{"url":"classes/OTPRepo.html","title":"class - OTPRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OTPRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/otp.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                        \n                    create(input: ICreateOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/otp.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            ICreateOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                        \n                    delete(input: IDeleteOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/otp.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IDeleteOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \n                        \n                    find(input: IFindOTPInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/otp.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IFindOTPInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OTP } from '@registry:app/entities/OTP';\nimport { Email } from '@registry:app/entities/VO';\n\nexport interface ICreateOTPInput {\n\totp: OTP;\n\temail: Email;\n}\n\nexport interface IFindOTPInput {\n\temail: Email;\n}\n\nexport interface IDeleteOTPInput {\n\temail: Email;\n}\n\nexport abstract class OTPRepo {\n\t/** @deprecated */\n\tabstract create(input: ICreateOTPInput): Promise;\n\t/** @deprecated */\n\tabstract find(input: IFindOTPInput): Promise;\n\t/** @deprecated */\n\tabstract delete(input: IDeleteOTPInput): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Password.html":{"url":"classes/Password.html","title":"class - Password","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Password\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/password/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/password/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSenha do usuário que deve estar entre 64 e 8 caracteres\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: Password)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/password/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Password\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/password/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class Password implements ValueObject {\n\t/**\n\t * @param _value - Senha do usuário que deve estar entre 64 e 8 caracteres\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tif (\n\t\t\t_value.length > userDTORules.password.maxLength ||\n\t\t\t_value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PhoneNumber.html":{"url":"classes/PhoneNumber.html","title":"class - PhoneNumber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PhoneNumber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/user/phoneNumber/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_value: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/user/phoneNumber/index.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nNúmero do telefone do usuário que deve estar entre 30 e 10 caracteres\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: PhoneNumber)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/user/phoneNumber/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            PhoneNumber\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/user/phoneNumber/index.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { userDTORules } from '@registry:app/entities/user';\n\nexport class PhoneNumber implements ValueObject {\n\t/**\n\t * @param _value - Número do telefone do usuário que deve estar entre 30 e 10 caracteres\n\t **/\n\tconstructor(private readonly _value: string) {\n\t\tif (\n\t\t\t_value.length > userDTORules.phoneNumber.maxLength ||\n\t\t\t_value.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaErrorFilter.html":{"url":"classes/PrismaErrorFilter.html","title":"class - PrismaErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/prisma.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros do Prisma\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                possibleErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/prisma.filter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        possibleErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IPrismaError[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P2025',\n\t\t\tmessage: 'Não foi possível deletar o dado, pois o mesmo não existe',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Erro ao criar dado repetido',\n\t\t\tcode: 'P2002',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\tcode: 'P1009',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P1003',\n\t\t\tmessage: 'Não encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/prisma.filter.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/prisma.filter.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Prisma.PrismaClientKnownRequestError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { Response } from 'express';\n\ninterface IPrismaError {\n\tname: string;\n\tcode: string;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros do Prisma */\n@Catch(Prisma.PrismaClientKnownRequestError)\nexport class PrismaErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IPrismaError[] = [\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P2025',\n\t\t\tmessage: 'Não foi possível deletar o dado, pois o mesmo não existe',\n\t\t\thttpCode: 404,\n\t\t},\n\t\t{\n\t\t\tname: 'Erro ao criar dado repetido',\n\t\t\tcode: 'P2002',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\tcode: 'P1009',\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado não existe',\n\t\t\tcode: 'P1003',\n\t\t\tmessage: 'Não encontrado',\n\t\t\thttpCode: 404,\n\t\t},\n\t];\n\n\tcatch(\n\t\texception: Prisma.PrismaClientKnownRequestError,\n\t\thost: ArgumentsHost,\n\t) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.code === exception.code;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.code}`,\n\t\t\t\tlayer: LayersEnum.database,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: `${exception.name} - ${exception.code}`,\n\t\t\tlayer: LayersEnum.database,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nCondominiumRepo \n\nCondominiumRepo \n\n\n\nInviteRepo \n\nInviteRepo \n\n\n\nUserRepo \n\nUserRepo \n\n\n\nPrismaModule\n\nPrismaModule\n\nCondominiumRepo  -->\n\nPrismaModule->CondominiumRepo \n\n\n\nInviteRepo  -->\n\nPrismaModule->InviteRepo \n\n\n\nUserRepo  -->\n\nPrismaModule->UserRepo \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CondominiumRepo\n                        \n                        \n                            InviteRepo\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\nimport { CondominiumRepo } from '@registry:app/repositories/condominium';\nimport { CondominiumPrismaRepo } from './repositories/condominium.service';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { UserPrismaRepo } from './repositories/user.service';\nimport { InviteRepo } from '@registry:app/repositories/invite';\nimport { InvitePrismaRepo } from './repositories/invite.service';\n\n@Global()\n@Module({\n\tproviders: [\n\t\tPrismaService,\n\t\t{\n\t\t\tprovide: InviteRepo,\n\t\t\tuseClass: InvitePrismaRepo,\n\t\t},\n\t\t{\n\t\t\tprovide: CondominiumRepo,\n\t\t\tuseClass: CondominiumPrismaRepo,\n\t\t},\n\t\t{\n\t\t\tprovide: UserRepo,\n\t\t\tuseClass: UserPrismaRepo,\n\t\t},\n\t],\n\texports: [InviteRepo, CondominiumRepo, UserRepo],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                onApplicationShutdown\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                        \n                    close()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/storages/db/prisma/prisma.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n\tInjectable,\n\tOnApplicationShutdown,\n\tOnModuleDestroy,\n} from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService\n\textends PrismaClient\n\timplements OnModuleDestroy, OnApplicationShutdown\n{\n\tprivate status = false;\n\n\tasync init() {\n\t\tif (!this.status)\n\t\t\tawait this.$connect().then(() => (this.status = true));\n\t}\n\n\tasync close() {\n\t\tif (this.status)\n\t\t\tawait this.$disconnect().then(() => (this.status = false));\n\t}\n\n\tasync onModuleDestroy() {\n\t\tif (this.status)\n\t\t\tawait this.$disconnect().then(() => (this.status = false));\n\t}\n\n\tasync onApplicationShutdown() {\n\t\tif (this.status)\n\t\t\tawait this.$disconnect().then(() => (this.status = false));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RefreshTokenGuard.html":{"url":"guards/RefreshTokenGuard.html","title":"guard - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/refreshToken.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar os tokens do tipo \"RefreshToken\"\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkCookie\n                            \n                            \n                                    Private\n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieAdapter: CookieAdapter, jwtService: JwtService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/refreshToken.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieAdapter\n                                                  \n                                                        \n                                                                        CookieAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/refreshToken.guard.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkCookie\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkCookie(cookie: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/refreshToken.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cookie\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/refreshToken.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CookieAdapter } from '@registry:app/adapters/cookie';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { IRefreshTokenBody, TokenType } from '../tokenTypes';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { Email } from '@registry:app/entities/VO';\n\n/** Usado para validar os tokens do tipo \"RefreshToken\" */\n@Injectable()\nexport class RefreshTokenGuard implements CanActivate {\n\tconstructor(\n\t\tprivate readonly cookieAdapter: CookieAdapter,\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async checkCookie(cookie: string) {\n\t\tconst token = await this.cookieAdapter.validateSignedCookie({\n\t\t\tcookie: decodeURIComponent(cookie),\n\t\t\tkey: String(process.env.COOKIE_KEY),\n\t\t});\n\n\t\tif (!token)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: 'Cookie inválido',\n\t\t\t});\n\n\t\treturn token;\n\t}\n\n\tprivate async checkToken(token: string) {\n\t\tconst data: IRefreshTokenBody = await this.jwtService\n\t\t\t.verifyAsync(token, {\n\t\t\t\tsecret: process.env.REFRESH_TOKEN_KEY,\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({\n\t\t\t\t\tmessage: `Dado armazenado no ${TokenType.refreshToken} é inválido`,\n\t\t\t\t});\n\t\t\t});\n\n\t\treturn data;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\t\tconst cookie = req.headers.cookie;\n\t\tif (!cookie)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: `Nenhum token do tipo ${TokenType.refreshToken} foi encontrado`,\n\t\t\t});\n\n\t\tconst token = cookie.split('refresh-token=')[1];\n\t\tif (!token)\n\t\t\tthrow new GuardErrors({\n\t\t\t\tmessage: `Nenhum token do tipo ${TokenType.refreshToken} foi encontrado`,\n\t\t\t});\n\n\t\tconst parsedToken = await this.checkCookie(token);\n\t\tconst data = await this.checkToken(parsedToken);\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new Email(data.email),\n\t\t\tsafeSearch: true,\n\t\t});\n\n\t\treq.inMemoryData = {\n\t\t\t...req.inMemoryData,\n\t\t\trefreshTokenContent: data,\n\t\t\tuser,\n\t\t};\n\n\t\treturn true;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistryAPIBootstrap.html":{"url":"classes/RegistryAPIBootstrap.html","title":"class - RegistryAPIBootstrap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistryAPIBootstrap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/bootstrap.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                app\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                build\n                            \n                            \n                                    Async\n                                run\n                            \n                            \n                                    Private\n                                setGlobalFilters\n                            \n                            \n                                    Private\n                                setGlobalInteceptors\n                            \n                            \n                                    Private\n                                setGlobalPipes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NestExpressApplication\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/bootstrap.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/bootstrap.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(requestListener: express.Express)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestListener\n                                            \n                                                        express.Express\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(input: IProps)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setGlobalFilters\n                        \n                    \n                \n            \n            \n                \n                        \n                    setGlobalFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setGlobalInteceptors\n                        \n                    \n                \n            \n            \n                \n                        \n                    setGlobalInteceptors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setGlobalPipes\n                        \n                    \n                \n            \n            \n                \n                        \n                    setGlobalPipes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/bootstrap.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LoggerAdapter } from '@registry:app/adapters/logger';\nimport { NestFactory } from '@nestjs/core';\nimport {\n\tExpressAdapter,\n\tNestExpressApplication,\n} from '@nestjs/platform-express';\nimport express, { Express } from 'express';\nimport { AppModule } from './app.module';\nimport { LogInterceptor } from '@registry:infra/http/interceptors/logger.interceptor';\nimport cookieParser from 'cookie-parser';\nimport { ValidationPipe } from '@nestjs/common';\nimport { GenericErrorFilter } from '@registry:infra/http/filters/errors/generic.filter';\nimport { ServiceErrorFilter } from '@registry:infra/http/filters/errors/services.filter';\nimport { EntitieErrorFilter } from '@registry:infra/http/filters/errors/vo.filter';\nimport { GatewayErrorFilter } from '@registry:infra/http/filters/errors/gateways.filter';\nimport { GuardErrorFilter } from '@registry:infra/http/filters/errors/guard.filter';\nimport { AdapterErrorFilter } from '@registry:infra/http/filters/errors/adapter.filter';\nimport { ClassValidatorErrorFilter } from '@registry:infra/http/filters/errors/classValidator.filter';\nimport { ThrottlerErrorFilter } from '@registry:infra/http/filters/errors/throttler.filter';\nimport { NotFoundFilter } from '@registry:infra/http/filters/errors/notFound.filter';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { DatabaseCustomErrorFilter } from '@registry:infra/http/filters/errors/databaseCustomError.filter';\nimport { PrismaErrorFilter } from '@registry:infra/http/filters/errors/prisma.filter';\n\ninterface IProps {\n\trequestListener: Express;\n}\n\nexport class RegistryAPIBootstrap {\n\tprivate app: NestExpressApplication;\n\tprivate logger: LoggerAdapter;\n\n\tprivate async build(requestListener: express.Express) {\n\t\tthis.app = await NestFactory.create(\n\t\t\tAppModule,\n\t\t\tnew ExpressAdapter(requestListener),\n\t\t);\n\n\t\tthis.app.enableShutdownHooks();\n\t\tthis.app.use(cookieParser(process.env.COOKIE_KEY));\n\t\tthis.app.enableCors({\n\t\t\torigin: '*', // mudar no futuro\n\t\t\tmethods: ['DELETE', 'POST', 'PATCH', 'PUT', 'GET'],\n\t\t});\n\t\tthis.logger = this.app.get(LoggerAdapter);\n\n\t\tconst config = new DocumentBuilder()\n\t\t\t.setTitle('MoradaApp: Registry API')\n\t\t\t.setDescription('Morada App Registry API')\n\t\t\t.setVersion('1.0')\n\t\t\t.addTag('moradaApp')\n\t\t\t.build();\n\n\t\tconst document = SwaggerModule.createDocument(this.app, config);\n\t\tSwaggerModule.setup('api', this.app, document);\n\t}\n\n\tprivate setGlobalInteceptors() {\n\t\tthis.app.useGlobalInterceptors(new LogInterceptor(this.logger));\n\t}\n\n\tprivate setGlobalPipes() {\n\t\tthis.app.useGlobalPipes(new ValidationPipe());\n\t}\n\n\tprivate setGlobalFilters() {\n\t\tthis.app.useGlobalFilters(new GenericErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new PrismaErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new DatabaseCustomErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ServiceErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new EntitieErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new GatewayErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new GuardErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new AdapterErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ClassValidatorErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new ThrottlerErrorFilter(this.logger));\n\t\tthis.app.useGlobalFilters(new NotFoundFilter(this.logger));\n\t}\n\n\tasync run(input: IProps) {\n\t\tawait this.build(input.requestListener);\n\t\tthis.setGlobalInteceptors();\n\t\tthis.setGlobalPipes();\n\t\tthis.setGlobalFilters();\n\n\t\tawait this.app.init();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceErrorFilter.html":{"url":"classes/ServiceErrorFilter.html","title":"class - ServiceErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/services.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Services\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                possibleErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/services.filter.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        possibleErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IServiceErrors[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'Credenciais inválidas',\n\t\t\ttag: ServiceErrorsTags.unauthorized,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\ttag: ServiceErrorsTags.alreadyExist,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 409,\n\t\t},\n\t\t{\n\t\t\tname: 'Uso incorreto de recusrsos',\n\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\tmessage:\n\t\t\t\t'Não é possível utilizar este recurso para realizar está ação',\n\t\t\thttpCode: 400,\n\t\t},\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/infra/http/filters/errors/services.filter.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ServiceErrors, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/services.filter.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ServiceErrors\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport {\n\tServiceErrors,\n\tServiceErrorsTags,\n} from '@registry:app/errors/services';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { Response } from 'express';\n\ninterface IServiceErrors {\n\tname: string;\n\ttag: ServiceErrorsTags;\n\tmessage: string;\n\thttpCode: number;\n}\n\n/** Usado para filtrar erros dos Services */\n@Catch(ServiceErrors)\nexport class ServiceErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tprivate possibleErrors: IServiceErrors[] = [\n\t\t{\n\t\t\tname: 'Credenciais inválidas',\n\t\t\ttag: ServiceErrorsTags.unauthorized,\n\t\t\tmessage: 'Acesso não autorizado',\n\t\t\thttpCode: 401,\n\t\t},\n\t\t{\n\t\t\tname: 'Dado já existe',\n\t\t\ttag: ServiceErrorsTags.alreadyExist,\n\t\t\tmessage: 'O conteúdo a ser criado já existe',\n\t\t\thttpCode: 409,\n\t\t},\n\t\t{\n\t\t\tname: 'Uso incorreto de recusrsos',\n\t\t\ttag: ServiceErrorsTags.wrongServiceUsage,\n\t\t\tmessage:\n\t\t\t\t'Não é possível utilizar este recurso para realizar está ação',\n\t\t\thttpCode: 400,\n\t\t},\n\t];\n\n\tcatch(exception: ServiceErrors, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tconst error = this.possibleErrors.find((item) => {\n\t\t\treturn item.tag === exception.tag;\n\t\t});\n\n\t\tif (error) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: `${error.name} - ${exception.name}`,\n\t\t\t\tlayer: LayersEnum.services,\n\t\t\t\tdescription: error.message,\n\t\t\t\tstack: exception.stack,\n\t\t\t});\n\n\t\t\treturn response.status(error.httpCode).json({\n\t\t\t\tstatusCode: error.httpCode,\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t}\n\n\t\tthis.logger.error({\n\t\t\tname: exception.name,\n\t\t\tlayer: LayersEnum.services,\n\t\t\tdescription: exception.message,\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(500).json({\n\t\t\tstatusCode: 500,\n\t\t\tmessage: 'Erro interno do servidor',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceErrors.html":{"url":"classes/ServiceErrors.html","title":"class - ServiceErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/errors/services.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: IProps)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/errors/services.ts:13\n                            \n                        \n\n                \n                    \n                            Erro customizado usado na camada de services, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        IProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDeve conter a mensagem do erro e o identificador em forma de tag usado para mapear os erros na camada dos filters, use os enums vindos de ServiceErrorsTags\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ServiceErrorsTags\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/errors/services.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum ServiceErrorsTags {\n\twrongServiceUsage = 'WrongServiceUsage',\n\tunauthorized = 'Unauthorized',\n\talreadyExist = 'Conflict',\n}\n\ninterface IProps {\n\tmessage: string;\n\ttag: ServiceErrorsTags;\n}\n\nexport class ServiceErrors extends Error {\n\treadonly tag: ServiceErrorsTags;\n\n\t/**\n\t * Erro customizado usado na camada de services, use-o caso seja necessário disparar algum erro rastreável pelos filters\n\t * @param input - Deve conter a mensagem do erro e o identificador em forma de tag usado para mapear os erros na camada dos filters, use os enums vindos de ServiceErrorsTags\n\t **/\n\tconstructor(input: IProps) {\n\t\tsuper();\n\n\t\tthis.name = 'Service Error';\n\t\tthis.tag = input.tag;\n\t\tthis.message = input.message;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SuperAdminController.html":{"url":"controllers/SuperAdminController.html","title":"controller - SuperAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SuperAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/controllers/super-admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                super-admin\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('super-admin')\nexport class SuperAdminController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SuperAdminJwt.html":{"url":"guards/SuperAdminJwt.html","title":"guard - SuperAdminJwt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    SuperAdminJwt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/registryAPI/app/auth/guards/super-admin-jwt.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Usado para validar se um usuário tem permissões de um administrador\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                checkToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/auth/guards/super-admin-jwt.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/super-admin-jwt.guard.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/auth/guards/super-admin-jwt.guard.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n\tBadRequestException,\n\tCanActivate,\n\tExecutionContext,\n\tHttpStatus,\n\tInjectable,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { IAccessTokenBody } from '../tokenTypes';\nimport { UserRepo } from '@registry:app/repositories/user';\nimport { UUID } from '@registry:app/entities/VO';\nimport { GuardErrors } from '@registry:app/errors/guard';\nimport { Request } from 'express';\n\n/** Usado para validar se um usuário tem permissões de um administrador */\n@Injectable()\nexport class SuperAdminJwt implements CanActivate {\n\tconstructor(\n\t\tprivate readonly jwtService: JwtService,\n\t\tprivate readonly userRepo: UserRepo,\n\t) {}\n\n\tprivate async checkToken(token: string) {\n\t\tconst tokenData: IAccessTokenBody = await this.jwtService\n\t\t\t.verifyAsync(token, {\n\t\t\t\tsecret: process.env.ACCESS_TOKEN_KEY,\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new GuardErrors({ message: 'JWT inválido' });\n\t\t\t});\n\n\t\treturn tokenData;\n\t}\n\n\tasync canActivate(context: ExecutionContext): Promise {\n\t\tconst req = context.switchToHttp().getRequest();\n\t\tconst rawToken = req?.headers?.authorization;\n\n\t\tconst condominiumId = req.params?.condominiumId;\n\t\tif (!condominiumId)\n\t\t\tthrow new BadRequestException({\n\t\t\t\tstatusCode: HttpStatus.BAD_REQUEST,\n\t\t\t\terror: 'Bad Request',\n\t\t\t\tmessage: 'Condomínio não especificado',\n\t\t\t});\n\n\t\tconst token = rawToken?.split(' ')[1];\n\t\tif (!token) throw new GuardErrors({ message: 'Token não encontrado' });\n\n\t\tconst tokenData = (await this.checkToken(token)) as IAccessTokenBody;\n\t\tconst user = await this.userRepo.find({\n\t\t\tkey: new UUID(tokenData.sub),\n\t\t\tsafeSearch: true,\n\t\t});\n\t\tconst condominiumRelUser = await this.userRepo.getCondominiumRelation({\n\t\t\tuserId: user.id,\n\t\t\tcondominiumId: new UUID(condominiumId),\n\t\t});\n\n\t\tif (!condominiumRelUser || condominiumRelUser.level.value \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThrottlerErrorFilter.html":{"url":"classes/ThrottlerErrorFilter.html","title":"class - ThrottlerErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThrottlerErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/filters/errors/throttler.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para filtrar erros dos Throttler\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LoggerAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/http/filters/errors/throttler.filter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ThrottlerException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/filters/errors/throttler.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        ThrottlerException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { ArgumentsHost, Catch, ExceptionFilter } from '@nestjs/common';\nimport { ThrottlerException } from '@nestjs/throttler';\nimport { Response } from 'express';\n\n/** Usado para filtrar erros dos Throttler */\n@Catch(ThrottlerException)\nexport class ThrottlerErrorFilter implements ExceptionFilter {\n\tconstructor(private readonly logger: LoggerAdapter) {}\n\n\tcatch(exception: ThrottlerException, host: ArgumentsHost) {\n\t\tconst context = host.switchToHttp();\n\t\tconst response = context.getResponse();\n\n\t\tthis.logger.error({\n\t\t\tname: 'Muitas requisições',\n\t\t\tlayer: LayersEnum.auth,\n\t\t\tdescription: 'Muitas requisições realizadas',\n\t\t\tstack: exception.stack,\n\t\t});\n\n\t\treturn response.status(400).json({\n\t\t\tstatusCode: 400,\n\t\t\tname: 'Muitas requisições',\n\t\t\tmessage: 'Muitas requisições realizadas',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UUID.html":{"url":"classes/UUID.html","title":"class - UUID","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UUID\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/generals/UUID/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                check\n                            \n                            \n                                equalTo\n                            \n                            \n                                    Static\n                                genV4\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equalTo\n                        \n                    \n                \n            \n            \n                \nequalTo(input: UUID)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UUID\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        genV4\n                        \n                    \n                \n            \n            \n                \n                        \n                    genV4()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UUID\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/generals/UUID/index.ts:36\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\nimport { EntitieError } from '@registry:app/errors/entities';\nimport { randomUUID } from 'node:crypto';\n\nexport class UUID implements ValueObject {\n\tprivate readonly _value: string;\n\n\tconstructor(input: string) {\n\t\tconst regexp =\n\t\t\t/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\t\tif (!input.match(regexp))\n\t\t\tthrow new EntitieError({\n\t\t\t\tmessage: 'UUID não está formatado corretamente',\n\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t});\n\n\t\tthis._value = input;\n\t}\n\n\tstatic check(input: string): boolean {\n\t\tconst regexp =\n\t\t\t/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\t\tif (!input.match(regexp)) return false;\n\t\treturn true;\n\t}\n\n\tstatic genV4() {\n\t\tconst uuid = randomUUID();\n\t\treturn new UUID(uuid);\n\t}\n\n\tequalTo(input: UUID): boolean {\n\t\treturn this._value === input.value;\n\t}\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UUIDGroup.html":{"url":"classes/UUIDGroup.html","title":"class - UUIDGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UUIDGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/VO/generals/UUID/group.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ValueObject\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                comparator\n                            \n                            \n                                equalTo\n                            \n                            \n                                    Private\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: Iterable)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:6\n                            \n                        \n\n                \n                    \n                            Use UUIDGroup ao invés de simplesmente usar UUID[], esta classe é util para garantir que nenhum id seja repetido e possui a capacidade de validar listas de inteiras com apenas um metódo\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                    Iterable\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _value\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        comparator\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparator(toBeIterated: Set, toBeSearched: Set)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                toBeIterated\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBeSearched\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equalTo\n                        \n                    \n                \n            \n            \n                \nequalTo(input: UUIDGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UUIDGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: Set, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/VO/generals/UUID/group.ts:56\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { UUID } from './index';\nimport { EntitiesEnum, ValueObject } from '@registry:app/entities/entities';\n\nexport class UUIDGroup implements ValueObject> {\n\tprivate _value: Set;\n\n\t/**\n\t * Use UUIDGroup ao invés de simplesmente usar UUID[], esta classe é util para garantir que nenhum id seja repetido e possui a capacidade de validar listas de inteiras com apenas um metódo\n\t * @param _value - Valor iterável de strings em forma de UUID\n\t **/\n\tconstructor(input: Iterable) {\n\t\tfor (const item of input) {\n\t\t\tif (!UUID.check(item))\n\t\t\t\tthrow new EntitieError({\n\t\t\t\t\tmessage: 'Coleção de UUIDs possui valores incorretos',\n\t\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\t});\n\t\t}\n\n\t\tthis._value = new Set(input);\n\t}\n\n\tprivate find(input: Set, value: string): boolean {\n\t\tlet wasFinded = false;\n\t\tinput.forEach((item: string) => {\n\t\t\tif (item === value) wasFinded = true;\n\t\t});\n\n\t\treturn wasFinded;\n\t}\n\n\tprivate comparator(\n\t\ttoBeIterated: Set,\n\t\ttoBeSearched: Set,\n\t): boolean {\n\t\tconst iterable = toBeIterated.values();\n\t\tlet data: IteratorResult = iterable.next();\n\t\twhile (!data.done && data.value) {\n\t\t\tconst result = this.find(toBeSearched, data.value);\n\t\t\tif (!result) return false;\n\n\t\t\tdata = iterable.next();\n\t\t}\n\t\treturn true;\n\t}\n\n\tequalTo(input: UUIDGroup): boolean {\n\t\tif (this.value === input.value) return true;\n\n\t\tif (this.value.size !== input.value.size) return false;\n\n\t\treturn this.comparator(this.value, input.value);\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/user/index.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Entity\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _id\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dereference\n                            \n                            \n                                    Public\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    CPF\n                                \n                                \n                                    phoneNumber\n                                \n                                \n                                    createdAt\n                                \n                                \n                                    updatedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(input: TInputPropsUser, id?: string)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/app/entities/user/index.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        TInputPropsUser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UUID\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/user/index.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IPropsUser\n\n                    \n                \n                    \n                        \n                                Defined in src/registryAPI/app/entities/user/index.ts:58\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dereference\n                        \n                    \n                \n            \n            \n                \n                        \n                    dereference()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/user/index.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         User\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/user/index.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:109\n                                \n                            \n\n                \n                    \n                        setname(input: Name)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:112\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Name\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:117\n                                \n                            \n\n                \n                    \n                        setemail(input: Email)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:120\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Email\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:125\n                                \n                            \n\n                \n                    \n                        setpassword(input: Password)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:128\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            Password\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        CPF\n                    \n                \n\n                \n                    \n                        getCPF()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:133\n                                \n                            \n\n                \n                    \n                        setCPF(input: CPF)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:136\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            CPF\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        phoneNumber\n                    \n                \n\n                \n                    \n                        getphoneNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:141\n                                \n                            \n\n                \n                    \n                        setphoneNumber(input: PhoneNumber)\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:144\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            input\n                                                    \n                                                            \n                                                                            PhoneNumber\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        createdAt\n                    \n                \n\n                \n                    \n                        getcreatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:149\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        updatedAt\n                    \n                \n\n                \n                    \n                        getupdatedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/user/index.ts:154\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Name, Email, Password, CPF, PhoneNumber, UUID } from '../VO';\nimport { Entity, ValueObject } from '../entities';\n\ninterface IPropsUser {\n\tname: Name;\n\temail: Email;\n\tpassword: Password;\n\tCPF: CPF;\n\tphoneNumber: PhoneNumber;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n}\n\nexport type TInputPropsUser = {\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n};\n\nexport const userDTORules = {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\temail: {\n\t\tmaxLength: 320,\n\t\ttype: 'string',\n\t},\n\tpassword: {\n\t\tmaxLength: 64,\n\t\tminLength: 8,\n\t\ttype: 'string',\n\t},\n\tCPF: {\n\t\tmaxLength: 14,\n\t\tminLength: 11,\n\t\ttype: 'string',\n\t},\n\tphoneNumber: {\n\t\tmaxLength: 30,\n\t\tminLength: 10,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n};\n\nexport class User implements Entity {\n\tprivate props: IPropsUser;\n\tprivate readonly _id: UUID;\n\n\tconstructor(input: TInputPropsUser, id?: string) {\n\t\tthis.props = {\n\t\t\tname: new Name(input.name),\n\t\t\temail: new Email(input.email),\n\t\t\tpassword: new Password(input.password),\n\t\t\tCPF: new CPF(input.CPF),\n\t\t\tphoneNumber: new PhoneNumber(input.phoneNumber),\n\t\t\tcreatedAt: input.createdAt ?? new Date(),\n\t\t\tupdatedAt: input.updatedAt ?? new Date(),\n\t\t};\n\t\tthis._id = id ? new UUID(id) : UUID.genV4();\n\t}\n\n\tpublic dereference(): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\tname: this.name.value,\n\t\t\t\temail: this.email.value,\n\t\t\t\tpassword: this.password.value,\n\t\t\t\tCPF: this.CPF.value,\n\t\t\t\tphoneNumber: this.phoneNumber.value,\n\t\t\t\tcreatedAt: this.createdAt,\n\t\t\t\tupdatedAt: this.updatedAt,\n\t\t\t},\n\t\t\tthis.id.value,\n\t\t);\n\t}\n\n\tpublic equalTo(input: User): boolean {\n\t\treturn (\n\t\t\tinput instanceof User &&\n\t\t\tthis.createdAt === input.createdAt &&\n\t\t\tthis.updatedAt === input.updatedAt &&\n\t\t\tValueObject.compare(this._id, input.id) &&\n\t\t\tValueObject.compare(this.phoneNumber, input.phoneNumber) &&\n\t\t\tValueObject.compare(this.CPF, input.CPF) &&\n\t\t\tValueObject.compare(this.password, input.password) &&\n\t\t\tValueObject.compare(this.name, input.name) &&\n\t\t\tValueObject.compare(this.email, input.email)\n\t\t);\n\t}\n\n\t// Id\n\tget id(): UUID {\n\t\treturn this._id;\n\t}\n\n\t// Name\n\tget name(): Name {\n\t\treturn this.props.name;\n\t}\n\tset name(input: Name) {\n\t\tthis.props.name = input;\n\t}\n\n\t// Email\n\tget email(): Email {\n\t\treturn this.props.email;\n\t}\n\tset email(input: Email) {\n\t\tthis.props.email = input;\n\t}\n\n\t// Password\n\tget password(): Password {\n\t\treturn this.props.password;\n\t}\n\tset password(input: Password) {\n\t\tthis.props.password = input;\n\t}\n\n\t// CPF\n\tget CPF(): CPF {\n\t\treturn this.props.CPF;\n\t}\n\tset CPF(input: CPF) {\n\t\tthis.props.CPF = input;\n\t}\n\n\t// PhoneNumber\n\tget phoneNumber(): PhoneNumber {\n\t\treturn this.props.phoneNumber;\n\t}\n\tset phoneNumber(input: PhoneNumber) {\n\t\tthis.props.phoneNumber = input;\n\t}\n\n\t// CreatedAt\n\tget createdAt(): Date {\n\t\treturn this.props.createdAt;\n\t}\n\n\t// UpdatedAt\n\tget updatedAt(): Date {\n\t\treturn this.props.updatedAt;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/http/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createSimpleUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                launchTFA\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    Private\n                                    Async\n                                processTokens\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createSimpleUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSimpleUser(req: Request, res: Response, body: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(HmacInviteGuard)@Post('accept')\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            CreateUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        deleteAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAccount(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Delete()@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccount(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtGuard)@Get()@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        launchTFA\n                        \n                    \n                \n            \n            \n                \n                        \n                    launchTFA(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(CheckPasswordGuard)@Post('launch-tfa')@HttpCode(204)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(res: Response, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(CheckTFACodeGuard)@Post('login')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        processTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    processTokens(res: Response, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(res: Response, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RefreshTokenGuard)@Get('get-tokens')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/registryAPI/infra/http/controllers/user.controller.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateUserService } from '@registry:app/services/createUser.service';\nimport {\n\tBadRequestException,\n\tBody,\n\tController,\n\tDelete,\n\tGet,\n\tHttpCode,\n\tPost,\n\tReq,\n\tRes,\n\tUseGuards,\n} from '@nestjs/common';\nimport { CreateUserDTO } from '../DTO/createUser.DTO';\nimport { UserMapper } from '@registry:app/mapper/user';\nimport { Request, Response } from 'express';\nimport { CreateTokenService } from '@registry:app/services/createToken.service';\nimport { HmacInviteGuard } from '@registry:app/auth/guards/hmac-invite.guard';\nimport { LayersEnum, LoggerAdapter } from '@registry:app/adapters/logger';\nimport { CheckPasswordGuard } from '@registry:app/auth/guards/checkPassword.guard';\nimport { User } from '@registry:app/entities/user';\nimport { GenTFAService } from '@registry:app/services/genTFA.service';\nimport { CheckTFACodeGuard } from '@registry:app/auth/guards/checkTFACode.guard';\nimport { Throttle } from '@nestjs/throttler';\nimport { RefreshTokenGuard } from '@registry:app/auth/guards/refreshToken.guard';\nimport { Invite } from '@registry:app/entities/invite';\nimport { ApartmentNumber, Block } from '@registry:app/entities/VO';\nimport { ValueObject } from '@registry:app/entities/entities';\nimport { JwtGuard } from '@registry:app/auth/guards/jwt.guard';\nimport { DeleteUserService } from '@registry:app/services/deleteUser.service';\nimport { GetCondominiumRelUserService } from '@registry:app/services/getCondominiumRel.service';\n\n@Throttle({\n\tdefault: {\n\t\tlimit: 3,\n\t\tttl: 60000,\n\t},\n})\n@Controller('user')\nexport class UserController {\n\t/** Acesse /api para ver as rotas disponíveis **/\n\tconstructor(\n\t\tprivate readonly getCondominiumRelUserService: GetCondominiumRelUserService,\n\t\tprivate readonly createUser: CreateUserService,\n\t\tprivate readonly createToken: CreateTokenService,\n\t\tprivate readonly deleteUserService: DeleteUserService,\n\t\tprivate readonly genTFA: GenTFAService,\n\t\tprivate readonly logger: LoggerAdapter,\n\t) {}\n\n\tprivate async processTokens(res: Response, user: User) {\n\t\tconst { accessToken, refreshToken } = await this.createToken.exec({\n\t\t\tuser,\n\t\t});\n\n\t\tconst expires = new Date(\n\t\t\tDate.now() + Number(process.env.REFRESH_TOKEN_EXP),\n\t\t);\n\n\t\tres.cookie('refresh-token', refreshToken, {\n\t\t\texpires,\n\t\t\tmaxAge: parseInt(process.env.REFRESH_TOKEN_EXP as string) * 1000,\n\t\t\tpath: '/',\n\t\t\thttpOnly: true,\n\t\t\tsecure: process.env.NODE_ENV === 'production' && true,\n\t\t\tsameSite: 'strict',\n\t\t\tsigned: true,\n\t\t});\n\n\t\treturn { accessToken };\n\t}\n\n\t@UseGuards(HmacInviteGuard)\n\t@Post('accept')\n\tasync createSimpleUser(\n\t\t@Req() req: Request,\n\t\t@Res({ passthrough: true }) res: Response,\n\t\t@Body() body: CreateUserDTO,\n\t) {\n\t\tconst invite = req.inMemoryData.invite as Invite;\n\t\t// PASSAR PARA OUTRO DOMÍNIO\n\t\tif (\n\t\t\t(!body.apartmentNumber && invite.type.value === 0) ||\n\t\t\t(!body.block && invite.type.value === 0)\n\t\t) {\n\t\t\tthis.logger.error({\n\t\t\t\tname: 'Omissão de campos',\n\t\t\t\tlayer: LayersEnum.dto,\n\t\t\t\tdescription:\n\t\t\t\t\t'apartmentNumber e block não devem ser omitidos em usuários comuns',\n\t\t\t});\n\n\t\t\tthrow new BadRequestException({\n\t\t\t\tmessage: [\n\t\t\t\t\t'apartmentNumber e block não devem ser omitidos em usuários comuns',\n\t\t\t\t],\n\t\t\t\terror: 'Bad Request',\n\t\t\t\tstatusCode: 400,\n\t\t\t});\n\t\t}\n\n\t\tconst { apartmentNumber, block, ...coreInfo } = body;\n\t\tconst user = UserMapper.toClass({ ...coreInfo });\n\t\tawait this.createUser.exec({\n\t\t\tuser,\n\t\t\tinvite,\n\t\t\tapartmentNumber: ValueObject.build(ApartmentNumber, apartmentNumber)\n\t\t\t\t.allowNullish()\n\t\t\t\t.exec(),\n\t\t\tblock: ValueObject.build(Block, block).allowNullish().exec(),\n\t\t});\n\t\treturn await this.processTokens(res, user);\n\t}\n\n\t@UseGuards(CheckPasswordGuard)\n\t@Post('launch-tfa')\n\t@HttpCode(204)\n\tasync launchTFA(@Req() req: Request) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\tawait this.genTFA.exec({\n\t\t\temail: user.email,\n\t\t\tuserId: user.id,\n\t\t});\n\t}\n\n\t@UseGuards(JwtGuard)\n\t@Delete()\n\t@HttpCode(204)\n\tasync deleteAccount(@Req() req: Request) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\tawait this.deleteUserService.exec({ target: user.email });\n\t}\n\n\t@UseGuards(JwtGuard)\n\t@Get()\n\t@HttpCode(200)\n\tasync getAccount(@Req() req: Request) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\tconst { condominiumRels } =\n\t\t\tawait this.getCondominiumRelUserService.exec({ userId: user.id });\n\n\t\t/* eslint-disable @typescript-eslint/no-unused-vars */\n\t\tconst { password: _, ...userAsObject } = UserMapper.toObject(user);\n\t\treturn {\n\t\t\tuser: {\n\t\t\t\t...userAsObject,\n\t\t\t\tcondominiumRels,\n\t\t\t},\n\t\t};\n\t}\n\n\t@UseGuards(CheckTFACodeGuard)\n\t@Post('login')\n\t@HttpCode(200)\n\tasync login(\n\t\t@Res({ passthrough: true }) res: Response,\n\t\t@Req() req: Request,\n\t) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\treturn await this.processTokens(res, user);\n\t}\n\n\t@UseGuards(RefreshTokenGuard)\n\t@Get('get-tokens')\n\t@HttpCode(200)\n\tasync refreshToken(\n\t\t@Res({ passthrough: true }) res: Response,\n\t\t@Req() req: Request,\n\t) {\n\t\tconst user = req.inMemoryData.user as User;\n\t\tthis.createToken.exec({ user });\n\t\treturn await this.processTokens(res, user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFirestoreMapper.html":{"url":"classes/UserFirestoreMapper.html","title":"class - UserFirestoreMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFirestoreMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/mapper/users.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromFirebaseToClass\n                            \n                            \n                                    Static\n                                fromFirebaseToObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirebaseToClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirebaseToClass(input: IIncomingFirestoreUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/users.ts:21\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromFirebaseToObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromFirebaseToObject(input: IIncomingFirestoreUserData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/mapper/users.ts:36\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do firestore e os transforma em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IIncomingFirestoreUserData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do firestore\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TUserClassToObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@registry:app/entities/user';\nimport { TUserClassToObject } from '@registry:app/mapper/user';\nimport { Timestamp } from 'firebase-admin/firestore';\n\nexport interface IIncomingFirestoreUserData {\n\tid: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt: Timestamp;\n\tupdatedAt: Timestamp;\n}\n\nexport class UserFirestoreMapper {\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em classe\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirebaseToClass(input: IIncomingFirestoreUserData): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do firestore e os transforma em objeto\n\t * @param input - Deve conter os dados vindos do firestore\n\t **/\n\tstatic fromFirebaseToObject(\n\t\tinput: IIncomingFirestoreUserData,\n\t): TUserClassToObject {\n\t\treturn {\n\t\t\t...input,\n\t\t\tcreatedAt: input.createdAt.toDate(),\n\t\t\tupdatedAt: input.updatedAt.toDate(),\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMapper.html":{"url":"classes/UserMapper.html","title":"class - UserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/mapper/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: IUserInObject)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/user.ts:30\n                        \n                    \n\n\n            \n                \n                        Método usado para converter um objeto de usuário em classe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IUserInObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de objeto\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    toObject(input: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/mapper/user.ts:45\n                        \n                    \n\n\n            \n                \n                        Método usado para converter uma classe de usuário em objeto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados em forma de classe\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TUserClassToObject\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../entities/user';\n\nexport interface IUserInObject {\n\tid?: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt?: Date;\n\tupdatedAt?: Date;\n}\n\nexport type TUserClassToObject = {\n\tid: string;\n\tname: string;\n\temail: string;\n\tpassword: string;\n\tCPF: string;\n\tphoneNumber: string;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n};\n\nexport class UserMapper {\n\t/**\n\t * Método usado para converter um objeto de usuário em classe\n\t * @param input - Deve conter os dados em forma de objeto\n\t **/\n\tstatic toClass(input: IUserInObject): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\t...input,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n\n\t/**\n\t * Método usado para converter uma classe de usuário em objeto\n\t * @param input - Deve conter os dados em forma de classe\n\t **/\n\tstatic toObject(input: User): TUserClassToObject {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tname: input.name.value,\n\t\t\temail: input.email.value,\n\t\t\tpassword: input.password.value,\n\t\t\tCPF: input.CPF.value,\n\t\t\tphoneNumber: input.phoneNumber.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPrismaMapper.html":{"url":"classes/UserPrismaMapper.html","title":"class - UserPrismaMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPrismaMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/mapper/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                toClass\n                            \n                            \n                                    Static\n                                toPrisma\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    toClass(input: UserPrisma)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/user.ts:26\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados vindos do prisma em classes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserPrisma\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados vindos do prisma\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        toPrisma\n                        \n                    \n                \n            \n            \n                \n                        \n                    toPrisma(input: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/mapper/user.ts:9\n                        \n                    \n\n\n            \n                \n                        Mapeia os dados inseridos e os adapta para a utilização no prisma\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter os dados de entrada do usuário\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserPrisma\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@registry:app/entities/user';\nimport { User as UserPrisma } from '@prisma/client';\n\nexport class UserPrismaMapper {\n\t/**\n\t * Mapeia os dados inseridos e os adapta para a utilização no prisma\n\t * @param input - Deve conter os dados de entrada do usuário\n\t **/\n\tstatic toPrisma(input: User): UserPrisma {\n\t\treturn {\n\t\t\tid: input.id.value,\n\t\t\tname: input.name.value,\n\t\t\temail: input.email.value,\n\t\t\tpassword: input.password.value,\n\t\t\tCPF: input.CPF.value,\n\t\t\tphoneNumber: input.phoneNumber.value,\n\t\t\tcreatedAt: input.createdAt,\n\t\t\tupdatedAt: input.updatedAt,\n\t\t};\n\t}\n\n\t/**\n\t * Mapeia os dados vindos do prisma em classes\n\t * @param input - Deve conter os dados vindos do prisma\n\t **/\n\tstatic toClass(input: UserPrisma): User {\n\t\treturn new User(\n\t\t\t{\n\t\t\t\tname: input.name,\n\t\t\t\temail: input.email,\n\t\t\t\tpassword: input.password,\n\t\t\t\tCPF: input.CPF,\n\t\t\t\tphoneNumber: input.phoneNumber,\n\t\t\t\tcreatedAt: input.createdAt,\n\t\t\t\tupdatedAt: input.updatedAt,\n\t\t\t},\n\t\t\tinput.id,\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserPrismaRepo.html":{"url":"injectables/UserPrismaRepo.html","title":"injectable - UserPrismaRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserPrismaRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                getAllCondominiumRelation\n                            \n                            \n                                    Async\n                                getCondominiumRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: UserRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search | UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCondominiumRelation(input: UserRepoInterfaces.getAllCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getAllCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCondominiumRelation(input: UserRepoInterfaces.getCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/prisma/repositories/user.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaService } from '../prisma.service';\nimport { Injectable } from '@nestjs/common';\nimport { UserRepoInterfaces, UserRepo } from '@registry:app/repositories/user';\nimport { UserPrismaMapper } from '../mapper/user';\nimport { User } from '@registry:app/entities/user';\nimport { Email, UUID } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { CondominiumRelUserPrismaMapper } from '../mapper/condominiumRelUser';\nimport {\n\tCondominiumRelUserMapper,\n\tTCondominiumRelUserToObject,\n} from '@registry:app/mapper/condominiumRelUser';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\n\n@Injectable()\nexport class UserPrismaRepo implements UserRepo {\n\tconstructor(private readonly prisma: PrismaService) {}\n\n\tasync create(): Promise {}\n\n\tasync find(input: UserRepoInterfaces.safeSearch): Promise;\n\tasync find(input: UserRepoInterfaces.search): Promise;\n\n\tasync find(\n\t\tinput: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch,\n\t): Promise {\n\t\tconst query =\n\t\t\tinput.key instanceof UUID\n\t\t\t\t? { id: input.key.value }\n\t\t\t\t: input.key instanceof Email\n\t\t\t\t\t? { email: input.key.value }\n\t\t\t\t\t: { CPF: input.key.value };\n\n\t\tconst unparsedUser = await this.prisma.user.findFirst({\n\t\t\twhere: {\n\t\t\t\tOR: [query],\n\t\t\t},\n\t\t});\n\n\t\tif (!unparsedUser && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\n\t\tif (!unparsedUser) return undefined;\n\n\t\tconst user = UserPrismaMapper.toClass(unparsedUser);\n\t\treturn user;\n\t}\n\n\tasync getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise {\n\t\tconst unparsedCondominiumRelUser =\n\t\t\tawait this.prisma.condominiumRelUser.findFirst({\n\t\t\t\twhere: {\n\t\t\t\t\tAND: [\n\t\t\t\t\t\t{ userId: input.userId.value },\n\t\t\t\t\t\t{ condominiumId: input.condominiumId.value },\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t});\n\n\t\tif (!unparsedCondominiumRelUser) return undefined;\n\n\t\tconst condominiumRelUser = CondominiumRelUserPrismaMapper.toClass(\n\t\t\tunparsedCondominiumRelUser,\n\t\t);\n\t\treturn condominiumRelUser;\n\t}\n\n\tasync getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise {\n\t\tconst unparsedCondominiumRelGroup =\n\t\t\tawait this.prisma.condominiumRelUser.findMany({\n\t\t\t\twhere: {\n\t\t\t\t\tuserId: input.userId.value,\n\t\t\t\t},\n\t\t\t});\n\n\t\tconst condominiumRelGroup = unparsedCondominiumRelGroup.map((item) => {\n\t\t\treturn CondominiumRelUserMapper.toObject(\n\t\t\t\tCondominiumRelUserPrismaMapper.toClass(item),\n\t\t\t);\n\t\t});\n\n\t\treturn condominiumRelGroup;\n\t}\n\n\tasync delete(input: UserRepoInterfaces.remove): Promise {\n\t\tconst query = { id: input.key.value };\n\n\t\tif (input.key instanceof Email) {\n\t\t\tconst user = await this.find({ key: input.key, safeSearch: true });\n\t\t\tquery.id = user.id.value;\n\t\t}\n\n\t\tawait this.prisma.user.delete({ where: query });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepo.html":{"url":"classes/UserRepo.html","title":"class - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                delete\n                            \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                find\n                            \n                            \n                                    Abstract\n                                getAllCondominiumRelation\n                            \n                            \n                                    Abstract\n                                getCondominiumRelation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: UserRepoInterfaces.create)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.create\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: UserRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:40\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um usuário\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:47\n                        \n                    \n\n\n            \n                \n                        Método usado para pesquisar por um usuário\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getAllCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCondominiumRelation(input: UserRepoInterfaces.getAllCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getAllCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCondominiumRelation(input: UserRepoInterfaces.getCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/repositories/user.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersFirestore.html":{"url":"injectables/UsersFirestore.html","title":"injectable - UsersFirestore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersFirestore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/storages/db/firestore/repositories/users.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                getAllCondominiumRelation\n                            \n                            \n                                    Async\n                                getCondominiumRelation\n                            \n                            \n                                    Private\n                                    Async\n                                searchByField\n                            \n                            \n                                    Private\n                                    Async\n                                searchById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(collectionsRefs: CollectionsRefService, firestore: FirestoreService)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionsRefs\n                                                  \n                                                        \n                                                                        CollectionsRefService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                        FirestoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create()\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(input: UserRepoInterfaces.remove)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.remove\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(input: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        UserRepoInterfaces.search | UserRepoInterfaces.safeSearch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllCondominiumRelation(input: UserRepoInterfaces.getAllCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getAllCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCondominiumRelation\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCondominiumRelation(input: UserRepoInterfaces.getCondominiumRelation)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UserRepoInterfaces.getCondominiumRelation\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        searchByField\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchByField(collection: CollectionReference, field: string, input: string | number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collection\n                                            \n                                                        CollectionReference\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                input\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        searchById\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchById(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/storages/db/firestore/repositories/users.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserRepo, UserRepoInterfaces } from '@registry:app/repositories/user';\nimport { FirestoreService } from '../firestore.service';\nimport { User } from '@registry:app/entities/user';\nimport { DatabaseCustomError, DatabaseCustomErrorsTags } from '../../error';\nimport { UserFirestoreMapper } from '../mapper/users';\nimport { Injectable } from '@nestjs/common';\nimport { FirestoreGetUserDTO } from '../DTO/getUser';\nimport { UUID, CPF, Email } from '@registry:app/entities/VO';\nimport { CollectionReference } from 'firebase-admin/firestore';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { FirestoreGetCondominiumRelUserDTO } from '../DTO/getCondominiumRel';\nimport { CondominiumRelUserFirestoreMapper } from '../mapper/condominiumRelUser';\nimport { CollectionsRefService } from '../collectionsRefs.service';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\n@Injectable()\nexport class UsersFirestore implements UserRepo {\n\tconstructor(\n\t\tprivate readonly collectionsRefs: CollectionsRefService,\n\t\tprivate readonly firestore: FirestoreService,\n\t) {}\n\n\tasync create(): Promise {\n\t\tthrow new DatabaseCustomError({\n\t\t\tmessage: 'Esta funcionalidade ainda não foi desenvolvida',\n\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t});\n\t}\n\n\tprivate async searchByField(\n\t\tcollection: CollectionReference,\n\t\tfield: string,\n\t\tinput: string | number,\n\t) {\n\t\tlet data: Record | undefined;\n\t\tconst res = await collection.where(field, '==', input).limit(1).get();\n\n\t\tif (!res.empty)\n\t\t\tres.forEach((item) => {\n\t\t\t\tif (item.exists) data = { id: item.id, ...item.data() };\n\t\t\t});\n\n\t\treturn data;\n\t}\n\n\tprivate async searchById(input: string) {\n\t\tlet data: Record | undefined;\n\t\tconst res = await this.collectionsRefs.user.core.doc(input).get();\n\t\tif (res.exists) data = { id: res.id, ...res.data() };\n\n\t\treturn data;\n\t}\n\n\tasync find(input: UserRepoInterfaces.safeSearch): Promise;\n\tasync find(input: UserRepoInterfaces.search): Promise;\n\n\tasync find(\n\t\tinput: UserRepoInterfaces.search | UserRepoInterfaces.safeSearch,\n\t): Promise {\n\t\tconst queries = [\n\t\t\t{\n\t\t\t\texec: async () => await this.searchById(input.key.value),\n\t\t\t\ttrigger: input.key instanceof UUID,\n\t\t\t},\n\t\t\t{\n\t\t\t\texec: async () =>\n\t\t\t\t\tawait this.searchByField(\n\t\t\t\t\t\tthis.collectionsRefs.user.core,\n\t\t\t\t\t\t'email',\n\t\t\t\t\t\tinput.key.value,\n\t\t\t\t\t),\n\t\t\t\ttrigger: input.key instanceof Email,\n\t\t\t},\n\t\t\t{\n\t\t\t\texec: async () =>\n\t\t\t\t\tawait this.searchByField(\n\t\t\t\t\t\tthis.collectionsRefs.user.core,\n\t\t\t\t\t\t'cpf',\n\t\t\t\t\t\tinput.key.value,\n\t\t\t\t\t),\n\t\t\t\ttrigger: input.key instanceof CPF,\n\t\t\t},\n\t\t];\n\n\t\tlet unparsedUser: Record | undefined;\n\t\tfor await (const query of queries) {\n\t\t\tif (!query.trigger) continue;\n\t\t\tunparsedUser = await query.exec();\n\t\t\tbreak;\n\t\t}\n\n\t\tif (!unparsedUser && input?.safeSearch)\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Este usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.safeSearchEnabled,\n\t\t\t});\n\n\t\tif (!unparsedUser) return undefined;\n\n\t\tconst parsedUser = FirestoreGetUserDTO.exec(unparsedUser);\n\t\treturn UserFirestoreMapper.fromFirebaseToClass(parsedUser);\n\t}\n\n\tasync getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise {\n\t\tconst snapshot = await this.collectionsRefs.user\n\t\t\t.condominiumRelUser(input.userId.value)\n\t\t\t.doc(input.condominiumId.value)\n\t\t\t.get();\n\t\tif (!snapshot.exists) return undefined;\n\n\t\tconst unparsedData = {\n\t\t\tid: snapshot.id,\n\t\t\tuserId: input.userId.value,\n\t\t\tcondominiumId: snapshot.id,\n\t\t\t...snapshot.data(),\n\t\t};\n\t\tconst semiparsedData =\n\t\t\tFirestoreGetCondominiumRelUserDTO.exec(unparsedData);\n\t\tconst parsedData =\n\t\t\tCondominiumRelUserFirestoreMapper.fromFirestoreToClass(\n\t\t\t\tsemiparsedData,\n\t\t\t);\n\n\t\treturn parsedData;\n\t}\n\n\tasync getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise {\n\t\tconst snapshot = await this.collectionsRefs.user\n\t\t\t.condominiumRelUser(input.userId.value)\n\t\t\t.get();\n\t\tif (snapshot.empty) return [];\n\n\t\tconst condominiumRelUserArr: TCondominiumRelUserToObject[] = [];\n\t\tsnapshot.forEach((item) => {\n\t\t\tif (!item.exists) return;\n\t\t\tconst unparsedData = {\n\t\t\t\tid: item.id,\n\t\t\t\tuserId: input.userId.value,\n\t\t\t\tcondominiumId: item.id,\n\t\t\t\t...item.data(),\n\t\t\t};\n\t\t\tconst semiparsedData =\n\t\t\t\tFirestoreGetCondominiumRelUserDTO.exec(unparsedData);\n\t\t\tconst parsedData =\n\t\t\t\tCondominiumRelUserFirestoreMapper.fromFirestoreToObject(\n\t\t\t\t\tsemiparsedData,\n\t\t\t\t);\n\n\t\t\tcondominiumRelUserArr.push(parsedData);\n\t\t});\n\n\t\treturn condominiumRelUserArr;\n\t}\n\n\tasync delete(input: UserRepoInterfaces.remove): Promise {\n\t\tconst database = this.firestore.instance;\n\n\t\tconst queries = [\n\t\t\t{\n\t\t\t\texec: async () => await this.searchById(input.key.value),\n\t\t\t\ttrigger: input.key instanceof UUID,\n\t\t\t},\n\t\t\t{\n\t\t\t\texec: async () =>\n\t\t\t\t\tawait this.searchByField(\n\t\t\t\t\t\tthis.collectionsRefs.user.core,\n\t\t\t\t\t\t'email',\n\t\t\t\t\t\tinput.key.value,\n\t\t\t\t\t),\n\t\t\t\ttrigger: input.key instanceof Email,\n\t\t\t},\n\t\t];\n\n\t\tfor await (const query of queries) {\n\t\t\tif (!query.trigger) continue;\n\n\t\t\tconst unparsedUser: Record | undefined =\n\t\t\t\tawait query.exec();\n\n\t\t\tif (unparsedUser) {\n\t\t\t\tconst semiparsedUser = FirestoreGetUserDTO.exec(unparsedUser);\n\t\t\t\tconst parsedUser =\n\t\t\t\t\tUserFirestoreMapper.fromFirebaseToObject(semiparsedUser);\n\n\t\t\t\tawait database.runTransaction(async (transaction) => {\n\t\t\t\t\tconst refs = {\n\t\t\t\t\t\tcondominiumRelUserCollection:\n\t\t\t\t\t\t\tthis.collectionsRefs.user.condominiumRelUser(\n\t\t\t\t\t\t\t\tparsedUser.id,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tcore: this.collectionsRefs.user.core.doc(parsedUser.id),\n\t\t\t\t\t\temailIndex: this.collectionsRefs.user.emailIndex.doc(\n\t\t\t\t\t\t\tparsedUser.email,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcpfIndex: this.collectionsRefs.user.cpfIndex.doc(\n\t\t\t\t\t\t\tparsedUser.CPF,\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\n\t\t\t\t\tawait refs.condominiumRelUserCollection\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\tres.forEach((item) => {\n\t\t\t\t\t\t\t\tif (item.exists) {\n\t\t\t\t\t\t\t\t\tconst condominiumRelUser =\n\t\t\t\t\t\t\t\t\t\tthis.collectionsRefs.user\n\t\t\t\t\t\t\t\t\t\t\t.condominiumRelUser(parsedUser.id)\n\t\t\t\t\t\t\t\t\t\t\t.doc(item.id);\n\t\t\t\t\t\t\t\t\ttransaction.delete(condominiumRelUser, {\n\t\t\t\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\ttransaction.delete(refs.core, { exists: true });\n\t\t\t\t\ttransaction.delete(refs.emailIndex, { exists: true });\n\t\t\t\t\ttransaction.delete(refs.cpfIndex, { exists: true });\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthrow new DatabaseCustomError({\n\t\t\t\tmessage: 'Usuário não existe',\n\t\t\t\ttag: DatabaseCustomErrorsTags.contentDoesntExists,\n\t\t\t});\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValueObject.html":{"url":"classes/ValueObject.html","title":"class - ValueObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValueObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/entities/entities.ts\n        \n\n\n            \n                Description\n            \n            \n                Usado para manter um padrão nos Value Objects\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                build\n                            \n                            \n                                    Static\n                                compare\n                            \n                            \n                                    Abstract\n                                equalTo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        build\n                        \n                    \n                \n            \n            \n                \n                        \n                    build(constructor: IClass, internalValue?: ConstructorParameters> | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:37\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                constructor\n                                            \n                                                            IClass\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                internalValue\n                                            \n                                                            ConstructorParameters> | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         { exec: () => InstanceType>; or: (alternativeValue: T) => { exec: () => any; }; allowNullish: () => { exec: () => any; }; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(c1?: ValueObject | null, c2?: ValueObject | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                c1\n                                            \n                                                            ValueObject | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                c2\n                                            \n                                                            ValueObject | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        equalTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    equalTo(input: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/app/entities/entities.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/registryAPI/app/entities/entities.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntitieError } from '@registry:app/errors/entities';\nimport { IClass } from '@registry:utils/class';\n\nexport enum EntitiesEnum {\n\tcondominium = 'Condominium',\n\tuser = 'User',\n\totp = 'OTP',\n\tinvite = 'Invite',\n\tvo = 'Value Object',\n}\n\n/** Usado para manter um padrão nas classes da camada de entidades */\nexport abstract class Entity {\n\tabstract equalTo(input: Entity): boolean;\n\tabstract dereference(): Entity;\n}\n\nexport enum VOEnum {\n\tNullOrUndefined,\n}\n\n/** Usado para manter um padrão nos Value Objects */\nexport abstract class ValueObject {\n\tabstract equalTo(input: T): boolean;\n\tabstract get value(): O;\n\n\tstatic compare(\n\t\tc1?: ValueObject | null,\n\t\tc2?: ValueObject | null,\n\t): boolean {\n\t\tif (c1 !== null && c1 !== undefined && c2 !== null && c2 !== undefined)\n\t\t\treturn c1.equalTo(c2);\n\n\t\treturn c1 === c2;\n\t}\n\n\tstatic build(\n\t\tconstructor: IClass,\n\t\tinternalValue?: ConstructorParameters> | null,\n\t) {\n\t\tconst orStatement = (\n\t\t\talternativeValue: A,\n\t\t): { exec: () => InstanceType> | A } => {\n\t\t\tif (!internalValue) return { exec: () => alternativeValue };\n\t\t\treturn { exec: () => new constructor(internalValue) };\n\t\t};\n\n\t\tconst allowNullish = (): {\n\t\t\texec: () => InstanceType> | null | undefined;\n\t\t} => {\n\t\t\tif (internalValue === null || internalValue === undefined)\n\t\t\t\treturn { exec: () => internalValue };\n\t\t\treturn { exec: () => new constructor(internalValue) };\n\t\t};\n\n\t\treturn {\n\t\t\texec: (): InstanceType> => {\n\t\t\t\tif (!internalValue)\n\t\t\t\t\tthrow new EntitieError({\n\t\t\t\t\t\tentity: EntitiesEnum.vo,\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t'Valor interno de entidade não pode ser null ou undefined, use \\'or\\' para garantir que seja possível de se usar valores nulos ou valores alternativos ou use \\'allowNullish\\' para lidar diretamente com nullish values',\n\t\t\t\t\t});\n\t\t\t\treturn new constructor(internalValue);\n\t\t\t},\n\t\t\tor: (alternativeValue: T) =>\n\t\t\t\torStatement(alternativeValue),\n\t\t\tallowNullish,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ViacepGateway.html":{"url":"injectables/ViacepGateway.html","title":"injectable - ViacepGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ViacepGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/infra/gateways/APIs/viacep.gateway.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapter: HttpAdapter)\n                    \n                \n                        \n                            \n                                Defined in src/registryAPI/infra/gateways/APIs/viacep.gateway.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapter\n                                                  \n                                                        \n                                                                        HttpAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/registryAPI/infra/gateways/APIs/viacep.gateway.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpAdapter } from '@registry:app/adapters/http';\nimport { CepGateway, ICheckCep } from '@registry:app/gateways/CEP.gateway';\nimport { Injectable } from '@nestjs/common';\nimport { GatewayErrors, GatewaysErrorsTags } from '../errors';\n\ninterface ISuccess {\n\tcep: string;\n\tlogradouro: string;\n\tcomplemento: string;\n\tbairro: string;\n\tlocalidade: string;\n\tuf: string;\n\tibge: string;\n\tgia: string;\n\tddd: string;\n\tsiafi: string;\n}\n\n@Injectable()\nexport class ViacepGateway implements CepGateway {\n\tconstructor(private readonly httpAdapter: HttpAdapter) {}\n\n\tasync check(input: string): Promise {\n\t\tconst data = await this.httpAdapter.call({\n\t\t\turl: `https://viacep.com.br/ws/${input}/json/`,\n\t\t\tmethod: 'GET',\n\t\t});\n\n\t\tif (data.body?.erro)\n\t\t\tthrow new GatewayErrors({\n\t\t\t\ttag: GatewaysErrorsTags.InvalidResult,\n\t\t\t\tmessage: `Could not finish the request: https://viacep.com.br/ws/${input}/json/. Received 'erro' field as true!`,\n\t\t\t});\n\n\t\tconst body = data.body as ISuccess;\n\t\treturn {\n\t\t\tuf: body.uf,\n\t\t\tcep: body.cep,\n\t\t\tneighborhood: body.bairro,\n\t\t\tcomplement: body.complemento,\n\t\t\tcity: body.localidade,\n\t\t\tstreet_address: body.logradouro,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/create.html":{"url":"interfaces/create.html","title":"interface - create","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  create\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/condominium.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominium\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominium:         Condominium\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Condominium\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\n\nexport namespace CondominiumInterfaces {\n\texport interface create {\n\t\tcondominium: Condominium;\n\t}\n\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n\texport interface search {\n\t\tsafeSearch: undefined;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n}\n\nexport abstract class CondominiumRepo {\n\t/** @virtual */\n\tabstract create: (input: CondominiumInterfaces.create) => Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.safeSearch,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/create-1.html":{"url":"interfaces/create-1.html","title":"interface - create-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  create\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            invite\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invite:         Invite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/create-2.html":{"url":"interfaces/create-2.html","title":"interface - create-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  create\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumRelUser\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumRelUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumRelUser:         CondominiumRelUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CondominiumRelUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @firebase/rules-unit-testing : ^3.0.1\n        \n            @nestjs/common : ^10.2.10\n        \n            @nestjs/core : ^10.2.10\n        \n            @nestjs/event-emitter : ^2.0.3\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.2.10\n        \n            @nestjs/swagger : ^7.1.17\n        \n            @nestjs/throttler : ^5.1.0\n        \n            @prisma/client : ^5.7.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            concurrently : ^8.2.2\n        \n            cookie-parser : ^1.4.6\n        \n            dotenv : ^16.3.1\n        \n            dotenv-cli : ^7.3.0\n        \n            echoguard : 0.0.7-alpha\n        \n            express : ^4.18.2\n        \n            firebase-admin : ^11.11.1\n        \n            firebase-functions : ^4.5.0\n        \n            ioredis : ^5.3.2\n        \n            nodemailer : ^6.9.7\n        \n            passport-jwt : ^4.0.1\n        \n            prisma : ^5.7.0\n        \n            reflect-metadata : ^0.1.14\n        \n            rxjs : ^7.8.1\n        \n            zod : ^3.22.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DatabaseCustomErrorsTags   (src/.../index.ts)\n                        \n                        \n                            EntitiesEnum   (src/.../entities.ts)\n                        \n                        \n                            FirebaseEnums   (src/.../enums.ts)\n                        \n                        \n                            GatewaysErrorsTags   (src/.../index.ts)\n                        \n                        \n                            LayersEnum   (src/.../logger.ts)\n                        \n                        \n                            ServiceErrorsTags   (src/.../services.ts)\n                        \n                        \n                            TokenType   (src/.../tokenTypes.ts)\n                        \n                        \n                            VOEnum   (src/.../entities.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/registryAPI/infra/storages/db/error/index.ts\n    \n        \n            \n                \n                    \n                        \n                        DatabaseCustomErrorsTags\n                    \n                \n                        \n                            \n                                 tooManyEntities\n                            \n                        \n                        \n                            \n                                Value : Too many entities\n                            \n                        \n                        \n                            \n                                 maximumCondominiumRelUser\n                            \n                        \n                        \n                            \n                                Value : Maximum condominiumRelUser\n                            \n                        \n                        \n                            \n                                 wrongInputLevel\n                            \n                        \n                        \n                            \n                                Value : Wrong input level detected\n                            \n                        \n                        \n                            \n                                 contentAlreadyExists\n                            \n                        \n                        \n                            \n                                Value : This content already exists\n                            \n                        \n                        \n                            \n                                 contentDoesntExists\n                            \n                        \n                        \n                            \n                                Value : This content doesn't exists\n                            \n                        \n                        \n                            \n                                 safeSearchEnabled\n                            \n                        \n                        \n                            \n                                Value : Safe search detected\n                            \n                        \n                        \n                            \n                                 dtoFailure\n                            \n                        \n                        \n                            \n                                Value : The DTO found an error\n                            \n                        \n                        \n                            \n                                 refLost\n                            \n                        \n                        \n                            \n                                Value : The reference could not be found\n                            \n                        \n                        \n                            \n                                 malformedRef\n                            \n                        \n                        \n                            \n                                Value : Malformed reference\n                            \n                        \n            \n        \n\n    src/registryAPI/app/entities/entities.ts\n    \n        \n            \n                \n                    \n                        \n                        EntitiesEnum\n                    \n                \n                        \n                            \n                                 condominium\n                            \n                        \n                        \n                            \n                                Value : Condominium\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n                        \n                            \n                                 otp\n                            \n                        \n                        \n                            \n                                Value : OTP\n                            \n                        \n                        \n                            \n                                 invite\n                            \n                        \n                        \n                            \n                                Value : Invite\n                            \n                        \n                        \n                            \n                                 vo\n                            \n                        \n                        \n                            \n                                Value : Value Object\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        VOEnum\n                    \n                \n                        \n                            \n                                 NullOrUndefined\n                            \n                        \n            \n        \n\n    src/registryAPI/infra/storages/db/firestore/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        FirebaseEnums\n                    \n                \n                        \n                            \n                                 otp\n                            \n                        \n                        \n                            \n                                Value : [otp]\n                            \n                        \n            \n        \n\n    src/registryAPI/infra/gateways/errors/index.ts\n    \n        \n            \n                \n                    \n                        \n                        GatewaysErrorsTags\n                    \n                \n                        \n                            \n                                 InvalidResult\n                            \n                        \n                        \n                            \n                                Value : Invalid Result\n                            \n                        \n                        \n                            \n                                 PoisonedContent\n                            \n                        \n                        \n                            \n                                Value : Poisoned Content\n                            \n                        \n            \n        \n\n    src/registryAPI/app/adapters/logger.ts\n    \n        \n            \n                \n                    \n                        \n                        LayersEnum\n                    \n                \n                        \n                            \n                                 start\n                            \n                        \n                        \n                            \n                                Value : Start-layer\n                            \n                        \n                        \n                            \n                                 interceptors\n                            \n                        \n                        \n                            \n                                Value : Interceptor-Layer\n                            \n                        \n                        \n                            \n                                 services\n                            \n                        \n                        \n                            \n                                Value : Service-Layer\n                            \n                        \n                        \n                            \n                                 entitie\n                            \n                        \n                        \n                            \n                                Value : Entitie-Layer\n                            \n                        \n                        \n                            \n                                 controller\n                            \n                        \n                        \n                            \n                                Value : Controller-Layer\n                            \n                        \n                        \n                            \n                                 dto\n                            \n                        \n                        \n                            \n                                Value : DTO-Layer\n                            \n                        \n                        \n                            \n                                 auth\n                            \n                        \n                        \n                            \n                                Value : Auth-Layer\n                            \n                        \n                        \n                            \n                                 gateway\n                            \n                        \n                        \n                            \n                                Value : Gateway-Layer\n                            \n                        \n                        \n                            \n                                 unknown\n                            \n                        \n                        \n                            \n                                Value : Unknown-Layer\n                            \n                        \n                        \n                            \n                                 adapter\n                            \n                        \n                        \n                            \n                                Value : Adapter-Layer\n                            \n                        \n                        \n                            \n                                 database\n                            \n                        \n                        \n                            \n                                Value : Database-Layer\n                            \n                        \n                        \n                            \n                                 cache\n                            \n                        \n                        \n                            \n                                Value : Cache-Layer\n                            \n                        \n            \n        \n\n    src/registryAPI/app/errors/services.ts\n    \n        \n            \n                \n                    \n                        \n                        ServiceErrorsTags\n                    \n                \n                        \n                            \n                                 wrongServiceUsage\n                            \n                        \n                        \n                            \n                                Value : WrongServiceUsage\n                            \n                        \n                        \n                            \n                                 unauthorized\n                            \n                        \n                        \n                            \n                                Value : Unauthorized\n                            \n                        \n                        \n                            \n                                 alreadyExist\n                            \n                        \n                        \n                            \n                                Value : Conflict\n                            \n                        \n            \n        \n\n    src/registryAPI/app/auth/tokenTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 accessToken\n                            \n                        \n                        \n                            \n                                Value : Access Token\n                            \n                        \n                        \n                            \n                                 refreshToken\n                            \n                        \n                        \n                            \n                                Value : Refresh Token\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/find.html":{"url":"interfaces/find.html","title":"interface - find","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  find\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            checkClassValidatorErrors   (src/.../convertValidatorErr.ts)\n                        \n                        \n                            condominiumFactory   (src/.../condominium.ts)\n                        \n                        \n                            condominiumRelUserFactory   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            firestoreCondominiumFactory   (src/.../condominium.ts)\n                        \n                        \n                            firestoreCondominiumRelUserFactory   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            firestoreInviteFactory   (src/.../invite.ts)\n                        \n                        \n                            firestoreUserFactory   (src/.../user.ts)\n                        \n                        \n                            generateStringCodeContent   (src/.../generateStringCodeContent.ts)\n                        \n                        \n                            inviteFactory   (src/.../invite.ts)\n                        \n                        \n                            otpFactory   (src/.../otp.ts)\n                        \n                        \n                            userFactory   (src/.../user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/registryAPI/utils/convertValidatorErr.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkClassValidatorErrors\n                        \n                    \n                \n            \n            \n                \ncheckClassValidatorErrors(data: IProps)\n                \n            \n\n\n\n\n            \n                \n                        Usado para aplicar o class validator fora dos controllers\nem forma de decorator, caso a validação não seja um sucesso, um erro do tipo BadRequestException será disparado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            IProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDeve conter o corpo da requisição a ser validado\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/condominium.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        condominiumFactory\n                        \n                    \n                \n            \n            \n                \ncondominiumFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/condominiumRelUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        condominiumRelUserFactory\n                        \n                    \n                \n            \n            \n                \ncondominiumRelUserFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/condominium.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firestoreCondominiumFactory\n                        \n                    \n                \n            \n            \n                \nfirestoreCondominiumFactory(input: TOverride)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreCondominiumData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/condominiumRelUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firestoreCondominiumRelUserFactory\n                        \n                    \n                \n            \n            \n                \nfirestoreCondominiumRelUserFactory(input: TOverride)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreCondominiumRelUserData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/invite.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firestoreInviteFactory\n                        \n                    \n                \n            \n            \n                \nfirestoreInviteFactory(input: TOverride)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreInviteData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firestoreUserFactory\n                        \n                    \n                \n            \n            \n                \nfirestoreUserFactory(input: TOverride)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IIncomingFirestoreUserData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/utils/generateStringCodeContent.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateStringCodeContent\n                        \n                    \n                \n            \n            \n                \ngenerateStringCodeContent(input: IGenerateInviteKeyProps)\n                \n            \n\n\n\n\n            \n                \n                        Feito para gerar uma string com base nos dados do usuário e sua relação com o condomínio\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            IGenerateInviteKeyProps\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/invite.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inviteFactory\n                        \n                    \n                \n            \n            \n                \ninviteFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/otp.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        otpFactory\n                        \n                    \n                \n            \n            \n                \notpFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/registryAPI/tests/factories/user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n            \n                \nuserFactory(input: TOverride, id?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            TOverride\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/getAllCondominiumRelation.html":{"url":"interfaces/getAllCondominiumRelation.html","title":"interface - getAllCondominiumRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  getAllCondominiumRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/getCondominiumRelation.html":{"url":"interfaces/getCondominiumRelation.html","title":"interface - getCondominiumRelation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  getCondominiumRelation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumId\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMorada App - API\nSobre\nEsta é uma API feita em NestJS e projetada para atender os serviços do projeto Morada APP. Sendo assim, buscamos facilitar a vida dos moradores de condomínio e dos desenvolvedores responsáveis por integrar nosso código em seus sistemas.\nAdiante, nossos servidores back-end devem contar com as seguintes dependências e ferramentas para que esteja em perfeito funcionamento:\n\nMailtrap: em ambiente de desenvolvimento, usamos o Mailtrap para realizar o envio de emails dentro da plataforma;\nPostgres: por hora, em ambiente de desenvolvimento, estamos armazenando nossos dados no Postgres pela provedora Clever Cloud. Caso você faça parte da equipe de desenvolvimento, entre em contato com o time de back-end para a obtenção das credenciais de acesso ao banco de dados focado em desenvolvimento;\nPNPM: para gerenciar nossas dependências estamos usando o Performant Node Package Manager (PNPM). Por quê? A resposta é simples, o pnpm é capaz de gerar links simbólicos de cada dependência utilizada no projeto, como consequência, o mesmo é capaz de reutilizar as bibliotecas que já existem em uma máquina, reduzindo de maneira significativa o espaço consumido pelo nosso sistema;\nDocker: o Docker é uma plataforma de virtualização de contêineres que permite isolar e empacotar aplicativos e seus ambientes de execução em contêineres, facilitando a preparação do ambiente do sistema e viabilizando o deploy da aplicação em inúmeras provedoras de nuvem. Sendo assim, basta executar os comandos que serão passados logo mais, e você já será capaz de possuir todos os servidores prontos para execução rapidamente. Matando assim, a necessidade de se passar horas na frente do computador configurando serviço a serviço para rodar na sua máquina;\nDocker Compose: é um orquestrador de contêineres do Docker, responsável por manter o sistema funcionando em conjunto, podendo configurar redes internas, mapear as portas de cada serviço e entre outras inúmeras funcionalidades essenciais;\nFirebase (em análise): é um provedor de Saas utilizado para conseguirmos acesso serviços previamente prontos e com suas infraestruturas provisionadas.\n\nAVISO: lembre-se de que se você esta no time de back-end, você já possui muitas credenciais relacionadas a estes serviços predefinidas dentro do .env.example, juntamente com as explicações de cada variável usada!\nPreparação\nPrimeiramente, antes de começar a \"levantar\" o sistema, você deve ter instalado em sua máquina todas as dependências citadas acima - sim, você deve ter o Postgres e Redis minimamente configurado em sua máquina, pois você será capaz de se conectar manualmente nestas instâncias em produção, apesar de já não ser uma questão extremamente prioritária - segue abaixo as instruções de instalação para cada sistema operacional:\n\nDocker\n\nLinux\nWindows\n\n\nDocker Compose\n\nLinux\nWindows\n\n\nRedis\n\nLinux && Windows\n\n\nPostgres\n\nLinux\nWindows\n\n\nPNPM: execute npm i pnpm -g\n\nMailtrap [back-end apenas]:\n\nCrie uma conta na plataforma por aqui.\nAcesse o menu da lateral a esquerda\nEntre em Email Testing > Inboxes > [Seu usuário]\nCopie e cole o arquivo .env.example em .env\nAo lado direito, na opção 'Integrations', troque para o nodemailer\nCopie e cole as credenciais no .env para visualizar os dados\nInsira em HOST_SENDER o valor 'sandbox.smtp.mailtrap.io'\nInsira em HOST_PORT_SENDER o valor 2525\nColoque qualquer nome em NAME_SENDER\nInsira auth.user em EMAIL_SENDER\nInsira auth.pass em PASS_SENDER\n\n\n\nComo usar\nDepois de muita configuração, vamos colocar tudo em funcionamento. Primeiramente, execute o docker compose up para levantar o sistema com base no docker-compose.yml definido na pasta root:\nExample :docker compose upCom o sistema ativo, adentre no mesmo usando o bash para entrar na instância app (o contêiner em NodeJS + NestJS):\nExample :docker compose exec app bashDentro do contêiner, execute as migrations do prisma:\nExample :pnpm prisma migrate devPor padrão, o nosso contêiner já tem o pnpm instalado, então você não precisa instalá-lo no contexto do mesmo, sendo assim, basta você realizar o login na sua conta do firebase DENTRO DO CONTÊINER:\nExample :firebase login --no-localhostLogo em seguida, instale os emuladores requisitados para um bom funcionamento da aplicação:\nExample :firebase init emulatorsSe a instalação ocorreu com êxito, abra outro terminal e FORA DO CONTÊINER execute o comando abaixo. Por quê? Ele vai definir os hooks do git necessários para que você consiga automatizar processos de lint, formatação e testes locais toda vez que fazer commit:\nExample :pnpm set-hooksPronto, agora execute somente git commit sempre que quiser salvar suas alterações inseridas pelo git add.\nComandos\nAgora você esta apto a executar a aplicação dentro do contêiner.\n\nPara executar a aplicação em ambiente de desenvolvimento:\nExample :pnpm dev Para escutar as modificações que você fez dentro das functions:\nExample :pnpm build:watchPara executar testes unitários na aplicação:\nExample :pnpm testPara fazer o build da aplicação:\nExample :pnpm buildBônus\nJá temos as instâncias ativas, para você consultar os serviços de armazenamento basta executar os seguintes comandos:\nPostgres\nExample :docker compose exec db psql -U default -d mydbDocumentação do Postgres aqui.\nColeções de requisições\nSinta-se a vontade consultando a nossa api tanto pelo Swagger quanto pelo Postman.\n\n\n\nDocumentos extras\n\n\n\n\nPlanos para a sprint 2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdaptersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FirestoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdaptersModule\n\n\n\ncluster_AdaptersModule_exports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_FirestoreModule\n\n\n\ncluster_FirestoreModule_exports\n\n\n\ncluster_FirestoreModule_providers\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\ncluster_HttpModule\n\n\n\ncluster_HttpModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nCookieAdapter \n\nCookieAdapter \n\n\n\nCryptAdapter \n\nCryptAdapter \n\n\n\nEmailAdapter \n\nEmailAdapter \n\n\n\nHttpAdapter \n\nHttpAdapter \n\n\n\nLoggerAdapter \n\nLoggerAdapter \n\n\n\nAdaptersModule\n\nAdaptersModule\n\nCookieAdapter  -->\n\nAdaptersModule->CookieAdapter \n\n\n\nCryptAdapter  -->\n\nAdaptersModule->CryptAdapter \n\n\n\nEmailAdapter  -->\n\nAdaptersModule->EmailAdapter \n\n\n\nHttpAdapter  -->\n\nAdaptersModule->HttpAdapter \n\n\n\nLoggerAdapter  -->\n\nAdaptersModule->LoggerAdapter \n\n\n\n\n\nHttpModule\n\nHttpModule\n\nHttpModule -->\n\nAdaptersModule->HttpModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHttpModule->AppModule\n\n\n\n\n\nCondominiumRepo \n\nCondominiumRepo \n\n\n\nInviteRepo \n\nInviteRepo \n\n\n\nUserRepo \n\nUserRepo \n\n\n\nFirestoreModule\n\nFirestoreModule\n\nHttpModule -->\n\nFirestoreModule->HttpModule\n\n\n\nCondominiumRepo  -->\n\nFirestoreModule->CondominiumRepo \n\n\n\nInviteRepo  -->\n\nFirestoreModule->InviteRepo \n\n\n\nUserRepo  -->\n\nFirestoreModule->UserRepo \n\n\n\n\n\nCollectionsRefService\n\nCollectionsRefService\n\nFirestoreModule -->\n\nCollectionsRefService->FirestoreModule\n\n\n\n\n\nFirestoreService\n\nFirestoreService\n\nFirestoreModule -->\n\nFirestoreService->FirestoreModule\n\n\n\n\n\nCepGateway \n\nCepGateway \n\n\n\nGatewayModule\n\nGatewayModule\n\nHttpModule -->\n\nGatewayModule->HttpModule\n\n\n\nCepGateway  -->\n\nGatewayModule->CepGateway \n\n\n\n\n\nCreateCondominiumService\n\nCreateCondominiumService\n\nHttpModule -->\n\nCreateCondominiumService->HttpModule\n\n\n\n\n\nCreateTokenService\n\nCreateTokenService\n\nHttpModule -->\n\nCreateTokenService->HttpModule\n\n\n\n\n\nCreateUserService\n\nCreateUserService\n\nHttpModule -->\n\nCreateUserService->HttpModule\n\n\n\n\n\nDeleteUserService\n\nDeleteUserService\n\nHttpModule -->\n\nDeleteUserService->HttpModule\n\n\n\n\n\nGenInviteService\n\nGenInviteService\n\nHttpModule -->\n\nGenInviteService->HttpModule\n\n\n\n\n\nGenTFAService\n\nGenTFAService\n\nHttpModule -->\n\nGenTFAService->HttpModule\n\n\n\n\n\nGetCondominiumRelUserService\n\nGetCondominiumRelUserService\n\nHttpModule -->\n\nGetCondominiumRelUserService->HttpModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nCondominiumRepo  -->\n\nPrismaModule->CondominiumRepo \n\n\n\nInviteRepo  -->\n\nPrismaModule->InviteRepo \n\n\n\nUserRepo  -->\n\nPrismaModule->UserRepo \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    91 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    74 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            License : MIT\n        \n            Author : MoradaAPP\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/remove.html":{"url":"interfaces/remove.html","title":"interface - remove","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  remove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/remove-1.html":{"url":"interfaces/remove-1.html","title":"interface - remove-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  remove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     UUID | Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UUID | Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/safeSearch.html":{"url":"interfaces/safeSearch.html","title":"interface - safeSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  safeSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/condominium.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     UUID | CNPJ | CEP | Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UUID | CNPJ | CEP | Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\n\nexport namespace CondominiumInterfaces {\n\texport interface create {\n\t\tcondominium: Condominium;\n\t}\n\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n\texport interface search {\n\t\tsafeSearch: undefined;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n}\n\nexport abstract class CondominiumRepo {\n\t/** @virtual */\n\tabstract create: (input: CondominiumInterfaces.create) => Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.safeSearch,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/safeSearch-1.html":{"url":"interfaces/safeSearch-1.html","title":"interface - safeSearch-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  safeSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     Email | CPF | UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Email | CPF | UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/safelyFind.html":{"url":"interfaces/safelyFind.html","title":"interface - safelyFind","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  safelyFind\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         Email\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Email\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/search.html":{"url":"interfaces/search.html","title":"interface - search","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  search\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/condominium.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     UUID | CNPJ | CEP | Name\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UUID | CNPJ | CEP | Name\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CEP, CNPJ, UUID, Name } from '@registry:app/entities/VO';\nimport { Condominium } from '@registry:app/entities/condominium';\n\nexport namespace CondominiumInterfaces {\n\texport interface create {\n\t\tcondominium: Condominium;\n\t}\n\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n\texport interface search {\n\t\tsafeSearch: undefined;\n\t\tkey: UUID | CNPJ | CEP | Name;\n\t}\n}\n\nexport abstract class CondominiumRepo {\n\t/** @virtual */\n\tabstract create: (input: CondominiumInterfaces.create) => Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.safeSearch,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um condomínio\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: CondominiumInterfaces.search,\n\t): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/search-1.html":{"url":"interfaces/search-1.html","title":"interface - search-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  search\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            safeSearch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     Email | CPF | UUID\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Email | CPF | UUID\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        safeSearch:     undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CPF, UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { User } from '@registry:app/entities/user';\nimport { TCondominiumRelUserToObject } from '@registry:app/mapper/condominiumRelUser';\n\nexport namespace UserRepoInterfaces {\n\texport interface create {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n\texport interface search {\n\t\tsafeSearch?: undefined;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface safeSearch {\n\t\tsafeSearch?: true;\n\t\tkey: Email | CPF | UUID;\n\t}\n\texport interface getCondominiumRelation {\n\t\tuserId: UUID;\n\t\tcondominiumId: UUID;\n\t}\n\texport interface getAllCondominiumRelation {\n\t\tuserId: UUID;\n\t}\n\texport interface remove {\n\t\tkey: UUID | Email;\n\t}\n}\n\nexport abstract class UserRepo {\n\t/** @virtual */\n\tabstract create(input: UserRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input - Deve conter chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.search): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um usuário\n\t * @param input.key - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, email ou o email do usuário. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: UserRepoInterfaces.safeSearch): Promise;\n\n\t/** @virtual */\n\tabstract getCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract getAllCondominiumRelation(\n\t\tinput: UserRepoInterfaces.getAllCondominiumRelation,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: UserRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/transferToUserResources.html":{"url":"interfaces/transferToUserResources.html","title":"interface - transferToUserResources","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  transferToUserResources\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/registryAPI/app/repositories/invite.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            condominiumRelUser\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condominiumRelUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condominiumRelUser:         CondominiumRelUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CondominiumRelUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID, Email } from '@registry:app/entities/VO';\nimport { CondominiumRelUser } from '@registry:app/entities/condominiumRelUser';\nimport { Invite } from '@registry:app/entities/invite';\nimport { User } from '@registry:app/entities/user';\n\nexport namespace InviteRepoInterfaces {\n\texport interface create {\n\t\tinvite: Invite;\n\t}\n\texport interface find {\n\t\tkey: Email;\n\t\tsafeSearch: undefined;\n\t}\n\texport interface safelyFind {\n\t\tkey: Email;\n\t\tsafeSearch?: true;\n\t}\n\texport interface remove {\n\t\tkey: UUID;\n\t}\n\texport interface transferToUserResources {\n\t\tuser: User;\n\t\tcondominiumRelUser: CondominiumRelUser;\n\t}\n}\n\nexport abstract class InviteRepo {\n\t/** @virtual */\n\tabstract create(input: InviteRepoInterfaces.create): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, deve ser uma classe email. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(\n\t\tinput: InviteRepoInterfaces.find,\n\t): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para pesquisar por um convite\n\t * @param input - Deve conter uma chave a ser utilizada para a pesquisa, pode ser um id, cnpj, cep ou o nome do condomínio. Além disso, pode-se usar como valor opcional o safeSearch, que força um erro, caso o item não seja encontrado\n\t **/\n\tabstract find(input: InviteRepoInterfaces.safelyFind): Promise;\n\n\t/**\n\t * @virtual\n\t * Método usado para transferir um convite para os recursos de usuários\n\t **/\n\tabstract transferToUserResources(\n\t\tinput: InviteRepoInterfaces.transferToUserResources,\n\t): Promise;\n\n\t/** @virtual */\n\tabstract delete(input: InviteRepoInterfaces.remove): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TCondominiumInObject   (src/.../condominium.ts)\n                        \n                        \n                            TCondominiumRelUserToObject   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            TECEProps   (src/.../logger.ts)\n                        \n                        \n                            TFirestoreCondominiumRelUserToObject   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            TInputOTPProps   (src/.../index.ts)\n                        \n                        \n                            TInputPropsCondominium   (src/.../index.ts)\n                        \n                        \n                            TInputPropsUser   (src/.../index.ts)\n                        \n                        \n                            TInviteInObject   (src/.../invite.ts)\n                        \n                        \n                            TOverride   (src/.../condominium.ts)\n                        \n                        \n                            TOverride   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            TOverride   (src/.../invite.ts)\n                        \n                        \n                            TOverride   (src/.../otp.ts)\n                        \n                        \n                            TOverride   (src/.../user.ts)\n                        \n                        \n                            TOverride   (src/.../condominium.ts)\n                        \n                        \n                            TOverride   (src/.../condominiumRelUser.ts)\n                        \n                        \n                            TOverride   (src/.../invite.ts)\n                        \n                        \n                            TOverride   (src/.../user.ts)\n                        \n                        \n                            TReplace   (src/.../replace.ts)\n                        \n                        \n                            TServiceExecInput   (src/.../_IService.ts)\n                        \n                        \n                            TServiceExecReturn   (src/.../_IService.ts)\n                        \n                        \n                            TUserClassToObject   (src/.../user.ts)\n                        \n                        \n                            TValidateSignedCookieReturn   (src/.../cookie.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/registryAPI/app/mapper/condominium.ts\n    \n    \n        \n            \n                \n                    \n                    TCondominiumInObject\n                \n            \n            \n                \n                        Required\n\n                \n            \n        \n    \n    src/registryAPI/app/mapper/condominiumRelUser.ts\n    \n    \n        \n            \n                \n                    \n                    TCondominiumRelUserToObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/adapters/logger.ts\n    \n    \n        \n            \n                \n                    \n                    TECEProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/registryAPI/infra/storages/db/firestore/mapper/condominiumRelUser.ts\n    \n    \n        \n            \n                \n                    \n                    TFirestoreCondominiumRelUserToObject\n                \n            \n            \n                \n                            TReplace\n\n                \n            \n        \n    \n    src/registryAPI/app/entities/OTP/index.ts\n    \n    \n        \n            \n                \n                    \n                    TInputOTPProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/entities/condominium/index.ts\n    \n    \n        \n            \n                \n                    \n                    TInputPropsCondominium\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/entities/user/index.ts\n    \n    \n        \n            \n                \n                    \n                    TInputPropsUser\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/mapper/invite.ts\n    \n    \n        \n            \n                \n                    \n                    TInviteInObject\n                \n            \n            \n                \n                        Required\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/condominium.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/condominiumRelUser.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/invite.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/otp.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/user.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/condominium.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/condominiumRelUser.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/invite.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/tests/factories/firestore/user.ts\n    \n    \n        \n            \n                \n                    \n                    TOverride\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    src/registryAPI/utils/replace.ts\n    \n    \n        \n            \n                \n                    \n                    TReplace\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/registryAPI/app/services/_IService.ts\n    \n    \n        \n            \n                \n                    \n                    TServiceExecInput\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TServiceExecReturn\n                \n            \n            \n                \n                        Promise> | Promise | void\n\n                \n            \n        \n    \n    src/registryAPI/app/mapper/user.ts\n    \n    \n        \n            \n                \n                    \n                    TUserClassToObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/registryAPI/app/adapters/cookie.ts\n    \n    \n        \n            \n                \n                    \n                    TValidateSignedCookieReturn\n                \n            \n            \n                \n                        Promise | string | \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../index.ts)\n                        \n                        \n                            condominiumDTORules   (src/.../index.ts)\n                        \n                        \n                            condominiumRelUserDTORules   (src/.../index.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (jest.e2e.config.ts)\n                        \n                        \n                            createMockExecutionContext   (src/.../executionContextSpy.ts)\n                        \n                        \n                            expressApp   (src/.../index.ts)\n                        \n                        \n                            RegistryAPI   (src/.../index.ts)\n                        \n                        \n                            userDTORules   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/registryAPI/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new RegistryAPIBootstrap()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expressApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RegistryAPI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (req: Request, res: Response) => {\n\texpressApp(req, res);\n}\n                    \n                \n\n\n        \n    \n\n    src/registryAPI/app/entities/condominium/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        condominiumDTORules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\tCEP: {\n\t\tminLength: 8,\n\t\tmaxLength: 9,\n\t\ttype: 'string',\n\t},\n\tnum: {\n\t\tminLength: 0,\n\t\tmaxLength: 2147483647,\n\t\ttype: 'number',\n\t},\n\tCNPJ: {\n\t\tminLength: 14,\n\t\tmaxLength: 18,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAy: {\n\t\ttype: Date,\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    src/registryAPI/app/entities/condominiumRelUser/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        condominiumRelUserDTORules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tuserId: {\n\t\ttype: 'string',\n\t},\n\tcondominiumId: {\n\t\ttype: 'string',\n\t},\n\tblock: {\n\t\tmaxLength: 6,\n\t\toption: true,\n\t\ttype: 'string',\n\t},\n\tapartmentNumber: {\n\t\tmaxLength: 2147483647,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tlevel: {\n\t\tmaxLength: 2,\n\t\tminLength: 0,\n\t\ttype: 'number',\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config\n\n                    \n                \n                \n                    \n                        Default value : {\n  moduleFileExtensions: ['js', 'json', 'ts'],\n  testRegex: '.*\\\\.spec\\\\.ts$',\n  transform: {\n    '^.+\\\\.ts$': 'ts-jest',\n  },\n  clearMocks: true,\n  collectCoverageFrom: ['**/*.ts'],\n  coverageDirectory: 'coverage',\n  testEnvironment: 'node',\n\n  setupFilesAfterEnv: ['./.jest/env.ts'],\n  moduleNameMapper: pathsToModuleNameMapper(compilerOptions.paths, {\n    prefix: '/',\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    jest.e2e.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config\n\n                    \n                \n                \n                    \n                        Default value : {\n  moduleFileExtensions: ['js', 'json', 'ts'],\n  testRegex: '.*\\\\.e2e-spec\\\\.ts$',\n  transform: {\n    '^.+\\\\.(t|j)s$': 'ts-jest',\n  },\n  clearMocks: true,\n  collectCoverageFrom: ['**/*.(t|j)s'],\n  coverageDirectory: 'coverage',\n  testEnvironment: 'node',\n\n  setupFilesAfterEnv: ['./.jest/env.ts'],\n  moduleNameMapper: pathsToModuleNameMapper(compilerOptions.paths, {\n    prefix: '/',\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    src/registryAPI/tests/guards/executionContextSpy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMockExecutionContext\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (request: any): ExecutionContext => {\n\tconst httpArgumentHost = {\n\t\tgetRequest: () => request,\n\t} as HttpArgumentsHost;\n\n\treturn {\n\t\tswitchToHttp: () => httpArgumentHost,\n\t} as ExecutionContext;\n}\n                    \n                \n\n\n        \n    \n\n    src/registryAPI/app/entities/user/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userDTORules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tname: {\n\t\tminLength: 2,\n\t\tmaxLength: 120,\n\t\ttype: 'string',\n\t},\n\temail: {\n\t\tmaxLength: 320,\n\t\ttype: 'string',\n\t},\n\tpassword: {\n\t\tmaxLength: 64,\n\t\tminLength: 8,\n\t\ttype: 'string',\n\t},\n\tCPF: {\n\t\tmaxLength: 14,\n\t\tminLength: 11,\n\t\ttype: 'string',\n\t},\n\tphoneNumber: {\n\t\tmaxLength: 30,\n\t\tminLength: 10,\n\t\ttype: 'string',\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t},\n\tupdatedAt: {\n\t\ttype: Date,\n\t},\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
